{
    "name": "vscode-cpsa",
    "displayName": "vscode-cpsa",
    "description": "CPSA support for VSCode",
    "repository": "https://github.com/mitre/cpsa",
    "version": "0.3.0",
    "engines": {
        "vscode": "^1.54.3"
    },
    "categories": [
        "Programming Languages"
    ],
    "activationEvents": [
        "onLanguage:cpsa",
        "workspaceContains:cpsa4.mk",
        "onCommand:vscode-cpsa.execCPSA4CurrentFile"
    ],
    "main": "./out/extension.js",
    "contributes": {
        "languages": [
            {
                "id": "cpsa",
                "aliases": ["CPSA"],
                "extensions": [".scm", ".lisp", ".lsp", ".cpsa"],
                "configuration": "./cpsa.language-configuration.json"
            },
            {
                "id": "cpsabuild_xhtml"
            },
            {
                "id": "cpsabuild_shapes"
            },
            {
                "id": "cpsabuild_shapes_xhtml"
            }
        ],
        "configuration": {
            "title": "CPSA",
            "properties": {
                "CPSA.build.compilerVersion": {
                    "description": "Which version of the CPSA compiler to call as a subprocess when building.",
                    "type": "string",
                    "default": "cpsa3",
                    "enum": ["cpsa3", "cpsa4"]
                },
                "CPSA.build.ghcMemLimitMegabytes": {
                    "description": "How much RAM, at maximum, that will be allocated to GHC's runtime heap while building. If GHC exceeds this amount it will crash (preferable to hanging your entire system).",
                    "type": "number",
                    "default": 512
                }
            }
        },
        "commands": [
            {
                "command": "vscode-cpsa.execCPSACurrentFile",
                "title": "Run CPSA on the current file"
            }
        ],
        "keybindings": [
            {
                "command": "vscode-cpsa.execCPSACurrentFile",
                "key": "Ctrl+Shift+b",
                "mac": "Cmd+Shift+b",
                "when": "resourceLangId == cpsa"
            }
        ],
        "menus": {
            "editor/title/run": [
                {
                    "command": "vscode-cpsa.execCPSACurrentFile",
                    "when": "resourceLangId == cpsa"
                }
            ]
        },
        "grammars": [
            {
                "language": "cpsa",
                "scopeName": "source.cpsa",
                "path": "./syntaxes/cpsa.tmLanguage"
            }
        ],
        "problemMatchers": [
            {
                "name": "cpsabuild_txt",
                "owner": "cpsa",
                "fileLocation": "autoDetect",
                "pattern": {
                    "regexp": "^(.*):(\\d+):(\\d+):\\s+(.*)$",
                    "file": 1,
                    "line": 2,
                    "column": 3,
                    "message": 4
                }
            },
            {
                "name": "cpsabuild_shapes",
                "owner": "cpsabuild_shapes",
                "fileLocation": "autoDetect",
                "pattern": {
                    "regexp": "^(.*):(\\d+):(\\d+):\\s+(.*)$",
                    "file": 1,
                    "line": 2,
                    "column": 3,
                    "message": 4
                }
            },
            {
                "name": "cpsabuild_xhtml",
                "owner": "cpsabuild_xhtml",
                "fileLocation": "autoDetect",
                "pattern": {
                    "regexp": "^(.*):(\\d+):(\\d+):\\s+(.*)$",
                    "file": 1,
                    "line": 2,
                    "column": 3,
                    "message": 4
                }
            },
            {
                "name": "cpsabuild_shapes_xhtml",
                "owner": "cpsabuild_shapes_xhtml",
                "fileLocation": "autoDetect",
                "pattern": {
                    "regexp": "^(.*):(\\d+):(\\d+):\\s+(.*)$",
                    "file": 1,
                    "line": 2,
                    "column": 3,
                    "message": 4
                }
            }
        ]
    },
    "scripts": {
        "vscode:prepublish": "npm run compile",
        "compile": "tsc -p ./",
        "watch": "tsc -watch -p ./",
        "pretest": "npm run compile && npm run lint",
        "lint": "eslint src --ext ts",
        "test": "node ./out/test/runTest.js"
    },
    "devDependencies": {
        "@types/vscode": "^1.54.3",
        "@types/glob": "^7.2.0",
        "@types/mocha": "^9.0.0",
        "@types/node": "14.x",
        "@typescript-eslint/eslint-plugin": "^5.9.1",
        "@typescript-eslint/parser": "^5.9.1",
        "eslint": "^8.6.0",
        "glob": "^7.2.0",
        "mocha": "^9.1.3",
        "typescript": "^4.5.4",
        "@vscode/test-electron": "^2.0.3"
    }
}
