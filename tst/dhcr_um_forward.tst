(herald "DHCR: unified model (UM) original -- forward security test"
  (bound 20) (limit 16000) (algebra diffie-hellman))

(comment "CPSA 4.4.2")
(comment "All input read from tst/dhcr_um_forward.scm")
(comment "Step count limited to 16000")
(comment "Strand count bounded at 20")

(defprotocol dhcr-um diffie-hellman
  (defrole init
    (vars (l x rndx) (gb gy base) (a b name) (na nb data)
      (priv-stor locn))
    (trace (load priv-stor (pv a l))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv (cat gy (enc na nb a b (hash (exp gb l) (exp gy x)))))
      (send nb))
    (uniq-orig na)
    (uniq-gen x)
    (absent (x l))
    (facts (ltx-of a l) (ltb-of b gb))
    (gen-st (pv a l)))
  (defrole resp
    (vars (l y rndx) (ga gx base) (a b name) (na nb data)
      (priv-stor locn))
    (trace (load priv-stor (pv b l))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b gx))
      (send
        (cat (exp (gen) y)
          (enc na nb a b (hash (exp ga l) (exp gx y))))) (recv nb))
    (uniq-orig nb)
    (uniq-gen y)
    (absent (y l))
    (facts (ltx-of b l) (ltb-of a ga))
    (gen-st (pv b l)))
  (defrole ltx-gen
    (vars (self name) (l rndx) (priv-stor locn) (ignore mesg))
    (trace (load priv-stor ignore) (stor priv-stor (pv self l))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    (uniq-orig l)
    (facts (ltx-of self l)))
  (defrole ltx-disclose
    (vars (self name) (l rndx) (priv-stor locn))
    (trace (load priv-stor (pv self l)) (stor priv-stor "nil") (send l))
    (gen-st (pv self l))
    (facts (ltx-of self l)))
  (defrule ltx-ltb
    (forall ((l expt) (self name))
      (implies (fact ltx-of self l) (fact ltb-of self (exp (gen) l)))))
  (defrule ltb-ltx
    (forall ((l expt) (self name))
      (implies (fact ltb-of self (exp (gen) l)) (fact ltx-of self l))))
  (defrule ltx-of-fn
    (forall ((self l l-0 mesg))
      (implies
        (and (fact ltx-of self l) (fact ltx-of self l-0))
        (= l l-0))))
  (defrule ltx-of-inj
    (forall ((l self self-0 mesg))
      (implies
        (and (fact ltx-of self l) (fact ltx-of self-0 l))
        (= self self-0))))
  (defrule fact-resp-neq0
    (forall ((z strd))
      (implies
        (and (p "resp" z (idx 3)) (p "resp" "gx" z (gen)))
        (false))))
  (defrule fact-init-neq0
    (forall ((z strd))
      (implies
        (and (p "init" z (idx 4)) (p "init" "gy" z (gen)))
        (false))))
  (defrule undisclosed-not-disclosed
    (forall ((z strd) (l rndx))
      (implies
        (and (fact undisclosed l) (p "ltx-disclose" z (idx 2))
          (p "ltx-disclose" "l" z l))
        (false))))
  (defgenrule neqRl_indx
    (forall ((x indx)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_strd
    (forall ((x strd)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_mesg
    (forall ((x mesg)) (implies (fact neq x x) (false))))
  (defgenrule scissorsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (trans z2 i2)
          (leads-to z0 i0 z1 i1) (leads-to z0 i0 z2 i2))
        (and (= z1 z2) (= i1 i2)))))
  (defgenrule cakeRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (leads-to z0 i0 z1 i1)
          (leads-to z0 i0 z2 i2) (prec z1 i1 z2 i2)) (false))))
  (defgenrule no-interruption
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (leads-to z0 i0 z2 i2) (trans z1 i1)
          (same-locn z0 i0 z1 i1) (prec z0 i0 z1 i1) (prec z1 i1 z2 i2))
        (false))))
  (defgenrule shearsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (trans z2 i2)
          (leads-to z0 i0 z1 i1) (same-locn z0 i0 z2 i2)
          (prec z0 i0 z2 i2))
        (or (and (= z1 z2) (= i1 i2)) (prec z1 i1 z2 i2)))))
  (defgenrule invShearsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (same-locn z0 i0 z1 i1)
          (leads-to z1 i1 z2 i2) (prec z0 i0 z2 i2))
        (or (and (= z0 z1) (= i0 i1)) (prec z0 i0 z1 i1)))))
  (defgenrule fact-init-ltx-of1
    (forall ((z strd) (l rndx) (a name))
      (implies
        (and (p "init" z (idx 1)) (p "init" "a" z a) (p "init" "l" z l))
        (fact ltx-of a l))))
  (defgenrule fact-init-ltb-of0
    (forall ((z strd) (gb base) (b name))
      (implies
        (and (p "init" z (idx 2)) (p "init" "b" z b)
          (p "init" "gb" z gb)) (fact ltb-of b gb))))
  (defgenrule fact-resp-ltx-of1
    (forall ((z strd) (l rndx) (b name))
      (implies
        (and (p "resp" z (idx 1)) (p "resp" "b" z b) (p "resp" "l" z l))
        (fact ltx-of b l))))
  (defgenrule fact-resp-ltb-of0
    (forall ((z strd) (ga base) (a name))
      (implies
        (and (p "resp" z (idx 2)) (p "resp" "a" z a)
          (p "resp" "ga" z ga)) (fact ltb-of a ga))))
  (defgenrule fact-ltx-gen-ltx-of0
    (forall ((z strd) (l rndx) (self name))
      (implies
        (and (p "ltx-gen" z (idx 2)) (p "ltx-gen" "self" z self)
          (p "ltx-gen" "l" z l)) (fact ltx-of self l))))
  (defgenrule fact-ltx-disclose-ltx-of0
    (forall ((z strd) (l rndx) (self name))
      (implies
        (and (p "ltx-disclose" z (idx 1))
          (p "ltx-disclose" "self" z self) (p "ltx-disclose" "l" z l))
        (fact ltx-of self l))))
  (defgenrule trRl_ltx-gen-at-1
    (forall ((z strd))
      (implies (p "ltx-gen" z (idx 2)) (trans z (idx 1)))))
  (defgenrule trRl_ltx-gen-at-0
    (forall ((z strd))
      (implies (p "ltx-gen" z (idx 2)) (trans z (idx 0)))))
  (defgenrule trRl_ltx-disclose-at-1
    (forall ((z strd))
      (implies (p "ltx-disclose" z (idx 2)) (trans z (idx 1)))))
  (defgenrule trRl_ltx-disclose-at-0
    (forall ((z strd))
      (implies (p "ltx-disclose" z (idx 2)) (trans z (idx 0)))))
  (defgenrule gen-st-init-0
    (forall ((z strd) (a name) (l rndx))
      (implies
        (and (p "init" z (idx 1)) (p "init" "l" z l) (p "init" "a" z a))
        (gen-st (pv a l)))))
  (defgenrule gen-st-resp-0
    (forall ((z strd) (b name) (l rndx))
      (implies
        (and (p "resp" z (idx 1)) (p "resp" "l" z l) (p "resp" "b" z b))
        (gen-st (pv b l)))))
  (defgenrule gen-st-ltx-disclose-0
    (forall ((z strd) (self name) (l rndx))
      (implies
        (and (p "ltx-disclose" z (idx 1)) (p "ltx-disclose" "l" z l)
          (p "ltx-disclose" "self" z self)) (gen-st (pv self l)))))
  (lang (sig sign) (body (tuple 3)) (pv (tuple 2))))

(defskeleton dhcr-um
  (vars (na nb data) (a b self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-b x rndx) (y expt))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (gb (exp (gen) l-b))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l-b)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-1)
    (l l-b))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)))
  (uniq-orig na)
  (uniq-gen x)
  (absent (x l))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-b) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-b)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-b)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-b)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-0 (pv self l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor-1 (cat pt-2 (pv self-0 l-b)))
      (stor priv-stor-1 (cat pt-3 "nil")) (send l-b)))
  (label 0)
  (unrealized (1 0))
  (preskeleton)
  (origs (pt-3 (3 1)) (pt-1 (2 1)) (na (0 2)))
  (ugens (x (0 2)))
  (comment "Not a skeleton"))

(defskeleton dhcr-um
  (vars (na nb data) (a b self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-b x rndx) (y expt))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (gb (exp (gen) l-b))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l-b)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-1)
    (l l-b))
  (precedes ((0 2) (1 0)) ((0 4) (2 0)) ((0 4) (3 0)))
  (uniq-orig na)
  (uniq-gen x)
  (absent (x l))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-b) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-b)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-b)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-b)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-0 (pv self l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor-1 (cat pt-2 (pv self-0 l-b)))
      (stor priv-stor-1 (cat pt-3 "nil")) (send l-b)))
  (label 1)
  (parent 0)
  (realized)
  (origs (pt-3 (3 1)) (pt-1 (2 1)) (na (0 2)))
  (ugens (x (0 2)))
  (comment "Not closed under rules"))

(defskeleton dhcr-um
  (vars (na nb data) (b self name) (pt pt-0 pt-1 pt-2 pt-3 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-b x rndx) (y expt))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-b))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l-b)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-b))
  (precedes ((0 2) (1 0)) ((0 4) (2 0)) ((0 4) (3 0)))
  (uniq-orig na)
  (uniq-gen x)
  (absent (x l))
  (gen-st (pv b l-b) (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltb-of b (exp (gen) l-b))
    (ltx-of b l-b) (ltx-of self l))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    gen-st-ltx-disclose-0 ltb-ltx ltx-ltb ltx-of-inj
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1)
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body b (exp (gen) l-b) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-b)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-b)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-b)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-0 (pv self l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor-1 (cat pt-2 (pv b l-b)))
      (stor priv-stor-1 (cat pt-3 "nil")) (send l-b)))
  (label 2)
  (parent 1)
  (unrealized (0 0) (2 0) (3 0))
  (origs (pt-3 (3 1)) (pt-1 (2 1)) (na (0 2)))
  (ugens (x (0 2)))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (na nb data) (self name) (pt pt-0 pt-1 pval)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (l-b rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self)
    (gb (exp (gen) l-b)) (gy (exp (gen) y)) (priv-stor priv-stor)
    (l l-b) (x x))
  (deflistener (hash (exp (gen) (mul l-b l-b)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l-b))
  (precedes ((0 2) (1 0)) ((0 4) (2 0)))
  (uniq-orig na)
  (uniq-gen x)
  (absent (x l-b))
  (gen-st (pv self l-b))
  (facts (ltb-of self (exp (gen) l-b)) (ltx-of self l-b))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1)
  (operation collapsed 3 2)
  (traces
    ((load priv-stor (cat pt (pv self l-b)))
      (recv
        (sig (body self (exp (gen) l-b) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l-b l-b)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l-b l-b)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l-b l-b)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-0 (pv self l-b)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-b)))
  (label 3)
  (parent 2)
  (unrealized (0 0) (2 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l x rndx) (y expt)
    (l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor-1)
    (l l-0))
  (precedes ((0 2) (1 0)) ((0 4) (2 0)) ((0 4) (3 0)) ((4 1) (3 0)))
  (uniq-orig na l-0)
  (uniq-gen x)
  (absent (x l))
  (gen-st (pv b l-0) (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltb-of b (exp (gen) l-0))
    (ltx-of b l-0) (ltx-of self l))
  (leads-to ((4 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-2 (pv b l-0))) (3 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-0 (pv self l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor-1 (cat pt-2 (pv b l-0)))
      (stor priv-stor-1 (cat pt-3 "nil")) (send l-0))
    ((load priv-stor-1 (cat pt-4 ignore))
      (stor priv-stor-1 (cat pt-2 (pv b l-0)))))
  (label 4)
  (parent 2)
  (seen 5)
  (unrealized (0 0) (0 1) (0 3) (1 0) (2 0))
  (comment "2 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pt-2 pval)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self)
    (priv-stor priv-stor-0) (l l))
  (precedes ((0 2) (1 0)) ((0 4) (2 0)) ((3 1) (0 0)))
  (uniq-orig na l)
  (uniq-gen x)
  (absent (x l))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((3 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-0 (cat pt-0 (pv self l))) (2 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-0 (pv self l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor-0 (cat pt-2 ignore))
      (stor priv-stor-0 (cat pt-0 (pv self l)))))
  (label 5)
  (parent 3)
  (unrealized (0 0) (0 1) (0 3) (1 0))
  (origs (l (3 1)) (pt-0 (3 1)) (pt-1 (2 1)) (na (0 2)))
  (ugens (x (0 2)))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor-1)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (1 0)) ((0 4) (2 0)) ((0 4) (3 0)) ((4 1) (3 0))
    ((5 1) (0 0)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l-0))
  (gen-st (pv b l) (pv self l-0))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of b (exp (gen) l))
    (ltx-of b l) (ltx-of self l-0))
  (leads-to ((4 1) (3 0)) ((5 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-0 (cat pt-0 (pv self l-0))) (2 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-0 (pv self l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor-1 (cat pt-2 (pv b l)))
      (stor priv-stor-1 (cat pt-3 "nil")) (send l))
    ((load priv-stor-1 (cat pt-4 ignore))
      (stor priv-stor-1 (cat pt-2 (pv b l))))
    ((load priv-stor-0 (cat pt-5 ignore-0))
      (stor priv-stor-0 (cat pt-0 (pv self l-0)))))
  (label 6)
  (parent 4)
  (unrealized (0 0) (0 1) (0 3) (1 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pt-2 pval)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (precedes ((0 2) (4 0)) ((0 4) (2 0)) ((3 1) (0 0)) ((4 1) (1 0)))
  (uniq-orig na l)
  (uniq-gen x)
  (absent (x l))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((3 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation encryption-test
    (added-listener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
    (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))) (1 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-0 (pv self l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor-0 (cat pt-2 ignore))
      (stor priv-stor-0 (cat pt-0 (pv self l))))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
  (label 7)
  (parent 5)
  (unrealized (0 0) (0 1) (0 3) (4 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor-1)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (precedes ((0 2) (6 0)) ((0 4) (2 0)) ((0 4) (3 0)) ((4 1) (3 0))
    ((5 1) (0 0)) ((6 1) (1 0)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l-0))
  (gen-st (pv b l) (pv self l-0))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of b (exp (gen) l))
    (ltx-of b l) (ltx-of self l-0))
  (leads-to ((4 1) (3 0)) ((5 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation encryption-test
    (added-listener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))) (1 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-0 (pv self l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor-1 (cat pt-2 (pv b l)))
      (stor priv-stor-1 (cat pt-3 "nil")) (send l))
    ((load priv-stor-1 (cat pt-4 ignore))
      (stor priv-stor-1 (cat pt-2 (pv b l))))
    ((load priv-stor-0 (cat pt-5 ignore-0))
      (stor priv-stor-0 (cat pt-0 (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
  (label 8)
  (parent 6)
  (unrealized (0 0) (0 1) (0 3) (6 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pt-2 pval)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (l rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l l (rec w))) w))
  (precedes ((0 2) (4 0)) ((0 4) (2 0)) ((3 1) (0 0)) ((4 1) (1 0))
    ((5 1) (4 0)))
  (uniq-orig na l)
  (uniq-gen x)
  (absent (x l))
  (precur (5 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((3 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul l l (rec w))) w))
    (exp (gen) (mul l l)) (4 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-0 (pv self l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor-0 (cat pt-2 ignore))
      (stor priv-stor-0 (cat pt-0 (pv self l))))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l l (rec w))) w))
      (send (cat (exp (gen) (mul l l (rec w))) w))))
  (label 9)
  (parent 7)
  (unrealized (0 0) (0 1) (0 3) (5 0))
  (comment "6 in cohort - 6 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor-1)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (precedes ((0 2) (6 0)) ((0 4) (2 0)) ((0 4) (3 0)) ((4 1) (3 0))
    ((5 1) (0 0)) ((5 1) (7 0)) ((6 1) (1 0)) ((7 1) (6 0)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l-0))
  (gen-st (pv b l) (pv self l-0))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of b (exp (gen) l))
    (ltx-of b l) (ltx-of self l-0))
  (leads-to ((4 1) (3 0)) ((5 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l) l-0))
    (exp (gen) (mul l l-0)) (6 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-0 (pv self l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor-1 (cat pt-2 (pv b l)))
      (stor priv-stor-1 (cat pt-3 "nil")) (send l))
    ((load priv-stor-1 (cat pt-4 ignore))
      (stor priv-stor-1 (cat pt-2 (pv b l))))
    ((load priv-stor-0 (cat pt-5 ignore-0))
      (stor priv-stor-0 (cat pt-0 (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0))))
  (label 10)
  (parent 8)
  (seen 18)
  (unrealized (0 0) (0 1) (0 3) (7 0))
  (comment "2 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor-1)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (precedes ((0 2) (6 0)) ((0 4) (2 0)) ((0 4) (3 0)) ((4 1) (3 0))
    ((4 1) (7 0)) ((5 1) (0 0)) ((6 1) (1 0)) ((7 1) (6 0)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l-0))
  (gen-st (pv b l) (pv self l-0))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of b (exp (gen) l))
    (ltx-of b l) (ltx-of self l-0))
  (leads-to ((4 1) (3 0)) ((5 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l-0) l))
    (exp (gen) (mul l l-0)) (6 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-0 (pv self l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor-1 (cat pt-2 (pv b l)))
      (stor priv-stor-1 (cat pt-3 "nil")) (send l))
    ((load priv-stor-1 (cat pt-4 ignore))
      (stor priv-stor-1 (cat pt-2 (pv b l))))
    ((load priv-stor-0 (cat pt-5 ignore-0))
      (stor priv-stor-0 (cat pt-0 (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l))))
  (label 11)
  (parent 8)
  (seen 19)
  (unrealized (0 0) (0 1) (0 3) (7 0))
  (comment "2 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb na-0 data) (self a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (gb base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (l l-0 x-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor)
    (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) x-0) (mul l-0 l-0 (rec x-0))))
  (defstrand init 3 (na na-0) (a a) (b b) (gb gb)
    (priv-stor priv-stor-1) (l l) (x x-0))
  (precedes ((0 2) (4 0)) ((0 4) (2 0)) ((3 1) (0 0)) ((4 1) (1 0))
    ((5 1) (4 0)) ((6 2) (5 0)))
  (uniq-orig na na-0 l-0)
  (uniq-gen x x-0)
  (absent (x l-0) (x-0 l))
  (precur (5 0))
  (gen-st (pv self l-0) (pv a l))
  (facts (ltb-of a (exp (gen) l)) (ltb-of b gb)
    (ltb-of self (exp (gen) l-0)) (ltx-of a l) (ltx-of self l-0))
  (leads-to ((3 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    gen-st-ltx-disclose-0 ltx-ltb trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand init 3) (exp (gen) x-0) (5 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-0 (pv self l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-2 ignore))
      (stor priv-stor-0 (cat pt-0 (pv self l-0))))
    ((recv (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) x-0) (mul l-0 l-0 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-0 l-0 (rec x-0)))))
    ((load priv-stor-1 (cat pt-3 (pv a l)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 a b (exp (gen) x-0)))))
  (label 12)
  (parent 9)
  (unrealized (0 0) (0 1) (0 3) (4 0) (5 0) (6 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pt-2 pval)
    (priv-stor priv-stor-0 locn) (y expt) (l x rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul y x))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul y x))))
  (deflistener (cat (exp (gen) x) (mul l l (rec x))))
  (precedes ((0 2) (5 0)) ((0 4) (2 0)) ((3 1) (0 0)) ((4 1) (1 0))
    ((5 1) (4 0)))
  (uniq-orig na l)
  (uniq-gen x)
  (absent (x l))
  (precur (5 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((3 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 6 0 init 3) (exp (gen) x-0) (5 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul y x))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul y x))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul y x)))))
    ((load priv-stor-0 (cat pt-0 (pv self l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor-0 (cat pt-2 ignore))
      (stor priv-stor-0 (cat pt-0 (pv self l))))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul y x))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul y x)))))
    ((recv (cat (exp (gen) x) (mul l l (rec x))))
      (send (cat (exp (gen) x) (mul l l (rec x))))))
  (label 13)
  (parent 9)
  (unrealized (0 0) (0 1) (0 3) (4 0) (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pt-2 pval)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (gen) (mul l l)))
  (precedes ((0 2) (4 0)) ((0 4) (2 0)) ((3 1) (0 0)) ((4 1) (1 0))
    ((5 1) (4 0)))
  (uniq-orig na l)
  (uniq-gen x)
  (absent (x l))
  (precur (5 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((3 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (contracted (l-0 l) (w (mul l l))) (gen) (5 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-0 (pv self l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor-0 (cat pt-2 ignore))
      (stor priv-stor-0 (cat pt-0 (pv self l))))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (gen) (mul l l))) (send (cat (gen) (mul l l)))))
  (label 14)
  (parent 9)
  (unrealized (0 0) (0 1) (0 3) (4 0) (5 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb na-0 nb-0 data) (self a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (ga gx base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (l l-0 y-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor)
    (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) y-0) (mul l-0 l-0 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b) (ga ga) (gx gx)
    (priv-stor priv-stor-1) (l l) (y y-0))
  (precedes ((0 2) (4 0)) ((0 4) (2 0)) ((3 1) (0 0)) ((4 1) (1 0))
    ((5 1) (4 0)) ((6 3) (5 0)))
  (uniq-orig na nb-0 l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (5 0))
  (gen-st (pv self l-0) (pv b l))
  (facts (ltb-of b (exp (gen) l)) (ltb-of a ga)
    (ltb-of self (exp (gen) l-0)) (ltx-of b l) (ltx-of self l-0))
  (leads-to ((3 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    gen-st-ltx-disclose-0 ltx-ltb trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand resp 4) (exp (gen) y-0) (5 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-0 (pv self l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-2 ignore))
      (stor priv-stor-0 (cat pt-0 (pv self l-0))))
    ((recv (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) y-0) (mul l-0 l-0 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-0 l-0 (rec y-0)))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a b (hash (exp ga l) (exp gx y-0)))))))
  (label 15)
  (parent 9)
  (unrealized (0 0) (0 1) (0 3) (4 0) (5 0) (6 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pt-2 pval)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self)
    (priv-stor priv-stor-0) (l l))
  (precedes ((0 2) (3 0)) ((0 4) (2 0)) ((3 1) (1 0)) ((4 1) (3 0))
    ((5 1) (0 0)) ((5 2) (4 0)))
  (uniq-orig na l)
  (uniq-gen x)
  (absent (x l))
  (precur (4 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((5 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 3 6 ltx-gen 3) (exp (gen) l-0) (5 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l)) (send (cat (exp (gen) l) l)))
    ((load priv-stor-0 (cat pt-1 ignore))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))))
  (label 16)
  (parent 9)
  (seen 25)
  (unrealized (0 0) (0 1) (0 3) (4 0))
  (comment "2 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) (mul l l (rec l-0))))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-1) (l l-0))
  (precedes ((0 2) (4 0)) ((0 4) (2 0)) ((3 1) (0 0)) ((4 1) (1 0))
    ((5 1) (4 0)) ((6 2) (5 0)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (precur (5 0))
  (gen-st (pv self l))
  (facts (ltb-of self-0 (exp (gen) l-0)) (ltb-of self (exp (gen) l))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((3 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-ltx-gen-ltx-of0 fact-resp-ltb-of0
    ltx-ltb trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 3) (exp (gen) l-0) (5 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-0 (pv self l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor-0 (cat pt-2 ignore))
      (stor priv-stor-0 (cat pt-0 (pv self l))))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) (mul l l (rec l-0))))
      (send (cat (exp (gen) l-0) (mul l l (rec l-0)))))
    ((load priv-stor-1 (cat pt-3 ignore-0))
      (stor priv-stor-1 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 17)
  (parent 9)
  (unrealized (0 0) (0 1) (0 3) (4 0) (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor-1)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (7 0)) ((4 1) (3 0))
    ((5 1) (0 0)) ((6 1) (1 0)) ((7 1) (6 0)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l-0))
  (gen-st (pv b l) (pv self l-0))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of b (exp (gen) l))
    (ltx-of b l) (ltx-of self l-0))
  (leads-to ((4 1) (3 0)) ((5 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 8 2 ltx-disclose 3) l-0 (7 0)
    (ch-msg priv-stor-0 (cat pt-0 (pv self l-0))))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-0 (pv self l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor-1 (cat pt-2 (pv b l)))
      (stor priv-stor-1 (cat pt-3 "nil")) (send l))
    ((load priv-stor-1 (cat pt-4 ignore))
      (stor priv-stor-1 (cat pt-2 (pv b l))))
    ((load priv-stor-0 (cat pt-5 ignore-0))
      (stor priv-stor-0 (cat pt-0 (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0))))
  (label 18)
  (parent 10)
  (unrealized (0 0) (0 1) (0 3) (7 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor-1)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (7 0)) ((4 1) (3 0))
    ((5 1) (0 0)) ((6 1) (1 0)) ((7 1) (6 0)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (gen-st (pv b l-0) (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltb-of b (exp (gen) l-0))
    (ltx-of b l-0) (ltx-of self l))
  (leads-to ((4 1) (3 0)) ((5 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 8 3 ltx-disclose 3) l-0 (7 0)
    (ch-msg priv-stor-1 (cat pt-2 (pv b l-0))))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-0 (pv self l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor-1 (cat pt-2 (pv b l-0)))
      (stor priv-stor-1 (cat pt-3 "nil")) (send l-0))
    ((load priv-stor-1 (cat pt-4 ignore))
      (stor priv-stor-1 (cat pt-2 (pv b l-0))))
    ((load priv-stor-0 (cat pt-5 ignore-0))
      (stor priv-stor-0 (cat pt-0 (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0))))
  (label 19)
  (parent 11)
  (unrealized (0 0) (0 1) (0 3) (7 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb na-0 data) (self b name)
    (pt pt-0 pt-1 pt-2 pval) (gb base) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (x-0 l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) x-0) (mul (rec x-0) l l)))
  (defstrand init 3 (na na-0) (a self) (b b) (gb gb)
    (priv-stor priv-stor-0) (l l) (x x-0))
  (precedes ((0 2) (4 0)) ((0 4) (2 0)) ((3 1) (0 0)) ((3 1) (6 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 2) (5 0)))
  (uniq-orig na na-0 l)
  (uniq-gen x x-0)
  (absent (x l) (x-0 l))
  (precur (5 0))
  (gen-st (pv self l))
  (facts (ltb-of b gb) (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((3 1) (2 0)) ((3 1) (6 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 7 3 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv a l-0))) (6 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-0 (pv self l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor-0 (cat pt-2 ignore))
      (stor priv-stor-0 (cat pt-0 (pv self l))))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) x-0) (mul (rec x-0) l l)))
      (send (cat (exp (gen) x-0) (mul (rec x-0) l l))))
    ((load priv-stor-0 (cat pt-0 (pv self l)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 self b (exp (gen) x-0)))))
  (label 20)
  (parent 12)
  (unrealized (0 0) (0 1) (0 3) (4 0) (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (self a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (gb base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (l x-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) x-0) (mul l l (rec x-0))))
  (defstrand init 3 (na na-0) (a a) (b b) (gb gb)
    (priv-stor priv-stor-1) (l l-0) (x x-0))
  (defstrand ltx-gen 2 (ignore ignore-0) (self a)
    (priv-stor priv-stor-1) (l l-0))
  (precedes ((0 2) (4 0)) ((0 4) (2 0)) ((3 1) (0 0)) ((4 1) (1 0))
    ((5 1) (4 0)) ((6 2) (5 0)) ((7 1) (6 0)))
  (uniq-orig na na-0 l l-0)
  (uniq-gen x x-0)
  (absent (x l) (x-0 l-0))
  (precur (5 0))
  (gen-st (pv self l) (pv a l-0))
  (facts (ltb-of a (exp (gen) l-0)) (ltb-of b gb)
    (ltb-of self (exp (gen) l)) (ltx-of a l-0) (ltx-of self l))
  (leads-to ((3 1) (2 0)) ((7 1) (6 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv a l-0))) (6 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-0 (pv self l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor-0 (cat pt-2 ignore))
      (stor priv-stor-0 (cat pt-0 (pv self l))))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) x-0) (mul l l (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l l (rec x-0)))))
    ((load priv-stor-1 (cat pt-3 (pv a l-0)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 a b (exp (gen) x-0))))
    ((load priv-stor-1 (cat pt-4 ignore-0))
      (stor priv-stor-1 (cat pt-3 (pv a l-0)))))
  (label 21)
  (parent 12)
  (unrealized (0 0) (0 1) (0 3) (4 0) (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pt-2 pval)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (gen) (mul l l)))
  (deflistener l)
  (precedes ((0 2) (4 0)) ((0 4) (2 0)) ((3 1) (0 0)) ((3 1) (6 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (5 0)))
  (uniq-orig na l)
  (uniq-gen x)
  (absent (x l))
  (precur (5 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((3 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener l) (mul l l) (5 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-0 (pv self l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor-0 (cat pt-2 ignore))
      (stor priv-stor-0 (cat pt-0 (pv self l))))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (gen) (mul l l))) (send (cat (gen) (mul l l))))
    ((recv l) (send l)))
  (label 22)
  (parent 14)
  (seen 30)
  (unrealized (0 0) (0 1) (0 3) (6 0))
  (comment "2 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb na-0 nb-0 data) (self a name)
    (pt pt-0 pt-1 pt-2 pval) (ga gx base) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) y-0) (mul (rec y-0) l l)))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b self) (ga ga) (gx gx)
    (priv-stor priv-stor-0) (l l) (y y-0))
  (precedes ((0 2) (4 0)) ((0 4) (2 0)) ((3 1) (0 0)) ((3 1) (6 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 3) (5 0)))
  (uniq-orig na nb-0 l)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l))
  (precur (5 0))
  (gen-st (pv self l))
  (facts (ltb-of a ga) (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((3 1) (2 0)) ((3 1) (6 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 7 3 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv b l-0))) (6 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-0 (pv self l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor-0 (cat pt-2 ignore))
      (stor priv-stor-0 (cat pt-0 (pv self l))))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) y-0) (mul (rec y-0) l l)))
      (send (cat (exp (gen) y-0) (mul (rec y-0) l l))))
    ((load priv-stor-0 (cat pt-0 (pv self l)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a self gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a self (hash (exp ga l) (exp gx y-0)))))))
  (label 23)
  (parent 15)
  (unrealized (0 0) (0 1) (0 3) (4 0) (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (self a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (ga gx base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (l y-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) y-0) (mul l l (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b) (ga ga) (gx gx)
    (priv-stor priv-stor-1) (l l-0) (y y-0))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (precedes ((0 2) (4 0)) ((0 4) (2 0)) ((3 1) (0 0)) ((4 1) (1 0))
    ((5 1) (4 0)) ((6 3) (5 0)) ((7 1) (6 0)))
  (uniq-orig na nb-0 l l-0)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l-0))
  (precur (5 0))
  (gen-st (pv self l) (pv b l-0))
  (facts (ltb-of b (exp (gen) l-0)) (ltb-of a ga)
    (ltb-of self (exp (gen) l)) (ltx-of b l-0) (ltx-of self l))
  (leads-to ((3 1) (2 0)) ((7 1) (6 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv b l-0))) (6 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-0 (pv self l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor-0 (cat pt-2 ignore))
      (stor priv-stor-0 (cat pt-0 (pv self l))))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) y-0) (mul l l (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l l (rec y-0)))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a b (hash (exp ga l-0) (exp gx y-0))))))
    ((load priv-stor-1 (cat pt-4 ignore-0))
      (stor priv-stor-1 (cat pt-3 (pv b l-0)))))
  (label 24)
  (parent 15)
  (unrealized (0 0) (0 1) (0 3) (4 0) (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pt-2 pval)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self)
    (priv-stor priv-stor-0) (l l))
  (precedes ((0 4) (2 0)) ((2 2) (4 0)) ((3 1) (1 0)) ((4 1) (3 0))
    ((5 1) (0 0)) ((5 2) (4 0)))
  (uniq-orig na l)
  (uniq-gen x)
  (absent (x l))
  (precur (4 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((5 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 6 2 ltx-disclose 3) l (4 0)
    (ch-msg priv-stor-0 (cat pt-2 (pv self l))))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l)) (send (cat (exp (gen) l) l)))
    ((load priv-stor-0 (cat pt-1 ignore))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))))
  (label 25)
  (parent 16)
  (unrealized (0 0) (0 1) (0 3))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-1)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-1) (l l-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0)) ((4 1) (0 0))
    ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (3 0)) ((7 2) (6 0)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (2 0)) ((7 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 4 8 ltx-gen 3) (exp (gen) l-0) (7 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-0 (pv self l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor-1 (cat pt-5 (pv self-0 l-0)))
      (stor priv-stor-1 (cat pt-2 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-3 ignore))
      (stor priv-stor-0 (cat pt-0 (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-1 (cat pt-4 ignore-0))
      (stor priv-stor-1 (cat pt-5 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 26)
  (parent 18)
  (unrealized (0 0) (0 1) (0 3))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (l l-0 rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor-1)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (exp (gen) (mul l (rec w))) w))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (7 0)) ((4 1) (3 0))
    ((5 1) (0 0)) ((6 1) (1 0)) ((7 1) (6 0)) ((8 1) (7 0)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l-0))
  (precur (8 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of b (exp (gen) l))
    (ltx-of b l) (ltx-of self l-0))
  (leads-to ((4 1) (3 0)) ((5 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul l (rec w))) w)) (exp (gen) l)
    (7 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-0 (pv self l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor-1 (cat pt-2 (pv b l)))
      (stor priv-stor-1 (cat pt-3 "nil")) (send l))
    ((load priv-stor-1 (cat pt-4 ignore))
      (stor priv-stor-1 (cat pt-2 (pv b l))))
    ((load priv-stor-0 (cat pt-5 ignore-0))
      (stor priv-stor-0 (cat pt-0 (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (exp (gen) (mul l (rec w))) w))
      (send (cat (exp (gen) (mul l (rec w))) w))))
  (label 27)
  (parent 18)
  (unrealized (0 0) (0 1) (0 3) (8 0))
  (comment "7 in cohort - 7 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-1) (l l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor-0)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-1) (l l-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (6 0)) ((4 1) (3 0))
    ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (0 0)) ((7 2) (6 0)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l-0))
  (gen-st (pv b l) (pv self l-0))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of b (exp (gen) l))
    (ltx-of b l) (ltx-of self l-0))
  (leads-to ((4 1) (3 0)) ((7 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 5 8 ltx-gen 3) (exp (gen) l-0) (7 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-1 (cat pt-5 (pv self l-0)))
      (stor priv-stor-1 (cat pt-0 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-1 (pv b l)))
      (stor priv-stor-0 (cat pt-2 "nil")) (send l))
    ((load priv-stor-0 (cat pt-3 ignore))
      (stor priv-stor-0 (cat pt-1 (pv b l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-1 (cat pt-4 ignore-0))
      (stor priv-stor-1 (cat pt-5 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 28)
  (parent 19)
  (unrealized (0 0) (0 1) (0 3))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (l l-0 rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor-1)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (exp (gen) (mul l (rec w))) w))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (7 0)) ((4 1) (3 0))
    ((5 1) (0 0)) ((6 1) (1 0)) ((7 1) (6 0)) ((8 1) (7 0)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (precur (8 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltb-of b (exp (gen) l-0))
    (ltx-of b l-0) (ltx-of self l))
  (leads-to ((4 1) (3 0)) ((5 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul l (rec w))) w)) (exp (gen) l)
    (7 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-0 (pv self l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor-1 (cat pt-2 (pv b l-0)))
      (stor priv-stor-1 (cat pt-3 "nil")) (send l-0))
    ((load priv-stor-1 (cat pt-4 ignore))
      (stor priv-stor-1 (cat pt-2 (pv b l-0))))
    ((load priv-stor-0 (cat pt-5 ignore-0))
      (stor priv-stor-0 (cat pt-0 (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (exp (gen) (mul l (rec w))) w))
      (send (cat (exp (gen) (mul l (rec w))) w))))
  (label 29)
  (parent 19)
  (unrealized (0 0) (0 1) (0 3) (8 0))
  (comment "7 in cohort - 7 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pt-2 pval)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (gen) (mul l l)))
  (deflistener l)
  (precedes ((0 4) (2 0)) ((2 2) (6 0)) ((3 1) (0 0)) ((4 1) (1 0))
    ((5 1) (4 0)) ((6 1) (5 0)))
  (uniq-orig na l)
  (uniq-gen x)
  (absent (x l))
  (precur (5 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((3 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 7 2 ltx-disclose 3) l (6 0)
    (ch-msg priv-stor-0 (cat pt-0 (pv self l))))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-0 (pv self l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor-0 (cat pt-2 ignore))
      (stor priv-stor-0 (cat pt-0 (pv self l))))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (gen) (mul l l))) (send (cat (gen) (mul l l))))
    ((recv l) (send l)))
  (label 30)
  (parent 22)
  (unrealized (0 0) (0 1) (0 3))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pval)
    (priv-stor locn) (x rndx) (y expt) (l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (precedes ((0 4) (2 0)) ((2 2) (4 0)) ((3 1) (1 0)) ((4 1) (3 0))
    ((5 1) (0 0)) ((5 2) (4 0)))
  (uniq-orig na l)
  (uniq-gen x)
  (absent (x l))
  (precur (4 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((5 1) (0 0)) ((5 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 6 5 ltx-gen 2)
    (ch-msg priv-stor-0 (cat pt-2 (pv self l))) (0 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l)) (send (cat (exp (gen) l) l)))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))))
  (label 31)
  (parent 25)
  (unrealized (0 1) (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0)) ((4 1) (0 0))
    ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (3 0)) ((7 2) (6 0)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l-0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of self-0 (exp (gen) l))
    (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((7 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 8 4 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv self l-0))) (0 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l-0)))
      (stor priv-stor (cat pt-0 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 32)
  (parent 26)
  (unrealized (0 1) (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (b self a b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval) (gb base)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn) (x rndx)
    (y expt) (l l-0 l-1 x-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-1))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor-1)
    (l l-1))
  (defstrand ltx-gen 2 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-1) l))
  (deflistener (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
  (defstrand init 3 (na na-0) (a a) (b b-0) (gb gb)
    (priv-stor priv-stor-2) (l l-0) (x x-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (7 0)) ((4 1) (3 0))
    ((5 1) (0 0)) ((6 1) (1 0)) ((7 1) (6 0)) ((8 1) (7 0))
    ((9 2) (8 0)))
  (uniq-orig na na-0 l l-1)
  (uniq-gen x x-0)
  (absent (x l) (x-0 l-0))
  (precur (8 0))
  (gen-st (pv b l-1) (pv self l) (pv a l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of a (exp (gen) l-0))
    (ltb-of b-0 gb) (ltb-of b (exp (gen) l-1)) (ltx-of a l-0)
    (ltx-of b l-1) (ltx-of self l))
  (leads-to ((4 1) (3 0)) ((5 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    gen-st-ltx-disclose-0 ltx-ltb trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand init 3) (exp (gen) x-0) (8 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-0 (pv self l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor-1 (cat pt-2 (pv b l-1)))
      (stor priv-stor-1 (cat pt-3 "nil")) (send l-1))
    ((load priv-stor-1 (cat pt-4 ignore))
      (stor priv-stor-1 (cat pt-2 (pv b l-1))))
    ((load priv-stor-0 (cat pt-5 ignore-0))
      (stor priv-stor-0 (cat pt-0 (pv self l))))
    ((recv (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-1) l)) (send (cat (exp (gen) l-1) l)))
    ((recv (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-1 (rec x-0)))))
    ((load priv-stor-2 (cat pt-6 (pv a l-0)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 a b-0 (exp (gen) x-0)))))
  (label 33)
  (parent 27)
  (unrealized (0 0) (0 1) (0 3) (7 0) (8 0) (9 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y expt) (l l-0 x rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor-1)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y x))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (exp (gen) x) (mul l (rec x))))
  (precedes ((0 2) (8 0)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (7 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((6 1) (1 0)) ((7 1) (6 0))
    ((8 1) (7 0)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l-0))
  (precur (8 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of b (exp (gen) l))
    (ltx-of b l) (ltx-of self l-0))
  (leads-to ((4 1) (3 0)) ((5 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 9 0 init 3) (exp (gen) x-0) (8 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x)))))
    ((load priv-stor-0 (cat pt-0 (pv self l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor-1 (cat pt-2 (pv b l)))
      (stor priv-stor-1 (cat pt-3 "nil")) (send l))
    ((load priv-stor-1 (cat pt-4 ignore))
      (stor priv-stor-1 (cat pt-2 (pv b l))))
    ((load priv-stor-0 (cat pt-5 ignore-0))
      (stor priv-stor-0 (cat pt-0 (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y x))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y x)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (exp (gen) x) (mul l (rec x))))
      (send (cat (exp (gen) x) (mul l (rec x))))))
  (label 34)
  (parent 27)
  (unrealized (0 0) (0 1) (0 3) (7 0) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor-1)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (gen) l-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (7 0)) ((4 1) (3 0))
    ((4 1) (8 0)) ((5 1) (0 0)) ((6 1) (1 0)) ((7 1) (6 0))
    ((8 1) (7 0)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (precur (8 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltb-of b (exp (gen) l-0))
    (ltx-of b l-0) (ltx-of self l))
  (leads-to ((4 1) (3 0)) ((5 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (contracted (l-1 l-0) (w l-0)) (gen) (8 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-0 (pv self l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor-1 (cat pt-2 (pv b l-0)))
      (stor priv-stor-1 (cat pt-3 "nil")) (send l-0))
    ((load priv-stor-1 (cat pt-4 ignore))
      (stor priv-stor-1 (cat pt-2 (pv b l-0))))
    ((load priv-stor-0 (cat pt-5 ignore-0))
      (stor priv-stor-0 (cat pt-0 (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0))))
  (label 35)
  (parent 27)
  (seen 56)
  (unrealized (0 0) (0 1) (0 3) (8 0))
  (comment "2 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-1)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-1) (l l-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0)) ((4 1) (0 0))
    ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (6 0)) ((8 1) (3 0))
    ((8 2) (7 0)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (precur (7 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (2 0)) ((8 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 4 9 ltx-gen 3) (exp (gen) l-1) (8 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-0 (pv self l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor-1 (cat pt-5 (pv self-0 l-0)))
      (stor priv-stor-1 (cat pt-2 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-3 ignore))
      (stor priv-stor-0 (cat pt-0 (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-1 (cat pt-4 ignore-0))
      (stor priv-stor-1 (cat pt-5 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 36)
  (parent 27)
  (unrealized (0 0) (0 1) (0 3))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data)
    (b self a b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (ga gx base) (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn)
    (x rndx) (y expt) (l l-0 l-1 y-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-1))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor-1)
    (l l-1))
  (defstrand ltx-gen 2 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-1) l))
  (deflistener (cat (exp (gen) y-0) (mul l-1 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b-0) (ga ga) (gx gx)
    (priv-stor priv-stor-2) (l l-0) (y y-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (7 0)) ((4 1) (3 0))
    ((5 1) (0 0)) ((6 1) (1 0)) ((7 1) (6 0)) ((8 1) (7 0))
    ((9 3) (8 0)))
  (uniq-orig na nb-0 l l-1)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l-0))
  (precur (8 0))
  (gen-st (pv b l-1) (pv self l) (pv b-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of b-0 (exp (gen) l-0))
    (ltb-of a ga) (ltb-of b (exp (gen) l-1)) (ltx-of b-0 l-0)
    (ltx-of b l-1) (ltx-of self l))
  (leads-to ((4 1) (3 0)) ((5 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    gen-st-ltx-disclose-0 ltx-ltb trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand resp 4) (exp (gen) y-0) (8 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-0 (pv self l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor-1 (cat pt-2 (pv b l-1)))
      (stor priv-stor-1 (cat pt-3 "nil")) (send l-1))
    ((load priv-stor-1 (cat pt-4 ignore))
      (stor priv-stor-1 (cat pt-2 (pv b l-1))))
    ((load priv-stor-0 (cat pt-5 ignore-0))
      (stor priv-stor-0 (cat pt-0 (pv self l))))
    ((recv (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-1) l)) (send (cat (exp (gen) l-1) l)))
    ((recv (cat (exp (gen) y-0) (mul l-1 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-1 (rec y-0)))))
    ((load priv-stor-2 (cat pt-6 (pv b-0 l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b-0 gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a b-0 (hash (exp ga l-0) (exp gx y-0)))))))
  (label 37)
  (parent 27)
  (unrealized (0 0) (0 1) (0 3) (7 0) (8 0) (9 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-1) (l l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor-0)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (exp (gen) l-0) (mul l (rec l-0))))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-1) (l l-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0)) ((4 1) (3 0))
    ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (6 0)) ((8 1) (0 0))
    ((8 2) (7 0)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l-0))
  (precur (7 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of b (exp (gen) l))
    (ltx-of b l) (ltx-of self l-0))
  (leads-to ((4 1) (3 0)) ((8 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 5 9 ltx-gen 3) (exp (gen) l-1) (8 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-1 (cat pt-5 (pv self l-0)))
      (stor priv-stor-1 (cat pt-0 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-1 (pv b l)))
      (stor priv-stor-0 (cat pt-2 "nil")) (send l))
    ((load priv-stor-0 (cat pt-3 ignore))
      (stor priv-stor-0 (cat pt-1 (pv b l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (exp (gen) l-0) (mul l (rec l-0))))
      (send (cat (exp (gen) l-0) (mul l (rec l-0)))))
    ((load priv-stor-1 (cat pt-4 ignore-0))
      (stor priv-stor-1 (cat pt-5 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 38)
  (parent 27)
  (unrealized (0 0) (0 1) (0 3) (6 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data)
    (b self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn) (x rndx)
    (y expt) (l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor-1)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self-0)
    (priv-stor priv-stor-2) (l l-1))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (7 0)) ((4 1) (3 0))
    ((5 1) (0 0)) ((6 1) (1 0)) ((7 1) (6 0)) ((8 1) (7 0))
    ((9 2) (8 0)))
  (uniq-orig na l l-0 l-1)
  (uniq-gen x)
  (absent (x l))
  (precur (8 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-1))
    (ltb-of b (exp (gen) l-0)) (ltx-of self-0 l-1) (ltx-of b l-0)
    (ltx-of self l))
  (leads-to ((4 1) (3 0)) ((5 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-ltx-gen-ltx-of0 fact-resp-ltb-of0
    ltx-ltb trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 3) (exp (gen) l-1) (8 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-0 (pv self l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor-1 (cat pt-2 (pv b l-0)))
      (stor priv-stor-1 (cat pt-3 "nil")) (send l-0))
    ((load priv-stor-1 (cat pt-4 ignore))
      (stor priv-stor-1 (cat pt-2 (pv b l-0))))
    ((load priv-stor-0 (cat pt-5 ignore-0))
      (stor priv-stor-0 (cat pt-0 (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
      (send (cat (exp (gen) l-1) (mul l-0 (rec l-1)))))
    ((load priv-stor-2 (cat pt-6 ignore-1))
      (stor priv-stor-2 (cat pt-7 (pv self-0 l-1)))
      (send
        (sig (body self-0 (exp (gen) l-1) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 39)
  (parent 27)
  (unrealized (0 0) (0 1) (0 3) (7 0) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor-0) (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (6 0)) ((4 1) (3 0))
    ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (0 0)) ((7 2) (6 0)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l-0))
  (gen-st (pv b l) (pv self l-0))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of b (exp (gen) l))
    (ltx-of b l) (ltx-of self l-0))
  (leads-to ((4 1) (3 0)) ((7 1) (0 0)) ((7 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 8 7 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv self l-0))) (0 0))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self l-0)))
      (stor priv-stor-0 (cat pt "nil")) (send l-0))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt-0 (pv b l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 40)
  (parent 28)
  (unrealized (0 1) (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (b self a b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval) (gb base)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn) (x rndx)
    (y expt) (l l-0 l-1 x-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l-1) (x x))
  (deflistener (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor-1)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-1))
  (deflistener (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-1) l))
  (deflistener (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
  (defstrand init 3 (na na-0) (a a) (b b-0) (gb gb)
    (priv-stor priv-stor-2) (l l-0) (x x-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (7 0)) ((4 1) (3 0))
    ((5 1) (0 0)) ((6 1) (1 0)) ((7 1) (6 0)) ((8 1) (7 0))
    ((9 2) (8 0)))
  (uniq-orig na na-0 l l-1)
  (uniq-gen x x-0)
  (absent (x l-1) (x-0 l-0))
  (precur (8 0))
  (gen-st (pv b l) (pv self l-1) (pv a l-0))
  (facts (ltb-of self (exp (gen) l-1)) (ltb-of a (exp (gen) l-0))
    (ltb-of b-0 gb) (ltb-of b (exp (gen) l)) (ltx-of a l-0) (ltx-of b l)
    (ltx-of self l-1))
  (leads-to ((4 1) (3 0)) ((5 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    gen-st-ltx-disclose-0 ltx-ltb trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand init 3) (exp (gen) x-0) (8 0))
  (traces
    ((load priv-stor (cat pt (pv self l-1)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-0 (pv self l-1)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-1))
    ((load priv-stor-1 (cat pt-2 (pv b l)))
      (stor priv-stor-1 (cat pt-3 "nil")) (send l))
    ((load priv-stor-1 (cat pt-4 ignore))
      (stor priv-stor-1 (cat pt-2 (pv b l))))
    ((load priv-stor-0 (cat pt-5 ignore-0))
      (stor priv-stor-0 (cat pt-0 (pv self l-1))))
    ((recv (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-1) l)) (send (cat (exp (gen) l-1) l)))
    ((recv (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-1 (rec x-0)))))
    ((load priv-stor-2 (cat pt-6 (pv a l-0)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 a b-0 (exp (gen) x-0)))))
  (label 41)
  (parent 29)
  (unrealized (0 0) (0 1) (0 3) (7 0) (8 0) (9 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y expt) (l l-0 x rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor-1)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y x))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (exp (gen) x) (mul l-0 (rec x))))
  (precedes ((0 2) (8 0)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (7 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((6 1) (1 0)) ((7 1) (6 0))
    ((8 1) (7 0)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l-0))
  (precur (8 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of b (exp (gen) l))
    (ltx-of b l) (ltx-of self l-0))
  (leads-to ((4 1) (3 0)) ((5 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 9 0 init 3) (exp (gen) x-0) (8 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x)))))
    ((load priv-stor-0 (cat pt-0 (pv self l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor-1 (cat pt-2 (pv b l)))
      (stor priv-stor-1 (cat pt-3 "nil")) (send l))
    ((load priv-stor-1 (cat pt-4 ignore))
      (stor priv-stor-1 (cat pt-2 (pv b l))))
    ((load priv-stor-0 (cat pt-5 ignore-0))
      (stor priv-stor-0 (cat pt-0 (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y x))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y x)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (exp (gen) x) (mul l-0 (rec x))))
      (send (cat (exp (gen) x) (mul l-0 (rec x))))))
  (label 42)
  (parent 29)
  (unrealized (0 0) (0 1) (0 3) (7 0) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor-1)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (gen) l-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (7 0)) ((4 1) (3 0))
    ((5 1) (0 0)) ((5 1) (8 0)) ((6 1) (1 0)) ((7 1) (6 0))
    ((8 1) (7 0)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l-0))
  (precur (8 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of b (exp (gen) l))
    (ltx-of b l) (ltx-of self l-0))
  (leads-to ((4 1) (3 0)) ((5 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (contracted (l-1 l-0) (w l-0)) (gen) (8 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-0 (pv self l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor-1 (cat pt-2 (pv b l)))
      (stor priv-stor-1 (cat pt-3 "nil")) (send l))
    ((load priv-stor-1 (cat pt-4 ignore))
      (stor priv-stor-1 (cat pt-2 (pv b l))))
    ((load priv-stor-0 (cat pt-5 ignore-0))
      (stor priv-stor-0 (cat pt-0 (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0))))
  (label 43)
  (parent 29)
  (seen 66)
  (unrealized (0 0) (0 1) (0 3) (8 0))
  (comment "2 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-1)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (exp (gen) l-0) (mul l (rec l-0))))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-1) (l l-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (6 0)) ((4 1) (0 0))
    ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (6 0)) ((8 1) (3 0))
    ((8 2) (7 0)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (precur (7 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (2 0)) ((8 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 4 9 ltx-gen 3) (exp (gen) l-1) (8 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-0 (pv self l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor-1 (cat pt-5 (pv self-0 l-0)))
      (stor priv-stor-1 (cat pt-2 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-3 ignore))
      (stor priv-stor-0 (cat pt-0 (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (exp (gen) l-0) (mul l (rec l-0))))
      (send (cat (exp (gen) l-0) (mul l (rec l-0)))))
    ((load priv-stor-1 (cat pt-4 ignore-0))
      (stor priv-stor-1 (cat pt-5 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 44)
  (parent 29)
  (unrealized (0 0) (0 1) (0 3) (6 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data)
    (b self a b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (ga gx base) (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn)
    (x rndx) (y expt) (l l-0 l-1 y-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l-1) (x x))
  (deflistener (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor-1)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-1))
  (deflistener (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-1) l))
  (deflistener (cat (exp (gen) y-0) (mul l-1 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b-0) (ga ga) (gx gx)
    (priv-stor priv-stor-2) (l l-0) (y y-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (7 0)) ((4 1) (3 0))
    ((5 1) (0 0)) ((6 1) (1 0)) ((7 1) (6 0)) ((8 1) (7 0))
    ((9 3) (8 0)))
  (uniq-orig na nb-0 l l-1)
  (uniq-gen x y-0)
  (absent (x l-1) (y-0 l-0))
  (precur (8 0))
  (gen-st (pv b l) (pv self l-1) (pv b-0 l-0))
  (facts (ltb-of self (exp (gen) l-1)) (ltb-of b-0 (exp (gen) l-0))
    (ltb-of a ga) (ltb-of b (exp (gen) l)) (ltx-of b-0 l-0) (ltx-of b l)
    (ltx-of self l-1))
  (leads-to ((4 1) (3 0)) ((5 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    gen-st-ltx-disclose-0 ltx-ltb trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand resp 4) (exp (gen) y-0) (8 0))
  (traces
    ((load priv-stor (cat pt (pv self l-1)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-0 (pv self l-1)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-1))
    ((load priv-stor-1 (cat pt-2 (pv b l)))
      (stor priv-stor-1 (cat pt-3 "nil")) (send l))
    ((load priv-stor-1 (cat pt-4 ignore))
      (stor priv-stor-1 (cat pt-2 (pv b l))))
    ((load priv-stor-0 (cat pt-5 ignore-0))
      (stor priv-stor-0 (cat pt-0 (pv self l-1))))
    ((recv (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-1) l)) (send (cat (exp (gen) l-1) l)))
    ((recv (cat (exp (gen) y-0) (mul l-1 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-1 (rec y-0)))))
    ((load priv-stor-2 (cat pt-6 (pv b-0 l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b-0 gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a b-0 (hash (exp ga l-0) (exp gx y-0)))))))
  (label 45)
  (parent 29)
  (unrealized (0 0) (0 1) (0 3) (7 0) (8 0) (9 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-1) (l l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor-0)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-1) (l l-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (6 0)) ((4 1) (3 0))
    ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (6 0)) ((8 1) (0 0))
    ((8 2) (7 0)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l-0))
  (precur (7 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of b (exp (gen) l))
    (ltx-of b l) (ltx-of self l-0))
  (leads-to ((4 1) (3 0)) ((8 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 5 9 ltx-gen 3) (exp (gen) l-1) (8 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-1 (cat pt-5 (pv self l-0)))
      (stor priv-stor-1 (cat pt-0 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-1 (pv b l)))
      (stor priv-stor-0 (cat pt-2 "nil")) (send l))
    ((load priv-stor-0 (cat pt-3 ignore))
      (stor priv-stor-0 (cat pt-1 (pv b l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-1 (cat pt-4 ignore-0))
      (stor priv-stor-1 (cat pt-5 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 46)
  (parent 29)
  (unrealized (0 0) (0 1) (0 3))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data)
    (b self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn) (x rndx)
    (y expt) (l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor-1)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self-0)
    (priv-stor priv-stor-2) (l l-1))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (7 0)) ((4 1) (3 0))
    ((5 1) (0 0)) ((6 1) (1 0)) ((7 1) (6 0)) ((8 1) (7 0))
    ((9 2) (8 0)))
  (uniq-orig na l l-0 l-1)
  (uniq-gen x)
  (absent (x l-0))
  (precur (8 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of self-0 (exp (gen) l-1))
    (ltb-of b (exp (gen) l)) (ltx-of self-0 l-1) (ltx-of b l)
    (ltx-of self l-0))
  (leads-to ((4 1) (3 0)) ((5 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-ltx-gen-ltx-of0 fact-resp-ltb-of0
    ltx-ltb trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 3) (exp (gen) l-1) (8 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-0 (pv self l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor-1 (cat pt-2 (pv b l)))
      (stor priv-stor-1 (cat pt-3 "nil")) (send l))
    ((load priv-stor-1 (cat pt-4 ignore))
      (stor priv-stor-1 (cat pt-2 (pv b l))))
    ((load priv-stor-0 (cat pt-5 ignore-0))
      (stor priv-stor-0 (cat pt-0 (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
      (send (cat (exp (gen) l-1) (mul l-0 (rec l-1)))))
    ((load priv-stor-2 (cat pt-6 ignore-1))
      (stor priv-stor-2 (cat pt-7 (pv self-0 l-1)))
      (send
        (sig (body self-0 (exp (gen) l-1) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 47)
  (parent 29)
  (unrealized (0 0) (0 1) (0 3) (7 0) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pval)
    (priv-stor locn) (x rndx) (y expt) (l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (gen) (mul l l)))
  (deflistener l)
  (precedes ((0 4) (2 0)) ((2 2) (6 0)) ((3 1) (0 0)) ((4 1) (1 0))
    ((5 1) (4 0)) ((6 1) (5 0)))
  (uniq-orig na l)
  (uniq-gen x)
  (absent (x l))
  (precur (5 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((3 1) (0 0)) ((3 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 7 3 ltx-gen 2)
    (ch-msg priv-stor-0 (cat pt-2 (pv self l))) (0 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (gen) (mul l l))) (send (cat (gen) (mul l l))))
    ((recv l) (send l)))
  (label 48)
  (parent 30)
  (unrealized (0 1) (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pval)
    (priv-stor locn) (x rndx) (y expt) (l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (precedes ((0 4) (2 0)) ((2 2) (4 0)) ((3 1) (1 0)) ((4 1) (3 0))
    ((5 1) (0 0)) ((5 2) (0 1)))
  (uniq-orig na l)
  (uniq-gen x)
  (absent (x l))
  (precur (4 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((5 1) (0 0)) ((5 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 6 5 ltx-gen 3) (exp (gen) l) (0 1))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l)) (send (cat (exp (gen) l) l)))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))))
  (label 49)
  (parent 31)
  (unrealized (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pval)
    (priv-stor locn) (x rndx) (y expt) (l rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l (rec w))) w))
  (precedes ((0 4) (2 0)) ((2 2) (4 0)) ((3 1) (1 0)) ((4 1) (3 0))
    ((5 1) (0 0)) ((5 2) (4 0)) ((6 1) (0 1)))
  (uniq-orig na l)
  (uniq-gen x)
  (absent (x l))
  (precur (4 0) (6 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((5 1) (0 0)) ((5 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul l (rec w))) w)) (exp (gen) l)
    (0 1))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l)) (send (cat (exp (gen) l) l)))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) (mul l (rec w))) w))
      (send (cat (exp (gen) (mul l (rec w))) w))))
  (label 50)
  (parent 31)
  (unrealized (0 3) (6 0))
  (comment "5 in cohort - 5 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0)) ((4 1) (0 0))
    ((5 1) (1 0)) ((6 1) (5 0)) ((7 2) (0 1)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((7 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 8 7 ltx-gen 3) (exp (gen) l-0) (0 1))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 51)
  (parent 32)
  (unrealized (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l (rec w))) w))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0)) ((4 1) (0 0))
    ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (3 0)) ((7 2) (6 0))
    ((8 1) (0 1)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l-0))
  (precur (8 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of self-0 (exp (gen) l))
    (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((7 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul l (rec w))) w)) (exp (gen) l)
    (0 1))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l-0)))
      (stor priv-stor (cat pt-0 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) (mul l (rec w))) w))
      (send (cat (exp (gen) (mul l (rec w))) w))))
  (label 52)
  (parent 32)
  (unrealized (0 3) (8 0))
  (comment "6 in cohort - 6 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (b self b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval) (gb base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (l x-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor-1)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (exp (gen) x-0) (mul (rec x-0) l-0)))
  (defstrand init 3 (na na-0) (a b) (b b-0) (gb gb)
    (priv-stor priv-stor-1) (l l-0) (x x-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (7 0)) ((4 1) (3 0))
    ((4 1) (9 0)) ((5 1) (0 0)) ((6 1) (1 0)) ((7 1) (6 0))
    ((8 1) (7 0)) ((9 2) (8 0)))
  (uniq-orig na na-0 l l-0)
  (uniq-gen x x-0)
  (absent (x l) (x-0 l-0))
  (precur (8 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltb-of b-0 gb)
    (ltb-of b (exp (gen) l-0)) (ltx-of b l-0) (ltx-of self l))
  (leads-to ((4 1) (3 0)) ((4 1) (9 0)) ((5 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 10 4 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-6 (pv a l-1))) (9 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-0 (pv self l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor-1 (cat pt-2 (pv b l-0)))
      (stor priv-stor-1 (cat pt-3 "nil")) (send l-0))
    ((load priv-stor-1 (cat pt-4 ignore))
      (stor priv-stor-1 (cat pt-2 (pv b l-0))))
    ((load priv-stor-0 (cat pt-5 ignore-0))
      (stor priv-stor-0 (cat pt-0 (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (exp (gen) x-0) (mul (rec x-0) l-0)))
      (send (cat (exp (gen) x-0) (mul (rec x-0) l-0))))
    ((load priv-stor-1 (cat pt-2 (pv b l-0)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 b b-0 (exp (gen) x-0)))))
  (label 53)
  (parent 33)
  (unrealized (0 0) (0 1) (0 3) (7 0) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (b self b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval) (gb base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (l x-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor-1)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (exp (gen) x-0) (mul l (rec x-0))))
  (defstrand init 3 (na na-0) (a self) (b b-0) (gb gb)
    (priv-stor priv-stor-0) (l l-0) (x x-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (7 0)) ((4 1) (3 0))
    ((5 1) (0 0)) ((5 1) (9 0)) ((6 1) (1 0)) ((7 1) (6 0))
    ((8 1) (7 0)) ((9 2) (8 0)))
  (uniq-orig na na-0 l l-0)
  (uniq-gen x x-0)
  (absent (x l-0) (x-0 l-0))
  (precur (8 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of b-0 gb)
    (ltb-of b (exp (gen) l)) (ltx-of b l) (ltx-of self l-0))
  (leads-to ((4 1) (3 0)) ((5 1) (2 0)) ((5 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 10 5 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-6 (pv a l-1))) (9 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-0 (pv self l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor-1 (cat pt-2 (pv b l)))
      (stor priv-stor-1 (cat pt-3 "nil")) (send l))
    ((load priv-stor-1 (cat pt-4 ignore))
      (stor priv-stor-1 (cat pt-2 (pv b l))))
    ((load priv-stor-0 (cat pt-5 ignore-0))
      (stor priv-stor-0 (cat pt-0 (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (exp (gen) x-0) (mul l (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l (rec x-0)))))
    ((load priv-stor-0 (cat pt-0 (pv self l-0)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 self b-0 (exp (gen) x-0)))))
  (label 54)
  (parent 33)
  (unrealized (0 0) (0 1) (0 3) (7 0) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (b self a b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval) (gb base)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn) (x rndx)
    (y expt) (l l-0 x-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor-1)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
  (defstrand init 3 (na na-0) (a a) (b b-0) (gb gb)
    (priv-stor priv-stor-2) (l l-1) (x x-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self a)
    (priv-stor priv-stor-2) (l l-1))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (7 0)) ((4 1) (3 0))
    ((5 1) (0 0)) ((6 1) (1 0)) ((7 1) (6 0)) ((8 1) (7 0))
    ((9 2) (8 0)) ((10 1) (9 0)))
  (uniq-orig na na-0 l l-0 l-1)
  (uniq-gen x x-0)
  (absent (x l) (x-0 l-1))
  (precur (8 0))
  (gen-st (pv b l-0) (pv self l) (pv a l-1))
  (facts (ltb-of self (exp (gen) l)) (ltb-of a (exp (gen) l-1))
    (ltb-of b-0 gb) (ltb-of b (exp (gen) l-0)) (ltx-of a l-1)
    (ltx-of b l-0) (ltx-of self l))
  (leads-to ((4 1) (3 0)) ((5 1) (2 0)) ((10 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-6 (pv a l-1))) (9 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-0 (pv self l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor-1 (cat pt-2 (pv b l-0)))
      (stor priv-stor-1 (cat pt-3 "nil")) (send l-0))
    ((load priv-stor-1 (cat pt-4 ignore))
      (stor priv-stor-1 (cat pt-2 (pv b l-0))))
    ((load priv-stor-0 (cat pt-5 ignore-0))
      (stor priv-stor-0 (cat pt-0 (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-0 (rec x-0)))))
    ((load priv-stor-2 (cat pt-6 (pv a l-1)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 a b-0 (exp (gen) x-0))))
    ((load priv-stor-2 (cat pt-7 ignore-1))
      (stor priv-stor-2 (cat pt-6 (pv a l-1)))))
  (label 55)
  (parent 33)
  (unrealized (0 0) (0 1) (0 3) (7 0) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor-1)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (gen) l-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (7 0)) ((3 2) (8 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((6 1) (1 0)) ((7 1) (6 0))
    ((8 1) (7 0)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (precur (8 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltb-of b (exp (gen) l-0))
    (ltx-of b l-0) (ltx-of self l))
  (leads-to ((4 1) (3 0)) ((5 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 9 3 ltx-disclose 3) l-0 (8 0)
    (ch-msg priv-stor-1 (cat pt-2 (pv b l-0))))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-0 (pv self l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor-1 (cat pt-2 (pv b l-0)))
      (stor priv-stor-1 (cat pt-3 "nil")) (send l-0))
    ((load priv-stor-1 (cat pt-4 ignore))
      (stor priv-stor-1 (cat pt-2 (pv b l-0))))
    ((load priv-stor-0 (cat pt-5 ignore-0))
      (stor priv-stor-0 (cat pt-0 (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0))))
  (label 56)
  (parent 35)
  (unrealized (0 0) (0 1) (0 3))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0)) ((4 1) (0 0))
    ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (6 0)) ((8 1) (3 0))
    ((8 2) (7 0)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l-0))
  (precur (7 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of self-0 (exp (gen) l))
    (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((8 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 9 4 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv self l-0))) (0 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l-0)))
      (stor priv-stor (cat pt-0 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 57)
  (parent 36)
  (unrealized (0 1) (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (b self a name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval) (ga gx base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (l y-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor-1)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (exp (gen) y-0) (mul (rec y-0) l-0)))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b) (ga ga) (gx gx)
    (priv-stor priv-stor-1) (l l-0) (y y-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (7 0)) ((4 1) (3 0))
    ((4 1) (9 0)) ((5 1) (0 0)) ((6 1) (1 0)) ((7 1) (6 0))
    ((8 1) (7 0)) ((9 3) (8 0)))
  (uniq-orig na nb-0 l l-0)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l-0))
  (precur (8 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltb-of a ga)
    (ltb-of b (exp (gen) l-0)) (ltx-of b l-0) (ltx-of self l))
  (leads-to ((4 1) (3 0)) ((4 1) (9 0)) ((5 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 10 4 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-6 (pv b-0 l-1))) (9 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-0 (pv self l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor-1 (cat pt-2 (pv b l-0)))
      (stor priv-stor-1 (cat pt-3 "nil")) (send l-0))
    ((load priv-stor-1 (cat pt-4 ignore))
      (stor priv-stor-1 (cat pt-2 (pv b l-0))))
    ((load priv-stor-0 (cat pt-5 ignore-0))
      (stor priv-stor-0 (cat pt-0 (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (exp (gen) y-0) (mul (rec y-0) l-0)))
      (send (cat (exp (gen) y-0) (mul (rec y-0) l-0))))
    ((load priv-stor-1 (cat pt-2 (pv b l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a b (hash (exp ga l-0) (exp gx y-0)))))))
  (label 58)
  (parent 37)
  (unrealized (0 0) (0 1) (0 3) (7 0) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (b self a name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval) (ga gx base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (l y-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor-1)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (exp (gen) y-0) (mul l (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b self) (ga ga) (gx gx)
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (7 0)) ((4 1) (3 0))
    ((5 1) (0 0)) ((5 1) (9 0)) ((6 1) (1 0)) ((7 1) (6 0))
    ((8 1) (7 0)) ((9 3) (8 0)))
  (uniq-orig na nb-0 l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l-0))
  (precur (8 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of a ga)
    (ltb-of b (exp (gen) l)) (ltx-of b l) (ltx-of self l-0))
  (leads-to ((4 1) (3 0)) ((5 1) (2 0)) ((5 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 10 5 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-6 (pv b-0 l-1))) (9 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-0 (pv self l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor-1 (cat pt-2 (pv b l)))
      (stor priv-stor-1 (cat pt-3 "nil")) (send l))
    ((load priv-stor-1 (cat pt-4 ignore))
      (stor priv-stor-1 (cat pt-2 (pv b l))))
    ((load priv-stor-0 (cat pt-5 ignore-0))
      (stor priv-stor-0 (cat pt-0 (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (exp (gen) y-0) (mul l (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l (rec y-0)))))
    ((load priv-stor-0 (cat pt-0 (pv self l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a self gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a self (hash (exp ga l-0) (exp gx y-0)))))))
  (label 59)
  (parent 37)
  (unrealized (0 0) (0 1) (0 3) (7 0) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (b self a b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval) (ga gx base)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn) (x rndx)
    (y expt) (l l-0 y-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor-1)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b-0) (ga ga) (gx gx)
    (priv-stor priv-stor-2) (l l-1) (y y-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b-0)
    (priv-stor priv-stor-2) (l l-1))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (7 0)) ((4 1) (3 0))
    ((5 1) (0 0)) ((6 1) (1 0)) ((7 1) (6 0)) ((8 1) (7 0))
    ((9 3) (8 0)) ((10 1) (9 0)))
  (uniq-orig na nb-0 l l-0 l-1)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l-1))
  (precur (8 0))
  (gen-st (pv b l-0) (pv self l) (pv b-0 l-1))
  (facts (ltb-of self (exp (gen) l)) (ltb-of b-0 (exp (gen) l-1))
    (ltb-of a ga) (ltb-of b (exp (gen) l-0)) (ltx-of b-0 l-1)
    (ltx-of b l-0) (ltx-of self l))
  (leads-to ((4 1) (3 0)) ((5 1) (2 0)) ((10 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-6 (pv b-0 l-1))) (9 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-0 (pv self l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor-1 (cat pt-2 (pv b l-0)))
      (stor priv-stor-1 (cat pt-3 "nil")) (send l-0))
    ((load priv-stor-1 (cat pt-4 ignore))
      (stor priv-stor-1 (cat pt-2 (pv b l-0))))
    ((load priv-stor-0 (cat pt-5 ignore-0))
      (stor priv-stor-0 (cat pt-0 (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-0 (rec y-0)))))
    ((load priv-stor-2 (cat pt-6 (pv b-0 l-1)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b-0 gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a b-0 (hash (exp ga l-1) (exp gx y-0))))))
    ((load priv-stor-2 (cat pt-7 ignore-1))
      (stor priv-stor-2 (cat pt-6 (pv b-0 l-1)))))
  (label 60)
  (parent 37)
  (unrealized (0 0) (0 1) (0 3) (7 0) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0)) ((4 1) (1 0))
    ((5 1) (4 0)) ((6 1) (0 0)) ((6 2) (5 0)) ((7 2) (0 1)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((6 1) (0 0)) ((6 1) (2 0)) ((7 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 4 8 ltx-gen 3) (exp (gen) l-0) (0 1))
  (traces
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 61)
  (parent 40)
  (unrealized (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor-0) (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) (mul l (rec w))) w))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (6 0)) ((4 1) (3 0))
    ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (0 0)) ((7 2) (6 0))
    ((8 1) (0 1)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l-0))
  (precur (8 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of b (exp (gen) l))
    (ltx-of b l) (ltx-of self l-0))
  (leads-to ((4 1) (3 0)) ((7 1) (0 0)) ((7 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul l (rec w))) w)) (exp (gen) l)
    (0 1))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self l-0)))
      (stor priv-stor-0 (cat pt "nil")) (send l-0))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt-0 (pv b l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) (mul l (rec w))) w))
      (send (cat (exp (gen) (mul l (rec w))) w))))
  (label 62)
  (parent 40)
  (unrealized (0 3) (8 0))
  (comment "6 in cohort - 6 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (b self b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval) (gb base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (l x-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor-1)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (exp (gen) x-0) (mul l (rec x-0))))
  (defstrand init 3 (na na-0) (a b) (b b-0) (gb gb)
    (priv-stor priv-stor-1) (l l-0) (x x-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (7 0)) ((4 1) (3 0))
    ((4 1) (9 0)) ((5 1) (0 0)) ((6 1) (1 0)) ((7 1) (6 0))
    ((8 1) (7 0)) ((9 2) (8 0)))
  (uniq-orig na na-0 l l-0)
  (uniq-gen x x-0)
  (absent (x l) (x-0 l-0))
  (precur (8 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltb-of b-0 gb)
    (ltb-of b (exp (gen) l-0)) (ltx-of b l-0) (ltx-of self l))
  (leads-to ((4 1) (3 0)) ((4 1) (9 0)) ((5 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 10 4 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-6 (pv a l-1))) (9 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-0 (pv self l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor-1 (cat pt-2 (pv b l-0)))
      (stor priv-stor-1 (cat pt-3 "nil")) (send l-0))
    ((load priv-stor-1 (cat pt-4 ignore))
      (stor priv-stor-1 (cat pt-2 (pv b l-0))))
    ((load priv-stor-0 (cat pt-5 ignore-0))
      (stor priv-stor-0 (cat pt-0 (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (exp (gen) x-0) (mul l (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l (rec x-0)))))
    ((load priv-stor-1 (cat pt-2 (pv b l-0)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 b b-0 (exp (gen) x-0)))))
  (label 63)
  (parent 41)
  (unrealized (0 0) (0 1) (0 3) (7 0) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (b self b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval) (gb base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (l x-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor-1)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (exp (gen) x-0) (mul (rec x-0) l-0)))
  (defstrand init 3 (na na-0) (a self) (b b-0) (gb gb)
    (priv-stor priv-stor-0) (l l-0) (x x-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (7 0)) ((4 1) (3 0))
    ((5 1) (0 0)) ((5 1) (9 0)) ((6 1) (1 0)) ((7 1) (6 0))
    ((8 1) (7 0)) ((9 2) (8 0)))
  (uniq-orig na na-0 l l-0)
  (uniq-gen x x-0)
  (absent (x l-0) (x-0 l-0))
  (precur (8 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of b-0 gb)
    (ltb-of b (exp (gen) l)) (ltx-of b l) (ltx-of self l-0))
  (leads-to ((4 1) (3 0)) ((5 1) (2 0)) ((5 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 10 5 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-6 (pv a l-1))) (9 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-0 (pv self l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor-1 (cat pt-2 (pv b l)))
      (stor priv-stor-1 (cat pt-3 "nil")) (send l))
    ((load priv-stor-1 (cat pt-4 ignore))
      (stor priv-stor-1 (cat pt-2 (pv b l))))
    ((load priv-stor-0 (cat pt-5 ignore-0))
      (stor priv-stor-0 (cat pt-0 (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (exp (gen) x-0) (mul (rec x-0) l-0)))
      (send (cat (exp (gen) x-0) (mul (rec x-0) l-0))))
    ((load priv-stor-0 (cat pt-0 (pv self l-0)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 self b-0 (exp (gen) x-0)))))
  (label 64)
  (parent 41)
  (unrealized (0 0) (0 1) (0 3) (7 0) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (b self a b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval) (gb base)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn) (x rndx)
    (y expt) (l l-0 x-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor-1)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
  (defstrand init 3 (na na-0) (a a) (b b-0) (gb gb)
    (priv-stor priv-stor-2) (l l-1) (x x-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self a)
    (priv-stor priv-stor-2) (l l-1))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (7 0)) ((4 1) (3 0))
    ((5 1) (0 0)) ((6 1) (1 0)) ((7 1) (6 0)) ((8 1) (7 0))
    ((9 2) (8 0)) ((10 1) (9 0)))
  (uniq-orig na na-0 l l-0 l-1)
  (uniq-gen x x-0)
  (absent (x l-0) (x-0 l-1))
  (precur (8 0))
  (gen-st (pv b l) (pv self l-0) (pv a l-1))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of a (exp (gen) l-1))
    (ltb-of b-0 gb) (ltb-of b (exp (gen) l)) (ltx-of a l-1) (ltx-of b l)
    (ltx-of self l-0))
  (leads-to ((4 1) (3 0)) ((5 1) (2 0)) ((10 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-6 (pv a l-1))) (9 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-0 (pv self l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor-1 (cat pt-2 (pv b l)))
      (stor priv-stor-1 (cat pt-3 "nil")) (send l))
    ((load priv-stor-1 (cat pt-4 ignore))
      (stor priv-stor-1 (cat pt-2 (pv b l))))
    ((load priv-stor-0 (cat pt-5 ignore-0))
      (stor priv-stor-0 (cat pt-0 (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-0 (rec x-0)))))
    ((load priv-stor-2 (cat pt-6 (pv a l-1)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 a b-0 (exp (gen) x-0))))
    ((load priv-stor-2 (cat pt-7 ignore-1))
      (stor priv-stor-2 (cat pt-6 (pv a l-1)))))
  (label 65)
  (parent 41)
  (unrealized (0 0) (0 1) (0 3) (7 0) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor-1)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (gen) l-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (8 0)) ((3 2) (7 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((6 1) (1 0)) ((7 1) (6 0))
    ((8 1) (7 0)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l-0))
  (precur (8 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of b (exp (gen) l))
    (ltx-of b l) (ltx-of self l-0))
  (leads-to ((4 1) (3 0)) ((5 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 9 2 ltx-disclose 3) l-0 (8 0)
    (ch-msg priv-stor-0 (cat pt-0 (pv self l-0))))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-0 (pv self l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor-1 (cat pt-2 (pv b l)))
      (stor priv-stor-1 (cat pt-3 "nil")) (send l))
    ((load priv-stor-1 (cat pt-4 ignore))
      (stor priv-stor-1 (cat pt-2 (pv b l))))
    ((load priv-stor-0 (cat pt-5 ignore-0))
      (stor priv-stor-0 (cat pt-0 (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0))))
  (label 66)
  (parent 43)
  (unrealized (0 0) (0 1) (0 3))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (b self a name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval) (ga gx base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (l y-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor-1)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (exp (gen) y-0) (mul l (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b) (ga ga) (gx gx)
    (priv-stor priv-stor-1) (l l-0) (y y-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (7 0)) ((4 1) (3 0))
    ((4 1) (9 0)) ((5 1) (0 0)) ((6 1) (1 0)) ((7 1) (6 0))
    ((8 1) (7 0)) ((9 3) (8 0)))
  (uniq-orig na nb-0 l l-0)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l-0))
  (precur (8 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltb-of a ga)
    (ltb-of b (exp (gen) l-0)) (ltx-of b l-0) (ltx-of self l))
  (leads-to ((4 1) (3 0)) ((4 1) (9 0)) ((5 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 10 4 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-6 (pv b-0 l-1))) (9 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-0 (pv self l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor-1 (cat pt-2 (pv b l-0)))
      (stor priv-stor-1 (cat pt-3 "nil")) (send l-0))
    ((load priv-stor-1 (cat pt-4 ignore))
      (stor priv-stor-1 (cat pt-2 (pv b l-0))))
    ((load priv-stor-0 (cat pt-5 ignore-0))
      (stor priv-stor-0 (cat pt-0 (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (exp (gen) y-0) (mul l (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l (rec y-0)))))
    ((load priv-stor-1 (cat pt-2 (pv b l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a b (hash (exp ga l-0) (exp gx y-0)))))))
  (label 67)
  (parent 45)
  (unrealized (0 0) (0 1) (0 3) (7 0) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (b self a name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval) (ga gx base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (l y-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor-1)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (exp (gen) y-0) (mul (rec y-0) l-0)))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b self) (ga ga) (gx gx)
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (7 0)) ((4 1) (3 0))
    ((5 1) (0 0)) ((5 1) (9 0)) ((6 1) (1 0)) ((7 1) (6 0))
    ((8 1) (7 0)) ((9 3) (8 0)))
  (uniq-orig na nb-0 l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l-0))
  (precur (8 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of a ga)
    (ltb-of b (exp (gen) l)) (ltx-of b l) (ltx-of self l-0))
  (leads-to ((4 1) (3 0)) ((5 1) (2 0)) ((5 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 10 5 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-6 (pv b-0 l-1))) (9 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-0 (pv self l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor-1 (cat pt-2 (pv b l)))
      (stor priv-stor-1 (cat pt-3 "nil")) (send l))
    ((load priv-stor-1 (cat pt-4 ignore))
      (stor priv-stor-1 (cat pt-2 (pv b l))))
    ((load priv-stor-0 (cat pt-5 ignore-0))
      (stor priv-stor-0 (cat pt-0 (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (exp (gen) y-0) (mul (rec y-0) l-0)))
      (send (cat (exp (gen) y-0) (mul (rec y-0) l-0))))
    ((load priv-stor-0 (cat pt-0 (pv self l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a self gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a self (hash (exp ga l-0) (exp gx y-0)))))))
  (label 68)
  (parent 45)
  (unrealized (0 0) (0 1) (0 3) (7 0) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (b self a b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval) (ga gx base)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn) (x rndx)
    (y expt) (l l-0 y-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor-1)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b-0) (ga ga) (gx gx)
    (priv-stor priv-stor-2) (l l-1) (y y-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b-0)
    (priv-stor priv-stor-2) (l l-1))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (7 0)) ((4 1) (3 0))
    ((5 1) (0 0)) ((6 1) (1 0)) ((7 1) (6 0)) ((8 1) (7 0))
    ((9 3) (8 0)) ((10 1) (9 0)))
  (uniq-orig na nb-0 l l-0 l-1)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l-1))
  (precur (8 0))
  (gen-st (pv b l) (pv self l-0) (pv b-0 l-1))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of b-0 (exp (gen) l-1))
    (ltb-of a ga) (ltb-of b (exp (gen) l)) (ltx-of b-0 l-1) (ltx-of b l)
    (ltx-of self l-0))
  (leads-to ((4 1) (3 0)) ((5 1) (2 0)) ((10 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-6 (pv b-0 l-1))) (9 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-0 (pv self l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor-1 (cat pt-2 (pv b l)))
      (stor priv-stor-1 (cat pt-3 "nil")) (send l))
    ((load priv-stor-1 (cat pt-4 ignore))
      (stor priv-stor-1 (cat pt-2 (pv b l))))
    ((load priv-stor-0 (cat pt-5 ignore-0))
      (stor priv-stor-0 (cat pt-0 (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-0 (rec y-0)))))
    ((load priv-stor-2 (cat pt-6 (pv b-0 l-1)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b-0 gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a b-0 (hash (exp ga l-1) (exp gx y-0))))))
    ((load priv-stor-2 (cat pt-7 ignore-1))
      (stor priv-stor-2 (cat pt-6 (pv b-0 l-1)))))
  (label 69)
  (parent 45)
  (unrealized (0 0) (0 1) (0 3) (7 0) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor-0) (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (6 0)) ((4 1) (3 0))
    ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (6 0)) ((8 1) (0 0))
    ((8 2) (7 0)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l-0))
  (precur (7 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of b (exp (gen) l))
    (ltx-of b l) (ltx-of self l-0))
  (leads-to ((4 1) (3 0)) ((8 1) (0 0)) ((8 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 9 8 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv self l-0))) (0 0))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self l-0)))
      (stor priv-stor-0 (cat pt "nil")) (send l-0))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt-0 (pv b l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 70)
  (parent 46)
  (unrealized (0 1) (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pval)
    (priv-stor locn) (x rndx) (y expt) (l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (gen) (mul l l)))
  (deflistener l)
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (precedes ((0 4) (2 0)) ((2 2) (5 0)) ((3 1) (1 0)) ((4 1) (3 0))
    ((5 1) (4 0)) ((6 1) (0 0)) ((6 2) (0 1)))
  (uniq-orig na l)
  (uniq-gen x)
  (absent (x l))
  (precur (4 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((6 1) (0 0)) ((6 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 3 7 ltx-gen 3) (exp (gen) l) (0 1))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (gen) (mul l l))) (send (cat (gen) (mul l l))))
    ((recv l) (send l))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))))
  (label 71)
  (parent 48)
  (unrealized (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pval)
    (priv-stor locn) (x rndx) (y expt) (l rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (gen) (mul l l)))
  (deflistener l)
  (deflistener (cat (exp (gen) (mul l (rec w))) w))
  (precedes ((0 4) (2 0)) ((2 2) (6 0)) ((3 1) (0 0)) ((4 1) (1 0))
    ((5 1) (4 0)) ((6 1) (5 0)) ((7 1) (0 1)))
  (uniq-orig na l)
  (uniq-gen x)
  (absent (x l))
  (precur (5 0) (7 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((3 1) (0 0)) ((3 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul l (rec w))) w)) (exp (gen) l)
    (0 1))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (gen) (mul l l))) (send (cat (gen) (mul l l))))
    ((recv l) (send l))
    ((recv (cat (exp (gen) (mul l (rec w))) w))
      (send (cat (exp (gen) (mul l (rec w))) w))))
  (label 72)
  (parent 48)
  (unrealized (0 3) (7 0))
  (comment "5 in cohort - 5 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pt-2 pval)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (y-0 l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self) (ga (exp (gen) l))
    (gx (exp (gen) (mul x y (rec y-0)))) (priv-stor priv-stor-0) (l l)
    (y y-0))
  (precedes ((0 2) (6 2)) ((0 4) (2 0)) ((2 2) (4 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((5 1) (6 0)) ((5 2) (0 1))
    ((6 3) (0 3)))
  (uniq-orig na nb l)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l))
  (precur (4 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((5 1) (0 0)) ((5 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    gen-st-ltx-disclose-0 ltx-of-fn trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation encryption-test (added-strand resp 4)
    (enc na nb self self
      (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))) (0 3))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l)) (send (cat (exp (gen) l) l)))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))))
  (label 73)
  (parent 49)
  (unrealized (6 0) (6 1))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pval)
    (priv-stor locn) (x rndx) (y expt) (l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (precedes ((0 2) (6 0)) ((0 4) (2 0)) ((2 2) (4 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((5 2) (0 1)) ((6 1) (0 3)))
  (uniq-orig na l)
  (uniq-gen x)
  (absent (x l))
  (precur (4 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((5 1) (0 0)) ((5 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation encryption-test
    (added-listener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
    (enc na nb self self
      (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))) (0 3))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l)) (send (cat (exp (gen) l) l)))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
  (label 74)
  (parent 49)
  (unrealized (6 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb na-0 data) (self a b name)
    (pt pt-0 pt-1 pt-2 pval) (gb base) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 x-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor)
    (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l-0))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
  (defstrand init 3 (na na-0) (a a) (b b) (gb gb)
    (priv-stor priv-stor-0) (l l) (x x-0))
  (precedes ((0 4) (2 0)) ((2 2) (4 0)) ((3 1) (1 0)) ((4 1) (3 0))
    ((5 1) (0 0)) ((5 2) (4 0)) ((6 1) (0 1)) ((7 2) (6 0)))
  (uniq-orig na na-0 l-0)
  (uniq-gen x x-0)
  (absent (x l-0) (x-0 l))
  (precur (4 0) (6 0))
  (gen-st (pv self l-0) (pv a l))
  (facts (ltb-of a (exp (gen) l)) (ltb-of b gb)
    (ltb-of self (exp (gen) l-0)) (ltx-of a l) (ltx-of self l-0))
  (leads-to ((5 1) (0 0)) ((5 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    gen-st-ltx-disclose-0 ltx-ltb trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand init 3) (exp (gen) x-0) (6 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l-0)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l-0)))
      (stor priv-stor (cat pt "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l-0)) (send (cat (exp (gen) l-0) l-0)))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-0 (rec x-0)))))
    ((load priv-stor-0 (cat pt-2 (pv a l)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 a b (exp (gen) x-0)))))
  (label 75)
  (parent 50)
  (unrealized (0 1) (0 3) (6 0) (7 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pval)
    (priv-stor locn) (x rndx) (y expt) (l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (gen) l))
  (precedes ((0 4) (2 0)) ((2 2) (4 0)) ((3 1) (1 0)) ((4 1) (3 0))
    ((5 1) (0 0)) ((5 1) (6 0)) ((5 2) (4 0)) ((6 1) (0 1)))
  (uniq-orig na l)
  (uniq-gen x)
  (absent (x l))
  (precur (4 0) (6 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((5 1) (0 0)) ((5 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (contracted (l-0 l) (w l)) (gen) (6 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l)) (send (cat (exp (gen) l) l)))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (gen) l)) (send (cat (gen) l))))
  (label 76)
  (parent 50)
  (unrealized (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb na-0 nb-0 data) (self a b name)
    (pt pt-0 pt-1 pt-2 pval) (ga gx base) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 y-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor)
    (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l-0))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b) (ga ga) (gx gx)
    (priv-stor priv-stor-0) (l l) (y y-0))
  (precedes ((0 4) (2 0)) ((2 2) (4 0)) ((3 1) (1 0)) ((4 1) (3 0))
    ((5 1) (0 0)) ((5 2) (4 0)) ((6 1) (0 1)) ((7 3) (6 0)))
  (uniq-orig na nb-0 l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (4 0) (6 0))
  (gen-st (pv self l-0) (pv b l))
  (facts (ltb-of b (exp (gen) l)) (ltb-of a ga)
    (ltb-of self (exp (gen) l-0)) (ltx-of b l) (ltx-of self l-0))
  (leads-to ((5 1) (0 0)) ((5 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    gen-st-ltx-disclose-0 ltx-ltb trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand resp 4) (exp (gen) y-0) (6 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l-0)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l-0)))
      (stor priv-stor (cat pt "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l-0)) (send (cat (exp (gen) l-0) l-0)))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-0 (rec y-0)))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a b (hash (exp ga l) (exp gx y-0)))))))
  (label 77)
  (parent 50)
  (unrealized (0 1) (0 3) (6 0) (7 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pval)
    (priv-stor locn) (x rndx) (y expt) (l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) l) (one)))
  (precedes ((0 4) (2 0)) ((2 2) (4 0)) ((3 1) (1 0)) ((4 1) (3 0))
    ((5 1) (0 0)) ((5 2) (6 0)) ((6 1) (0 1)))
  (uniq-orig na l)
  (uniq-gen x)
  (absent (x l))
  (precur (4 0) (6 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((5 1) (0 0)) ((5 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 7 5 ltx-gen 3) (exp (gen) l-0) (6 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l)) (send (cat (exp (gen) l) l)))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one)))))
  (label 78)
  (parent 50)
  (unrealized (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) l-0) (mul l (rec l-0))))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 4) (2 0)) ((2 2) (4 0)) ((3 1) (1 0)) ((4 1) (3 0))
    ((5 1) (0 0)) ((5 2) (4 0)) ((6 1) (0 1)) ((7 2) (6 0)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (precur (4 0) (6 0))
  (gen-st (pv self l))
  (facts (ltb-of self-0 (exp (gen) l-0)) (ltb-of self (exp (gen) l))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((5 1) (0 0)) ((5 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-ltx-gen-ltx-of0 fact-resp-ltb-of0
    ltx-ltb trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 3) (exp (gen) l-0) (6 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l)) (send (cat (exp (gen) l) l)))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l-0) (mul l (rec l-0))))
      (send (cat (exp (gen) l-0) (mul l (rec l-0)))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-3 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 79)
  (parent 50)
  (unrealized (0 1) (0 3) (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (l y-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-1) (l l-0) (y y-0))
  (precedes ((0 2) (8 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (8 0))
    ((7 2) (0 1)) ((8 3) (0 3)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l-0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((7 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    gen-st-ltx-disclose-0 ltx-of-fn trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation encryption-test (added-strand resp 4)
    (enc na nb self self-0
      (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))) (0 3))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-1 (cat pt-5 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))))
  (label 80)
  (parent 51)
  (unrealized (8 0) (8 1))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (precedes ((0 2) (8 0)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0)) ((7 2) (0 1))
    ((8 1) (0 3)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((7 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation encryption-test
    (added-listener
      (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
    (enc na nb self self-0
      (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))) (0 3))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
  (label 81)
  (parent 51)
  (unrealized (8 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data)
    (self self-0 a b name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (ga gx base) (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx)
    (y expt) (l l-0 l-1 y-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-1)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-1))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-1) l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-1))
  (deflistener (cat (exp (gen) y-0) (mul l-1 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b) (ga ga) (gx gx)
    (priv-stor priv-stor-1) (l l-0) (y y-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0)) ((4 1) (0 0))
    ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (3 0)) ((7 2) (6 0))
    ((8 1) (0 1)) ((9 3) (8 0)))
  (uniq-orig na nb-0 l l-1)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l-0))
  (precur (8 0))
  (gen-st (pv self l) (pv self-0 l-1) (pv b l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of b (exp (gen) l-0))
    (ltb-of a ga) (ltb-of self-0 (exp (gen) l-1)) (ltx-of b l-0)
    (ltx-of self-0 l-1) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((7 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    gen-st-ltx-disclose-0 ltx-ltb trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand resp 4) (exp (gen) y-0) (8 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-1) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-1)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-1))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-1) l)) (send (cat (exp (gen) l-1) l)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-1)))
      (send
        (sig (body self-0 (exp (gen) l-1) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) y-0) (mul l-1 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-1 (rec y-0)))))
    ((load priv-stor-1 (cat pt-5 (pv b l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a b (hash (exp ga l-0) (exp gx y-0)))))))
  (label 82)
  (parent 52)
  (unrealized (0 1) (0 3) (8 0) (9 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (self self-0 a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval) (gb base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (l l-0 l-1 x-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-1)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-1))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-1) l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-1))
  (deflistener (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
  (defstrand init 3 (na na-0) (a a) (b b) (gb gb)
    (priv-stor priv-stor-1) (l l-0) (x x-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0)) ((4 1) (0 0))
    ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (3 0)) ((7 2) (6 0))
    ((8 1) (0 1)) ((9 2) (8 0)))
  (uniq-orig na na-0 l l-1)
  (uniq-gen x x-0)
  (absent (x l) (x-0 l-0))
  (precur (8 0))
  (gen-st (pv self l) (pv self-0 l-1) (pv a l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of a (exp (gen) l-0))
    (ltb-of b gb) (ltb-of self-0 (exp (gen) l-1)) (ltx-of a l-0)
    (ltx-of self-0 l-1) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((7 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    gen-st-ltx-disclose-0 ltx-ltb trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand init 3) (exp (gen) x-0) (8 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-1) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-1)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-1))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-1) l)) (send (cat (exp (gen) l-1) l)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-1)))
      (send
        (sig (body self-0 (exp (gen) l-1) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-1 (rec x-0)))))
    ((load priv-stor-1 (cat pt-5 (pv a l-0)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 a b (exp (gen) x-0)))))
  (label 83)
  (parent 52)
  (unrealized (0 1) (0 3) (8 0) (9 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (gen) l-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0)) ((4 1) (0 0))
    ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (8 0)) ((7 2) (6 0))
    ((8 1) (0 1)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (precur (8 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((7 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (contracted (l-1 l-0) (w l-0)) (gen) (8 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0))))
  (label 84)
  (parent 52)
  (unrealized (0 3) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self-0) (b self)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) l-0) (mul l (rec l-0))))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (5 0)) ((4 1) (1 0))
    ((5 1) (4 0)) ((6 1) (3 0)) ((6 2) (5 0)) ((7 1) (0 1))
    ((8 1) (0 0)) ((8 2) (7 0)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l-0))
  (precur (7 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self-0 (exp (gen) l-0)) (ltb-of self (exp (gen) l))
    (ltx-of self l) (ltx-of self-0 l-0))
  (leads-to ((6 1) (3 0)) ((8 1) (0 0)) ((8 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 4 9 ltx-gen 3) (exp (gen) l-1) (8 0))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self-0 self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt "nil")) (send l-0))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l-0) (mul l (rec l-0))))
      (send (cat (exp (gen) l-0) (mul l (rec l-0)))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 85)
  (parent 52)
  (unrealized (0 1) (0 3) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l-0) (one)))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0)) ((4 1) (0 0))
    ((5 1) (1 0)) ((6 1) (5 0)) ((7 2) (8 0)) ((8 1) (0 1)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (precur (8 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((7 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 9 7 ltx-gen 3) (exp (gen) l-1) (8 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one)))))
  (label 86)
  (parent 52)
  (unrealized (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data)
    (self self-0 self-1 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self-1)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0)) ((4 1) (0 0))
    ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (3 0)) ((7 2) (6 0))
    ((8 1) (0 1)) ((9 2) (8 0)))
  (uniq-orig na l l-0 l-1)
  (uniq-gen x)
  (absent (x l))
  (precur (8 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-1 (exp (gen) l-1))
    (ltb-of self-0 (exp (gen) l-0)) (ltx-of self-1 l-1)
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((7 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-ltx-gen-ltx-of0 fact-resp-ltb-of0
    ltx-ltb trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 3) (exp (gen) l-1) (8 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
      (send (cat (exp (gen) l-1) (mul l-0 (rec l-1)))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self-1 l-1)))
      (send
        (sig (body self-1 (exp (gen) l-1) (pubk "sig" self-1))
          (privk "sig" self-1)))))
  (label 87)
  (parent 52)
  (unrealized (0 1) (0 3) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor-0)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self self)
    (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (gen) l))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (7 0)) ((3 2) (8 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((6 1) (1 0)) ((7 1) (6 0))
    ((8 1) (7 0)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l-0))
  (precur (8 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of b (exp (gen) l))
    (ltx-of b l) (ltx-of self l-0))
  (leads-to ((4 1) (3 0)) ((5 1) (0 0)) ((5 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 9 5 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv self l-0))) (0 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l-0)))
      (stor priv-stor (cat pt-0 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-1 (pv b l)))
      (stor priv-stor-0 (cat pt-2 "nil")) (send l))
    ((load priv-stor-0 (cat pt-3 ignore))
      (stor priv-stor-0 (cat pt-1 (pv b l))))
    ((load priv-stor (cat pt-4 ignore-0))
      (stor priv-stor (cat pt (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (gen) l)) (send (cat (gen) l))))
  (label 88)
  (parent 56)
  (unrealized (0 1) (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0)) ((4 1) (0 0))
    ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (6 0)) ((8 2) (0 1))
    ((8 2) (7 0)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (precur (7 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((8 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 9 8 ltx-gen 3) (exp (gen) l-0) (0 1))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 89)
  (parent 57)
  (unrealized (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l (rec w))) w))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0)) ((4 1) (0 0))
    ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (6 0)) ((8 1) (3 0))
    ((8 2) (7 0)) ((9 1) (0 1)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l-0))
  (precur (7 0) (9 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of self-0 (exp (gen) l))
    (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((8 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul l (rec w))) w)) (exp (gen) l)
    (0 1))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l-0)))
      (stor priv-stor (cat pt-0 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) (mul l (rec w))) w))
      (send (cat (exp (gen) (mul l (rec w))) w))))
  (label 90)
  (parent 57)
  (unrealized (0 3) (9 0))
  (comment "6 in cohort - 6 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (l y-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-1) (l l-0) (y y-0))
  (precedes ((0 2) (8 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (0 0)) ((6 2) (5 0))
    ((7 1) (8 0)) ((7 2) (0 1)) ((8 3) (0 3)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l-0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((6 1) (0 0)) ((6 1) (2 0)) ((7 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    gen-st-ltx-disclose-0 ltx-of-fn trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation encryption-test (added-strand resp 4)
    (enc na nb self self-0
      (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))) (0 3))
  (traces
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-1 (cat pt-5 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))))
  (label 91)
  (parent 61)
  (unrealized (8 0) (8 1))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (precedes ((0 2) (8 0)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (0 0)) ((6 2) (5 0))
    ((7 2) (0 1)) ((8 1) (0 3)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((6 1) (0 0)) ((6 1) (2 0)) ((7 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation encryption-test
    (added-listener
      (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
    (enc na nb self self-0
      (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))) (0 3))
  (traces
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
  (label 92)
  (parent 61)
  (unrealized (8 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data)
    (b self a b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (ga gx base) (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx)
    (y expt) (l l-0 l-1 y-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-1))
    (gy (exp (gen) y)) (priv-stor priv-stor-0) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l-1))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-1))
  (deflistener (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) y-0) (mul l-1 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b-0) (ga ga) (gx gx)
    (priv-stor priv-stor-1) (l l-0) (y y-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (6 0)) ((4 1) (3 0))
    ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (0 0)) ((7 2) (6 0))
    ((8 1) (0 1)) ((9 3) (8 0)))
  (uniq-orig na nb-0 l l-1)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l-0))
  (precur (8 0))
  (gen-st (pv b l-1) (pv self l) (pv b-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of b-0 (exp (gen) l-0))
    (ltb-of a ga) (ltb-of b (exp (gen) l-1)) (ltx-of b-0 l-0)
    (ltx-of b l-1) (ltx-of self l))
  (leads-to ((4 1) (3 0)) ((7 1) (0 0)) ((7 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    gen-st-ltx-disclose-0 ltx-ltb trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand resp 4) (exp (gen) y-0) (8 0))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self l)))
      (stor priv-stor-0 (cat pt "nil")) (send l))
    ((load priv-stor (cat pt-0 (pv b l-1)))
      (stor priv-stor (cat pt-1 "nil")) (send l-1))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt-0 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-1)) (send (cat (exp (gen) l) l-1)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y-0) (mul l-1 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-1 (rec y-0)))))
    ((load priv-stor-1 (cat pt-5 (pv b-0 l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b-0 gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a b-0 (hash (exp ga l-0) (exp gx y-0)))))))
  (label 93)
  (parent 62)
  (unrealized (0 1) (0 3) (8 0) (9 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (b self a b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval) (gb base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (l l-0 l-1 x-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-1))
    (gy (exp (gen) y)) (priv-stor priv-stor-0) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l-1))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-1))
  (deflistener (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
  (defstrand init 3 (na na-0) (a a) (b b-0) (gb gb)
    (priv-stor priv-stor-1) (l l-0) (x x-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (6 0)) ((4 1) (3 0))
    ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (0 0)) ((7 2) (6 0))
    ((8 1) (0 1)) ((9 2) (8 0)))
  (uniq-orig na na-0 l l-1)
  (uniq-gen x x-0)
  (absent (x l) (x-0 l-0))
  (precur (8 0))
  (gen-st (pv b l-1) (pv self l) (pv a l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of a (exp (gen) l-0))
    (ltb-of b-0 gb) (ltb-of b (exp (gen) l-1)) (ltx-of a l-0)
    (ltx-of b l-1) (ltx-of self l))
  (leads-to ((4 1) (3 0)) ((7 1) (0 0)) ((7 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    gen-st-ltx-disclose-0 ltx-ltb trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand init 3) (exp (gen) x-0) (8 0))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self l)))
      (stor priv-stor-0 (cat pt "nil")) (send l))
    ((load priv-stor (cat pt-0 (pv b l-1)))
      (stor priv-stor (cat pt-1 "nil")) (send l-1))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt-0 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-1)) (send (cat (exp (gen) l) l-1)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-1 (rec x-0)))))
    ((load priv-stor-1 (cat pt-5 (pv a l-0)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 a b-0 (exp (gen) x-0)))))
  (label 94)
  (parent 62)
  (unrealized (0 1) (0 3) (8 0) (9 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) y)) (priv-stor priv-stor-0) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (gen) l-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (6 0)) ((4 1) (8 0))
    ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (0 0)) ((7 2) (6 0))
    ((8 1) (0 1)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (precur (8 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltb-of b (exp (gen) l-0))
    (ltx-of b l-0) (ltx-of self l))
  (leads-to ((4 1) (3 0)) ((7 1) (0 0)) ((7 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (contracted (l-1 l-0) (w l-0)) (gen) (8 0))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self l)))
      (stor priv-stor-0 (cat pt "nil")) (send l))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (stor priv-stor (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt-0 (pv b l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0))))
  (label 95)
  (parent 62)
  (unrealized (0 3) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0)) ((4 1) (1 0))
    ((5 1) (4 0)) ((6 1) (0 0)) ((6 2) (5 0)) ((7 1) (0 1))
    ((8 2) (7 0)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (precur (7 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((6 1) (0 0)) ((6 1) (2 0)) ((8 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 4 9 ltx-gen 3) (exp (gen) l-1) (8 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 96)
  (parent 62)
  (unrealized (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor-0) (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l-0) (mul l (rec l-0))))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (6 0)) ((4 1) (3 0))
    ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (0 0)) ((7 2) (8 0))
    ((8 1) (0 1)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l-0))
  (precur (8 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of b (exp (gen) l))
    (ltx-of b l) (ltx-of self l-0))
  (leads-to ((4 1) (3 0)) ((7 1) (0 0)) ((7 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 9 7 ltx-gen 3) (exp (gen) l-1) (8 0))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self l-0)))
      (stor priv-stor-0 (cat pt "nil")) (send l-0))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt-0 (pv b l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l-0) (mul l (rec l-0))))
      (send (cat (exp (gen) l-0) (mul l (rec l-0))))))
  (label 97)
  (parent 62)
  (unrealized (0 1) (0 3) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data)
    (b self self-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) y)) (priv-stor priv-stor-0) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self-0)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (6 0)) ((4 1) (3 0))
    ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (0 0)) ((7 2) (6 0))
    ((8 1) (0 1)) ((9 2) (8 0)))
  (uniq-orig na l l-0 l-1)
  (uniq-gen x)
  (absent (x l))
  (precur (8 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-1))
    (ltb-of b (exp (gen) l-0)) (ltx-of self-0 l-1) (ltx-of b l-0)
    (ltx-of self l))
  (leads-to ((4 1) (3 0)) ((7 1) (0 0)) ((7 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-ltx-gen-ltx-of0 fact-resp-ltb-of0
    ltx-ltb trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 3) (exp (gen) l-1) (8 0))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self l)))
      (stor priv-stor-0 (cat pt "nil")) (send l))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (stor priv-stor (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt-0 (pv b l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
      (send (cat (exp (gen) l-1) (mul l-0 (rec l-1)))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self-0 l-1)))
      (send
        (sig (body self-0 (exp (gen) l-1) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 98)
  (parent 62)
  (unrealized (0 1) (0 3) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor-0)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self self)
    (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (gen) l-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (8 0)) ((3 2) (7 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((6 1) (1 0)) ((7 1) (6 0))
    ((8 1) (7 0)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l-0))
  (precur (8 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of b (exp (gen) l))
    (ltx-of b l) (ltx-of self l-0))
  (leads-to ((4 1) (3 0)) ((5 1) (0 0)) ((5 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 9 5 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv self l-0))) (0 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l-0)))
      (stor priv-stor (cat pt-0 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-1 (pv b l)))
      (stor priv-stor-0 (cat pt-2 "nil")) (send l))
    ((load priv-stor-0 (cat pt-3 ignore))
      (stor priv-stor-0 (cat pt-1 (pv b l))))
    ((load priv-stor (cat pt-4 ignore-0))
      (stor priv-stor (cat pt (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0))))
  (label 99)
  (parent 66)
  (unrealized (0 1) (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0)) ((4 1) (1 0))
    ((5 1) (4 0)) ((6 1) (5 0)) ((7 1) (0 0)) ((7 2) (6 0))
    ((8 2) (0 1)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (precur (6 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((7 1) (0 0)) ((7 1) (2 0)) ((8 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 4 9 ltx-gen 3) (exp (gen) l-0) (0 1))
  (traces
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 100)
  (parent 70)
  (unrealized (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor-0) (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) (mul l (rec w))) w))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (6 0)) ((4 1) (3 0))
    ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (6 0)) ((8 1) (0 0))
    ((8 2) (7 0)) ((9 1) (0 1)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l-0))
  (precur (7 0) (9 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of b (exp (gen) l))
    (ltx-of b l) (ltx-of self l-0))
  (leads-to ((4 1) (3 0)) ((8 1) (0 0)) ((8 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul l (rec w))) w)) (exp (gen) l)
    (0 1))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self l-0)))
      (stor priv-stor-0 (cat pt "nil")) (send l-0))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt-0 (pv b l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) (mul l (rec w))) w))
      (send (cat (exp (gen) (mul l (rec w))) w))))
  (label 101)
  (parent 70)
  (unrealized (0 3) (9 0))
  (comment "6 in cohort - 6 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pt-2 pval)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (y-0 l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (gen) (mul l l)))
  (deflistener l)
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self) (ga (exp (gen) l))
    (gx (exp (gen) (mul x y (rec y-0)))) (priv-stor priv-stor-0) (l l)
    (y y-0))
  (precedes ((0 2) (7 2)) ((0 4) (2 0)) ((2 2) (5 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (4 0)) ((6 1) (0 0)) ((6 1) (7 0))
    ((6 2) (0 1)) ((7 3) (0 3)))
  (uniq-orig na nb l)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l))
  (precur (4 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((6 1) (0 0)) ((6 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    gen-st-ltx-disclose-0 ltx-of-fn trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation encryption-test (added-strand resp 4)
    (enc na nb self self
      (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))) (0 3))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (gen) (mul l l))) (send (cat (gen) (mul l l))))
    ((recv l) (send l))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))))
  (label 102)
  (parent 71)
  (unrealized (7 0) (7 1))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pval)
    (priv-stor locn) (x rndx) (y expt) (l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (gen) (mul l l)))
  (deflistener l)
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (precedes ((0 2) (7 0)) ((0 4) (2 0)) ((2 2) (5 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (4 0)) ((6 1) (0 0)) ((6 2) (0 1))
    ((7 1) (0 3)))
  (uniq-orig na l)
  (uniq-gen x)
  (absent (x l))
  (precur (4 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((6 1) (0 0)) ((6 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation encryption-test
    (added-listener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
    (enc na nb self self
      (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))) (0 3))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (gen) (mul l l))) (send (cat (gen) (mul l l))))
    ((recv l) (send l))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
  (label 103)
  (parent 71)
  (unrealized (7 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb na-0 data) (self a b name)
    (pt pt-0 pt-1 pt-2 pval) (gb base) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 x-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor)
    (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (gen) (mul l-0 l-0)))
  (deflistener l-0)
  (deflistener (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
  (defstrand init 3 (na na-0) (a a) (b b) (gb gb)
    (priv-stor priv-stor-0) (l l) (x x-0))
  (precedes ((0 4) (2 0)) ((2 2) (6 0)) ((3 1) (0 0)) ((4 1) (1 0))
    ((5 1) (4 0)) ((6 1) (5 0)) ((7 1) (0 1)) ((8 2) (7 0)))
  (uniq-orig na na-0 l-0)
  (uniq-gen x x-0)
  (absent (x l-0) (x-0 l))
  (precur (5 0) (7 0))
  (gen-st (pv self l-0) (pv a l))
  (facts (ltb-of a (exp (gen) l)) (ltb-of b gb)
    (ltb-of self (exp (gen) l-0)) (ltx-of a l) (ltx-of self l-0))
  (leads-to ((3 1) (0 0)) ((3 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    gen-st-ltx-disclose-0 ltx-ltb trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand init 3) (exp (gen) x-0) (7 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l-0)))
      (stor priv-stor (cat pt-0 "nil")) (send l-0))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt (pv self l-0))))
    ((recv (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (gen) (mul l-0 l-0))) (send (cat (gen) (mul l-0 l-0))))
    ((recv l-0) (send l-0))
    ((recv (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-0 (rec x-0)))))
    ((load priv-stor-0 (cat pt-2 (pv a l)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 a b (exp (gen) x-0)))))
  (label 104)
  (parent 72)
  (unrealized (0 1) (0 3) (7 0) (8 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pval)
    (priv-stor locn) (x rndx) (y expt) (l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (gen) (mul l l)))
  (deflistener l)
  (deflistener (cat (gen) l))
  (precedes ((0 4) (2 0)) ((2 2) (6 0)) ((3 1) (0 0)) ((3 1) (7 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (5 0)) ((7 1) (0 1)))
  (uniq-orig na l)
  (uniq-gen x)
  (absent (x l))
  (precur (5 0) (7 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((3 1) (0 0)) ((3 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (contracted (l-0 l) (w l)) (gen) (7 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (gen) (mul l l))) (send (cat (gen) (mul l l))))
    ((recv l) (send l)) ((recv (cat (gen) l)) (send (cat (gen) l))))
  (label 105)
  (parent 72)
  (unrealized (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb na-0 nb-0 data) (self a b name)
    (pt pt-0 pt-1 pt-2 pval) (ga gx base) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 y-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor)
    (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (gen) (mul l-0 l-0)))
  (deflistener l-0)
  (deflistener (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b) (ga ga) (gx gx)
    (priv-stor priv-stor-0) (l l) (y y-0))
  (precedes ((0 4) (2 0)) ((2 2) (6 0)) ((3 1) (0 0)) ((4 1) (1 0))
    ((5 1) (4 0)) ((6 1) (5 0)) ((7 1) (0 1)) ((8 3) (7 0)))
  (uniq-orig na nb-0 l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (5 0) (7 0))
  (gen-st (pv self l-0) (pv b l))
  (facts (ltb-of b (exp (gen) l)) (ltb-of a ga)
    (ltb-of self (exp (gen) l-0)) (ltx-of b l) (ltx-of self l-0))
  (leads-to ((3 1) (0 0)) ((3 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    gen-st-ltx-disclose-0 ltx-ltb trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand resp 4) (exp (gen) y-0) (7 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l-0)))
      (stor priv-stor (cat pt-0 "nil")) (send l-0))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt (pv self l-0))))
    ((recv (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (gen) (mul l-0 l-0))) (send (cat (gen) (mul l-0 l-0))))
    ((recv l-0) (send l-0))
    ((recv (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-0 (rec y-0)))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a b (hash (exp ga l) (exp gx y-0)))))))
  (label 106)
  (parent 72)
  (unrealized (0 1) (0 3) (7 0) (8 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pval)
    (priv-stor locn) (x rndx) (y expt) (l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (gen) (mul l l)))
  (deflistener l)
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (precedes ((0 4) (2 0)) ((2 2) (5 0)) ((3 1) (1 0)) ((4 1) (3 0))
    ((5 1) (4 0)) ((6 1) (0 1)) ((7 1) (0 0)) ((7 2) (6 0)))
  (uniq-orig na l)
  (uniq-gen x)
  (absent (x l))
  (precur (4 0) (6 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((7 1) (0 0)) ((7 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 3 8 ltx-gen 3) (exp (gen) l-0) (7 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (gen) (mul l l))) (send (cat (gen) (mul l l))))
    ((recv l) (send l))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))))
  (label 107)
  (parent 72)
  (unrealized (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (gen) (mul l l)))
  (deflistener l)
  (deflistener (cat (exp (gen) l-0) (mul l (rec l-0))))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 4) (2 0)) ((2 2) (6 0)) ((3 1) (0 0)) ((4 1) (1 0))
    ((5 1) (4 0)) ((6 1) (5 0)) ((7 1) (0 1)) ((8 2) (7 0)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (precur (5 0) (7 0))
  (gen-st (pv self l))
  (facts (ltb-of self-0 (exp (gen) l-0)) (ltb-of self (exp (gen) l))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((3 1) (0 0)) ((3 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-ltx-gen-ltx-of0 fact-resp-ltb-of0
    ltx-ltb trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 3) (exp (gen) l-0) (7 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (gen) (mul l l))) (send (cat (gen) (mul l l))))
    ((recv l) (send l))
    ((recv (cat (exp (gen) l-0) (mul l (rec l-0))))
      (send (cat (exp (gen) l-0) (mul l (rec l-0)))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-3 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 108)
  (parent 72)
  (unrealized (0 1) (0 3) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pval)
    (priv-stor locn) (x rndx) (y expt) (y-0 l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self) (ga (exp (gen) l))
    (gx (exp (gen) (mul x y (rec y-0)))) (priv-stor priv-stor) (l l)
    (y y-0))
  (precedes ((0 2) (6 2)) ((0 4) (2 0)) ((2 2) (4 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((5 1) (6 0)) ((5 2) (0 1))
    ((6 3) (0 3)))
  (uniq-orig na nb l)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l))
  (precur (4 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((5 1) (0 0)) ((5 1) (2 0)) ((5 1) (6 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 7 5 ltx-gen 2)
    (ch-msg priv-stor-0 (cat pt-2 (pv self l))) (6 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l)) (send (cat (exp (gen) l) l)))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))))
  (label 109)
  (parent 73)
  (unrealized (6 1))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pval)
    (priv-stor locn) (x rndx) (y expt) (l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (precedes ((0 2) (7 0)) ((0 4) (2 0)) ((2 2) (4 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((5 2) (0 1)) ((6 1) (0 3))
    ((7 1) (6 0)))
  (uniq-orig na l)
  (uniq-gen x)
  (absent (x l))
  (precur (4 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((5 1) (0 0)) ((5 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation encryption-test
    (added-listener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
    (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))) (6 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l)) (send (cat (exp (gen) l) l)))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
  (label 110)
  (parent 74)
  (unrealized (7 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb na-0 data) (self b name)
    (pt pt-0 pt-1 pval) (gb base) (priv-stor locn) (x rndx) (y expt)
    (x-0 l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) x-0) (mul (rec x-0) l)))
  (defstrand init 3 (na na-0) (a self) (b b) (gb gb)
    (priv-stor priv-stor) (l l) (x x-0))
  (precedes ((0 4) (2 0)) ((2 2) (4 0)) ((3 1) (1 0)) ((4 1) (3 0))
    ((5 1) (0 0)) ((5 1) (7 0)) ((5 2) (4 0)) ((6 1) (0 1))
    ((7 2) (6 0)))
  (uniq-orig na na-0 l)
  (uniq-gen x x-0)
  (absent (x l) (x-0 l))
  (precur (4 0) (6 0))
  (gen-st (pv self l))
  (facts (ltb-of b gb) (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((5 1) (0 0)) ((5 1) (2 0)) ((5 1) (7 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 8 5 ltx-gen 2)
    (ch-msg priv-stor-0 (cat pt-2 (pv a l-0))) (7 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l)) (send (cat (exp (gen) l) l)))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) x-0) (mul (rec x-0) l)))
      (send (cat (exp (gen) x-0) (mul (rec x-0) l))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 self b (exp (gen) x-0)))))
  (label 111)
  (parent 75)
  (unrealized (0 1) (0 3) (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (self a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (gb base) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l x-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) x-0) (mul l (rec x-0))))
  (defstrand init 3 (na na-0) (a a) (b b) (gb gb)
    (priv-stor priv-stor-0) (l l-0) (x x-0))
  (defstrand ltx-gen 2 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 4) (2 0)) ((2 2) (4 0)) ((3 1) (1 0)) ((4 1) (3 0))
    ((5 1) (0 0)) ((5 2) (4 0)) ((6 1) (0 1)) ((7 2) (6 0))
    ((8 1) (7 0)))
  (uniq-orig na na-0 l l-0)
  (uniq-gen x x-0)
  (absent (x l) (x-0 l-0))
  (precur (4 0) (6 0))
  (gen-st (pv self l) (pv a l-0))
  (facts (ltb-of a (exp (gen) l-0)) (ltb-of b gb)
    (ltb-of self (exp (gen) l)) (ltx-of a l-0) (ltx-of self l))
  (leads-to ((5 1) (0 0)) ((5 1) (2 0)) ((8 1) (7 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-0 (cat pt-2 (pv a l-0))) (7 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l)) (send (cat (exp (gen) l) l)))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) x-0) (mul l (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l (rec x-0)))))
    ((load priv-stor-0 (cat pt-2 (pv a l-0)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 a b (exp (gen) x-0))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l-0)))))
  (label 112)
  (parent 75)
  (unrealized (0 1) (0 3) (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb na-0 nb-0 data) (self a name)
    (pt pt-0 pt-1 pval) (ga gx base) (priv-stor locn) (x rndx) (y expt)
    (y-0 l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) y-0) (mul (rec y-0) l)))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b self) (ga ga) (gx gx)
    (priv-stor priv-stor) (l l) (y y-0))
  (precedes ((0 4) (2 0)) ((2 2) (4 0)) ((3 1) (1 0)) ((4 1) (3 0))
    ((5 1) (0 0)) ((5 1) (7 0)) ((5 2) (4 0)) ((6 1) (0 1))
    ((7 3) (6 0)))
  (uniq-orig na nb-0 l)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l))
  (precur (4 0) (6 0))
  (gen-st (pv self l))
  (facts (ltb-of a ga) (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((5 1) (0 0)) ((5 1) (2 0)) ((5 1) (7 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 8 5 ltx-gen 2)
    (ch-msg priv-stor-0 (cat pt-2 (pv b l-0))) (7 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l)) (send (cat (exp (gen) l) l)))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y-0) (mul (rec y-0) l)))
      (send (cat (exp (gen) y-0) (mul (rec y-0) l))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a self gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a self (hash (exp ga l) (exp gx y-0)))))))
  (label 113)
  (parent 77)
  (unrealized (0 1) (0 3) (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (self a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (ga gx base)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (l y-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) y-0) (mul l (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b) (ga ga) (gx gx)
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 4) (2 0)) ((2 2) (4 0)) ((3 1) (1 0)) ((4 1) (3 0))
    ((5 1) (0 0)) ((5 2) (4 0)) ((6 1) (0 1)) ((7 3) (6 0))
    ((8 1) (7 0)))
  (uniq-orig na nb-0 l l-0)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l-0))
  (precur (4 0) (6 0))
  (gen-st (pv self l) (pv b l-0))
  (facts (ltb-of b (exp (gen) l-0)) (ltb-of a ga)
    (ltb-of self (exp (gen) l)) (ltx-of b l-0) (ltx-of self l))
  (leads-to ((5 1) (0 0)) ((5 1) (2 0)) ((8 1) (7 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-0 (cat pt-2 (pv b l-0))) (7 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l)) (send (cat (exp (gen) l) l)))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y-0) (mul l (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l (rec y-0)))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a b (hash (exp ga l-0) (exp gx y-0))))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))))
  (label 114)
  (parent 77)
  (unrealized (0 1) (0 3) (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pt-2 pval)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (y-0 l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self) (ga (exp (gen) l))
    (gx (exp (gen) (mul x y (rec y-0)))) (priv-stor priv-stor-0) (l l)
    (y y-0))
  (precedes ((0 2) (7 2)) ((0 4) (2 0)) ((2 2) (4 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((5 1) (7 0)) ((5 2) (6 0))
    ((6 1) (0 1)) ((7 3) (0 3)))
  (uniq-orig na nb l)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l))
  (precur (4 0) (6 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((5 1) (0 0)) ((5 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    gen-st-ltx-disclose-0 ltx-of-fn trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation encryption-test (added-strand resp 4)
    (enc na nb self self
      (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))) (0 3))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l)) (send (cat (exp (gen) l) l)))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))))
  (label 115)
  (parent 78)
  (unrealized (7 0) (7 1))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pval)
    (priv-stor locn) (x rndx) (y expt) (l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) l) (one)))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (precedes ((0 2) (7 0)) ((0 4) (2 0)) ((2 2) (4 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((5 2) (6 0)) ((6 1) (0 1))
    ((7 1) (0 3)))
  (uniq-orig na l)
  (uniq-gen x)
  (absent (x l))
  (precur (4 0) (6 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((5 1) (0 0)) ((5 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation encryption-test
    (added-listener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
    (enc na nb self self
      (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))) (0 3))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l)) (send (cat (exp (gen) l) l)))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
  (label 116)
  (parent 78)
  (unrealized (7 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l y-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (precedes ((0 2) (8 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (8 0))
    ((7 2) (0 1)) ((8 3) (0 3)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l-0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((7 1) (3 0)) ((7 1) (8 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 9 7 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv self-0 l-0))) (8 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))))
  (label 117)
  (parent 80)
  (unrealized (8 1))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (precedes ((0 2) (9 0)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0)) ((7 2) (0 1))
    ((8 1) (0 3)) ((9 1) (8 0)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((7 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation encryption-test
    (added-listener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))) (8 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
  (label 118)
  (parent 81)
  (unrealized (9 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data)
    (self self-0 a name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (ga gx base)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (l y-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) y-0) (mul l (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b self) (ga ga) (gx gx)
    (priv-stor priv-stor) (l l-0) (y y-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0)) ((4 1) (0 0))
    ((4 1) (9 0)) ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (3 0))
    ((7 2) (6 0)) ((8 1) (0 1)) ((9 3) (8 0)))
  (uniq-orig na nb-0 l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l-0))
  (precur (8 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of a ga)
    (ltb-of self-0 (exp (gen) l)) (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((4 1) (9 0)) ((7 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 10 4 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv b l-1))) (9 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l-0)))
      (stor priv-stor (cat pt-0 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) y-0) (mul l (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l (rec y-0)))))
    ((load priv-stor (cat pt (pv self l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a self gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a self (hash (exp ga l-0) (exp gx y-0)))))))
  (label 119)
  (parent 82)
  (unrealized (0 1) (0 3) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data)
    (self self-0 a name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (ga gx base)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (l y-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) y-0) (mul (rec y-0) l-0)))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b self-0) (ga ga) (gx gx)
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0)) ((4 1) (0 0))
    ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (9 0)) ((7 2) (6 0))
    ((8 1) (0 1)) ((9 3) (8 0)))
  (uniq-orig na nb-0 l l-0)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l-0))
  (precur (8 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of a ga)
    (ltb-of self-0 (exp (gen) l-0)) (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((7 1) (3 0)) ((7 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 10 7 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv b l-1))) (9 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) y-0) (mul (rec y-0) l-0)))
      (send (cat (exp (gen) y-0) (mul (rec y-0) l-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a self-0 gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a self-0 (hash (exp ga l-0) (exp gx y-0)))))))
  (label 120)
  (parent 82)
  (unrealized (0 1) (0 3) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (self self-0 a b name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (ga gx base) (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx)
    (y expt) (l l-0 y-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b) (ga ga) (gx gx)
    (priv-stor priv-stor-1) (l l-1) (y y-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0)) ((4 1) (0 0))
    ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (3 0)) ((7 2) (6 0))
    ((8 1) (0 1)) ((9 3) (8 0)) ((10 1) (9 0)))
  (uniq-orig na nb-0 l l-0 l-1)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l-1))
  (precur (8 0))
  (gen-st (pv self l) (pv self-0 l-0) (pv b l-1))
  (facts (ltb-of self (exp (gen) l)) (ltb-of b (exp (gen) l-1))
    (ltb-of a ga) (ltb-of self-0 (exp (gen) l-0)) (ltx-of b l-1)
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((7 1) (3 0)) ((10 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv b l-1))) (9 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-0 (rec y-0)))))
    ((load priv-stor-1 (cat pt-5 (pv b l-1)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a b (hash (exp ga l-1) (exp gx y-0))))))
    ((load priv-stor-1 (cat pt-6 ignore-1))
      (stor priv-stor-1 (cat pt-5 (pv b l-1)))))
  (label 121)
  (parent 82)
  (unrealized (0 1) (0 3) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (self self-0 b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (gb base)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (l x-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) x-0) (mul l (rec x-0))))
  (defstrand init 3 (na na-0) (a self) (b b) (gb gb)
    (priv-stor priv-stor) (l l-0) (x x-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0)) ((4 1) (0 0))
    ((4 1) (9 0)) ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (3 0))
    ((7 2) (6 0)) ((8 1) (0 1)) ((9 2) (8 0)))
  (uniq-orig na na-0 l l-0)
  (uniq-gen x x-0)
  (absent (x l-0) (x-0 l-0))
  (precur (8 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of b gb)
    (ltb-of self-0 (exp (gen) l)) (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((4 1) (9 0)) ((7 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 10 4 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv a l-1))) (9 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l-0)))
      (stor priv-stor (cat pt-0 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) x-0) (mul l (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l (rec x-0)))))
    ((load priv-stor (cat pt (pv self l-0)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 self b (exp (gen) x-0)))))
  (label 122)
  (parent 83)
  (unrealized (0 1) (0 3) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (self self-0 b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (gb base)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (l x-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) x-0) (mul (rec x-0) l-0)))
  (defstrand init 3 (na na-0) (a self-0) (b b) (gb gb)
    (priv-stor priv-stor-0) (l l-0) (x x-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0)) ((4 1) (0 0))
    ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (9 0)) ((7 2) (6 0))
    ((8 1) (0 1)) ((9 2) (8 0)))
  (uniq-orig na na-0 l l-0)
  (uniq-gen x x-0)
  (absent (x l) (x-0 l-0))
  (precur (8 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of b gb)
    (ltb-of self-0 (exp (gen) l-0)) (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((7 1) (3 0)) ((7 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 10 7 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv a l-1))) (9 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) x-0) (mul (rec x-0) l-0)))
      (send (cat (exp (gen) x-0) (mul (rec x-0) l-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 self-0 b (exp (gen) x-0)))))
  (label 123)
  (parent 83)
  (unrealized (0 1) (0 3) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (self self-0 a b name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (gb base) (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (l l-0 x-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
  (defstrand init 3 (na na-0) (a a) (b b) (gb gb)
    (priv-stor priv-stor-1) (l l-1) (x x-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self a)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0)) ((4 1) (0 0))
    ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (3 0)) ((7 2) (6 0))
    ((8 1) (0 1)) ((9 2) (8 0)) ((10 1) (9 0)))
  (uniq-orig na na-0 l l-0 l-1)
  (uniq-gen x x-0)
  (absent (x l) (x-0 l-1))
  (precur (8 0))
  (gen-st (pv self l) (pv self-0 l-0) (pv a l-1))
  (facts (ltb-of self (exp (gen) l)) (ltb-of a (exp (gen) l-1))
    (ltb-of b gb) (ltb-of self-0 (exp (gen) l-0)) (ltx-of a l-1)
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((7 1) (3 0)) ((10 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv a l-1))) (9 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-0 (rec x-0)))))
    ((load priv-stor-1 (cat pt-5 (pv a l-1)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 a b (exp (gen) x-0))))
    ((load priv-stor-1 (cat pt-6 ignore-1))
      (stor priv-stor-1 (cat pt-5 (pv a l-1)))))
  (label 124)
  (parent 83)
  (unrealized (0 1) (0 3) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (l y-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-1) (l l-0) (y y-0))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (9 0))
    ((7 2) (8 0)) ((8 1) (0 1)) ((9 3) (0 3)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l-0))
  (precur (8 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((7 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    gen-st-ltx-disclose-0 ltx-of-fn trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation encryption-test (added-strand resp 4)
    (enc na nb self self-0
      (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))) (0 3))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-1 (cat pt-5 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))))
  (label 125)
  (parent 86)
  (unrealized (9 0) (9 1))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l-0) (one)))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (precedes ((0 2) (9 0)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0)) ((7 2) (8 0))
    ((8 1) (0 1)) ((9 1) (0 3)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (precur (8 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((7 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation encryption-test
    (added-listener
      (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
    (enc na nb self self-0
      (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))) (0 3))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
  (label 126)
  (parent 86)
  (unrealized (9 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0)) ((3 2) (7 0))
    ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (6 0))
    ((8 2) (0 1)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (precur (7 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((8 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 4 9 ltx-gen 3) (exp (gen) l-0) (0 1))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 127)
  (parent 88)
  (unrealized (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor-0)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self self)
    (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (gen) l))
  (deflistener (cat (exp (gen) (mul l (rec w))) w))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (7 0)) ((3 2) (8 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((6 1) (1 0)) ((7 1) (6 0))
    ((8 1) (7 0)) ((9 1) (0 1)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l-0))
  (precur (8 0) (9 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of b (exp (gen) l))
    (ltx-of b l) (ltx-of self l-0))
  (leads-to ((4 1) (3 0)) ((5 1) (0 0)) ((5 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul l (rec w))) w)) (exp (gen) l)
    (0 1))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l-0)))
      (stor priv-stor (cat pt-0 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-1 (pv b l)))
      (stor priv-stor-0 (cat pt-2 "nil")) (send l))
    ((load priv-stor-0 (cat pt-3 ignore))
      (stor priv-stor-0 (cat pt-1 (pv b l))))
    ((load priv-stor (cat pt-4 ignore-0))
      (stor priv-stor (cat pt (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (gen) l)) (send (cat (gen) l)))
    ((recv (cat (exp (gen) (mul l (rec w))) w))
      (send (cat (exp (gen) (mul l (rec w))) w))))
  (label 128)
  (parent 88)
  (unrealized (0 3) (9 0))
  (comment "6 in cohort - 6 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (l y-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-1) (l l-0) (y y-0))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (6 0))
    ((8 1) (9 0)) ((8 2) (0 1)) ((8 2) (7 0)) ((9 3) (0 3)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l-0))
  (precur (7 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((8 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    gen-st-ltx-disclose-0 ltx-of-fn trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation encryption-test (added-strand resp 4)
    (enc na nb self self-0
      (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))) (0 3))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-1 (cat pt-5 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))))
  (label 129)
  (parent 89)
  (unrealized (9 0) (9 1))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (precedes ((0 2) (9 0)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (6 0))
    ((8 2) (0 1)) ((8 2) (7 0)) ((9 1) (0 3)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (precur (7 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((8 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation encryption-test
    (added-listener
      (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
    (enc na nb self self-0
      (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))) (0 3))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
  (label 130)
  (parent 89)
  (unrealized (9 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data)
    (self self-0 a b name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (ga gx base) (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx)
    (y expt) (l l-0 l-1 y-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-1)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-1))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-1) l))
  (deflistener (cat (exp (gen) l-1) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-1))
  (deflistener (cat (exp (gen) y-0) (mul l-1 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b) (ga ga) (gx gx)
    (priv-stor priv-stor-1) (l l-0) (y y-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0)) ((4 1) (0 0))
    ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (6 0)) ((8 1) (3 0))
    ((8 2) (7 0)) ((9 1) (0 1)) ((10 3) (9 0)))
  (uniq-orig na nb-0 l l-1)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l-0))
  (precur (7 0) (9 0))
  (gen-st (pv self l) (pv self-0 l-1) (pv b l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of b (exp (gen) l-0))
    (ltb-of a ga) (ltb-of self-0 (exp (gen) l-1)) (ltx-of b l-0)
    (ltx-of self-0 l-1) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((8 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    gen-st-ltx-disclose-0 ltx-ltb trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand resp 4) (exp (gen) y-0) (9 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-1) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-1)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-1))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-1) l)) (send (cat (exp (gen) l-1) l)))
    ((recv (cat (exp (gen) l-1) (one)))
      (send (cat (exp (gen) l-1) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-1)))
      (send
        (sig (body self-0 (exp (gen) l-1) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) y-0) (mul l-1 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-1 (rec y-0)))))
    ((load priv-stor-1 (cat pt-5 (pv b l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a b (hash (exp ga l-0) (exp gx y-0)))))))
  (label 131)
  (parent 90)
  (unrealized (0 1) (0 3) (9 0) (10 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (self self-0 a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval) (gb base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (l l-0 l-1 x-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-1)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-1))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-1) l))
  (deflistener (cat (exp (gen) l-1) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-1))
  (deflistener (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
  (defstrand init 3 (na na-0) (a a) (b b) (gb gb)
    (priv-stor priv-stor-1) (l l-0) (x x-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0)) ((4 1) (0 0))
    ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (6 0)) ((8 1) (3 0))
    ((8 2) (7 0)) ((9 1) (0 1)) ((10 2) (9 0)))
  (uniq-orig na na-0 l l-1)
  (uniq-gen x x-0)
  (absent (x l) (x-0 l-0))
  (precur (7 0) (9 0))
  (gen-st (pv self l) (pv self-0 l-1) (pv a l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of a (exp (gen) l-0))
    (ltb-of b gb) (ltb-of self-0 (exp (gen) l-1)) (ltx-of a l-0)
    (ltx-of self-0 l-1) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((8 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    gen-st-ltx-disclose-0 ltx-ltb trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand init 3) (exp (gen) x-0) (9 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-1) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-1)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-1))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-1) l)) (send (cat (exp (gen) l-1) l)))
    ((recv (cat (exp (gen) l-1) (one)))
      (send (cat (exp (gen) l-1) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-1)))
      (send
        (sig (body self-0 (exp (gen) l-1) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-1 (rec x-0)))))
    ((load priv-stor-1 (cat pt-5 (pv a l-0)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 a b (exp (gen) x-0)))))
  (label 132)
  (parent 90)
  (unrealized (0 1) (0 3) (9 0) (10 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (gen) l-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0)) ((4 1) (0 0))
    ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (6 0)) ((8 1) (9 0))
    ((8 2) (7 0)) ((9 1) (0 1)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (precur (7 0) (9 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((8 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (contracted (l-1 l-0) (w l-0)) (gen) (9 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0))))
  (label 133)
  (parent 90)
  (unrealized (0 3) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self-0) (b self)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) l-0) (mul l (rec l-0))))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (5 0)) ((4 1) (1 0))
    ((5 1) (4 0)) ((6 1) (5 0)) ((7 1) (3 0)) ((7 2) (6 0))
    ((8 1) (0 1)) ((9 1) (0 0)) ((9 2) (8 0)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l-0))
  (precur (6 0) (8 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self-0 (exp (gen) l-0)) (ltb-of self (exp (gen) l))
    (ltx-of self l) (ltx-of self-0 l-0))
  (leads-to ((7 1) (3 0)) ((9 1) (0 0)) ((9 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 4 10 ltx-gen 3) (exp (gen) l-1)
    (9 0))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self-0 self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt "nil")) (send l-0))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l-0) (mul l (rec l-0))))
      (send (cat (exp (gen) l-0) (mul l (rec l-0)))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 134)
  (parent 90)
  (unrealized (0 1) (0 3) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l-0) (one)))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0)) ((4 1) (0 0))
    ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (6 0)) ((8 2) (7 0))
    ((8 2) (9 0)) ((9 1) (0 1)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (precur (7 0) (9 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((8 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 10 8 ltx-gen 3) (exp (gen) l-1)
    (9 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one)))))
  (label 135)
  (parent 90)
  (unrealized (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data)
    (self self-0 self-1 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self-1)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0)) ((4 1) (0 0))
    ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (6 0)) ((8 1) (3 0))
    ((8 2) (7 0)) ((9 1) (0 1)) ((10 2) (9 0)))
  (uniq-orig na l l-0 l-1)
  (uniq-gen x)
  (absent (x l))
  (precur (7 0) (9 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-1 (exp (gen) l-1))
    (ltb-of self-0 (exp (gen) l-0)) (ltx-of self-1 l-1)
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((8 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-ltx-gen-ltx-of0 fact-resp-ltb-of0
    ltx-ltb trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 3) (exp (gen) l-1) (9 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
      (send (cat (exp (gen) l-1) (mul l-0 (rec l-1)))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self-1 l-1)))
      (send
        (sig (body self-1 (exp (gen) l-1) (pubk "sig" self-1))
          (privk "sig" self-1)))))
  (label 136)
  (parent 90)
  (unrealized (0 1) (0 3) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l y-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (precedes ((0 2) (8 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (0 0)) ((6 2) (5 0))
    ((7 1) (8 0)) ((7 2) (0 1)) ((8 3) (0 3)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l-0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((6 1) (0 0)) ((6 1) (2 0)) ((7 1) (3 0)) ((7 1) (8 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 9 7 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv self-0 l-0))) (8 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))))
  (label 137)
  (parent 91)
  (unrealized (8 1))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (precedes ((0 2) (9 0)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (0 0)) ((6 2) (5 0))
    ((7 2) (0 1)) ((8 1) (0 3)) ((9 1) (8 0)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((6 1) (0 0)) ((6 1) (2 0)) ((7 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation encryption-test
    (added-listener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))) (8 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
  (label 138)
  (parent 92)
  (unrealized (9 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (b self a name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (ga gx base)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (l y-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) y)) (priv-stor priv-stor-0) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) y-0) (mul (rec y-0) l-0)))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b) (ga ga) (gx gx)
    (priv-stor priv-stor) (l l-0) (y y-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (6 0)) ((4 1) (9 0))
    ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (0 0)) ((7 2) (6 0))
    ((8 1) (0 1)) ((9 3) (8 0)))
  (uniq-orig na nb-0 l l-0)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l-0))
  (precur (8 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltb-of a ga)
    (ltb-of b (exp (gen) l-0)) (ltx-of b l-0) (ltx-of self l))
  (leads-to ((4 1) (3 0)) ((4 1) (9 0)) ((7 1) (0 0)) ((7 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 10 4 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv b-0 l-1))) (9 0))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self l)))
      (stor priv-stor-0 (cat pt "nil")) (send l))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (stor priv-stor (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt-0 (pv b l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y-0) (mul (rec y-0) l-0)))
      (send (cat (exp (gen) y-0) (mul (rec y-0) l-0))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a b (hash (exp ga l-0) (exp gx y-0)))))))
  (label 139)
  (parent 93)
  (unrealized (0 1) (0 3) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (b self a name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (ga gx base)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (l y-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor-0) (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) y-0) (mul l (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b self) (ga ga) (gx gx)
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (6 0)) ((4 1) (3 0))
    ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (0 0)) ((7 1) (9 0))
    ((7 2) (6 0)) ((8 1) (0 1)) ((9 3) (8 0)))
  (uniq-orig na nb-0 l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l-0))
  (precur (8 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of a ga)
    (ltb-of b (exp (gen) l)) (ltx-of b l) (ltx-of self l-0))
  (leads-to ((4 1) (3 0)) ((7 1) (0 0)) ((7 1) (2 0)) ((7 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 10 7 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv b-0 l-1))) (9 0))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self l-0)))
      (stor priv-stor-0 (cat pt "nil")) (send l-0))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt-0 (pv b l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y-0) (mul l (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l (rec y-0)))))
    ((load priv-stor-0 (cat pt-4 (pv self l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a self gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a self (hash (exp ga l-0) (exp gx y-0)))))))
  (label 140)
  (parent 93)
  (unrealized (0 1) (0 3) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (b self a b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (ga gx base) (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx)
    (y expt) (l l-0 y-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) y)) (priv-stor priv-stor-0) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b-0) (ga ga) (gx gx)
    (priv-stor priv-stor-1) (l l-1) (y y-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b-0)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (6 0)) ((4 1) (3 0))
    ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (0 0)) ((7 2) (6 0))
    ((8 1) (0 1)) ((9 3) (8 0)) ((10 1) (9 0)))
  (uniq-orig na nb-0 l l-0 l-1)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l-1))
  (precur (8 0))
  (gen-st (pv b l-0) (pv self l) (pv b-0 l-1))
  (facts (ltb-of self (exp (gen) l)) (ltb-of b-0 (exp (gen) l-1))
    (ltb-of a ga) (ltb-of b (exp (gen) l-0)) (ltx-of b-0 l-1)
    (ltx-of b l-0) (ltx-of self l))
  (leads-to ((4 1) (3 0)) ((7 1) (0 0)) ((7 1) (2 0)) ((10 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv b-0 l-1))) (9 0))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self l)))
      (stor priv-stor-0 (cat pt "nil")) (send l))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (stor priv-stor (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt-0 (pv b l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-0 (rec y-0)))))
    ((load priv-stor-1 (cat pt-5 (pv b-0 l-1)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b-0 gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a b-0 (hash (exp ga l-1) (exp gx y-0))))))
    ((load priv-stor-1 (cat pt-6 ignore-1))
      (stor priv-stor-1 (cat pt-5 (pv b-0 l-1)))))
  (label 141)
  (parent 93)
  (unrealized (0 1) (0 3) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (b self b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (gb base)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (l x-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) y)) (priv-stor priv-stor-0) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) x-0) (mul (rec x-0) l-0)))
  (defstrand init 3 (na na-0) (a b) (b b-0) (gb gb)
    (priv-stor priv-stor) (l l-0) (x x-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (6 0)) ((4 1) (9 0))
    ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (0 0)) ((7 2) (6 0))
    ((8 1) (0 1)) ((9 2) (8 0)))
  (uniq-orig na na-0 l l-0)
  (uniq-gen x x-0)
  (absent (x l) (x-0 l-0))
  (precur (8 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltb-of b-0 gb)
    (ltb-of b (exp (gen) l-0)) (ltx-of b l-0) (ltx-of self l))
  (leads-to ((4 1) (3 0)) ((4 1) (9 0)) ((7 1) (0 0)) ((7 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 10 4 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv a l-1))) (9 0))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self l)))
      (stor priv-stor-0 (cat pt "nil")) (send l))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (stor priv-stor (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt-0 (pv b l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) x-0) (mul (rec x-0) l-0)))
      (send (cat (exp (gen) x-0) (mul (rec x-0) l-0))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 b b-0 (exp (gen) x-0)))))
  (label 142)
  (parent 94)
  (unrealized (0 1) (0 3) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (b self b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (gb base)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (l x-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor-0) (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) x-0) (mul l (rec x-0))))
  (defstrand init 3 (na na-0) (a self) (b b-0) (gb gb)
    (priv-stor priv-stor-0) (l l-0) (x x-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (6 0)) ((4 1) (3 0))
    ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (0 0)) ((7 1) (9 0))
    ((7 2) (6 0)) ((8 1) (0 1)) ((9 2) (8 0)))
  (uniq-orig na na-0 l l-0)
  (uniq-gen x x-0)
  (absent (x l-0) (x-0 l-0))
  (precur (8 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of b-0 gb)
    (ltb-of b (exp (gen) l)) (ltx-of b l) (ltx-of self l-0))
  (leads-to ((4 1) (3 0)) ((7 1) (0 0)) ((7 1) (2 0)) ((7 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 10 7 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv a l-1))) (9 0))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self l-0)))
      (stor priv-stor-0 (cat pt "nil")) (send l-0))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt-0 (pv b l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) x-0) (mul l (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l (rec x-0)))))
    ((load priv-stor-0 (cat pt-4 (pv self l-0)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 self b-0 (exp (gen) x-0)))))
  (label 143)
  (parent 94)
  (unrealized (0 1) (0 3) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (b self a b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (gb base) (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (l l-0 x-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) y)) (priv-stor priv-stor-0) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
  (defstrand init 3 (na na-0) (a a) (b b-0) (gb gb)
    (priv-stor priv-stor-1) (l l-1) (x x-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self a)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (6 0)) ((4 1) (3 0))
    ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (0 0)) ((7 2) (6 0))
    ((8 1) (0 1)) ((9 2) (8 0)) ((10 1) (9 0)))
  (uniq-orig na na-0 l l-0 l-1)
  (uniq-gen x x-0)
  (absent (x l) (x-0 l-1))
  (precur (8 0))
  (gen-st (pv b l-0) (pv self l) (pv a l-1))
  (facts (ltb-of self (exp (gen) l)) (ltb-of a (exp (gen) l-1))
    (ltb-of b-0 gb) (ltb-of b (exp (gen) l-0)) (ltx-of a l-1)
    (ltx-of b l-0) (ltx-of self l))
  (leads-to ((4 1) (3 0)) ((7 1) (0 0)) ((7 1) (2 0)) ((10 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv a l-1))) (9 0))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self l)))
      (stor priv-stor-0 (cat pt "nil")) (send l))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (stor priv-stor (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt-0 (pv b l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-0 (rec x-0)))))
    ((load priv-stor-1 (cat pt-5 (pv a l-1)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 a b-0 (exp (gen) x-0))))
    ((load priv-stor-1 (cat pt-6 ignore-1))
      (stor priv-stor-1 (cat pt-5 (pv a l-1)))))
  (label 144)
  (parent 94)
  (unrealized (0 1) (0 3) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (l y-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-1) (l l-0) (y y-0))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (0 0)) ((6 2) (5 0))
    ((7 1) (0 1)) ((8 1) (9 0)) ((8 2) (7 0)) ((9 3) (0 3)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l-0))
  (precur (7 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((6 1) (0 0)) ((6 1) (2 0)) ((8 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    gen-st-ltx-disclose-0 ltx-of-fn trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation encryption-test (added-strand resp 4)
    (enc na nb self self-0
      (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))) (0 3))
  (traces
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-1 (cat pt-5 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))))
  (label 145)
  (parent 96)
  (unrealized (9 0) (9 1))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (precedes ((0 2) (9 0)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (0 0)) ((6 2) (5 0))
    ((7 1) (0 1)) ((8 2) (7 0)) ((9 1) (0 3)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (precur (7 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((6 1) (0 0)) ((6 1) (2 0)) ((8 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation encryption-test
    (added-listener
      (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
    (enc na nb self self-0
      (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))) (0 3))
  (traces
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
  (label 146)
  (parent 96)
  (unrealized (9 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (gen) l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (7 0)) ((3 2) (6 0))
    ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (6 0))
    ((8 2) (0 1)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (precur (7 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((8 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 4 9 ltx-gen 3) (exp (gen) l-0) (0 1))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (gen) l)) (send (cat (gen) l)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 147)
  (parent 99)
  (unrealized (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor-0)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self self)
    (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (gen) l-0))
  (deflistener (cat (exp (gen) (mul l (rec w))) w))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (8 0)) ((3 2) (7 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((6 1) (1 0)) ((7 1) (6 0))
    ((8 1) (7 0)) ((9 1) (0 1)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l-0))
  (precur (8 0) (9 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of b (exp (gen) l))
    (ltx-of b l) (ltx-of self l-0))
  (leads-to ((4 1) (3 0)) ((5 1) (0 0)) ((5 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul l (rec w))) w)) (exp (gen) l)
    (0 1))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l-0)))
      (stor priv-stor (cat pt-0 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-1 (pv b l)))
      (stor priv-stor-0 (cat pt-2 "nil")) (send l))
    ((load priv-stor-0 (cat pt-3 ignore))
      (stor priv-stor-0 (cat pt-1 (pv b l))))
    ((load priv-stor (cat pt-4 ignore-0))
      (stor priv-stor (cat pt (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((recv (cat (exp (gen) (mul l (rec w))) w))
      (send (cat (exp (gen) (mul l (rec w))) w))))
  (label 148)
  (parent 99)
  (unrealized (0 3) (9 0))
  (comment "6 in cohort - 6 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (l y-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-1) (l l-0) (y y-0))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (5 0)) ((7 1) (0 0))
    ((7 2) (6 0)) ((8 1) (9 0)) ((8 2) (0 1)) ((9 3) (0 3)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l-0))
  (precur (6 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((7 1) (0 0)) ((7 1) (2 0)) ((8 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    gen-st-ltx-disclose-0 ltx-of-fn trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation encryption-test (added-strand resp 4)
    (enc na nb self self-0
      (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))) (0 3))
  (traces
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-1 (cat pt-5 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))))
  (label 149)
  (parent 100)
  (unrealized (9 0) (9 1))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (precedes ((0 2) (9 0)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (5 0)) ((7 1) (0 0))
    ((7 2) (6 0)) ((8 2) (0 1)) ((9 1) (0 3)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (precur (6 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((7 1) (0 0)) ((7 1) (2 0)) ((8 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation encryption-test
    (added-listener
      (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
    (enc na nb self self-0
      (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))) (0 3))
  (traces
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
  (label 150)
  (parent 100)
  (unrealized (9 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data)
    (b self a b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (ga gx base) (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx)
    (y expt) (l l-0 l-1 y-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-1))
    (gy (exp (gen) y)) (priv-stor priv-stor-0) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l-1))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-1))
  (deflistener (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-1))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) y-0) (mul l-1 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b-0) (ga ga) (gx gx)
    (priv-stor priv-stor-1) (l l-0) (y y-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (6 0)) ((4 1) (3 0))
    ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (6 0)) ((8 1) (0 0))
    ((8 2) (7 0)) ((9 1) (0 1)) ((10 3) (9 0)))
  (uniq-orig na nb-0 l l-1)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l-0))
  (precur (7 0) (9 0))
  (gen-st (pv b l-1) (pv self l) (pv b-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of b-0 (exp (gen) l-0))
    (ltb-of a ga) (ltb-of b (exp (gen) l-1)) (ltx-of b-0 l-0)
    (ltx-of b l-1) (ltx-of self l))
  (leads-to ((4 1) (3 0)) ((8 1) (0 0)) ((8 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    gen-st-ltx-disclose-0 ltx-ltb trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand resp 4) (exp (gen) y-0) (9 0))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self l)))
      (stor priv-stor-0 (cat pt "nil")) (send l))
    ((load priv-stor (cat pt-0 (pv b l-1)))
      (stor priv-stor (cat pt-1 "nil")) (send l-1))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt-0 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-1)) (send (cat (exp (gen) l) l-1)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y-0) (mul l-1 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-1 (rec y-0)))))
    ((load priv-stor-1 (cat pt-5 (pv b-0 l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b-0 gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a b-0 (hash (exp ga l-0) (exp gx y-0)))))))
  (label 151)
  (parent 101)
  (unrealized (0 1) (0 3) (9 0) (10 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (b self a b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval) (gb base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (l l-0 l-1 x-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-1))
    (gy (exp (gen) y)) (priv-stor priv-stor-0) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l-1))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-1))
  (deflistener (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-1))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
  (defstrand init 3 (na na-0) (a a) (b b-0) (gb gb)
    (priv-stor priv-stor-1) (l l-0) (x x-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (6 0)) ((4 1) (3 0))
    ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (6 0)) ((8 1) (0 0))
    ((8 2) (7 0)) ((9 1) (0 1)) ((10 2) (9 0)))
  (uniq-orig na na-0 l l-1)
  (uniq-gen x x-0)
  (absent (x l) (x-0 l-0))
  (precur (7 0) (9 0))
  (gen-st (pv b l-1) (pv self l) (pv a l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of a (exp (gen) l-0))
    (ltb-of b-0 gb) (ltb-of b (exp (gen) l-1)) (ltx-of a l-0)
    (ltx-of b l-1) (ltx-of self l))
  (leads-to ((4 1) (3 0)) ((8 1) (0 0)) ((8 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    gen-st-ltx-disclose-0 ltx-ltb trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand init 3) (exp (gen) x-0) (9 0))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self l)))
      (stor priv-stor-0 (cat pt "nil")) (send l))
    ((load priv-stor (cat pt-0 (pv b l-1)))
      (stor priv-stor (cat pt-1 "nil")) (send l-1))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt-0 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-1)) (send (cat (exp (gen) l) l-1)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-1 (rec x-0)))))
    ((load priv-stor-1 (cat pt-5 (pv a l-0)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 a b-0 (exp (gen) x-0)))))
  (label 152)
  (parent 101)
  (unrealized (0 1) (0 3) (9 0) (10 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) y)) (priv-stor priv-stor-0) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (gen) l-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (6 0)) ((4 1) (9 0))
    ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (6 0)) ((8 1) (0 0))
    ((8 2) (7 0)) ((9 1) (0 1)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (precur (7 0) (9 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltb-of b (exp (gen) l-0))
    (ltx-of b l-0) (ltx-of self l))
  (leads-to ((4 1) (3 0)) ((8 1) (0 0)) ((8 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (contracted (l-1 l-0) (w l-0)) (gen) (9 0))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self l)))
      (stor priv-stor-0 (cat pt "nil")) (send l))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (stor priv-stor (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt-0 (pv b l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0))))
  (label 153)
  (parent 101)
  (unrealized (0 3) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0)) ((4 1) (1 0))
    ((5 1) (4 0)) ((6 1) (5 0)) ((7 1) (0 0)) ((7 2) (6 0))
    ((8 1) (0 1)) ((9 2) (8 0)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (precur (6 0) (8 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((7 1) (0 0)) ((7 1) (2 0)) ((9 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 4 10 ltx-gen 3) (exp (gen) l-1)
    (9 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 154)
  (parent 101)
  (unrealized (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor-0) (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l-0) (mul l (rec l-0))))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (6 0)) ((4 1) (3 0))
    ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (6 0)) ((8 1) (0 0))
    ((8 2) (7 0)) ((8 2) (9 0)) ((9 1) (0 1)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l-0))
  (precur (7 0) (9 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of b (exp (gen) l))
    (ltx-of b l) (ltx-of self l-0))
  (leads-to ((4 1) (3 0)) ((8 1) (0 0)) ((8 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 10 8 ltx-gen 3) (exp (gen) l-1)
    (9 0))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self l-0)))
      (stor priv-stor-0 (cat pt "nil")) (send l-0))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt-0 (pv b l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l-0) (mul l (rec l-0))))
      (send (cat (exp (gen) l-0) (mul l (rec l-0))))))
  (label 155)
  (parent 101)
  (unrealized (0 1) (0 3) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data)
    (b self self-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) y)) (priv-stor priv-stor-0) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self-0)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (6 0)) ((4 1) (3 0))
    ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (6 0)) ((8 1) (0 0))
    ((8 2) (7 0)) ((9 1) (0 1)) ((10 2) (9 0)))
  (uniq-orig na l l-0 l-1)
  (uniq-gen x)
  (absent (x l))
  (precur (7 0) (9 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-1))
    (ltb-of b (exp (gen) l-0)) (ltx-of self-0 l-1) (ltx-of b l-0)
    (ltx-of self l))
  (leads-to ((4 1) (3 0)) ((8 1) (0 0)) ((8 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-ltx-gen-ltx-of0 fact-resp-ltb-of0
    ltx-ltb trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 3) (exp (gen) l-1) (9 0))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self l)))
      (stor priv-stor-0 (cat pt "nil")) (send l))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (stor priv-stor (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt-0 (pv b l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
      (send (cat (exp (gen) l-1) (mul l-0 (rec l-1)))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self-0 l-1)))
      (send
        (sig (body self-0 (exp (gen) l-1) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 156)
  (parent 101)
  (unrealized (0 1) (0 3) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pval)
    (priv-stor locn) (x rndx) (y expt) (y-0 l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (gen) (mul l l)))
  (deflistener l)
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self) (ga (exp (gen) l))
    (gx (exp (gen) (mul x y (rec y-0)))) (priv-stor priv-stor) (l l)
    (y y-0))
  (precedes ((0 2) (7 2)) ((0 4) (2 0)) ((2 2) (5 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (4 0)) ((6 1) (0 0)) ((6 1) (7 0))
    ((6 2) (0 1)) ((7 3) (0 3)))
  (uniq-orig na nb l)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l))
  (precur (4 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((6 1) (0 0)) ((6 1) (2 0)) ((6 1) (7 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 8 6 ltx-gen 2)
    (ch-msg priv-stor-0 (cat pt-2 (pv self l))) (7 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (gen) (mul l l))) (send (cat (gen) (mul l l))))
    ((recv l) (send l))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))))
  (label 157)
  (parent 102)
  (unrealized (7 1))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pval)
    (priv-stor locn) (x rndx) (y expt) (l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (gen) (mul l l)))
  (deflistener l)
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (precedes ((0 2) (8 0)) ((0 4) (2 0)) ((2 2) (5 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (4 0)) ((6 1) (0 0)) ((6 2) (0 1))
    ((7 1) (0 3)) ((8 1) (7 0)))
  (uniq-orig na l)
  (uniq-gen x)
  (absent (x l))
  (precur (4 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((6 1) (0 0)) ((6 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation encryption-test
    (added-listener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
    (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))) (7 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (gen) (mul l l))) (send (cat (gen) (mul l l))))
    ((recv l) (send l))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
  (label 158)
  (parent 103)
  (unrealized (8 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb na-0 data) (self b name)
    (pt pt-0 pt-1 pval) (gb base) (priv-stor locn) (x rndx) (y expt)
    (x-0 l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (gen) (mul l l)))
  (deflistener l)
  (deflistener (cat (exp (gen) x-0) (mul (rec x-0) l)))
  (defstrand init 3 (na na-0) (a self) (b b) (gb gb)
    (priv-stor priv-stor) (l l) (x x-0))
  (precedes ((0 4) (2 0)) ((2 2) (6 0)) ((3 1) (0 0)) ((3 1) (8 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (5 0)) ((7 1) (0 1))
    ((8 2) (7 0)))
  (uniq-orig na na-0 l)
  (uniq-gen x x-0)
  (absent (x l) (x-0 l))
  (precur (5 0) (7 0))
  (gen-st (pv self l))
  (facts (ltb-of b gb) (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((3 1) (0 0)) ((3 1) (2 0)) ((3 1) (8 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 9 3 ltx-gen 2)
    (ch-msg priv-stor-0 (cat pt-2 (pv a l-0))) (8 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (gen) (mul l l))) (send (cat (gen) (mul l l))))
    ((recv l) (send l))
    ((recv (cat (exp (gen) x-0) (mul (rec x-0) l)))
      (send (cat (exp (gen) x-0) (mul (rec x-0) l))))
    ((load priv-stor (cat pt (pv self l)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 self b (exp (gen) x-0)))))
  (label 159)
  (parent 104)
  (unrealized (0 1) (0 3) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (self a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (gb base) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l x-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (gen) (mul l l)))
  (deflistener l)
  (deflistener (cat (exp (gen) x-0) (mul l (rec x-0))))
  (defstrand init 3 (na na-0) (a a) (b b) (gb gb)
    (priv-stor priv-stor-0) (l l-0) (x x-0))
  (defstrand ltx-gen 2 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 4) (2 0)) ((2 2) (6 0)) ((3 1) (0 0)) ((4 1) (1 0))
    ((5 1) (4 0)) ((6 1) (5 0)) ((7 1) (0 1)) ((8 2) (7 0))
    ((9 1) (8 0)))
  (uniq-orig na na-0 l l-0)
  (uniq-gen x x-0)
  (absent (x l) (x-0 l-0))
  (precur (5 0) (7 0))
  (gen-st (pv self l) (pv a l-0))
  (facts (ltb-of a (exp (gen) l-0)) (ltb-of b gb)
    (ltb-of self (exp (gen) l)) (ltx-of a l-0) (ltx-of self l))
  (leads-to ((3 1) (0 0)) ((3 1) (2 0)) ((9 1) (8 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-0 (cat pt-2 (pv a l-0))) (8 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (gen) (mul l l))) (send (cat (gen) (mul l l))))
    ((recv l) (send l))
    ((recv (cat (exp (gen) x-0) (mul l (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l (rec x-0)))))
    ((load priv-stor-0 (cat pt-2 (pv a l-0)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 a b (exp (gen) x-0))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l-0)))))
  (label 160)
  (parent 104)
  (unrealized (0 1) (0 3) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb na-0 nb-0 data) (self a name)
    (pt pt-0 pt-1 pval) (ga gx base) (priv-stor locn) (x rndx) (y expt)
    (y-0 l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (gen) (mul l l)))
  (deflistener l)
  (deflistener (cat (exp (gen) y-0) (mul (rec y-0) l)))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b self) (ga ga) (gx gx)
    (priv-stor priv-stor) (l l) (y y-0))
  (precedes ((0 4) (2 0)) ((2 2) (6 0)) ((3 1) (0 0)) ((3 1) (8 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (5 0)) ((7 1) (0 1))
    ((8 3) (7 0)))
  (uniq-orig na nb-0 l)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l))
  (precur (5 0) (7 0))
  (gen-st (pv self l))
  (facts (ltb-of a ga) (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((3 1) (0 0)) ((3 1) (2 0)) ((3 1) (8 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 9 3 ltx-gen 2)
    (ch-msg priv-stor-0 (cat pt-2 (pv b l-0))) (8 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (gen) (mul l l))) (send (cat (gen) (mul l l))))
    ((recv l) (send l))
    ((recv (cat (exp (gen) y-0) (mul (rec y-0) l)))
      (send (cat (exp (gen) y-0) (mul (rec y-0) l))))
    ((load priv-stor (cat pt (pv self l)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a self gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a self (hash (exp ga l) (exp gx y-0)))))))
  (label 161)
  (parent 106)
  (unrealized (0 1) (0 3) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (self a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (ga gx base)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (l y-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (gen) (mul l l)))
  (deflistener l)
  (deflistener (cat (exp (gen) y-0) (mul l (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b) (ga ga) (gx gx)
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 4) (2 0)) ((2 2) (6 0)) ((3 1) (0 0)) ((4 1) (1 0))
    ((5 1) (4 0)) ((6 1) (5 0)) ((7 1) (0 1)) ((8 3) (7 0))
    ((9 1) (8 0)))
  (uniq-orig na nb-0 l l-0)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l-0))
  (precur (5 0) (7 0))
  (gen-st (pv self l) (pv b l-0))
  (facts (ltb-of b (exp (gen) l-0)) (ltb-of a ga)
    (ltb-of self (exp (gen) l)) (ltx-of b l-0) (ltx-of self l))
  (leads-to ((3 1) (0 0)) ((3 1) (2 0)) ((9 1) (8 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-0 (cat pt-2 (pv b l-0))) (8 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (gen) (mul l l))) (send (cat (gen) (mul l l))))
    ((recv l) (send l))
    ((recv (cat (exp (gen) y-0) (mul l (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l (rec y-0)))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a b (hash (exp ga l-0) (exp gx y-0))))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))))
  (label 162)
  (parent 106)
  (unrealized (0 1) (0 3) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pt-2 pval)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (y-0 l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (gen) (mul l l)))
  (deflistener l)
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self) (ga (exp (gen) l))
    (gx (exp (gen) (mul x y (rec y-0)))) (priv-stor priv-stor-0) (l l)
    (y y-0))
  (precedes ((0 2) (8 2)) ((0 4) (2 0)) ((2 2) (5 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (4 0)) ((6 1) (0 1)) ((7 1) (0 0))
    ((7 1) (8 0)) ((7 2) (6 0)) ((8 3) (0 3)))
  (uniq-orig na nb l)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l))
  (precur (4 0) (6 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((7 1) (0 0)) ((7 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    gen-st-ltx-disclose-0 ltx-of-fn trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation encryption-test (added-strand resp 4)
    (enc na nb self self
      (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))) (0 3))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (gen) (mul l l))) (send (cat (gen) (mul l l))))
    ((recv l) (send l))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))))
  (label 163)
  (parent 107)
  (unrealized (8 0) (8 1))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pval)
    (priv-stor locn) (x rndx) (y expt) (l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (gen) (mul l l)))
  (deflistener l)
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (precedes ((0 2) (8 0)) ((0 4) (2 0)) ((2 2) (5 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (4 0)) ((6 1) (0 1)) ((7 1) (0 0))
    ((7 2) (6 0)) ((8 1) (0 3)))
  (uniq-orig na l)
  (uniq-gen x)
  (absent (x l))
  (precur (4 0) (6 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((7 1) (0 0)) ((7 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation encryption-test
    (added-listener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
    (enc na nb self self
      (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))) (0 3))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (gen) (mul l l))) (send (cat (gen) (mul l l))))
    ((recv l) (send l))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
  (label 164)
  (parent 107)
  (unrealized (8 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pval)
    (priv-stor locn) (x rndx) (y expt) (y-0 l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self) (ga (exp (gen) l))
    (gx (exp (gen) (mul x y (rec y-0)))) (priv-stor priv-stor) (l l)
    (y y-0))
  (precedes ((0 2) (6 2)) ((0 4) (2 0)) ((2 2) (4 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((5 1) (6 0)) ((5 2) (0 1))
    ((5 2) (6 1)) ((6 3) (0 3)))
  (uniq-orig na nb l)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l))
  (precur (4 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((5 1) (0 0)) ((5 1) (2 0)) ((5 1) (6 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 7 5 ltx-gen 3) (exp (gen) l) (6 1))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l)) (send (cat (exp (gen) l) l)))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))))
  (label 165)
  (parent 109)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pval)
    (priv-stor locn) (x rndx) (y expt) (y-0 l rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self) (ga (exp (gen) l))
    (gx (exp (gen) (mul x y (rec y-0)))) (priv-stor priv-stor) (l l)
    (y y-0))
  (deflistener (cat (exp (gen) (mul l (rec w))) w))
  (precedes ((0 2) (6 2)) ((0 4) (2 0)) ((2 2) (4 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((5 1) (6 0)) ((5 2) (0 1))
    ((6 3) (0 3)) ((7 1) (6 1)))
  (uniq-orig na nb l)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l))
  (precur (4 0) (7 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((5 1) (0 0)) ((5 1) (2 0)) ((5 1) (6 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul l (rec w))) w)) (exp (gen) l)
    (6 1))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l)) (send (cat (exp (gen) l) l)))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) (mul l (rec w))) w))
      (send (cat (exp (gen) (mul l (rec w))) w))))
  (label 166)
  (parent 109)
  (unrealized (7 0))
  (comment "6 in cohort - 6 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pval)
    (priv-stor locn) (x rndx) (y expt) (l rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l l (rec w))) w))
  (precedes ((0 2) (7 0)) ((0 4) (2 0)) ((2 2) (4 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((5 2) (0 1)) ((6 1) (0 3))
    ((7 1) (6 0)) ((8 1) (7 0)))
  (uniq-orig na l)
  (uniq-gen x)
  (absent (x l))
  (precur (4 0) (8 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((5 1) (0 0)) ((5 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul l l (rec w))) w))
    (exp (gen) (mul l l)) (7 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l)) (send (cat (exp (gen) l) l)))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l l (rec w))) w))
      (send (cat (exp (gen) (mul l l (rec w))) w))))
  (label 167)
  (parent 110)
  (unrealized (8 0))
  (comment "6 in cohort - 6 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pval)
    (priv-stor locn) (x rndx) (y expt) (y-0 l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self) (ga (exp (gen) l))
    (gx (exp (gen) (mul x y (rec y-0)))) (priv-stor priv-stor) (l l)
    (y y-0))
  (precedes ((0 2) (7 2)) ((0 4) (2 0)) ((2 2) (4 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((5 1) (7 0)) ((5 2) (6 0))
    ((6 1) (0 1)) ((7 3) (0 3)))
  (uniq-orig na nb l)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l))
  (precur (4 0) (6 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((5 1) (0 0)) ((5 1) (2 0)) ((5 1) (7 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 8 5 ltx-gen 2)
    (ch-msg priv-stor-0 (cat pt-2 (pv self l))) (7 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l)) (send (cat (exp (gen) l) l)))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))))
  (label 168)
  (parent 115)
  (unrealized (7 1))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pval)
    (priv-stor locn) (x rndx) (y expt) (l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) l) (one)))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (precedes ((0 2) (8 0)) ((0 4) (2 0)) ((2 2) (4 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((5 2) (6 0)) ((6 1) (0 1))
    ((7 1) (0 3)) ((8 1) (7 0)))
  (uniq-orig na l)
  (uniq-gen x)
  (absent (x l))
  (precur (4 0) (6 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((5 1) (0 0)) ((5 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation encryption-test
    (added-listener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
    (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))) (7 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l)) (send (cat (exp (gen) l) l)))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
  (label 169)
  (parent 116)
  (unrealized (8 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self-0) (b self)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self-0) (b self)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor) (l l) (y y-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (7 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (7 0)) ((6 2) (0 1))
    ((7 3) (0 3)) ((8 1) (0 0)) ((8 2) (7 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self-0 (exp (gen) l-0)) (ltb-of self (exp (gen) l))
    (ltx-of self l) (ltx-of self-0 l-0))
  (leads-to ((6 1) (3 0)) ((6 1) (7 0)) ((8 1) (0 0)) ((8 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 4 9 ltx-gen 3) (exp (gen) l-0) (8 1))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self-0 self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt "nil")) (send l-0))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (recv (cat na self-0 self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 170)
  (parent 117)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l y-0 l-0 rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) (mul l (rec w))) w))
  (precedes ((0 2) (8 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (8 0))
    ((7 2) (0 1)) ((8 3) (0 3)) ((9 1) (8 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l-0))
  (precur (9 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((7 1) (3 0)) ((7 1) (8 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul l (rec w))) w)) (exp (gen) l)
    (8 1))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) (mul l (rec w))) w))
      (send (cat (exp (gen) (mul l (rec w))) w))))
  (label 171)
  (parent 117)
  (unrealized (9 0))
  (comment "7 in cohort - 7 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (precedes ((0 2) (9 0)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (10 0))
    ((7 2) (0 1)) ((8 1) (0 3)) ((9 1) (8 0)) ((10 1) (9 0)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((7 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l) l-0))
    (exp (gen) (mul l l-0)) (9 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0))))
  (label 172)
  (parent 118)
  (unrealized (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (precedes ((0 2) (9 0)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((4 1) (0 0)) ((4 1) (10 0)) ((5 1) (1 0)) ((6 1) (5 0))
    ((7 2) (0 1)) ((8 1) (0 3)) ((9 1) (8 0)) ((10 1) (9 0)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((7 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l-0) l))
    (exp (gen) (mul l l-0)) (9 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l))))
  (label 173)
  (parent 118)
  (unrealized (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l y-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (9 0))
    ((7 2) (8 0)) ((8 1) (0 1)) ((9 3) (0 3)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l-0))
  (precur (8 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((7 1) (3 0)) ((7 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 10 7 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv self-0 l-0))) (9 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))))
  (label 174)
  (parent 125)
  (unrealized (9 1))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l-0) (one)))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (precedes ((0 2) (10 0)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0)) ((7 2) (8 0))
    ((8 1) (0 1)) ((9 1) (0 3)) ((10 1) (9 0)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (precur (8 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((7 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation encryption-test
    (added-listener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))) (9 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
  (label 175)
  (parent 126)
  (unrealized (10 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (l y-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-1) (l l-0) (y y-0))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((3 2) (7 0)) ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0))
    ((7 1) (6 0)) ((8 1) (9 0)) ((8 2) (0 1)) ((9 3) (0 3)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l-0))
  (precur (7 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((8 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    gen-st-ltx-disclose-0 ltx-of-fn trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation encryption-test (added-strand resp 4)
    (enc na nb self self-0
      (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))) (0 3))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-1 (cat pt-5 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))))
  (label 176)
  (parent 127)
  (unrealized (9 0) (9 1))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (precedes ((0 2) (9 0)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((3 2) (7 0)) ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0))
    ((7 1) (6 0)) ((8 2) (0 1)) ((9 1) (0 3)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (precur (7 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((8 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation encryption-test
    (added-listener
      (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
    (enc na nb self self-0
      (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))) (0 3))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
  (label 177)
  (parent 127)
  (unrealized (9 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data)
    (b self a b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (ga gx base) (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx)
    (y expt) (l l-0 l-1 y-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-1))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-1))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor-0)
    (l l-1))
  (defstrand ltx-gen 2 (ignore ignore-0) (self self)
    (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-1) l))
  (deflistener (cat (gen) l-1))
  (deflistener (cat (exp (gen) y-0) (mul l-1 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b-0) (ga ga) (gx gx)
    (priv-stor priv-stor-1) (l l-0) (y y-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (7 0)) ((3 2) (8 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((6 1) (1 0)) ((7 1) (6 0))
    ((8 1) (7 0)) ((9 1) (0 1)) ((10 3) (9 0)))
  (uniq-orig na nb-0 l l-1)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l-0))
  (precur (8 0) (9 0))
  (gen-st (pv b l-1) (pv self l) (pv b-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of b-0 (exp (gen) l-0))
    (ltb-of a ga) (ltb-of b (exp (gen) l-1)) (ltx-of b-0 l-0)
    (ltx-of b l-1) (ltx-of self l))
  (leads-to ((4 1) (3 0)) ((5 1) (0 0)) ((5 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    gen-st-ltx-disclose-0 ltx-ltb trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand resp 4) (exp (gen) y-0) (9 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-1 (pv b l-1)))
      (stor priv-stor-0 (cat pt-2 "nil")) (send l-1))
    ((load priv-stor-0 (cat pt-3 ignore))
      (stor priv-stor-0 (cat pt-1 (pv b l-1))))
    ((load priv-stor (cat pt-4 ignore-0))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-1) l)) (send (cat (exp (gen) l-1) l)))
    ((recv (cat (gen) l-1)) (send (cat (gen) l-1)))
    ((recv (cat (exp (gen) y-0) (mul l-1 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-1 (rec y-0)))))
    ((load priv-stor-1 (cat pt-5 (pv b-0 l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b-0 gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a b-0 (hash (exp ga l-0) (exp gx y-0)))))))
  (label 178)
  (parent 128)
  (unrealized (0 1) (0 3) (9 0) (10 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (b self a b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval) (gb base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (l l-0 l-1 x-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-1))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-1))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor-0)
    (l l-1))
  (defstrand ltx-gen 2 (ignore ignore-0) (self self)
    (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-1) l))
  (deflistener (cat (gen) l-1))
  (deflistener (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
  (defstrand init 3 (na na-0) (a a) (b b-0) (gb gb)
    (priv-stor priv-stor-1) (l l-0) (x x-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (7 0)) ((3 2) (8 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((6 1) (1 0)) ((7 1) (6 0))
    ((8 1) (7 0)) ((9 1) (0 1)) ((10 2) (9 0)))
  (uniq-orig na na-0 l l-1)
  (uniq-gen x x-0)
  (absent (x l) (x-0 l-0))
  (precur (8 0) (9 0))
  (gen-st (pv b l-1) (pv self l) (pv a l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of a (exp (gen) l-0))
    (ltb-of b-0 gb) (ltb-of b (exp (gen) l-1)) (ltx-of a l-0)
    (ltx-of b l-1) (ltx-of self l))
  (leads-to ((4 1) (3 0)) ((5 1) (0 0)) ((5 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    gen-st-ltx-disclose-0 ltx-ltb trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand init 3) (exp (gen) x-0) (9 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-1 (pv b l-1)))
      (stor priv-stor-0 (cat pt-2 "nil")) (send l-1))
    ((load priv-stor-0 (cat pt-3 ignore))
      (stor priv-stor-0 (cat pt-1 (pv b l-1))))
    ((load priv-stor (cat pt-4 ignore-0))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-1) l)) (send (cat (exp (gen) l-1) l)))
    ((recv (cat (gen) l-1)) (send (cat (gen) l-1)))
    ((recv (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-1 (rec x-0)))))
    ((load priv-stor-1 (cat pt-5 (pv a l-0)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 a b-0 (exp (gen) x-0)))))
  (label 179)
  (parent 128)
  (unrealized (0 1) (0 3) (9 0) (10 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-0) (self self)
    (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (gen) l-0))
  (deflistener (cat (gen) l-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (7 0)) ((3 2) (8 0))
    ((4 1) (9 0)) ((5 1) (0 0)) ((6 1) (1 0)) ((7 1) (6 0))
    ((8 1) (7 0)) ((9 1) (0 1)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (precur (8 0) (9 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltb-of b (exp (gen) l-0))
    (ltx-of b l-0) (ltx-of self l))
  (leads-to ((4 1) (3 0)) ((5 1) (0 0)) ((5 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (contracted (l-1 l-0) (w l-0)) (gen) (9 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-1 (pv b l-0)))
      (stor priv-stor-0 (cat pt-2 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-3 ignore))
      (stor priv-stor-0 (cat pt-1 (pv b l-0))))
    ((load priv-stor (cat pt-4 ignore-0))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0))))
  (label 180)
  (parent 128)
  (unrealized (0 3) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (gen) l-0))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0)) ((3 2) (7 0))
    ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (6 0))
    ((8 1) (0 1)) ((9 2) (8 0)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (precur (7 0) (8 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((9 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 4 10 ltx-gen 3) (exp (gen) l-1)
    (9 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 181)
  (parent 128)
  (unrealized (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor-0) (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (gen) l))
  (deflistener (cat (exp (gen) l-0) (mul l (rec l-0))))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0)) ((3 2) (7 0))
    ((4 1) (3 0)) ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (6 0))
    ((8 1) (0 1)) ((9 1) (0 0)) ((9 2) (8 0)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l-0))
  (precur (7 0) (8 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of b (exp (gen) l))
    (ltx-of b l) (ltx-of self l-0))
  (leads-to ((4 1) (3 0)) ((9 1) (0 0)) ((9 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 5 10 ltx-gen 3) (exp (gen) l-1)
    (9 0))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self l-0)))
      (stor priv-stor-0 (cat pt "nil")) (send l-0))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt-0 (pv b l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (gen) l)) (send (cat (gen) l)))
    ((recv (cat (exp (gen) l-0) (mul l (rec l-0))))
      (send (cat (exp (gen) l-0) (mul l (rec l-0)))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 182)
  (parent 128)
  (unrealized (0 1) (0 3) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data)
    (b self self-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-0) (self self)
    (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (gen) l-0))
  (deflistener (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self-0)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (7 0)) ((3 2) (8 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((6 1) (1 0)) ((7 1) (6 0))
    ((8 1) (7 0)) ((9 1) (0 1)) ((10 2) (9 0)))
  (uniq-orig na l l-0 l-1)
  (uniq-gen x)
  (absent (x l))
  (precur (8 0) (9 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-1))
    (ltb-of b (exp (gen) l-0)) (ltx-of self-0 l-1) (ltx-of b l-0)
    (ltx-of self l))
  (leads-to ((4 1) (3 0)) ((5 1) (0 0)) ((5 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-ltx-gen-ltx-of0 fact-resp-ltb-of0
    ltx-ltb trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 3) (exp (gen) l-1) (9 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-1 (pv b l-0)))
      (stor priv-stor-0 (cat pt-2 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-3 ignore))
      (stor priv-stor-0 (cat pt-1 (pv b l-0))))
    ((load priv-stor (cat pt-4 ignore-0))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((recv (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
      (send (cat (exp (gen) l-1) (mul l-0 (rec l-1)))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self-0 l-1)))
      (send
        (sig (body self-0 (exp (gen) l-1) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 183)
  (parent 128)
  (unrealized (0 1) (0 3) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l y-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (6 0))
    ((8 1) (9 0)) ((8 2) (0 1)) ((8 2) (7 0)) ((9 3) (0 3)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l-0))
  (precur (7 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((8 1) (3 0)) ((8 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 10 8 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv self-0 l-0))) (9 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))))
  (label 184)
  (parent 129)
  (unrealized (9 1))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (precedes ((0 2) (10 0)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (6 0))
    ((8 2) (0 1)) ((8 2) (7 0)) ((9 1) (0 3)) ((10 1) (9 0)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (precur (7 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((8 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation encryption-test
    (added-listener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))) (9 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
  (label 185)
  (parent 130)
  (unrealized (10 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data)
    (self self-0 a name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (ga gx base)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (l y-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) y-0) (mul l (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b self) (ga ga) (gx gx)
    (priv-stor priv-stor) (l l-0) (y y-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0)) ((4 1) (0 0))
    ((4 1) (10 0)) ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (6 0))
    ((8 1) (3 0)) ((8 2) (7 0)) ((9 1) (0 1)) ((10 3) (9 0)))
  (uniq-orig na nb-0 l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l-0))
  (precur (7 0) (9 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of a ga)
    (ltb-of self-0 (exp (gen) l)) (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((4 1) (10 0)) ((8 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 4 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv b l-1))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l-0)))
      (stor priv-stor (cat pt-0 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) y-0) (mul l (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l (rec y-0)))))
    ((load priv-stor (cat pt (pv self l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a self gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a self (hash (exp ga l-0) (exp gx y-0)))))))
  (label 186)
  (parent 131)
  (unrealized (0 1) (0 3) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data)
    (self self-0 a name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (ga gx base)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (l y-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) y-0) (mul (rec y-0) l-0)))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b self-0) (ga ga) (gx gx)
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0)) ((4 1) (0 0))
    ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (6 0)) ((8 1) (10 0))
    ((8 2) (7 0)) ((9 1) (0 1)) ((10 3) (9 0)))
  (uniq-orig na nb-0 l l-0)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l-0))
  (precur (7 0) (9 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of a ga)
    (ltb-of self-0 (exp (gen) l-0)) (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((8 1) (3 0)) ((8 1) (10 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 8 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv b l-1))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) y-0) (mul (rec y-0) l-0)))
      (send (cat (exp (gen) y-0) (mul (rec y-0) l-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a self-0 gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a self-0 (hash (exp ga l-0) (exp gx y-0)))))))
  (label 187)
  (parent 131)
  (unrealized (0 1) (0 3) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (self self-0 a b name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (ga gx base) (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx)
    (y expt) (l l-0 y-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b) (ga ga) (gx gx)
    (priv-stor priv-stor-1) (l l-1) (y y-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0)) ((4 1) (0 0))
    ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (6 0)) ((8 1) (3 0))
    ((8 2) (7 0)) ((9 1) (0 1)) ((10 3) (9 0)) ((11 1) (10 0)))
  (uniq-orig na nb-0 l l-0 l-1)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l-1))
  (precur (7 0) (9 0))
  (gen-st (pv self l) (pv self-0 l-0) (pv b l-1))
  (facts (ltb-of self (exp (gen) l)) (ltb-of b (exp (gen) l-1))
    (ltb-of a ga) (ltb-of self-0 (exp (gen) l-0)) (ltx-of b l-1)
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((8 1) (3 0)) ((11 1) (10 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv b l-1))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-0 (rec y-0)))))
    ((load priv-stor-1 (cat pt-5 (pv b l-1)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a b (hash (exp ga l-1) (exp gx y-0))))))
    ((load priv-stor-1 (cat pt-6 ignore-1))
      (stor priv-stor-1 (cat pt-5 (pv b l-1)))))
  (label 188)
  (parent 131)
  (unrealized (0 1) (0 3) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (self self-0 b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (gb base)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (l x-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) x-0) (mul l (rec x-0))))
  (defstrand init 3 (na na-0) (a self) (b b) (gb gb)
    (priv-stor priv-stor) (l l-0) (x x-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0)) ((4 1) (0 0))
    ((4 1) (10 0)) ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (6 0))
    ((8 1) (3 0)) ((8 2) (7 0)) ((9 1) (0 1)) ((10 2) (9 0)))
  (uniq-orig na na-0 l l-0)
  (uniq-gen x x-0)
  (absent (x l-0) (x-0 l-0))
  (precur (7 0) (9 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of b gb)
    (ltb-of self-0 (exp (gen) l)) (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((4 1) (10 0)) ((8 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 4 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv a l-1))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l-0)))
      (stor priv-stor (cat pt-0 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) x-0) (mul l (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l (rec x-0)))))
    ((load priv-stor (cat pt (pv self l-0)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 self b (exp (gen) x-0)))))
  (label 189)
  (parent 132)
  (unrealized (0 1) (0 3) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (self self-0 b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (gb base)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (l x-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) x-0) (mul (rec x-0) l-0)))
  (defstrand init 3 (na na-0) (a self-0) (b b) (gb gb)
    (priv-stor priv-stor-0) (l l-0) (x x-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0)) ((4 1) (0 0))
    ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (6 0)) ((8 1) (10 0))
    ((8 2) (7 0)) ((9 1) (0 1)) ((10 2) (9 0)))
  (uniq-orig na na-0 l l-0)
  (uniq-gen x x-0)
  (absent (x l) (x-0 l-0))
  (precur (7 0) (9 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of b gb)
    (ltb-of self-0 (exp (gen) l-0)) (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((8 1) (3 0)) ((8 1) (10 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 8 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv a l-1))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) x-0) (mul (rec x-0) l-0)))
      (send (cat (exp (gen) x-0) (mul (rec x-0) l-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 self-0 b (exp (gen) x-0)))))
  (label 190)
  (parent 132)
  (unrealized (0 1) (0 3) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (self self-0 a b name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (gb base) (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (l l-0 x-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
  (defstrand init 3 (na na-0) (a a) (b b) (gb gb)
    (priv-stor priv-stor-1) (l l-1) (x x-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self a)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0)) ((4 1) (0 0))
    ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (6 0)) ((8 1) (3 0))
    ((8 2) (7 0)) ((9 1) (0 1)) ((10 2) (9 0)) ((11 1) (10 0)))
  (uniq-orig na na-0 l l-0 l-1)
  (uniq-gen x x-0)
  (absent (x l) (x-0 l-1))
  (precur (7 0) (9 0))
  (gen-st (pv self l) (pv self-0 l-0) (pv a l-1))
  (facts (ltb-of self (exp (gen) l)) (ltb-of a (exp (gen) l-1))
    (ltb-of b gb) (ltb-of self-0 (exp (gen) l-0)) (ltx-of a l-1)
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((8 1) (3 0)) ((11 1) (10 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv a l-1))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-0 (rec x-0)))))
    ((load priv-stor-1 (cat pt-5 (pv a l-1)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 a b (exp (gen) x-0))))
    ((load priv-stor-1 (cat pt-6 ignore-1))
      (stor priv-stor-1 (cat pt-5 (pv a l-1)))))
  (label 191)
  (parent 132)
  (unrealized (0 1) (0 3) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (l y-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-1) (l l-0) (y y-0))
  (precedes ((0 2) (10 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (6 0))
    ((8 1) (10 0)) ((8 2) (7 0)) ((8 2) (9 0)) ((9 1) (0 1))
    ((10 3) (0 3)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l-0))
  (precur (7 0) (9 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((8 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    gen-st-ltx-disclose-0 ltx-of-fn trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation encryption-test (added-strand resp 4)
    (enc na nb self self-0
      (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))) (0 3))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-1 (cat pt-5 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))))
  (label 192)
  (parent 135)
  (unrealized (10 0) (10 1))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l-0) (one)))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (precedes ((0 2) (10 0)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (6 0))
    ((8 2) (7 0)) ((8 2) (9 0)) ((9 1) (0 1)) ((10 1) (0 3)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (precur (7 0) (9 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((8 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation encryption-test
    (added-listener
      (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
    (enc na nb self self-0
      (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))) (0 3))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
  (label 193)
  (parent 135)
  (unrealized (10 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (precedes ((0 2) (8 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (0 0)) ((6 2) (8 1))
    ((7 1) (8 0)) ((7 2) (0 1)) ((8 3) (0 3)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of self-0 (exp (gen) l))
    (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((6 1) (0 0)) ((6 1) (2 0)) ((7 1) (3 0)) ((7 1) (8 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 9 6 ltx-gen 3) (exp (gen) l-0) (8 1))
  (traces
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (stor priv-stor (cat pt "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))))
  (label 194)
  (parent 137)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l y-0 l-0 rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) (mul l (rec w))) w))
  (precedes ((0 2) (8 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (0 0)) ((6 2) (5 0))
    ((7 1) (8 0)) ((7 2) (0 1)) ((8 3) (0 3)) ((9 1) (8 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l-0))
  (precur (9 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((6 1) (0 0)) ((6 1) (2 0)) ((7 1) (3 0)) ((7 1) (8 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul l (rec w))) w)) (exp (gen) l)
    (8 1))
  (traces
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) (mul l (rec w))) w))
      (send (cat (exp (gen) (mul l (rec w))) w))))
  (label 195)
  (parent 137)
  (unrealized (9 0))
  (comment "7 in cohort - 7 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (precedes ((0 2) (9 0)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (0 0)) ((6 2) (5 0))
    ((7 1) (10 0)) ((7 2) (0 1)) ((8 1) (0 3)) ((9 1) (8 0))
    ((10 1) (9 0)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((6 1) (0 0)) ((6 1) (2 0)) ((7 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l) l-0))
    (exp (gen) (mul l l-0)) (9 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0))))
  (label 196)
  (parent 138)
  (unrealized (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (precedes ((0 2) (9 0)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (0 0)) ((6 1) (10 0))
    ((6 2) (5 0)) ((7 2) (0 1)) ((8 1) (0 3)) ((9 1) (8 0))
    ((10 1) (9 0)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((6 1) (0 0)) ((6 1) (2 0)) ((7 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l-0) l))
    (exp (gen) (mul l l-0)) (9 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l))))
  (label 197)
  (parent 138)
  (unrealized (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l y-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (0 0)) ((6 2) (5 0))
    ((7 1) (0 1)) ((8 1) (9 0)) ((8 2) (7 0)) ((9 3) (0 3)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l-0))
  (precur (7 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((6 1) (0 0)) ((6 1) (2 0)) ((8 1) (3 0)) ((8 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 10 8 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv self-0 l-0))) (9 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))))
  (label 198)
  (parent 145)
  (unrealized (9 1))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (precedes ((0 2) (10 0)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (0 0)) ((6 2) (5 0))
    ((7 1) (0 1)) ((8 2) (7 0)) ((9 1) (0 3)) ((10 1) (9 0)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (precur (7 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((6 1) (0 0)) ((6 1) (2 0)) ((8 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation encryption-test
    (added-listener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))) (9 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
  (label 199)
  (parent 146)
  (unrealized (10 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (l y-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (gen) l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-1) (l l-0) (y y-0))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (7 0))
    ((3 2) (6 0)) ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0))
    ((7 1) (6 0)) ((8 1) (9 0)) ((8 2) (0 1)) ((9 3) (0 3)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l-0))
  (precur (7 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((8 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    gen-st-ltx-disclose-0 ltx-of-fn trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation encryption-test (added-strand resp 4)
    (enc na nb self self-0
      (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))) (0 3))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (gen) l)) (send (cat (gen) l)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-1 (cat pt-5 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))))
  (label 200)
  (parent 147)
  (unrealized (9 0) (9 1))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (gen) l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (precedes ((0 2) (9 0)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (7 0))
    ((3 2) (6 0)) ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0))
    ((7 1) (6 0)) ((8 2) (0 1)) ((9 1) (0 3)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (precur (7 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((8 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation encryption-test
    (added-listener
      (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
    (enc na nb self self-0
      (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))) (0 3))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (gen) l)) (send (cat (gen) l)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
  (label 201)
  (parent 147)
  (unrealized (9 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data)
    (b self a b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (ga gx base) (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx)
    (y expt) (l l-0 l-1 y-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-1))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-1))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor-0)
    (l l-1))
  (defstrand ltx-gen 2 (ignore ignore-0) (self self)
    (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-1))
  (deflistener (cat (gen) l))
  (deflistener (cat (exp (gen) y-0) (mul l-1 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b-0) (ga ga) (gx gx)
    (priv-stor priv-stor-1) (l l-0) (y y-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (8 0)) ((3 2) (7 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((6 1) (1 0)) ((7 1) (6 0))
    ((8 1) (7 0)) ((9 1) (0 1)) ((10 3) (9 0)))
  (uniq-orig na nb-0 l l-1)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l-0))
  (precur (8 0) (9 0))
  (gen-st (pv b l-1) (pv self l) (pv b-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of b-0 (exp (gen) l-0))
    (ltb-of a ga) (ltb-of b (exp (gen) l-1)) (ltx-of b-0 l-0)
    (ltx-of b l-1) (ltx-of self l))
  (leads-to ((4 1) (3 0)) ((5 1) (0 0)) ((5 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    gen-st-ltx-disclose-0 ltx-ltb trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand resp 4) (exp (gen) y-0) (9 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-1 (pv b l-1)))
      (stor priv-stor-0 (cat pt-2 "nil")) (send l-1))
    ((load priv-stor-0 (cat pt-3 ignore))
      (stor priv-stor-0 (cat pt-1 (pv b l-1))))
    ((load priv-stor (cat pt-4 ignore-0))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-1)) (send (cat (exp (gen) l) l-1)))
    ((recv (cat (gen) l)) (send (cat (gen) l)))
    ((recv (cat (exp (gen) y-0) (mul l-1 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-1 (rec y-0)))))
    ((load priv-stor-1 (cat pt-5 (pv b-0 l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b-0 gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a b-0 (hash (exp ga l-0) (exp gx y-0)))))))
  (label 202)
  (parent 148)
  (unrealized (0 1) (0 3) (9 0) (10 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (b self a b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval) (gb base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (l l-0 l-1 x-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-1))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-1))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor-0)
    (l l-1))
  (defstrand ltx-gen 2 (ignore ignore-0) (self self)
    (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-1))
  (deflistener (cat (gen) l))
  (deflistener (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
  (defstrand init 3 (na na-0) (a a) (b b-0) (gb gb)
    (priv-stor priv-stor-1) (l l-0) (x x-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (8 0)) ((3 2) (7 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((6 1) (1 0)) ((7 1) (6 0))
    ((8 1) (7 0)) ((9 1) (0 1)) ((10 2) (9 0)))
  (uniq-orig na na-0 l l-1)
  (uniq-gen x x-0)
  (absent (x l) (x-0 l-0))
  (precur (8 0) (9 0))
  (gen-st (pv b l-1) (pv self l) (pv a l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of a (exp (gen) l-0))
    (ltb-of b-0 gb) (ltb-of b (exp (gen) l-1)) (ltx-of a l-0)
    (ltx-of b l-1) (ltx-of self l))
  (leads-to ((4 1) (3 0)) ((5 1) (0 0)) ((5 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    gen-st-ltx-disclose-0 ltx-ltb trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand init 3) (exp (gen) x-0) (9 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-1 (pv b l-1)))
      (stor priv-stor-0 (cat pt-2 "nil")) (send l-1))
    ((load priv-stor-0 (cat pt-3 ignore))
      (stor priv-stor-0 (cat pt-1 (pv b l-1))))
    ((load priv-stor (cat pt-4 ignore-0))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-1)) (send (cat (exp (gen) l) l-1)))
    ((recv (cat (gen) l)) (send (cat (gen) l)))
    ((recv (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-1 (rec x-0)))))
    ((load priv-stor-1 (cat pt-5 (pv a l-0)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 a b-0 (exp (gen) x-0)))))
  (label 203)
  (parent 148)
  (unrealized (0 1) (0 3) (9 0) (10 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-0) (self self)
    (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (gen) l))
  (deflistener (cat (gen) l-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (8 0)) ((3 2) (7 0))
    ((4 1) (9 0)) ((5 1) (0 0)) ((6 1) (1 0)) ((7 1) (6 0))
    ((8 1) (7 0)) ((9 1) (0 1)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (precur (8 0) (9 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltb-of b (exp (gen) l-0))
    (ltx-of b l-0) (ltx-of self l))
  (leads-to ((4 1) (3 0)) ((5 1) (0 0)) ((5 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (contracted (l-1 l-0) (w l-0)) (gen) (9 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-1 (pv b l-0)))
      (stor priv-stor-0 (cat pt-2 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-3 ignore))
      (stor priv-stor-0 (cat pt-1 (pv b l-0))))
    ((load priv-stor (cat pt-4 ignore-0))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (gen) l)) (send (cat (gen) l)))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0))))
  (label 204)
  (parent 148)
  (unrealized (0 3) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (gen) l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (7 0)) ((3 2) (6 0))
    ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (6 0))
    ((8 1) (0 1)) ((9 2) (8 0)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (precur (7 0) (8 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((9 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 4 10 ltx-gen 3) (exp (gen) l-1)
    (9 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (gen) l)) (send (cat (gen) l)))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 205)
  (parent 148)
  (unrealized (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor-0) (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (gen) l-0))
  (deflistener (cat (exp (gen) l-0) (mul l (rec l-0))))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (7 0)) ((3 2) (6 0))
    ((4 1) (3 0)) ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (6 0))
    ((8 1) (0 1)) ((9 1) (0 0)) ((9 2) (8 0)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l-0))
  (precur (7 0) (8 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of b (exp (gen) l))
    (ltx-of b l) (ltx-of self l-0))
  (leads-to ((4 1) (3 0)) ((9 1) (0 0)) ((9 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 5 10 ltx-gen 3) (exp (gen) l-1)
    (9 0))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self l-0)))
      (stor priv-stor-0 (cat pt "nil")) (send l-0))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt-0 (pv b l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((recv (cat (exp (gen) l-0) (mul l (rec l-0))))
      (send (cat (exp (gen) l-0) (mul l (rec l-0)))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 206)
  (parent 148)
  (unrealized (0 1) (0 3) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data)
    (b self self-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-0) (self self)
    (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (gen) l))
  (deflistener (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self-0)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (8 0)) ((3 2) (7 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((6 1) (1 0)) ((7 1) (6 0))
    ((8 1) (7 0)) ((9 1) (0 1)) ((10 2) (9 0)))
  (uniq-orig na l l-0 l-1)
  (uniq-gen x)
  (absent (x l))
  (precur (8 0) (9 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-1))
    (ltb-of b (exp (gen) l-0)) (ltx-of self-0 l-1) (ltx-of b l-0)
    (ltx-of self l))
  (leads-to ((4 1) (3 0)) ((5 1) (0 0)) ((5 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-ltx-gen-ltx-of0 fact-resp-ltb-of0
    ltx-ltb trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 3) (exp (gen) l-1) (9 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-1 (pv b l-0)))
      (stor priv-stor-0 (cat pt-2 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-3 ignore))
      (stor priv-stor-0 (cat pt-1 (pv b l-0))))
    ((load priv-stor (cat pt-4 ignore-0))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (gen) l)) (send (cat (gen) l)))
    ((recv (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
      (send (cat (exp (gen) l-1) (mul l-0 (rec l-1)))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self-0 l-1)))
      (send
        (sig (body self-0 (exp (gen) l-1) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 207)
  (parent 148)
  (unrealized (0 1) (0 3) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l y-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (5 0)) ((7 1) (0 0))
    ((7 2) (6 0)) ((8 1) (9 0)) ((8 2) (0 1)) ((9 3) (0 3)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l-0))
  (precur (6 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((7 1) (0 0)) ((7 1) (2 0)) ((8 1) (3 0)) ((8 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 10 8 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv self-0 l-0))) (9 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))))
  (label 208)
  (parent 149)
  (unrealized (9 1))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (precedes ((0 2) (10 0)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (5 0)) ((7 1) (0 0))
    ((7 2) (6 0)) ((8 2) (0 1)) ((9 1) (0 3)) ((10 1) (9 0)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (precur (6 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((7 1) (0 0)) ((7 1) (2 0)) ((8 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation encryption-test
    (added-listener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))) (9 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
  (label 209)
  (parent 150)
  (unrealized (10 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (b self a name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (ga gx base)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (l y-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) y)) (priv-stor priv-stor-0) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) y-0) (mul (rec y-0) l-0)))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b) (ga ga) (gx gx)
    (priv-stor priv-stor) (l l-0) (y y-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (6 0)) ((4 1) (10 0))
    ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (6 0)) ((8 1) (0 0))
    ((8 2) (7 0)) ((9 1) (0 1)) ((10 3) (9 0)))
  (uniq-orig na nb-0 l l-0)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l-0))
  (precur (7 0) (9 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltb-of a ga)
    (ltb-of b (exp (gen) l-0)) (ltx-of b l-0) (ltx-of self l))
  (leads-to ((4 1) (3 0)) ((4 1) (10 0)) ((8 1) (0 0)) ((8 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 4 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv b-0 l-1))) (10 0))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self l)))
      (stor priv-stor-0 (cat pt "nil")) (send l))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (stor priv-stor (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt-0 (pv b l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y-0) (mul (rec y-0) l-0)))
      (send (cat (exp (gen) y-0) (mul (rec y-0) l-0))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a b (hash (exp ga l-0) (exp gx y-0)))))))
  (label 210)
  (parent 151)
  (unrealized (0 1) (0 3) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (b self a name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (ga gx base)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (l y-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor-0) (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) y-0) (mul l (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b self) (ga ga) (gx gx)
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (6 0)) ((4 1) (3 0))
    ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (6 0)) ((8 1) (0 0))
    ((8 1) (10 0)) ((8 2) (7 0)) ((9 1) (0 1)) ((10 3) (9 0)))
  (uniq-orig na nb-0 l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l-0))
  (precur (7 0) (9 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of a ga)
    (ltb-of b (exp (gen) l)) (ltx-of b l) (ltx-of self l-0))
  (leads-to ((4 1) (3 0)) ((8 1) (0 0)) ((8 1) (2 0)) ((8 1) (10 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 8 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv b-0 l-1))) (10 0))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self l-0)))
      (stor priv-stor-0 (cat pt "nil")) (send l-0))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt-0 (pv b l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y-0) (mul l (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l (rec y-0)))))
    ((load priv-stor-0 (cat pt-4 (pv self l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a self gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a self (hash (exp ga l-0) (exp gx y-0)))))))
  (label 211)
  (parent 151)
  (unrealized (0 1) (0 3) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (b self a b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (ga gx base) (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx)
    (y expt) (l l-0 y-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) y)) (priv-stor priv-stor-0) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b-0) (ga ga) (gx gx)
    (priv-stor priv-stor-1) (l l-1) (y y-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b-0)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (6 0)) ((4 1) (3 0))
    ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (6 0)) ((8 1) (0 0))
    ((8 2) (7 0)) ((9 1) (0 1)) ((10 3) (9 0)) ((11 1) (10 0)))
  (uniq-orig na nb-0 l l-0 l-1)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l-1))
  (precur (7 0) (9 0))
  (gen-st (pv b l-0) (pv self l) (pv b-0 l-1))
  (facts (ltb-of self (exp (gen) l)) (ltb-of b-0 (exp (gen) l-1))
    (ltb-of a ga) (ltb-of b (exp (gen) l-0)) (ltx-of b-0 l-1)
    (ltx-of b l-0) (ltx-of self l))
  (leads-to ((4 1) (3 0)) ((8 1) (0 0)) ((8 1) (2 0)) ((11 1) (10 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv b-0 l-1))) (10 0))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self l)))
      (stor priv-stor-0 (cat pt "nil")) (send l))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (stor priv-stor (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt-0 (pv b l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-0 (rec y-0)))))
    ((load priv-stor-1 (cat pt-5 (pv b-0 l-1)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b-0 gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a b-0 (hash (exp ga l-1) (exp gx y-0))))))
    ((load priv-stor-1 (cat pt-6 ignore-1))
      (stor priv-stor-1 (cat pt-5 (pv b-0 l-1)))))
  (label 212)
  (parent 151)
  (unrealized (0 1) (0 3) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (b self b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (gb base)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (l x-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) y)) (priv-stor priv-stor-0) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) x-0) (mul (rec x-0) l-0)))
  (defstrand init 3 (na na-0) (a b) (b b-0) (gb gb)
    (priv-stor priv-stor) (l l-0) (x x-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (6 0)) ((4 1) (10 0))
    ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (6 0)) ((8 1) (0 0))
    ((8 2) (7 0)) ((9 1) (0 1)) ((10 2) (9 0)))
  (uniq-orig na na-0 l l-0)
  (uniq-gen x x-0)
  (absent (x l) (x-0 l-0))
  (precur (7 0) (9 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltb-of b-0 gb)
    (ltb-of b (exp (gen) l-0)) (ltx-of b l-0) (ltx-of self l))
  (leads-to ((4 1) (3 0)) ((4 1) (10 0)) ((8 1) (0 0)) ((8 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 4 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv a l-1))) (10 0))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self l)))
      (stor priv-stor-0 (cat pt "nil")) (send l))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (stor priv-stor (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt-0 (pv b l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) x-0) (mul (rec x-0) l-0)))
      (send (cat (exp (gen) x-0) (mul (rec x-0) l-0))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 b b-0 (exp (gen) x-0)))))
  (label 213)
  (parent 152)
  (unrealized (0 1) (0 3) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (b self b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (gb base)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (l x-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor-0) (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) x-0) (mul l (rec x-0))))
  (defstrand init 3 (na na-0) (a self) (b b-0) (gb gb)
    (priv-stor priv-stor-0) (l l-0) (x x-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (6 0)) ((4 1) (3 0))
    ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (6 0)) ((8 1) (0 0))
    ((8 1) (10 0)) ((8 2) (7 0)) ((9 1) (0 1)) ((10 2) (9 0)))
  (uniq-orig na na-0 l l-0)
  (uniq-gen x x-0)
  (absent (x l-0) (x-0 l-0))
  (precur (7 0) (9 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of b-0 gb)
    (ltb-of b (exp (gen) l)) (ltx-of b l) (ltx-of self l-0))
  (leads-to ((4 1) (3 0)) ((8 1) (0 0)) ((8 1) (2 0)) ((8 1) (10 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 8 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv a l-1))) (10 0))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self l-0)))
      (stor priv-stor-0 (cat pt "nil")) (send l-0))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt-0 (pv b l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) x-0) (mul l (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l (rec x-0)))))
    ((load priv-stor-0 (cat pt-4 (pv self l-0)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 self b-0 (exp (gen) x-0)))))
  (label 214)
  (parent 152)
  (unrealized (0 1) (0 3) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (b self a b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (gb base) (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (l l-0 x-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) y)) (priv-stor priv-stor-0) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
  (defstrand init 3 (na na-0) (a a) (b b-0) (gb gb)
    (priv-stor priv-stor-1) (l l-1) (x x-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self a)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (6 0)) ((4 1) (3 0))
    ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (6 0)) ((8 1) (0 0))
    ((8 2) (7 0)) ((9 1) (0 1)) ((10 2) (9 0)) ((11 1) (10 0)))
  (uniq-orig na na-0 l l-0 l-1)
  (uniq-gen x x-0)
  (absent (x l) (x-0 l-1))
  (precur (7 0) (9 0))
  (gen-st (pv b l-0) (pv self l) (pv a l-1))
  (facts (ltb-of self (exp (gen) l)) (ltb-of a (exp (gen) l-1))
    (ltb-of b-0 gb) (ltb-of b (exp (gen) l-0)) (ltx-of a l-1)
    (ltx-of b l-0) (ltx-of self l))
  (leads-to ((4 1) (3 0)) ((8 1) (0 0)) ((8 1) (2 0)) ((11 1) (10 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv a l-1))) (10 0))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self l)))
      (stor priv-stor-0 (cat pt "nil")) (send l))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (stor priv-stor (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt-0 (pv b l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-0 (rec x-0)))))
    ((load priv-stor-1 (cat pt-5 (pv a l-1)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 a b-0 (exp (gen) x-0))))
    ((load priv-stor-1 (cat pt-6 ignore-1))
      (stor priv-stor-1 (cat pt-5 (pv a l-1)))))
  (label 215)
  (parent 152)
  (unrealized (0 1) (0 3) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (l y-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-1) (l l-0) (y y-0))
  (precedes ((0 2) (10 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (5 0)) ((7 1) (0 0))
    ((7 2) (6 0)) ((8 1) (0 1)) ((9 1) (10 0)) ((9 2) (8 0))
    ((10 3) (0 3)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l-0))
  (precur (6 0) (8 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((7 1) (0 0)) ((7 1) (2 0)) ((9 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    gen-st-ltx-disclose-0 ltx-of-fn trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation encryption-test (added-strand resp 4)
    (enc na nb self self-0
      (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))) (0 3))
  (traces
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-1 (cat pt-5 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))))
  (label 216)
  (parent 154)
  (unrealized (10 0) (10 1))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (precedes ((0 2) (10 0)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (5 0)) ((7 1) (0 0))
    ((7 2) (6 0)) ((8 1) (0 1)) ((9 2) (8 0)) ((10 1) (0 3)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (precur (6 0) (8 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((7 1) (0 0)) ((7 1) (2 0)) ((9 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation encryption-test
    (added-listener
      (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
    (enc na nb self self-0
      (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))) (0 3))
  (traces
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
  (label 217)
  (parent 154)
  (unrealized (10 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pval)
    (priv-stor locn) (x rndx) (y expt) (y-0 l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (gen) (mul l l)))
  (deflistener l)
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self) (ga (exp (gen) l))
    (gx (exp (gen) (mul x y (rec y-0)))) (priv-stor priv-stor) (l l)
    (y y-0))
  (precedes ((0 2) (7 2)) ((0 4) (2 0)) ((2 2) (5 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (4 0)) ((6 1) (0 0)) ((6 1) (7 0))
    ((6 2) (0 1)) ((6 2) (7 1)) ((7 3) (0 3)))
  (uniq-orig na nb l)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l))
  (precur (4 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((6 1) (0 0)) ((6 1) (2 0)) ((6 1) (7 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 8 6 ltx-gen 3) (exp (gen) l) (7 1))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (gen) (mul l l))) (send (cat (gen) (mul l l))))
    ((recv l) (send l))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))))
  (label 218)
  (parent 157)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pval)
    (priv-stor locn) (x rndx) (y expt) (y-0 l rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (gen) (mul l l)))
  (deflistener l)
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self) (ga (exp (gen) l))
    (gx (exp (gen) (mul x y (rec y-0)))) (priv-stor priv-stor) (l l)
    (y y-0))
  (deflistener (cat (exp (gen) (mul l (rec w))) w))
  (precedes ((0 2) (7 2)) ((0 4) (2 0)) ((2 2) (5 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (4 0)) ((6 1) (0 0)) ((6 1) (7 0))
    ((6 2) (0 1)) ((7 3) (0 3)) ((8 1) (7 1)))
  (uniq-orig na nb l)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l))
  (precur (4 0) (8 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((6 1) (0 0)) ((6 1) (2 0)) ((6 1) (7 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul l (rec w))) w)) (exp (gen) l)
    (7 1))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (gen) (mul l l))) (send (cat (gen) (mul l l))))
    ((recv l) (send l))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) (mul l (rec w))) w))
      (send (cat (exp (gen) (mul l (rec w))) w))))
  (label 219)
  (parent 157)
  (unrealized (8 0))
  (comment "6 in cohort - 6 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pval)
    (priv-stor locn) (x rndx) (y expt) (l rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (gen) (mul l l)))
  (deflistener l)
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l l (rec w))) w))
  (precedes ((0 2) (8 0)) ((0 4) (2 0)) ((2 2) (5 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (4 0)) ((6 1) (0 0)) ((6 2) (0 1))
    ((7 1) (0 3)) ((8 1) (7 0)) ((9 1) (8 0)))
  (uniq-orig na l)
  (uniq-gen x)
  (absent (x l))
  (precur (4 0) (9 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((6 1) (0 0)) ((6 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul l l (rec w))) w))
    (exp (gen) (mul l l)) (8 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (gen) (mul l l))) (send (cat (gen) (mul l l))))
    ((recv l) (send l))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l l (rec w))) w))
      (send (cat (exp (gen) (mul l l (rec w))) w))))
  (label 220)
  (parent 158)
  (unrealized (9 0))
  (comment "6 in cohort - 6 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pval)
    (priv-stor locn) (x rndx) (y expt) (y-0 l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (gen) (mul l l)))
  (deflistener l)
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self) (ga (exp (gen) l))
    (gx (exp (gen) (mul x y (rec y-0)))) (priv-stor priv-stor) (l l)
    (y y-0))
  (precedes ((0 2) (8 2)) ((0 4) (2 0)) ((2 2) (5 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (4 0)) ((6 1) (0 1)) ((7 1) (0 0))
    ((7 1) (8 0)) ((7 2) (6 0)) ((8 3) (0 3)))
  (uniq-orig na nb l)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l))
  (precur (4 0) (6 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((7 1) (0 0)) ((7 1) (2 0)) ((7 1) (8 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 9 7 ltx-gen 2)
    (ch-msg priv-stor-0 (cat pt-2 (pv self l))) (8 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (gen) (mul l l))) (send (cat (gen) (mul l l))))
    ((recv l) (send l))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))))
  (label 221)
  (parent 163)
  (unrealized (8 1))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pval)
    (priv-stor locn) (x rndx) (y expt) (l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (gen) (mul l l)))
  (deflistener l)
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (precedes ((0 2) (9 0)) ((0 4) (2 0)) ((2 2) (5 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (4 0)) ((6 1) (0 1)) ((7 1) (0 0))
    ((7 2) (6 0)) ((8 1) (0 3)) ((9 1) (8 0)))
  (uniq-orig na l)
  (uniq-gen x)
  (absent (x l))
  (precur (4 0) (6 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((7 1) (0 0)) ((7 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation encryption-test
    (added-listener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
    (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))) (8 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (gen) (mul l l))) (send (cat (gen) (mul l l))))
    ((recv l) (send l))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
  (label 222)
  (parent 164)
  (unrealized (9 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pval)
    (priv-stor locn) (x rndx) (y expt) (y-0 l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self) (ga (exp (gen) l))
    (gx (exp (gen) (mul x y (rec y-0)))) (priv-stor priv-stor) (l l)
    (y y-0))
  (precedes ((0 2) (5 2)) ((0 4) (2 0)) ((2 2) (3 0)) ((3 1) (1 0))
    ((4 1) (0 0)) ((4 1) (5 0)) ((4 2) (0 1)) ((4 2) (5 1))
    ((5 3) (0 3)))
  (uniq-orig na nb l)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l))
  (precur (3 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((4 1) (5 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) l) l)) (send (cat (exp (gen) l) l)))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))))
  (label 223)
  (parent 165)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb na-0 data) (self a b name)
    (pt pt-0 pt-1 pt-2 pval) (gb base) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 x-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor)
    (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l-0))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
  (defstrand init 3 (na na-0) (a a) (b b) (gb gb)
    (priv-stor priv-stor-0) (l l) (x x-0))
  (precedes ((0 2) (6 2)) ((0 4) (2 0)) ((2 2) (4 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((5 1) (6 0)) ((5 2) (0 1))
    ((6 3) (0 3)) ((7 1) (6 1)) ((8 2) (7 0)))
  (uniq-orig na nb na-0 l-0)
  (uniq-gen x y-0 x-0)
  (absent (x l-0) (y-0 l-0) (x-0 l))
  (precur (4 0) (7 0))
  (gen-st (pv self l-0) (pv a l))
  (facts (ltb-of a (exp (gen) l)) (ltb-of b gb)
    (ltb-of self (exp (gen) l-0)) (ltx-of a l) (ltx-of self l-0))
  (leads-to ((5 1) (0 0)) ((5 1) (2 0)) ((5 1) (6 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    gen-st-ltx-disclose-0 ltx-ltb trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand init 3) (exp (gen) x-0) (7 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l-0)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l-0)))
      (stor priv-stor (cat pt "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l-0)) (send (cat (exp (gen) l-0) l-0)))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-1 (pv self l-0)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self
            (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-0 (rec x-0)))))
    ((load priv-stor-0 (cat pt-2 (pv a l)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 a b (exp (gen) x-0)))))
  (label 224)
  (parent 166)
  (unrealized (6 1) (7 0) (8 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pval)
    (priv-stor locn) (y expt) (y-0 l x rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul y x))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul y x))))
  (deflistener (cat (exp (gen) l) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self) (ga (exp (gen) l))
    (gx (exp (gen) (mul y (rec y-0) x))) (priv-stor priv-stor) (l l)
    (y y-0))
  (deflistener (cat (exp (gen) x) (mul l (rec x))))
  (precedes ((0 2) (7 0)) ((0 4) (2 0)) ((2 2) (4 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((5 1) (6 0)) ((5 2) (0 1))
    ((6 3) (0 3)) ((7 1) (6 1)))
  (uniq-orig na nb l)
  (uniq-gen y-0 x)
  (absent (y-0 l) (x l))
  (precur (4 0) (7 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((5 1) (0 0)) ((5 1) (2 0)) ((5 1) (6 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 8 0 init 3) (exp (gen) x-0) (7 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul y x))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul y x))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul y x)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul y x))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul y x)))))
    ((recv (cat (exp (gen) l) l)) (send (cat (exp (gen) l) l)))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self (exp (gen) (mul y (rec y-0) x))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul y x)))))))
    ((recv (cat (exp (gen) x) (mul l (rec x))))
      (send (cat (exp (gen) x) (mul l (rec x))))))
  (label 225)
  (parent 166)
  (unrealized (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pval)
    (priv-stor locn) (x rndx) (y expt) (y-0 l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self) (ga (exp (gen) l))
    (gx (exp (gen) (mul x y (rec y-0)))) (priv-stor priv-stor) (l l)
    (y y-0))
  (deflistener (cat (gen) l))
  (precedes ((0 2) (6 2)) ((0 4) (2 0)) ((2 2) (4 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((5 1) (6 0)) ((5 1) (7 0))
    ((5 2) (0 1)) ((6 3) (0 3)) ((7 1) (6 1)))
  (uniq-orig na nb l)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l))
  (precur (4 0) (7 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((5 1) (0 0)) ((5 1) (2 0)) ((5 1) (6 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (contracted (l-0 l) (w l)) (gen) (7 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l)) (send (cat (exp (gen) l) l)))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))))
    ((recv (cat (gen) l)) (send (cat (gen) l))))
  (label 226)
  (parent 166)
  (unrealized (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb na-0 nb-0 data) (self a b name)
    (pt pt-0 pt-1 pt-2 pval) (ga gx base) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 y-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor)
    (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l-0))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) y-1) (mul l-0 (rec y-1))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b) (ga ga) (gx gx)
    (priv-stor priv-stor-0) (l l) (y y-1))
  (precedes ((0 2) (6 2)) ((0 4) (2 0)) ((2 2) (4 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((5 1) (6 0)) ((5 2) (0 1))
    ((6 3) (0 3)) ((7 1) (6 1)) ((8 3) (7 0)))
  (uniq-orig na nb nb-0 l-0)
  (uniq-gen x y-0 y-1)
  (absent (x l-0) (y-0 l-0) (y-1 l))
  (precur (4 0) (7 0))
  (gen-st (pv self l-0) (pv b l))
  (facts (ltb-of b (exp (gen) l)) (ltb-of a ga)
    (ltb-of self (exp (gen) l-0)) (ltx-of b l) (ltx-of self l-0))
  (leads-to ((5 1) (0 0)) ((5 1) (2 0)) ((5 1) (6 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    gen-st-ltx-disclose-0 ltx-ltb trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand resp 4) (exp (gen) y-1) (7 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l-0)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l-0)))
      (stor priv-stor (cat pt "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l-0)) (send (cat (exp (gen) l-0) l-0)))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-1 (pv self l-0)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self
            (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) y-1) (mul l-0 (rec y-1))))
      (send (cat (exp (gen) y-1) (mul l-0 (rec y-1)))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b gx))
      (send
        (cat (exp (gen) y-1)
          (enc na-0 nb-0 a b (hash (exp ga l) (exp gx y-1)))))))
  (label 227)
  (parent 166)
  (unrealized (6 1) (7 0) (8 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pval)
    (priv-stor locn) (x rndx) (y expt) (y-0 l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self) (ga (exp (gen) l))
    (gx (exp (gen) (mul x y (rec y-0)))) (priv-stor priv-stor) (l l)
    (y y-0))
  (deflistener (cat (exp (gen) l) (one)))
  (precedes ((0 2) (6 2)) ((0 4) (2 0)) ((2 2) (4 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((5 1) (6 0)) ((5 2) (0 1))
    ((5 2) (7 0)) ((6 3) (0 3)) ((7 1) (6 1)))
  (uniq-orig na nb l)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l))
  (precur (4 0) (7 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((5 1) (0 0)) ((5 1) (2 0)) ((5 1) (6 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 8 5 ltx-gen 3) (exp (gen) l-0) (7 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l)) (send (cat (exp (gen) l) l)))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one)))))
  (label 228)
  (parent 166)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self) (ga (exp (gen) l))
    (gx (exp (gen) (mul x y (rec y-0)))) (priv-stor priv-stor) (l l)
    (y y-0))
  (deflistener (cat (exp (gen) l-0) (mul l (rec l-0))))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (6 2)) ((0 4) (2 0)) ((2 2) (4 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((5 1) (6 0)) ((5 2) (0 1))
    ((6 3) (0 3)) ((7 1) (6 1)) ((8 2) (7 0)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l))
  (precur (4 0) (7 0))
  (gen-st (pv self l))
  (facts (ltb-of self-0 (exp (gen) l-0)) (ltb-of self (exp (gen) l))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((5 1) (0 0)) ((5 1) (2 0)) ((5 1) (6 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-ltx-gen-ltx-of0 fact-resp-ltb-of0
    ltx-ltb trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 3) (exp (gen) l-0) (7 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l)) (send (cat (exp (gen) l) l)))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l-0) (mul l (rec l-0))))
      (send (cat (exp (gen) l-0) (mul l (rec l-0)))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-3 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 229)
  (parent 166)
  (unrealized (6 1) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb na-0 data) (self a b name)
    (pt pt-0 pt-1 pt-2 pval) (gb base) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 x-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor)
    (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l-0))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) x-0) (mul l-0 l-0 (rec x-0))))
  (defstrand init 3 (na na-0) (a a) (b b) (gb gb)
    (priv-stor priv-stor-0) (l l) (x x-0))
  (precedes ((0 2) (7 0)) ((0 4) (2 0)) ((2 2) (4 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((5 2) (0 1)) ((6 1) (0 3))
    ((7 1) (6 0)) ((8 1) (7 0)) ((9 2) (8 0)))
  (uniq-orig na na-0 l-0)
  (uniq-gen x x-0)
  (absent (x l-0) (x-0 l))
  (precur (4 0) (8 0))
  (gen-st (pv self l-0) (pv a l))
  (facts (ltb-of a (exp (gen) l)) (ltb-of b gb)
    (ltb-of self (exp (gen) l-0)) (ltx-of a l) (ltx-of self l-0))
  (leads-to ((5 1) (0 0)) ((5 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    gen-st-ltx-disclose-0 ltx-ltb trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand init 3) (exp (gen) x-0) (8 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l-0)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l-0)))
      (stor priv-stor (cat pt "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l-0)) (send (cat (exp (gen) l-0) l-0)))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) x-0) (mul l-0 l-0 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-0 l-0 (rec x-0)))))
    ((load priv-stor-0 (cat pt-2 (pv a l)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 a b (exp (gen) x-0)))))
  (label 230)
  (parent 167)
  (unrealized (7 0) (8 0) (9 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pval)
    (priv-stor locn) (y expt) (l x rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul y x))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul y x))))
  (deflistener (cat (exp (gen) l) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul y x))))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul y x))))
  (deflistener (cat (exp (gen) x) (mul l l (rec x))))
  (precedes ((0 2) (8 0)) ((0 4) (2 0)) ((2 2) (4 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((5 2) (0 1)) ((6 1) (0 3))
    ((7 1) (6 0)) ((8 1) (7 0)))
  (uniq-orig na l)
  (uniq-gen x)
  (absent (x l))
  (precur (4 0) (8 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((5 1) (0 0)) ((5 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 9 0 init 3) (exp (gen) x-0) (8 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul y x))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul y x))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul y x)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul y x))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul y x)))))
    ((recv (cat (exp (gen) l) l)) (send (cat (exp (gen) l) l)))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul y x))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul y x)))))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul y x))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul y x)))))
    ((recv (cat (exp (gen) x) (mul l l (rec x))))
      (send (cat (exp (gen) x) (mul l l (rec x))))))
  (label 231)
  (parent 167)
  (unrealized (7 0) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pval)
    (priv-stor locn) (x rndx) (y expt) (l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (gen) (mul l l)))
  (precedes ((0 2) (7 0)) ((0 4) (2 0)) ((2 2) (4 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((5 2) (0 1)) ((6 1) (0 3))
    ((7 1) (6 0)) ((8 1) (7 0)))
  (uniq-orig na l)
  (uniq-gen x)
  (absent (x l))
  (precur (4 0) (8 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((5 1) (0 0)) ((5 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (contracted (l-0 l) (w (mul l l))) (gen) (8 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l)) (send (cat (exp (gen) l) l)))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (gen) (mul l l))) (send (cat (gen) (mul l l)))))
  (label 232)
  (parent 167)
  (unrealized (7 0) (8 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb na-0 nb-0 data) (self a b name)
    (pt pt-0 pt-1 pt-2 pval) (ga gx base) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 y-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor)
    (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l-0))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) y-0) (mul l-0 l-0 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b) (ga ga) (gx gx)
    (priv-stor priv-stor-0) (l l) (y y-0))
  (precedes ((0 2) (7 0)) ((0 4) (2 0)) ((2 2) (4 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((5 2) (0 1)) ((6 1) (0 3))
    ((7 1) (6 0)) ((8 1) (7 0)) ((9 3) (8 0)))
  (uniq-orig na nb-0 l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (4 0) (8 0))
  (gen-st (pv self l-0) (pv b l))
  (facts (ltb-of b (exp (gen) l)) (ltb-of a ga)
    (ltb-of self (exp (gen) l-0)) (ltx-of b l) (ltx-of self l-0))
  (leads-to ((5 1) (0 0)) ((5 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    gen-st-ltx-disclose-0 ltx-ltb trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand resp 4) (exp (gen) y-0) (8 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l-0)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l-0)))
      (stor priv-stor (cat pt "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l-0)) (send (cat (exp (gen) l-0) l-0)))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) y-0) (mul l-0 l-0 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-0 l-0 (rec y-0)))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a b (hash (exp ga l) (exp gx y-0)))))))
  (label 233)
  (parent 167)
  (unrealized (7 0) (8 0) (9 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pval)
    (priv-stor locn) (x rndx) (y expt) (l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l))
  (precedes ((0 2) (7 0)) ((0 4) (2 0)) ((2 2) (4 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((5 2) (0 1)) ((5 2) (8 0))
    ((6 1) (0 3)) ((7 1) (6 0)) ((8 1) (7 0)))
  (uniq-orig na l)
  (uniq-gen x)
  (absent (x l))
  (precur (4 0) (8 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((5 1) (0 0)) ((5 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 9 5 ltx-gen 3) (exp (gen) l-0) (8 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l)) (send (cat (exp (gen) l) l)))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l)) (send (cat (exp (gen) l) l))))
  (label 234)
  (parent 167)
  (unrealized (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) (mul l l (rec l-0))))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (7 0)) ((0 4) (2 0)) ((2 2) (4 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((5 2) (0 1)) ((6 1) (0 3))
    ((7 1) (6 0)) ((8 1) (7 0)) ((9 2) (8 0)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (precur (4 0) (8 0))
  (gen-st (pv self l))
  (facts (ltb-of self-0 (exp (gen) l-0)) (ltb-of self (exp (gen) l))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((5 1) (0 0)) ((5 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-ltx-gen-ltx-of0 fact-resp-ltb-of0
    ltx-ltb trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 3) (exp (gen) l-0) (8 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l)) (send (cat (exp (gen) l) l)))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) (mul l l (rec l-0))))
      (send (cat (exp (gen) l-0) (mul l l (rec l-0)))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-3 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 235)
  (parent 167)
  (unrealized (7 0) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pval)
    (priv-stor locn) (x rndx) (y expt) (y-0 l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self) (ga (exp (gen) l))
    (gx (exp (gen) (mul x y (rec y-0)))) (priv-stor priv-stor) (l l)
    (y y-0))
  (precedes ((0 2) (7 2)) ((0 4) (2 0)) ((2 2) (4 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((5 1) (7 0)) ((5 2) (6 0))
    ((5 2) (7 1)) ((6 1) (0 1)) ((7 3) (0 3)))
  (uniq-orig na nb l)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l))
  (precur (4 0) (6 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((5 1) (0 0)) ((5 1) (2 0)) ((5 1) (7 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 8 5 ltx-gen 3) (exp (gen) l) (7 1))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l)) (send (cat (exp (gen) l) l)))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))))
  (label 236)
  (parent 168)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pval)
    (priv-stor locn) (x rndx) (y expt) (y-0 l rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self) (ga (exp (gen) l))
    (gx (exp (gen) (mul x y (rec y-0)))) (priv-stor priv-stor) (l l)
    (y y-0))
  (deflistener (cat (exp (gen) (mul l (rec w))) w))
  (precedes ((0 2) (7 2)) ((0 4) (2 0)) ((2 2) (4 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((5 1) (7 0)) ((5 2) (6 0))
    ((6 1) (0 1)) ((7 3) (0 3)) ((8 1) (7 1)))
  (uniq-orig na nb l)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l))
  (precur (4 0) (6 0) (8 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((5 1) (0 0)) ((5 1) (2 0)) ((5 1) (7 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul l (rec w))) w)) (exp (gen) l)
    (7 1))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l)) (send (cat (exp (gen) l) l)))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) (mul l (rec w))) w))
      (send (cat (exp (gen) (mul l (rec w))) w))))
  (label 237)
  (parent 168)
  (unrealized (8 0))
  (comment "6 in cohort - 6 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pval)
    (priv-stor locn) (x rndx) (y expt) (l rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) l) (one)))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l l (rec w))) w))
  (precedes ((0 2) (8 0)) ((0 4) (2 0)) ((2 2) (4 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((5 2) (6 0)) ((6 1) (0 1))
    ((7 1) (0 3)) ((8 1) (7 0)) ((9 1) (8 0)))
  (uniq-orig na l)
  (uniq-gen x)
  (absent (x l))
  (precur (4 0) (6 0) (9 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((5 1) (0 0)) ((5 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul l l (rec w))) w))
    (exp (gen) (mul l l)) (8 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l)) (send (cat (exp (gen) l) l)))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l l (rec w))) w))
      (send (cat (exp (gen) (mul l l (rec w))) w))))
  (label 238)
  (parent 169)
  (unrealized (9 0))
  (comment "6 in cohort - 6 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self-0) (b self)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self-0) (b self)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor) (l l) (y y-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (6 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (4 0))
    ((4 1) (1 0)) ((5 1) (6 0)) ((5 2) (0 1)) ((6 3) (0 3))
    ((7 1) (0 0)) ((7 2) (6 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self-0 (exp (gen) l-0)) (ltb-of self (exp (gen) l))
    (ltx-of self l) (ltx-of self-0 l-0))
  (leads-to ((5 1) (3 0)) ((5 1) (6 0)) ((7 1) (0 0)) ((7 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self-0 self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt "nil")) (send l-0))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (recv (cat na self-0 self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 239)
  (parent 170)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (self self-0 a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval) (gb base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (y-0 l l-0 l-1 x-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-1)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-1))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-1))
  (deflistener (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-1)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
  (defstrand init 3 (na na-0) (a a) (b b) (gb gb)
    (priv-stor priv-stor-1) (l l-0) (x x-0))
  (precedes ((0 2) (8 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (8 0))
    ((7 2) (0 1)) ((8 3) (0 3)) ((9 1) (8 1)) ((10 2) (9 0)))
  (uniq-orig na nb na-0 l l-1)
  (uniq-gen x y-0 x-0)
  (absent (x l-1) (y-0 l) (x-0 l-0))
  (precur (9 0))
  (gen-st (pv self l-1) (pv self-0 l) (pv a l-0))
  (facts (ltb-of a (exp (gen) l-0)) (ltb-of b gb)
    (ltb-of self (exp (gen) l-1)) (ltb-of self-0 (exp (gen) l))
    (ltx-of a l-0) (ltx-of self-0 l) (ltx-of self l-1))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((7 1) (3 0)) ((7 1) (8 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    gen-st-ltx-disclose-0 ltx-ltb trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand init 3) (exp (gen) x-0) (9 0))
  (traces
    ((load priv-stor (cat pt (pv self l-1)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l-1)))
      (stor priv-stor (cat pt-0 "nil")) (send l-1))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l-1))))
    ((recv (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-1)) (send (cat (exp (gen) l) l-1)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-1 (rec x-0)))))
    ((load priv-stor-1 (cat pt-5 (pv a l-0)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 a b (exp (gen) x-0)))))
  (label 240)
  (parent 171)
  (unrealized (8 1) (9 0) (10 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (y expt) (y-0 l l-0 x rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y x))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul y (rec y-0) x)))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) x) (mul l-0 (rec x))))
  (precedes ((0 2) (9 0)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (8 0))
    ((7 2) (0 1)) ((8 3) (0 3)) ((9 1) (8 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen y-0 x)
  (absent (y-0 l) (x l-0))
  (precur (9 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of self-0 (exp (gen) l))
    (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((7 1) (3 0)) ((7 1) (8 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 10 0 init 3) (exp (gen) x-0) (9 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x)))))
    ((load priv-stor (cat pt (pv self l-0)))
      (stor priv-stor (cat pt-0 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y x))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y x)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul y (rec y-0) x))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x)))))))
    ((recv (cat (exp (gen) x) (mul l-0 (rec x))))
      (send (cat (exp (gen) x) (mul l-0 (rec x))))))
  (label 241)
  (parent 171)
  (unrealized (8 1) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (gen) l-0))
  (precedes ((0 2) (8 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((4 1) (0 0)) ((4 1) (9 0)) ((5 1) (1 0)) ((6 1) (5 0))
    ((7 1) (8 0)) ((7 2) (0 1)) ((8 3) (0 3)) ((9 1) (8 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (9 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of self-0 (exp (gen) l))
    (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((7 1) (3 0)) ((7 1) (8 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (contracted (l-1 l-0) (w l-0)) (gen) (9 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l-0)))
      (stor priv-stor (cat pt-0 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0))))
  (label 242)
  (parent 171)
  (unrealized (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self-0) (b self)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self-0) (b self)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor) (l l) (y y-0))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (7 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (7 0)) ((6 2) (0 1))
    ((7 3) (0 3)) ((8 1) (7 1)) ((9 1) (0 0)) ((9 2) (8 0)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (8 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self-0 (exp (gen) l-0)) (ltb-of self (exp (gen) l))
    (ltx-of self l) (ltx-of self-0 l-0))
  (leads-to ((6 1) (3 0)) ((6 1) (7 0)) ((9 1) (0 0)) ((9 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 4 10 ltx-gen 3) (exp (gen) l-1)
    (9 0))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self-0 self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt "nil")) (send l-0))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (recv (cat na self-0 self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 243)
  (parent 171)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data)
    (self self-0 a b name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (ga gx base) (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx)
    (y expt) (y-0 l l-0 l-1 y-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-1)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-1))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-1))
  (deflistener (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-1)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) y-1) (mul l-1 (rec y-1))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b) (ga ga) (gx gx)
    (priv-stor priv-stor-1) (l l-0) (y y-1))
  (precedes ((0 2) (8 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (8 0))
    ((7 2) (0 1)) ((8 3) (0 3)) ((9 1) (8 1)) ((10 3) (9 0)))
  (uniq-orig na nb nb-0 l l-1)
  (uniq-gen x y-0 y-1)
  (absent (x l-1) (y-0 l) (y-1 l-0))
  (precur (9 0))
  (gen-st (pv self l-1) (pv self-0 l) (pv b l-0))
  (facts (ltb-of b (exp (gen) l-0)) (ltb-of a ga)
    (ltb-of self (exp (gen) l-1)) (ltb-of self-0 (exp (gen) l))
    (ltx-of b l-0) (ltx-of self-0 l) (ltx-of self l-1))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((7 1) (3 0)) ((7 1) (8 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    gen-st-ltx-disclose-0 ltx-ltb trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand resp 4) (exp (gen) y-1) (9 0))
  (traces
    ((load priv-stor (cat pt (pv self l-1)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l-1)))
      (stor priv-stor (cat pt-0 "nil")) (send l-1))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l-1))))
    ((recv (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-1)) (send (cat (exp (gen) l) l-1)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) y-1) (mul l-1 (rec y-1))))
      (send (cat (exp (gen) y-1) (mul l-1 (rec y-1)))))
    ((load priv-stor-1 (cat pt-5 (pv b l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b gx))
      (send
        (cat (exp (gen) y-1)
          (enc na-0 nb-0 a b (hash (exp ga l-0) (exp gx y-1)))))))
  (label 244)
  (parent 171)
  (unrealized (8 1) (9 0) (10 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) l-0) (mul l (rec l-0))))
  (precedes ((0 2) (8 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (8 0))
    ((7 2) (0 1)) ((7 2) (9 0)) ((8 3) (0 3)) ((9 1) (8 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l-0))
  (precur (9 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((7 1) (3 0)) ((7 1) (8 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 10 7 ltx-gen 3) (exp (gen) l-1)
    (9 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l-0) (mul l (rec l-0))))
      (send (cat (exp (gen) l-0) (mul l (rec l-0))))))
  (label 245)
  (parent 171)
  (unrealized (8 1) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data)
    (self self-0 self-1 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (y-0 l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self-1)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (8 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (8 0))
    ((7 2) (0 1)) ((8 3) (0 3)) ((9 1) (8 1)) ((10 2) (9 0)))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (9 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of self-1 (exp (gen) l-1)) (ltb-of self (exp (gen) l-0))
    (ltb-of self-0 (exp (gen) l)) (ltx-of self-1 l-1) (ltx-of self-0 l)
    (ltx-of self l-0))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((7 1) (3 0)) ((7 1) (8 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-ltx-gen-ltx-of0 fact-resp-ltb-of0
    ltx-ltb trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 3) (exp (gen) l-1) (9 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l-0)))
      (stor priv-stor (cat pt-0 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
      (send (cat (exp (gen) l-1) (mul l-0 (rec l-1)))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self-1 l-1)))
      (send
        (sig (body self-1 (exp (gen) l-1) (pubk "sig" self-1))
          (privk "sig" self-1)))))
  (label 246)
  (parent 171)
  (unrealized (8 1) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self-0) (b self)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand resp 4 (na na) (nb nb) (a self-0) (b self)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor) (l l) (y y-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (8 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (8 0)) ((6 2) (7 0))
    ((7 1) (0 1)) ((8 3) (0 3)) ((9 1) (0 0)) ((9 2) (8 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (7 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self-0 (exp (gen) l-0)) (ltb-of self (exp (gen) l))
    (ltx-of self l) (ltx-of self-0 l-0))
  (leads-to ((6 1) (3 0)) ((6 1) (8 0)) ((9 1) (0 0)) ((9 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 4 10 ltx-gen 3) (exp (gen) l-0)
    (9 1))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self-0 self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt "nil")) (send l-0))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (recv (cat na self-0 self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 247)
  (parent 174)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l y-0 l-0 rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) (mul l (rec w))) w))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (9 0))
    ((7 2) (8 0)) ((8 1) (0 1)) ((9 3) (0 3)) ((10 1) (9 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l-0))
  (precur (8 0) (10 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((7 1) (3 0)) ((7 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul l (rec w))) w)) (exp (gen) l)
    (9 1))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) (mul l (rec w))) w))
      (send (cat (exp (gen) (mul l (rec w))) w))))
  (label 248)
  (parent 174)
  (unrealized (10 0))
  (comment "7 in cohort - 7 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l-0) (one)))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (precedes ((0 2) (10 0)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (11 0))
    ((7 2) (8 0)) ((8 1) (0 1)) ((9 1) (0 3)) ((10 1) (9 0))
    ((11 1) (10 0)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (precur (8 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((7 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l) l-0))
    (exp (gen) (mul l l-0)) (10 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0))))
  (label 249)
  (parent 175)
  (unrealized (11 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l-0) (one)))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (precedes ((0 2) (10 0)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((4 1) (0 0)) ((4 1) (11 0)) ((5 1) (1 0)) ((6 1) (5 0))
    ((7 2) (8 0)) ((8 1) (0 1)) ((9 1) (0 3)) ((10 1) (9 0))
    ((11 1) (10 0)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (precur (8 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((7 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l-0) l))
    (exp (gen) (mul l l-0)) (10 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l))))
  (label 250)
  (parent 175)
  (unrealized (11 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l y-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((3 2) (7 0)) ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0))
    ((7 1) (6 0)) ((8 1) (9 0)) ((8 2) (0 1)) ((9 3) (0 3)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l-0))
  (precur (7 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((8 1) (3 0)) ((8 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 10 8 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv self-0 l-0))) (9 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))))
  (label 251)
  (parent 176)
  (unrealized (9 1))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (precedes ((0 2) (10 0)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((3 2) (7 0)) ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0))
    ((7 1) (6 0)) ((8 2) (0 1)) ((9 1) (0 3)) ((10 1) (9 0)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (precur (7 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((8 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation encryption-test
    (added-listener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))) (9 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
  (label 252)
  (parent 177)
  (unrealized (10 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (b self a name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (ga gx base)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (l y-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-0) (self self)
    (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (gen) l-0))
  (deflistener (cat (exp (gen) y-0) (mul (rec y-0) l-0)))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b) (ga ga) (gx gx)
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (7 0)) ((3 2) (8 0))
    ((4 1) (10 0)) ((5 1) (0 0)) ((6 1) (1 0)) ((7 1) (6 0))
    ((8 1) (7 0)) ((9 1) (0 1)) ((10 3) (9 0)))
  (uniq-orig na nb-0 l l-0)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l-0))
  (precur (8 0) (9 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltb-of a ga)
    (ltb-of b (exp (gen) l-0)) (ltx-of b l-0) (ltx-of self l))
  (leads-to ((4 1) (3 0)) ((4 1) (10 0)) ((5 1) (0 0)) ((5 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 4 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv b-0 l-1))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-1 (pv b l-0)))
      (stor priv-stor-0 (cat pt-2 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-3 ignore))
      (stor priv-stor-0 (cat pt-1 (pv b l-0))))
    ((load priv-stor (cat pt-4 ignore-0))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((recv (cat (exp (gen) y-0) (mul (rec y-0) l-0)))
      (send (cat (exp (gen) y-0) (mul (rec y-0) l-0))))
    ((load priv-stor-0 (cat pt-1 (pv b l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a b (hash (exp ga l-0) (exp gx y-0)))))))
  (label 253)
  (parent 178)
  (unrealized (0 1) (0 3) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (b self a name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (ga gx base)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (l y-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor-0)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self self)
    (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (gen) l))
  (deflistener (cat (exp (gen) y-0) (mul l (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b self) (ga ga) (gx gx)
    (priv-stor priv-stor) (l l-0) (y y-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (7 0)) ((3 2) (8 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((5 1) (10 0)) ((6 1) (1 0))
    ((7 1) (6 0)) ((8 1) (7 0)) ((9 1) (0 1)) ((10 3) (9 0)))
  (uniq-orig na nb-0 l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l-0))
  (precur (8 0) (9 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of a ga)
    (ltb-of b (exp (gen) l)) (ltx-of b l) (ltx-of self l-0))
  (leads-to ((4 1) (3 0)) ((5 1) (0 0)) ((5 1) (2 0)) ((5 1) (10 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 5 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv b-0 l-1))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l-0)))
      (stor priv-stor (cat pt-0 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-1 (pv b l)))
      (stor priv-stor-0 (cat pt-2 "nil")) (send l))
    ((load priv-stor-0 (cat pt-3 ignore))
      (stor priv-stor-0 (cat pt-1 (pv b l))))
    ((load priv-stor (cat pt-4 ignore-0))
      (stor priv-stor (cat pt (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (gen) l)) (send (cat (gen) l)))
    ((recv (cat (exp (gen) y-0) (mul l (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l (rec y-0)))))
    ((load priv-stor (cat pt (pv self l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a self gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a self (hash (exp ga l-0) (exp gx y-0)))))))
  (label 254)
  (parent 178)
  (unrealized (0 1) (0 3) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (b self a b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (ga gx base) (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx)
    (y expt) (l l-0 y-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-0) (self self)
    (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (gen) l-0))
  (deflistener (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b-0) (ga ga) (gx gx)
    (priv-stor priv-stor-1) (l l-1) (y y-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b-0)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (7 0)) ((3 2) (8 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((6 1) (1 0)) ((7 1) (6 0))
    ((8 1) (7 0)) ((9 1) (0 1)) ((10 3) (9 0)) ((11 1) (10 0)))
  (uniq-orig na nb-0 l l-0 l-1)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l-1))
  (precur (8 0) (9 0))
  (gen-st (pv b l-0) (pv self l) (pv b-0 l-1))
  (facts (ltb-of self (exp (gen) l)) (ltb-of b-0 (exp (gen) l-1))
    (ltb-of a ga) (ltb-of b (exp (gen) l-0)) (ltx-of b-0 l-1)
    (ltx-of b l-0) (ltx-of self l))
  (leads-to ((4 1) (3 0)) ((5 1) (0 0)) ((5 1) (2 0)) ((11 1) (10 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv b-0 l-1))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-1 (pv b l-0)))
      (stor priv-stor-0 (cat pt-2 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-3 ignore))
      (stor priv-stor-0 (cat pt-1 (pv b l-0))))
    ((load priv-stor (cat pt-4 ignore-0))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((recv (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-0 (rec y-0)))))
    ((load priv-stor-1 (cat pt-5 (pv b-0 l-1)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b-0 gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a b-0 (hash (exp ga l-1) (exp gx y-0))))))
    ((load priv-stor-1 (cat pt-6 ignore-1))
      (stor priv-stor-1 (cat pt-5 (pv b-0 l-1)))))
  (label 255)
  (parent 178)
  (unrealized (0 1) (0 3) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (b self b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (gb base)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (l x-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-0) (self self)
    (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (gen) l-0))
  (deflistener (cat (exp (gen) x-0) (mul (rec x-0) l-0)))
  (defstrand init 3 (na na-0) (a b) (b b-0) (gb gb)
    (priv-stor priv-stor-0) (l l-0) (x x-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (7 0)) ((3 2) (8 0))
    ((4 1) (10 0)) ((5 1) (0 0)) ((6 1) (1 0)) ((7 1) (6 0))
    ((8 1) (7 0)) ((9 1) (0 1)) ((10 2) (9 0)))
  (uniq-orig na na-0 l l-0)
  (uniq-gen x x-0)
  (absent (x l) (x-0 l-0))
  (precur (8 0) (9 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltb-of b-0 gb)
    (ltb-of b (exp (gen) l-0)) (ltx-of b l-0) (ltx-of self l))
  (leads-to ((4 1) (3 0)) ((4 1) (10 0)) ((5 1) (0 0)) ((5 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 4 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv a l-1))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-1 (pv b l-0)))
      (stor priv-stor-0 (cat pt-2 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-3 ignore))
      (stor priv-stor-0 (cat pt-1 (pv b l-0))))
    ((load priv-stor (cat pt-4 ignore-0))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((recv (cat (exp (gen) x-0) (mul (rec x-0) l-0)))
      (send (cat (exp (gen) x-0) (mul (rec x-0) l-0))))
    ((load priv-stor-0 (cat pt-1 (pv b l-0)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 b b-0 (exp (gen) x-0)))))
  (label 256)
  (parent 179)
  (unrealized (0 1) (0 3) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (b self b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (gb base)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (l x-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor-0)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self self)
    (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (gen) l))
  (deflistener (cat (exp (gen) x-0) (mul l (rec x-0))))
  (defstrand init 3 (na na-0) (a self) (b b-0) (gb gb)
    (priv-stor priv-stor) (l l-0) (x x-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (7 0)) ((3 2) (8 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((5 1) (10 0)) ((6 1) (1 0))
    ((7 1) (6 0)) ((8 1) (7 0)) ((9 1) (0 1)) ((10 2) (9 0)))
  (uniq-orig na na-0 l l-0)
  (uniq-gen x x-0)
  (absent (x l-0) (x-0 l-0))
  (precur (8 0) (9 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of b-0 gb)
    (ltb-of b (exp (gen) l)) (ltx-of b l) (ltx-of self l-0))
  (leads-to ((4 1) (3 0)) ((5 1) (0 0)) ((5 1) (2 0)) ((5 1) (10 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 5 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv a l-1))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l-0)))
      (stor priv-stor (cat pt-0 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-1 (pv b l)))
      (stor priv-stor-0 (cat pt-2 "nil")) (send l))
    ((load priv-stor-0 (cat pt-3 ignore))
      (stor priv-stor-0 (cat pt-1 (pv b l))))
    ((load priv-stor (cat pt-4 ignore-0))
      (stor priv-stor (cat pt (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (gen) l)) (send (cat (gen) l)))
    ((recv (cat (exp (gen) x-0) (mul l (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l (rec x-0)))))
    ((load priv-stor (cat pt (pv self l-0)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 self b-0 (exp (gen) x-0)))))
  (label 257)
  (parent 179)
  (unrealized (0 1) (0 3) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (b self a b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (gb base) (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (l l-0 x-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-0) (self self)
    (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (gen) l-0))
  (deflistener (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
  (defstrand init 3 (na na-0) (a a) (b b-0) (gb gb)
    (priv-stor priv-stor-1) (l l-1) (x x-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self a)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (7 0)) ((3 2) (8 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((6 1) (1 0)) ((7 1) (6 0))
    ((8 1) (7 0)) ((9 1) (0 1)) ((10 2) (9 0)) ((11 1) (10 0)))
  (uniq-orig na na-0 l l-0 l-1)
  (uniq-gen x x-0)
  (absent (x l) (x-0 l-1))
  (precur (8 0) (9 0))
  (gen-st (pv b l-0) (pv self l) (pv a l-1))
  (facts (ltb-of self (exp (gen) l)) (ltb-of a (exp (gen) l-1))
    (ltb-of b-0 gb) (ltb-of b (exp (gen) l-0)) (ltx-of a l-1)
    (ltx-of b l-0) (ltx-of self l))
  (leads-to ((4 1) (3 0)) ((5 1) (0 0)) ((5 1) (2 0)) ((11 1) (10 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv a l-1))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-1 (pv b l-0)))
      (stor priv-stor-0 (cat pt-2 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-3 ignore))
      (stor priv-stor-0 (cat pt-1 (pv b l-0))))
    ((load priv-stor (cat pt-4 ignore-0))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((recv (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-0 (rec x-0)))))
    ((load priv-stor-1 (cat pt-5 (pv a l-1)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 a b-0 (exp (gen) x-0))))
    ((load priv-stor-1 (cat pt-6 ignore-1))
      (stor priv-stor-1 (cat pt-5 (pv a l-1)))))
  (label 258)
  (parent 179)
  (unrealized (0 1) (0 3) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (l y-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (gen) l-0))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-1) (l l-0) (y y-0))
  (precedes ((0 2) (10 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((3 2) (7 0)) ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0))
    ((7 1) (6 0)) ((8 1) (0 1)) ((9 1) (10 0)) ((9 2) (8 0))
    ((10 3) (0 3)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l-0))
  (precur (7 0) (8 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((9 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    gen-st-ltx-disclose-0 ltx-of-fn trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation encryption-test (added-strand resp 4)
    (enc na nb self self-0
      (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))) (0 3))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-1 (cat pt-5 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))))
  (label 259)
  (parent 181)
  (unrealized (10 0) (10 1))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (gen) l-0))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (precedes ((0 2) (10 0)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((3 2) (7 0)) ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0))
    ((7 1) (6 0)) ((8 1) (0 1)) ((9 2) (8 0)) ((10 1) (0 3)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (precur (7 0) (8 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((9 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation encryption-test
    (added-listener
      (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
    (enc na nb self self-0
      (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))) (0 3))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
  (label 260)
  (parent 181)
  (unrealized (10 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self-0) (b self)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self-0) (b self)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor) (l l) (y y-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (8 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (5 0)) ((7 1) (8 0))
    ((7 2) (0 1)) ((7 2) (6 0)) ((8 3) (0 3)) ((9 1) (0 0))
    ((9 2) (8 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (6 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self-0 (exp (gen) l-0)) (ltb-of self (exp (gen) l))
    (ltx-of self l) (ltx-of self-0 l-0))
  (leads-to ((7 1) (3 0)) ((7 1) (8 0)) ((9 1) (0 0)) ((9 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 4 10 ltx-gen 3) (exp (gen) l-0)
    (9 1))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self-0 self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt "nil")) (send l-0))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (recv (cat na self-0 self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 261)
  (parent 184)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l y-0 l-0 rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) (mul l (rec w))) w))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (6 0))
    ((8 1) (9 0)) ((8 2) (0 1)) ((8 2) (7 0)) ((9 3) (0 3))
    ((10 1) (9 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l-0))
  (precur (7 0) (10 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((8 1) (3 0)) ((8 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul l (rec w))) w)) (exp (gen) l)
    (9 1))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) (mul l (rec w))) w))
      (send (cat (exp (gen) (mul l (rec w))) w))))
  (label 262)
  (parent 184)
  (unrealized (10 0))
  (comment "7 in cohort - 7 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (precedes ((0 2) (10 0)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (6 0))
    ((8 1) (11 0)) ((8 2) (0 1)) ((8 2) (7 0)) ((9 1) (0 3))
    ((10 1) (9 0)) ((11 1) (10 0)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (precur (7 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((8 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l) l-0))
    (exp (gen) (mul l l-0)) (10 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0))))
  (label 263)
  (parent 185)
  (unrealized (11 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (precedes ((0 2) (10 0)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((4 1) (0 0)) ((4 1) (11 0)) ((5 1) (1 0)) ((6 1) (5 0))
    ((7 1) (6 0)) ((8 2) (0 1)) ((8 2) (7 0)) ((9 1) (0 3))
    ((10 1) (9 0)) ((11 1) (10 0)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (precur (7 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((8 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l-0) l))
    (exp (gen) (mul l l-0)) (10 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l))))
  (label 264)
  (parent 185)
  (unrealized (11 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l y-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (precedes ((0 2) (10 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (6 0))
    ((8 1) (10 0)) ((8 2) (7 0)) ((8 2) (9 0)) ((9 1) (0 1))
    ((10 3) (0 3)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l-0))
  (precur (7 0) (9 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((8 1) (3 0)) ((8 1) (10 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 8 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv self-0 l-0))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))))
  (label 265)
  (parent 192)
  (unrealized (10 1))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l-0) (one)))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (precedes ((0 2) (11 0)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (6 0))
    ((8 2) (7 0)) ((8 2) (9 0)) ((9 1) (0 1)) ((10 1) (0 3))
    ((11 1) (10 0)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (precur (7 0) (9 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((8 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation encryption-test
    (added-listener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
  (label 266)
  (parent 193)
  (unrealized (11 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (precedes ((0 2) (7 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (4 0))
    ((4 1) (1 0)) ((5 1) (0 0)) ((5 2) (7 1)) ((6 1) (7 0))
    ((6 2) (0 1)) ((7 3) (0 3)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of self-0 (exp (gen) l))
    (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((5 1) (0 0)) ((5 1) (2 0)) ((6 1) (3 0)) ((6 1) (7 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (stor priv-stor (cat pt "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))))
  (label 267)
  (parent 194)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (self self-0 a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval) (gb base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (y-0 l l-0 l-1 x-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-1)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-1))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-1) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-1)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
  (defstrand init 3 (na na-0) (a a) (b b) (gb gb)
    (priv-stor priv-stor-1) (l l-0) (x x-0))
  (precedes ((0 2) (8 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (0 0)) ((6 2) (5 0))
    ((7 1) (8 0)) ((7 2) (0 1)) ((8 3) (0 3)) ((9 1) (8 1))
    ((10 2) (9 0)))
  (uniq-orig na nb na-0 l l-1)
  (uniq-gen x y-0 x-0)
  (absent (x l-1) (y-0 l) (x-0 l-0))
  (precur (9 0))
  (gen-st (pv self l-1) (pv self-0 l) (pv a l-0))
  (facts (ltb-of a (exp (gen) l-0)) (ltb-of b gb)
    (ltb-of self (exp (gen) l-1)) (ltb-of self-0 (exp (gen) l))
    (ltx-of a l-0) (ltx-of self-0 l) (ltx-of self l-1))
  (leads-to ((6 1) (0 0)) ((6 1) (2 0)) ((7 1) (3 0)) ((7 1) (8 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    gen-st-ltx-disclose-0 ltx-ltb trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand init 3) (exp (gen) x-0) (9 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l-1)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l-1)))
      (stor priv-stor (cat pt "nil")) (send l-1))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-1) l)) (send (cat (exp (gen) l-1) l)))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-1 (rec x-0)))))
    ((load priv-stor-1 (cat pt-5 (pv a l-0)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 a b (exp (gen) x-0)))))
  (label 268)
  (parent 195)
  (unrealized (8 1) (9 0) (10 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (y expt) (y-0 l l-0 x rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y x))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul y (rec y-0) x)))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) x) (mul l-0 (rec x))))
  (precedes ((0 2) (9 0)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (0 0)) ((6 2) (5 0))
    ((7 1) (8 0)) ((7 2) (0 1)) ((8 3) (0 3)) ((9 1) (8 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen y-0 x)
  (absent (y-0 l) (x l-0))
  (precur (9 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of self-0 (exp (gen) l))
    (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((6 1) (0 0)) ((6 1) (2 0)) ((7 1) (3 0)) ((7 1) (8 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 10 0 init 3) (exp (gen) x-0) (9 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x)))))
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (stor priv-stor (cat pt "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y x))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y x)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul y (rec y-0) x))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x)))))))
    ((recv (cat (exp (gen) x) (mul l-0 (rec x))))
      (send (cat (exp (gen) x) (mul l-0 (rec x))))))
  (label 269)
  (parent 195)
  (unrealized (8 1) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (gen) l-0))
  (precedes ((0 2) (8 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (0 0)) ((6 1) (9 0))
    ((6 2) (5 0)) ((7 1) (8 0)) ((7 2) (0 1)) ((8 3) (0 3))
    ((9 1) (8 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (9 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of self-0 (exp (gen) l))
    (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((6 1) (0 0)) ((6 1) (2 0)) ((7 1) (3 0)) ((7 1) (8 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (contracted (l-1 l-0) (w l-0)) (gen) (9 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (stor priv-stor (cat pt "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0))))
  (label 270)
  (parent 195)
  (unrealized (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) l-0) (one)))
  (precedes ((0 2) (8 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (0 0)) ((6 2) (9 0))
    ((7 1) (8 0)) ((7 2) (0 1)) ((8 3) (0 3)) ((9 1) (8 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (9 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of self-0 (exp (gen) l))
    (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((6 1) (0 0)) ((6 1) (2 0)) ((7 1) (3 0)) ((7 1) (8 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 10 6 ltx-gen 3) (exp (gen) l-1)
    (9 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (stor priv-stor (cat pt "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one)))))
  (label 271)
  (parent 195)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data)
    (self self-0 a b name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (ga gx base) (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx)
    (y expt) (y-0 l l-0 l-1 y-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-1)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-1))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-1) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-1)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) y-1) (mul l-1 (rec y-1))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b) (ga ga) (gx gx)
    (priv-stor priv-stor-1) (l l-0) (y y-1))
  (precedes ((0 2) (8 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (0 0)) ((6 2) (5 0))
    ((7 1) (8 0)) ((7 2) (0 1)) ((8 3) (0 3)) ((9 1) (8 1))
    ((10 3) (9 0)))
  (uniq-orig na nb nb-0 l l-1)
  (uniq-gen x y-0 y-1)
  (absent (x l-1) (y-0 l) (y-1 l-0))
  (precur (9 0))
  (gen-st (pv self l-1) (pv self-0 l) (pv b l-0))
  (facts (ltb-of b (exp (gen) l-0)) (ltb-of a ga)
    (ltb-of self (exp (gen) l-1)) (ltb-of self-0 (exp (gen) l))
    (ltx-of b l-0) (ltx-of self-0 l) (ltx-of self l-1))
  (leads-to ((6 1) (0 0)) ((6 1) (2 0)) ((7 1) (3 0)) ((7 1) (8 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    gen-st-ltx-disclose-0 ltx-ltb trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand resp 4) (exp (gen) y-1) (9 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l-1)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l-1)))
      (stor priv-stor (cat pt "nil")) (send l-1))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-1) l)) (send (cat (exp (gen) l-1) l)))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) y-1) (mul l-1 (rec y-1))))
      (send (cat (exp (gen) y-1) (mul l-1 (rec y-1)))))
    ((load priv-stor-1 (cat pt-5 (pv b l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b gx))
      (send
        (cat (exp (gen) y-1)
          (enc na-0 nb-0 a b (hash (exp ga l-0) (exp gx y-1)))))))
  (label 272)
  (parent 195)
  (unrealized (8 1) (9 0) (10 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) l-0) (mul l (rec l-0))))
  (precedes ((0 2) (8 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (0 0)) ((6 2) (5 0))
    ((7 1) (8 0)) ((7 2) (0 1)) ((7 2) (9 0)) ((8 3) (0 3))
    ((9 1) (8 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l-0))
  (precur (9 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((6 1) (0 0)) ((6 1) (2 0)) ((7 1) (3 0)) ((7 1) (8 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 10 7 ltx-gen 3) (exp (gen) l-1)
    (9 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l-0) (mul l (rec l-0))))
      (send (cat (exp (gen) l-0) (mul l (rec l-0))))))
  (label 273)
  (parent 195)
  (unrealized (8 1) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data)
    (self self-0 self-1 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (y-0 l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self-1)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (8 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (0 0)) ((6 2) (5 0))
    ((7 1) (8 0)) ((7 2) (0 1)) ((8 3) (0 3)) ((9 1) (8 1))
    ((10 2) (9 0)))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (9 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of self-1 (exp (gen) l-1)) (ltb-of self (exp (gen) l-0))
    (ltb-of self-0 (exp (gen) l)) (ltx-of self-1 l-1) (ltx-of self-0 l)
    (ltx-of self l-0))
  (leads-to ((6 1) (0 0)) ((6 1) (2 0)) ((7 1) (3 0)) ((7 1) (8 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-ltx-gen-ltx-of0 fact-resp-ltb-of0
    ltx-ltb trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 3) (exp (gen) l-1) (9 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (stor priv-stor (cat pt "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
      (send (cat (exp (gen) l-1) (mul l-0 (rec l-1)))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self-1 l-1)))
      (send
        (sig (body self-1 (exp (gen) l-1) (pubk "sig" self-1))
          (privk "sig" self-1)))))
  (label 274)
  (parent 195)
  (unrealized (8 1) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (0 0)) ((6 2) (9 1))
    ((7 1) (0 1)) ((8 1) (9 0)) ((8 2) (7 0)) ((9 3) (0 3)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (7 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of self-0 (exp (gen) l))
    (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((6 1) (0 0)) ((6 1) (2 0)) ((8 1) (3 0)) ((8 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 10 6 ltx-gen 3) (exp (gen) l-0)
    (9 1))
  (traces
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (stor priv-stor (cat pt "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))))
  (label 275)
  (parent 198)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l y-0 l-0 rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) (mul l (rec w))) w))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (0 0)) ((6 2) (5 0))
    ((7 1) (0 1)) ((8 1) (9 0)) ((8 2) (7 0)) ((9 3) (0 3))
    ((10 1) (9 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l-0))
  (precur (7 0) (10 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((6 1) (0 0)) ((6 1) (2 0)) ((8 1) (3 0)) ((8 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul l (rec w))) w)) (exp (gen) l)
    (9 1))
  (traces
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) (mul l (rec w))) w))
      (send (cat (exp (gen) (mul l (rec w))) w))))
  (label 276)
  (parent 198)
  (unrealized (10 0))
  (comment "7 in cohort - 7 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (precedes ((0 2) (10 0)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (0 0)) ((6 2) (5 0))
    ((7 1) (0 1)) ((8 1) (11 0)) ((8 2) (7 0)) ((9 1) (0 3))
    ((10 1) (9 0)) ((11 1) (10 0)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (precur (7 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((6 1) (0 0)) ((6 1) (2 0)) ((8 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l) l-0))
    (exp (gen) (mul l l-0)) (10 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0))))
  (label 277)
  (parent 199)
  (unrealized (11 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (precedes ((0 2) (10 0)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (0 0)) ((6 1) (11 0))
    ((6 2) (5 0)) ((7 1) (0 1)) ((8 2) (7 0)) ((9 1) (0 3))
    ((10 1) (9 0)) ((11 1) (10 0)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (precur (7 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((6 1) (0 0)) ((6 1) (2 0)) ((8 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l-0) l))
    (exp (gen) (mul l l-0)) (10 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l))))
  (label 278)
  (parent 199)
  (unrealized (11 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l y-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (gen) l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (7 0))
    ((3 2) (6 0)) ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0))
    ((7 1) (6 0)) ((8 1) (9 0)) ((8 2) (0 1)) ((9 3) (0 3)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l-0))
  (precur (7 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((8 1) (3 0)) ((8 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 10 8 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv self-0 l-0))) (9 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (gen) l)) (send (cat (gen) l)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))))
  (label 279)
  (parent 200)
  (unrealized (9 1))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (gen) l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (precedes ((0 2) (10 0)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (7 0))
    ((3 2) (6 0)) ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0))
    ((7 1) (6 0)) ((8 2) (0 1)) ((9 1) (0 3)) ((10 1) (9 0)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (precur (7 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((8 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation encryption-test
    (added-listener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))) (9 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (gen) l)) (send (cat (gen) l)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
  (label 280)
  (parent 201)
  (unrealized (10 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (b self a name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (ga gx base)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (l y-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-0) (self self)
    (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (gen) l))
  (deflistener (cat (exp (gen) y-0) (mul (rec y-0) l-0)))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b) (ga ga) (gx gx)
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (8 0)) ((3 2) (7 0))
    ((4 1) (10 0)) ((5 1) (0 0)) ((6 1) (1 0)) ((7 1) (6 0))
    ((8 1) (7 0)) ((9 1) (0 1)) ((10 3) (9 0)))
  (uniq-orig na nb-0 l l-0)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l-0))
  (precur (8 0) (9 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltb-of a ga)
    (ltb-of b (exp (gen) l-0)) (ltx-of b l-0) (ltx-of self l))
  (leads-to ((4 1) (3 0)) ((4 1) (10 0)) ((5 1) (0 0)) ((5 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 4 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv b-0 l-1))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-1 (pv b l-0)))
      (stor priv-stor-0 (cat pt-2 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-3 ignore))
      (stor priv-stor-0 (cat pt-1 (pv b l-0))))
    ((load priv-stor (cat pt-4 ignore-0))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (gen) l)) (send (cat (gen) l)))
    ((recv (cat (exp (gen) y-0) (mul (rec y-0) l-0)))
      (send (cat (exp (gen) y-0) (mul (rec y-0) l-0))))
    ((load priv-stor-0 (cat pt-1 (pv b l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a b (hash (exp ga l-0) (exp gx y-0)))))))
  (label 281)
  (parent 202)
  (unrealized (0 1) (0 3) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (b self a name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (ga gx base)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (l y-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor-0)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self self)
    (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (gen) l-0))
  (deflistener (cat (exp (gen) y-0) (mul l (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b self) (ga ga) (gx gx)
    (priv-stor priv-stor) (l l-0) (y y-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (8 0)) ((3 2) (7 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((5 1) (10 0)) ((6 1) (1 0))
    ((7 1) (6 0)) ((8 1) (7 0)) ((9 1) (0 1)) ((10 3) (9 0)))
  (uniq-orig na nb-0 l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l-0))
  (precur (8 0) (9 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of a ga)
    (ltb-of b (exp (gen) l)) (ltx-of b l) (ltx-of self l-0))
  (leads-to ((4 1) (3 0)) ((5 1) (0 0)) ((5 1) (2 0)) ((5 1) (10 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 5 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv b-0 l-1))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l-0)))
      (stor priv-stor (cat pt-0 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-1 (pv b l)))
      (stor priv-stor-0 (cat pt-2 "nil")) (send l))
    ((load priv-stor-0 (cat pt-3 ignore))
      (stor priv-stor-0 (cat pt-1 (pv b l))))
    ((load priv-stor (cat pt-4 ignore-0))
      (stor priv-stor (cat pt (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((recv (cat (exp (gen) y-0) (mul l (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l (rec y-0)))))
    ((load priv-stor (cat pt (pv self l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a self gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a self (hash (exp ga l-0) (exp gx y-0)))))))
  (label 282)
  (parent 202)
  (unrealized (0 1) (0 3) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (b self a b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (ga gx base) (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx)
    (y expt) (l l-0 y-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-0) (self self)
    (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (gen) l))
  (deflistener (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b-0) (ga ga) (gx gx)
    (priv-stor priv-stor-1) (l l-1) (y y-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b-0)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (8 0)) ((3 2) (7 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((6 1) (1 0)) ((7 1) (6 0))
    ((8 1) (7 0)) ((9 1) (0 1)) ((10 3) (9 0)) ((11 1) (10 0)))
  (uniq-orig na nb-0 l l-0 l-1)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l-1))
  (precur (8 0) (9 0))
  (gen-st (pv b l-0) (pv self l) (pv b-0 l-1))
  (facts (ltb-of self (exp (gen) l)) (ltb-of b-0 (exp (gen) l-1))
    (ltb-of a ga) (ltb-of b (exp (gen) l-0)) (ltx-of b-0 l-1)
    (ltx-of b l-0) (ltx-of self l))
  (leads-to ((4 1) (3 0)) ((5 1) (0 0)) ((5 1) (2 0)) ((11 1) (10 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv b-0 l-1))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-1 (pv b l-0)))
      (stor priv-stor-0 (cat pt-2 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-3 ignore))
      (stor priv-stor-0 (cat pt-1 (pv b l-0))))
    ((load priv-stor (cat pt-4 ignore-0))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (gen) l)) (send (cat (gen) l)))
    ((recv (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-0 (rec y-0)))))
    ((load priv-stor-1 (cat pt-5 (pv b-0 l-1)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b-0 gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a b-0 (hash (exp ga l-1) (exp gx y-0))))))
    ((load priv-stor-1 (cat pt-6 ignore-1))
      (stor priv-stor-1 (cat pt-5 (pv b-0 l-1)))))
  (label 283)
  (parent 202)
  (unrealized (0 1) (0 3) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (b self b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (gb base)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (l x-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-0) (self self)
    (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (gen) l))
  (deflistener (cat (exp (gen) x-0) (mul (rec x-0) l-0)))
  (defstrand init 3 (na na-0) (a b) (b b-0) (gb gb)
    (priv-stor priv-stor-0) (l l-0) (x x-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (8 0)) ((3 2) (7 0))
    ((4 1) (10 0)) ((5 1) (0 0)) ((6 1) (1 0)) ((7 1) (6 0))
    ((8 1) (7 0)) ((9 1) (0 1)) ((10 2) (9 0)))
  (uniq-orig na na-0 l l-0)
  (uniq-gen x x-0)
  (absent (x l) (x-0 l-0))
  (precur (8 0) (9 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltb-of b-0 gb)
    (ltb-of b (exp (gen) l-0)) (ltx-of b l-0) (ltx-of self l))
  (leads-to ((4 1) (3 0)) ((4 1) (10 0)) ((5 1) (0 0)) ((5 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 4 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv a l-1))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-1 (pv b l-0)))
      (stor priv-stor-0 (cat pt-2 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-3 ignore))
      (stor priv-stor-0 (cat pt-1 (pv b l-0))))
    ((load priv-stor (cat pt-4 ignore-0))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (gen) l)) (send (cat (gen) l)))
    ((recv (cat (exp (gen) x-0) (mul (rec x-0) l-0)))
      (send (cat (exp (gen) x-0) (mul (rec x-0) l-0))))
    ((load priv-stor-0 (cat pt-1 (pv b l-0)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 b b-0 (exp (gen) x-0)))))
  (label 284)
  (parent 203)
  (unrealized (0 1) (0 3) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (b self b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (gb base)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (l x-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor-0)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self self)
    (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (gen) l-0))
  (deflistener (cat (exp (gen) x-0) (mul l (rec x-0))))
  (defstrand init 3 (na na-0) (a self) (b b-0) (gb gb)
    (priv-stor priv-stor) (l l-0) (x x-0))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (8 0)) ((3 2) (7 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((5 1) (10 0)) ((6 1) (1 0))
    ((7 1) (6 0)) ((8 1) (7 0)) ((9 1) (0 1)) ((10 2) (9 0)))
  (uniq-orig na na-0 l l-0)
  (uniq-gen x x-0)
  (absent (x l-0) (x-0 l-0))
  (precur (8 0) (9 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of b-0 gb)
    (ltb-of b (exp (gen) l)) (ltx-of b l) (ltx-of self l-0))
  (leads-to ((4 1) (3 0)) ((5 1) (0 0)) ((5 1) (2 0)) ((5 1) (10 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 5 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv a l-1))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l-0)))
      (stor priv-stor (cat pt-0 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-1 (pv b l)))
      (stor priv-stor-0 (cat pt-2 "nil")) (send l))
    ((load priv-stor-0 (cat pt-3 ignore))
      (stor priv-stor-0 (cat pt-1 (pv b l))))
    ((load priv-stor (cat pt-4 ignore-0))
      (stor priv-stor (cat pt (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((recv (cat (exp (gen) x-0) (mul l (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l (rec x-0)))))
    ((load priv-stor (cat pt (pv self l-0)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 self b-0 (exp (gen) x-0)))))
  (label 285)
  (parent 203)
  (unrealized (0 1) (0 3) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (b self a b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (gb base) (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (l l-0 x-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-0) (self self)
    (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (gen) l))
  (deflistener (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
  (defstrand init 3 (na na-0) (a a) (b b-0) (gb gb)
    (priv-stor priv-stor-1) (l l-1) (x x-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self a)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (8 0)) ((3 2) (7 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((6 1) (1 0)) ((7 1) (6 0))
    ((8 1) (7 0)) ((9 1) (0 1)) ((10 2) (9 0)) ((11 1) (10 0)))
  (uniq-orig na na-0 l l-0 l-1)
  (uniq-gen x x-0)
  (absent (x l) (x-0 l-1))
  (precur (8 0) (9 0))
  (gen-st (pv b l-0) (pv self l) (pv a l-1))
  (facts (ltb-of self (exp (gen) l)) (ltb-of a (exp (gen) l-1))
    (ltb-of b-0 gb) (ltb-of b (exp (gen) l-0)) (ltx-of a l-1)
    (ltx-of b l-0) (ltx-of self l))
  (leads-to ((4 1) (3 0)) ((5 1) (0 0)) ((5 1) (2 0)) ((11 1) (10 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv a l-1))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-1 (pv b l-0)))
      (stor priv-stor-0 (cat pt-2 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-3 ignore))
      (stor priv-stor-0 (cat pt-1 (pv b l-0))))
    ((load priv-stor (cat pt-4 ignore-0))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (gen) l)) (send (cat (gen) l)))
    ((recv (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-0 (rec x-0)))))
    ((load priv-stor-1 (cat pt-5 (pv a l-1)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 a b-0 (exp (gen) x-0))))
    ((load priv-stor-1 (cat pt-6 ignore-1))
      (stor priv-stor-1 (cat pt-5 (pv a l-1)))))
  (label 286)
  (parent 203)
  (unrealized (0 1) (0 3) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (l y-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (gen) l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-1) (l l-0) (y y-0))
  (precedes ((0 2) (10 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (7 0))
    ((3 2) (6 0)) ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0))
    ((7 1) (6 0)) ((8 1) (0 1)) ((9 1) (10 0)) ((9 2) (8 0))
    ((10 3) (0 3)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l-0))
  (precur (7 0) (8 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((9 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    gen-st-ltx-disclose-0 ltx-of-fn trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation encryption-test (added-strand resp 4)
    (enc na nb self self-0
      (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))) (0 3))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (gen) l)) (send (cat (gen) l)))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-1 (cat pt-5 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))))
  (label 287)
  (parent 205)
  (unrealized (10 0) (10 1))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (gen) l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (precedes ((0 2) (10 0)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (7 0))
    ((3 2) (6 0)) ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0))
    ((7 1) (6 0)) ((8 1) (0 1)) ((9 2) (8 0)) ((10 1) (0 3)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (precur (7 0) (8 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((9 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation encryption-test
    (added-listener
      (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
    (enc na nb self self-0
      (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))) (0 3))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (gen) l)) (send (cat (gen) l)))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
  (label 288)
  (parent 205)
  (unrealized (10 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (5 0)) ((7 1) (0 0))
    ((7 2) (6 0)) ((7 2) (9 1)) ((8 1) (9 0)) ((8 2) (0 1))
    ((9 3) (0 3)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (6 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of self-0 (exp (gen) l))
    (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((7 1) (0 0)) ((7 1) (2 0)) ((8 1) (3 0)) ((8 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 10 7 ltx-gen 3) (exp (gen) l-0)
    (9 1))
  (traces
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (stor priv-stor (cat pt "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))))
  (label 289)
  (parent 208)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l y-0 l-0 rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) (mul l (rec w))) w))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (5 0)) ((7 1) (0 0))
    ((7 2) (6 0)) ((8 1) (9 0)) ((8 2) (0 1)) ((9 3) (0 3))
    ((10 1) (9 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l-0))
  (precur (6 0) (10 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((7 1) (0 0)) ((7 1) (2 0)) ((8 1) (3 0)) ((8 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul l (rec w))) w)) (exp (gen) l)
    (9 1))
  (traces
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) (mul l (rec w))) w))
      (send (cat (exp (gen) (mul l (rec w))) w))))
  (label 290)
  (parent 208)
  (unrealized (10 0))
  (comment "7 in cohort - 7 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (precedes ((0 2) (10 0)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (5 0)) ((7 1) (0 0))
    ((7 2) (6 0)) ((8 1) (11 0)) ((8 2) (0 1)) ((9 1) (0 3))
    ((10 1) (9 0)) ((11 1) (10 0)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (precur (6 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((7 1) (0 0)) ((7 1) (2 0)) ((8 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l) l-0))
    (exp (gen) (mul l l-0)) (10 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0))))
  (label 291)
  (parent 209)
  (unrealized (11 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (precedes ((0 2) (10 0)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (5 0)) ((7 1) (0 0))
    ((7 1) (11 0)) ((7 2) (6 0)) ((8 2) (0 1)) ((9 1) (0 3))
    ((10 1) (9 0)) ((11 1) (10 0)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (precur (6 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((7 1) (0 0)) ((7 1) (2 0)) ((8 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l-0) l))
    (exp (gen) (mul l l-0)) (10 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l))))
  (label 292)
  (parent 209)
  (unrealized (11 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l y-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (precedes ((0 2) (10 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (5 0)) ((7 1) (0 0))
    ((7 2) (6 0)) ((8 1) (0 1)) ((9 1) (10 0)) ((9 2) (8 0))
    ((10 3) (0 3)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l-0))
  (precur (6 0) (8 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((7 1) (0 0)) ((7 1) (2 0)) ((9 1) (3 0)) ((9 1) (10 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 9 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv self-0 l-0))) (10 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))))
  (label 293)
  (parent 216)
  (unrealized (10 1))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (precedes ((0 2) (11 0)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (5 0)) ((7 1) (0 0))
    ((7 2) (6 0)) ((8 1) (0 1)) ((9 2) (8 0)) ((10 1) (0 3))
    ((11 1) (10 0)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (precur (6 0) (8 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((7 1) (0 0)) ((7 1) (2 0)) ((9 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation encryption-test
    (added-listener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))) (10 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
  (label 294)
  (parent 217)
  (unrealized (11 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pval)
    (priv-stor locn) (x rndx) (y expt) (y-0 l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (gen) (mul l l)))
  (deflistener l)
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self) (ga (exp (gen) l))
    (gx (exp (gen) (mul x y (rec y-0)))) (priv-stor priv-stor) (l l)
    (y y-0))
  (precedes ((0 2) (6 2)) ((0 4) (2 0)) ((2 2) (4 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((5 1) (6 0)) ((5 2) (0 1))
    ((5 2) (6 1)) ((6 3) (0 3)))
  (uniq-orig na nb l)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l))
  (precur (3 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((5 1) (0 0)) ((5 1) (2 0)) ((5 1) (6 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (gen) (mul l l))) (send (cat (gen) (mul l l))))
    ((recv l) (send l))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))))
  (label 295)
  (parent 218)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb na-0 data) (self a b name)
    (pt pt-0 pt-1 pt-2 pval) (gb base) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 x-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor)
    (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (gen) (mul l-0 l-0)))
  (deflistener l-0)
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
  (defstrand init 3 (na na-0) (a a) (b b) (gb gb)
    (priv-stor priv-stor-0) (l l) (x x-0))
  (precedes ((0 2) (7 2)) ((0 4) (2 0)) ((2 2) (5 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (4 0)) ((6 1) (0 0)) ((6 1) (7 0))
    ((6 2) (0 1)) ((7 3) (0 3)) ((8 1) (7 1)) ((9 2) (8 0)))
  (uniq-orig na nb na-0 l-0)
  (uniq-gen x y-0 x-0)
  (absent (x l-0) (y-0 l-0) (x-0 l))
  (precur (4 0) (8 0))
  (gen-st (pv self l-0) (pv a l))
  (facts (ltb-of a (exp (gen) l)) (ltb-of b gb)
    (ltb-of self (exp (gen) l-0)) (ltx-of a l) (ltx-of self l-0))
  (leads-to ((6 1) (0 0)) ((6 1) (2 0)) ((6 1) (7 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    gen-st-ltx-disclose-0 ltx-ltb trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand init 3) (exp (gen) x-0) (8 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l-0)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l-0)))
      (stor priv-stor (cat pt "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (gen) (mul l-0 l-0))) (send (cat (gen) (mul l-0 l-0))))
    ((recv l-0) (send l-0))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-1 (pv self l-0)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self
            (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-0 (rec x-0)))))
    ((load priv-stor-0 (cat pt-2 (pv a l)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 a b (exp (gen) x-0)))))
  (label 296)
  (parent 219)
  (unrealized (7 1) (8 0) (9 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pval)
    (priv-stor locn) (y expt) (y-0 l x rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul y x))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul y x))))
  (deflistener (cat (gen) (mul l l)))
  (deflistener l)
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self) (ga (exp (gen) l))
    (gx (exp (gen) (mul y (rec y-0) x))) (priv-stor priv-stor) (l l)
    (y y-0))
  (deflistener (cat (exp (gen) x) (mul l (rec x))))
  (precedes ((0 2) (8 0)) ((0 4) (2 0)) ((2 2) (5 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (4 0)) ((6 1) (0 0)) ((6 1) (7 0))
    ((6 2) (0 1)) ((7 3) (0 3)) ((8 1) (7 1)))
  (uniq-orig na nb l)
  (uniq-gen y-0 x)
  (absent (y-0 l) (x l))
  (precur (4 0) (8 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((6 1) (0 0)) ((6 1) (2 0)) ((6 1) (7 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 9 0 init 3) (exp (gen) x-0) (8 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul y x))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul y x))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul y x)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul y x))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul y x)))))
    ((recv (cat (gen) (mul l l))) (send (cat (gen) (mul l l))))
    ((recv l) (send l))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self (exp (gen) (mul y (rec y-0) x))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul y x)))))))
    ((recv (cat (exp (gen) x) (mul l (rec x))))
      (send (cat (exp (gen) x) (mul l (rec x))))))
  (label 297)
  (parent 219)
  (unrealized (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pval)
    (priv-stor locn) (x rndx) (y expt) (y-0 l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (gen) (mul l l)))
  (deflistener l)
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self) (ga (exp (gen) l))
    (gx (exp (gen) (mul x y (rec y-0)))) (priv-stor priv-stor) (l l)
    (y y-0))
  (deflistener (cat (gen) l))
  (precedes ((0 2) (7 2)) ((0 4) (2 0)) ((2 2) (5 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (4 0)) ((6 1) (0 0)) ((6 1) (7 0))
    ((6 1) (8 0)) ((6 2) (0 1)) ((7 3) (0 3)) ((8 1) (7 1)))
  (uniq-orig na nb l)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l))
  (precur (4 0) (8 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((6 1) (0 0)) ((6 1) (2 0)) ((6 1) (7 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (contracted (l-0 l) (w l)) (gen) (8 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (gen) (mul l l))) (send (cat (gen) (mul l l))))
    ((recv l) (send l))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))))
    ((recv (cat (gen) l)) (send (cat (gen) l))))
  (label 298)
  (parent 219)
  (unrealized (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb na-0 nb-0 data) (self a b name)
    (pt pt-0 pt-1 pt-2 pval) (ga gx base) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 y-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor)
    (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (gen) (mul l-0 l-0)))
  (deflistener l-0)
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) y-1) (mul l-0 (rec y-1))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b) (ga ga) (gx gx)
    (priv-stor priv-stor-0) (l l) (y y-1))
  (precedes ((0 2) (7 2)) ((0 4) (2 0)) ((2 2) (5 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (4 0)) ((6 1) (0 0)) ((6 1) (7 0))
    ((6 2) (0 1)) ((7 3) (0 3)) ((8 1) (7 1)) ((9 3) (8 0)))
  (uniq-orig na nb nb-0 l-0)
  (uniq-gen x y-0 y-1)
  (absent (x l-0) (y-0 l-0) (y-1 l))
  (precur (4 0) (8 0))
  (gen-st (pv self l-0) (pv b l))
  (facts (ltb-of b (exp (gen) l)) (ltb-of a ga)
    (ltb-of self (exp (gen) l-0)) (ltx-of b l) (ltx-of self l-0))
  (leads-to ((6 1) (0 0)) ((6 1) (2 0)) ((6 1) (7 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    gen-st-ltx-disclose-0 ltx-ltb trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand resp 4) (exp (gen) y-1) (8 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l-0)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l-0)))
      (stor priv-stor (cat pt "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (gen) (mul l-0 l-0))) (send (cat (gen) (mul l-0 l-0))))
    ((recv l-0) (send l-0))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-1 (pv self l-0)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self
            (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) y-1) (mul l-0 (rec y-1))))
      (send (cat (exp (gen) y-1) (mul l-0 (rec y-1)))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b gx))
      (send
        (cat (exp (gen) y-1)
          (enc na-0 nb-0 a b (hash (exp ga l) (exp gx y-1)))))))
  (label 299)
  (parent 219)
  (unrealized (7 1) (8 0) (9 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pval)
    (priv-stor locn) (x rndx) (y expt) (y-0 l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (gen) (mul l l)))
  (deflistener l)
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self) (ga (exp (gen) l))
    (gx (exp (gen) (mul x y (rec y-0)))) (priv-stor priv-stor) (l l)
    (y y-0))
  (deflistener (cat (exp (gen) l) (one)))
  (precedes ((0 2) (7 2)) ((0 4) (2 0)) ((2 2) (5 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (4 0)) ((6 1) (0 0)) ((6 1) (7 0))
    ((6 2) (0 1)) ((6 2) (8 0)) ((7 3) (0 3)) ((8 1) (7 1)))
  (uniq-orig na nb l)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l))
  (precur (4 0) (8 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((6 1) (0 0)) ((6 1) (2 0)) ((6 1) (7 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 9 6 ltx-gen 3) (exp (gen) l-0) (8 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (gen) (mul l l))) (send (cat (gen) (mul l l))))
    ((recv l) (send l))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one)))))
  (label 300)
  (parent 219)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (gen) (mul l l)))
  (deflistener l)
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self) (ga (exp (gen) l))
    (gx (exp (gen) (mul x y (rec y-0)))) (priv-stor priv-stor) (l l)
    (y y-0))
  (deflistener (cat (exp (gen) l-0) (mul l (rec l-0))))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (7 2)) ((0 4) (2 0)) ((2 2) (5 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (4 0)) ((6 1) (0 0)) ((6 1) (7 0))
    ((6 2) (0 1)) ((7 3) (0 3)) ((8 1) (7 1)) ((9 2) (8 0)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l))
  (precur (4 0) (8 0))
  (gen-st (pv self l))
  (facts (ltb-of self-0 (exp (gen) l-0)) (ltb-of self (exp (gen) l))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((6 1) (0 0)) ((6 1) (2 0)) ((6 1) (7 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-ltx-gen-ltx-of0 fact-resp-ltb-of0
    ltx-ltb trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 3) (exp (gen) l-0) (8 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (gen) (mul l l))) (send (cat (gen) (mul l l))))
    ((recv l) (send l))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l-0) (mul l (rec l-0))))
      (send (cat (exp (gen) l-0) (mul l (rec l-0)))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-3 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 301)
  (parent 219)
  (unrealized (7 1) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb na-0 data) (self a b name)
    (pt pt-0 pt-1 pt-2 pval) (gb base) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 x-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor)
    (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (gen) (mul l-0 l-0)))
  (deflistener l-0)
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) x-0) (mul l-0 l-0 (rec x-0))))
  (defstrand init 3 (na na-0) (a a) (b b) (gb gb)
    (priv-stor priv-stor-0) (l l) (x x-0))
  (precedes ((0 2) (8 0)) ((0 4) (2 0)) ((2 2) (5 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (4 0)) ((6 1) (0 0)) ((6 2) (0 1))
    ((7 1) (0 3)) ((8 1) (7 0)) ((9 1) (8 0)) ((10 2) (9 0)))
  (uniq-orig na na-0 l-0)
  (uniq-gen x x-0)
  (absent (x l-0) (x-0 l))
  (precur (4 0) (9 0))
  (gen-st (pv self l-0) (pv a l))
  (facts (ltb-of a (exp (gen) l)) (ltb-of b gb)
    (ltb-of self (exp (gen) l-0)) (ltx-of a l) (ltx-of self l-0))
  (leads-to ((6 1) (0 0)) ((6 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    gen-st-ltx-disclose-0 ltx-ltb trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand init 3) (exp (gen) x-0) (9 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l-0)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l-0)))
      (stor priv-stor (cat pt "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (gen) (mul l-0 l-0))) (send (cat (gen) (mul l-0 l-0))))
    ((recv l-0) (send l-0))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) x-0) (mul l-0 l-0 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-0 l-0 (rec x-0)))))
    ((load priv-stor-0 (cat pt-2 (pv a l)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 a b (exp (gen) x-0)))))
  (label 302)
  (parent 220)
  (unrealized (8 0) (9 0) (10 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pval)
    (priv-stor locn) (y expt) (l x rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul y x))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul y x))))
  (deflistener (cat (gen) (mul l l)))
  (deflistener l)
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul y x))))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul y x))))
  (deflistener (cat (exp (gen) x) (mul l l (rec x))))
  (precedes ((0 2) (9 0)) ((0 4) (2 0)) ((2 2) (5 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (4 0)) ((6 1) (0 0)) ((6 2) (0 1))
    ((7 1) (0 3)) ((8 1) (7 0)) ((9 1) (8 0)))
  (uniq-orig na l)
  (uniq-gen x)
  (absent (x l))
  (precur (4 0) (9 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((6 1) (0 0)) ((6 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 10 0 init 3) (exp (gen) x-0) (9 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul y x))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul y x))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul y x)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul y x))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul y x)))))
    ((recv (cat (gen) (mul l l))) (send (cat (gen) (mul l l))))
    ((recv l) (send l))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul y x))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul y x)))))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul y x))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul y x)))))
    ((recv (cat (exp (gen) x) (mul l l (rec x))))
      (send (cat (exp (gen) x) (mul l l (rec x))))))
  (label 303)
  (parent 220)
  (unrealized (8 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pval)
    (priv-stor locn) (x rndx) (y expt) (l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (gen) (mul l l)))
  (deflistener l)
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (gen) (mul l l)))
  (precedes ((0 2) (8 0)) ((0 4) (2 0)) ((2 2) (5 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (4 0)) ((6 1) (0 0)) ((6 2) (0 1))
    ((7 1) (0 3)) ((8 1) (7 0)) ((9 1) (8 0)))
  (uniq-orig na l)
  (uniq-gen x)
  (absent (x l))
  (precur (4 0) (9 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((6 1) (0 0)) ((6 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (contracted (l-0 l) (w (mul l l))) (gen) (9 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (gen) (mul l l))) (send (cat (gen) (mul l l))))
    ((recv l) (send l))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (gen) (mul l l))) (send (cat (gen) (mul l l)))))
  (label 304)
  (parent 220)
  (unrealized (8 0) (9 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb na-0 nb-0 data) (self a b name)
    (pt pt-0 pt-1 pt-2 pval) (ga gx base) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 y-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor)
    (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (gen) (mul l-0 l-0)))
  (deflistener l-0)
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) y-0) (mul l-0 l-0 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b) (ga ga) (gx gx)
    (priv-stor priv-stor-0) (l l) (y y-0))
  (precedes ((0 2) (8 0)) ((0 4) (2 0)) ((2 2) (5 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (4 0)) ((6 1) (0 0)) ((6 2) (0 1))
    ((7 1) (0 3)) ((8 1) (7 0)) ((9 1) (8 0)) ((10 3) (9 0)))
  (uniq-orig na nb-0 l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (4 0) (9 0))
  (gen-st (pv self l-0) (pv b l))
  (facts (ltb-of b (exp (gen) l)) (ltb-of a ga)
    (ltb-of self (exp (gen) l-0)) (ltx-of b l) (ltx-of self l-0))
  (leads-to ((6 1) (0 0)) ((6 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    gen-st-ltx-disclose-0 ltx-ltb trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand resp 4) (exp (gen) y-0) (9 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l-0)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l-0)))
      (stor priv-stor (cat pt "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (gen) (mul l-0 l-0))) (send (cat (gen) (mul l-0 l-0))))
    ((recv l-0) (send l-0))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) y-0) (mul l-0 l-0 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-0 l-0 (rec y-0)))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a b (hash (exp ga l) (exp gx y-0)))))))
  (label 305)
  (parent 220)
  (unrealized (8 0) (9 0) (10 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pval)
    (priv-stor locn) (x rndx) (y expt) (l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (gen) (mul l l)))
  (deflistener l)
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l))
  (precedes ((0 2) (8 0)) ((0 4) (2 0)) ((2 2) (5 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (4 0)) ((6 1) (0 0)) ((6 2) (0 1))
    ((6 2) (9 0)) ((7 1) (0 3)) ((8 1) (7 0)) ((9 1) (8 0)))
  (uniq-orig na l)
  (uniq-gen x)
  (absent (x l))
  (precur (4 0) (9 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((6 1) (0 0)) ((6 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 10 6 ltx-gen 3) (exp (gen) l-0)
    (9 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (gen) (mul l l))) (send (cat (gen) (mul l l))))
    ((recv l) (send l))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l)) (send (cat (exp (gen) l) l))))
  (label 306)
  (parent 220)
  (unrealized (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (gen) (mul l l)))
  (deflistener l)
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) (mul l l (rec l-0))))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (8 0)) ((0 4) (2 0)) ((2 2) (5 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (4 0)) ((6 1) (0 0)) ((6 2) (0 1))
    ((7 1) (0 3)) ((8 1) (7 0)) ((9 1) (8 0)) ((10 2) (9 0)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (precur (4 0) (9 0))
  (gen-st (pv self l))
  (facts (ltb-of self-0 (exp (gen) l-0)) (ltb-of self (exp (gen) l))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((6 1) (0 0)) ((6 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-ltx-gen-ltx-of0 fact-resp-ltb-of0
    ltx-ltb trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 3) (exp (gen) l-0) (9 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (gen) (mul l l))) (send (cat (gen) (mul l l))))
    ((recv l) (send l))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) (mul l l (rec l-0))))
      (send (cat (exp (gen) l-0) (mul l l (rec l-0)))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-3 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 307)
  (parent 220)
  (unrealized (8 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pval)
    (priv-stor locn) (x rndx) (y expt) (y-0 l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (gen) (mul l l)))
  (deflistener l)
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self) (ga (exp (gen) l))
    (gx (exp (gen) (mul x y (rec y-0)))) (priv-stor priv-stor) (l l)
    (y y-0))
  (precedes ((0 2) (8 2)) ((0 4) (2 0)) ((2 2) (5 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (4 0)) ((6 1) (0 1)) ((7 1) (0 0))
    ((7 1) (8 0)) ((7 2) (6 0)) ((7 2) (8 1)) ((8 3) (0 3)))
  (uniq-orig na nb l)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l))
  (precur (4 0) (6 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((7 1) (0 0)) ((7 1) (2 0)) ((7 1) (8 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 9 7 ltx-gen 3) (exp (gen) l) (8 1))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (gen) (mul l l))) (send (cat (gen) (mul l l))))
    ((recv l) (send l))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))))
  (label 308)
  (parent 221)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pval)
    (priv-stor locn) (x rndx) (y expt) (y-0 l rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (gen) (mul l l)))
  (deflistener l)
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self) (ga (exp (gen) l))
    (gx (exp (gen) (mul x y (rec y-0)))) (priv-stor priv-stor) (l l)
    (y y-0))
  (deflistener (cat (exp (gen) (mul l (rec w))) w))
  (precedes ((0 2) (8 2)) ((0 4) (2 0)) ((2 2) (5 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (4 0)) ((6 1) (0 1)) ((7 1) (0 0))
    ((7 1) (8 0)) ((7 2) (6 0)) ((8 3) (0 3)) ((9 1) (8 1)))
  (uniq-orig na nb l)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l))
  (precur (4 0) (6 0) (9 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((7 1) (0 0)) ((7 1) (2 0)) ((7 1) (8 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul l (rec w))) w)) (exp (gen) l)
    (8 1))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (gen) (mul l l))) (send (cat (gen) (mul l l))))
    ((recv l) (send l))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) (mul l (rec w))) w))
      (send (cat (exp (gen) (mul l (rec w))) w))))
  (label 309)
  (parent 221)
  (unrealized (9 0))
  (comment "6 in cohort - 6 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pval)
    (priv-stor locn) (x rndx) (y expt) (l rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (gen) (mul l l)))
  (deflistener l)
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l l (rec w))) w))
  (precedes ((0 2) (9 0)) ((0 4) (2 0)) ((2 2) (5 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (4 0)) ((6 1) (0 1)) ((7 1) (0 0))
    ((7 2) (6 0)) ((8 1) (0 3)) ((9 1) (8 0)) ((10 1) (9 0)))
  (uniq-orig na l)
  (uniq-gen x)
  (absent (x l))
  (precur (4 0) (6 0) (10 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((7 1) (0 0)) ((7 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul l l (rec w))) w))
    (exp (gen) (mul l l)) (9 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (gen) (mul l l))) (send (cat (gen) (mul l l))))
    ((recv l) (send l))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l l (rec w))) w))
      (send (cat (exp (gen) (mul l l (rec w))) w))))
  (label 310)
  (parent 222)
  (unrealized (10 0))
  (comment "6 in cohort - 6 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pval)
    (priv-stor locn) (x rndx) (y expt) (y-0 l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self) (ga (exp (gen) l))
    (gx (exp (gen) (mul x y (rec y-0)))) (priv-stor priv-stor) (l l)
    (y y-0))
  (precedes ((0 2) (4 2)) ((0 4) (2 0)) ((2 2) (1 0)) ((3 1) (0 0))
    ((3 1) (4 0)) ((3 2) (0 1)) ((3 2) (4 1)) ((4 3) (0 3)))
  (uniq-orig na nb l)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((3 1) (0 0)) ((3 1) (2 0)) ((3 1) (4 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))))
  (label 311)
  (parent 223)
  (realized)
  (shape)
  (maps
    ((0 1 2 2)
      ((l l) (l-b l) (x x) (y y) (a self) (b self) (na na) (nb nb)
        (priv-stor priv-stor) (self self) (priv-stor-0 priv-stor)
        (self-0 self) (priv-stor-1 priv-stor))))
  (origs (l (3 1)) (pt-1 (3 1)) (nb (4 3)) (pt (2 1)) (na (0 2)))
  (ugens (x (0 2))))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb na-0 data) (self b name)
    (pt pt-0 pt-1 pval) (gb base) (priv-stor locn) (x rndx) (y expt)
    (y-0 x-0 l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self) (ga (exp (gen) l))
    (gx (exp (gen) (mul x y (rec y-0)))) (priv-stor priv-stor) (l l)
    (y y-0))
  (deflistener (cat (exp (gen) x-0) (mul (rec x-0) l)))
  (defstrand init 3 (na na-0) (a self) (b b) (gb gb)
    (priv-stor priv-stor) (l l) (x x-0))
  (precedes ((0 2) (6 2)) ((0 4) (2 0)) ((2 2) (4 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((5 1) (6 0)) ((5 1) (8 0))
    ((5 2) (0 1)) ((6 3) (0 3)) ((7 1) (6 1)) ((8 2) (7 0)))
  (uniq-orig na nb na-0 l)
  (uniq-gen x y-0 x-0)
  (absent (x l) (y-0 l) (x-0 l))
  (precur (4 0) (7 0))
  (gen-st (pv self l))
  (facts (ltb-of b gb) (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((5 1) (0 0)) ((5 1) (2 0)) ((5 1) (6 0)) ((5 1) (8 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 9 5 ltx-gen 2)
    (ch-msg priv-stor-0 (cat pt-2 (pv a l-0))) (8 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l)) (send (cat (exp (gen) l) l)))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) x-0) (mul (rec x-0) l)))
      (send (cat (exp (gen) x-0) (mul (rec x-0) l))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 self b (exp (gen) x-0)))))
  (label 312)
  (parent 224)
  (unrealized (6 1) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (self a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (gb base) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l x-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self) (ga (exp (gen) l))
    (gx (exp (gen) (mul x y (rec y-0)))) (priv-stor priv-stor) (l l)
    (y y-0))
  (deflistener (cat (exp (gen) x-0) (mul l (rec x-0))))
  (defstrand init 3 (na na-0) (a a) (b b) (gb gb)
    (priv-stor priv-stor-0) (l l-0) (x x-0))
  (defstrand ltx-gen 2 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (6 2)) ((0 4) (2 0)) ((2 2) (4 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((5 1) (6 0)) ((5 2) (0 1))
    ((6 3) (0 3)) ((7 1) (6 1)) ((8 2) (7 0)) ((9 1) (8 0)))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen x y-0 x-0)
  (absent (x l) (y-0 l) (x-0 l-0))
  (precur (4 0) (7 0))
  (gen-st (pv self l) (pv a l-0))
  (facts (ltb-of a (exp (gen) l-0)) (ltb-of b gb)
    (ltb-of self (exp (gen) l)) (ltx-of a l-0) (ltx-of self l))
  (leads-to ((5 1) (0 0)) ((5 1) (2 0)) ((5 1) (6 0)) ((9 1) (8 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-0 (cat pt-2 (pv a l-0))) (8 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l)) (send (cat (exp (gen) l) l)))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) x-0) (mul l (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l (rec x-0)))))
    ((load priv-stor-0 (cat pt-2 (pv a l-0)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 a b (exp (gen) x-0))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l-0)))))
  (label 313)
  (parent 224)
  (unrealized (6 1) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb na-0 nb-0 data) (self a name)
    (pt pt-0 pt-1 pval) (ga gx base) (priv-stor locn) (x rndx) (y expt)
    (y-0 y-1 l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self) (ga (exp (gen) l))
    (gx (exp (gen) (mul x y (rec y-0)))) (priv-stor priv-stor) (l l)
    (y y-0))
  (deflistener (cat (exp (gen) y-1) (mul (rec y-1) l)))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b self) (ga ga) (gx gx)
    (priv-stor priv-stor) (l l) (y y-1))
  (precedes ((0 2) (6 2)) ((0 4) (2 0)) ((2 2) (4 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((5 1) (6 0)) ((5 1) (8 0))
    ((5 2) (0 1)) ((6 3) (0 3)) ((7 1) (6 1)) ((8 3) (7 0)))
  (uniq-orig na nb nb-0 l)
  (uniq-gen x y-0 y-1)
  (absent (x l) (y-0 l) (y-1 l))
  (precur (4 0) (7 0))
  (gen-st (pv self l))
  (facts (ltb-of a ga) (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((5 1) (0 0)) ((5 1) (2 0)) ((5 1) (6 0)) ((5 1) (8 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 9 5 ltx-gen 2)
    (ch-msg priv-stor-0 (cat pt-2 (pv b l-0))) (8 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l)) (send (cat (exp (gen) l) l)))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) y-1) (mul (rec y-1) l)))
      (send (cat (exp (gen) y-1) (mul (rec y-1) l))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a self gx))
      (send
        (cat (exp (gen) y-1)
          (enc na-0 nb-0 a self (hash (exp ga l) (exp gx y-1)))))))
  (label 314)
  (parent 227)
  (unrealized (6 1) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (self a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (ga gx base)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (y-0 l y-1 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self) (ga (exp (gen) l))
    (gx (exp (gen) (mul x y (rec y-0)))) (priv-stor priv-stor) (l l)
    (y y-0))
  (deflistener (cat (exp (gen) y-1) (mul l (rec y-1))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b) (ga ga) (gx gx)
    (priv-stor priv-stor-0) (l l-0) (y y-1))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (6 2)) ((0 4) (2 0)) ((2 2) (4 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((5 1) (6 0)) ((5 2) (0 1))
    ((6 3) (0 3)) ((7 1) (6 1)) ((8 3) (7 0)) ((9 1) (8 0)))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen x y-0 y-1)
  (absent (x l) (y-0 l) (y-1 l-0))
  (precur (4 0) (7 0))
  (gen-st (pv self l) (pv b l-0))
  (facts (ltb-of b (exp (gen) l-0)) (ltb-of a ga)
    (ltb-of self (exp (gen) l)) (ltx-of b l-0) (ltx-of self l))
  (leads-to ((5 1) (0 0)) ((5 1) (2 0)) ((5 1) (6 0)) ((9 1) (8 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-0 (cat pt-2 (pv b l-0))) (8 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l)) (send (cat (exp (gen) l) l)))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) y-1) (mul l (rec y-1))))
      (send (cat (exp (gen) y-1) (mul l (rec y-1)))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b gx))
      (send
        (cat (exp (gen) y-1)
          (enc na-0 nb-0 a b (hash (exp ga l-0) (exp gx y-1))))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))))
  (label 315)
  (parent 227)
  (unrealized (6 1) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pval)
    (priv-stor locn) (x rndx) (y expt) (y-0 l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self) (ga (exp (gen) l))
    (gx (exp (gen) (mul x y (rec y-0)))) (priv-stor priv-stor) (l l)
    (y y-0))
  (deflistener (cat (exp (gen) l) (one)))
  (precedes ((0 2) (5 2)) ((0 4) (2 0)) ((2 2) (3 0)) ((3 1) (1 0))
    ((4 1) (0 0)) ((4 1) (5 0)) ((4 2) (0 1)) ((4 2) (6 0))
    ((5 3) (0 3)) ((6 1) (5 1)))
  (uniq-orig na nb l)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l))
  (precur (3 0) (6 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((4 1) (5 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) l) l)) (send (cat (exp (gen) l) l)))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one)))))
  (label 316)
  (parent 228)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb na-0 data) (self b name)
    (pt pt-0 pt-1 pval) (gb base) (priv-stor locn) (x rndx) (y expt)
    (x-0 l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) x-0) (mul (rec x-0) l l)))
  (defstrand init 3 (na na-0) (a self) (b b) (gb gb)
    (priv-stor priv-stor) (l l) (x x-0))
  (precedes ((0 2) (7 0)) ((0 4) (2 0)) ((2 2) (4 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((5 1) (9 0)) ((5 2) (0 1))
    ((6 1) (0 3)) ((7 1) (6 0)) ((8 1) (7 0)) ((9 2) (8 0)))
  (uniq-orig na na-0 l)
  (uniq-gen x x-0)
  (absent (x l) (x-0 l))
  (precur (4 0) (8 0))
  (gen-st (pv self l))
  (facts (ltb-of b gb) (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((5 1) (0 0)) ((5 1) (2 0)) ((5 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 10 5 ltx-gen 2)
    (ch-msg priv-stor-0 (cat pt-2 (pv a l-0))) (9 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l)) (send (cat (exp (gen) l) l)))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) x-0) (mul (rec x-0) l l)))
      (send (cat (exp (gen) x-0) (mul (rec x-0) l l))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 self b (exp (gen) x-0)))))
  (label 317)
  (parent 230)
  (unrealized (7 0) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (self a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (gb base) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l x-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) x-0) (mul l l (rec x-0))))
  (defstrand init 3 (na na-0) (a a) (b b) (gb gb)
    (priv-stor priv-stor-0) (l l-0) (x x-0))
  (defstrand ltx-gen 2 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (7 0)) ((0 4) (2 0)) ((2 2) (4 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((5 2) (0 1)) ((6 1) (0 3))
    ((7 1) (6 0)) ((8 1) (7 0)) ((9 2) (8 0)) ((10 1) (9 0)))
  (uniq-orig na na-0 l l-0)
  (uniq-gen x x-0)
  (absent (x l) (x-0 l-0))
  (precur (4 0) (8 0))
  (gen-st (pv self l) (pv a l-0))
  (facts (ltb-of a (exp (gen) l-0)) (ltb-of b gb)
    (ltb-of self (exp (gen) l)) (ltx-of a l-0) (ltx-of self l))
  (leads-to ((5 1) (0 0)) ((5 1) (2 0)) ((10 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-0 (cat pt-2 (pv a l-0))) (9 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l)) (send (cat (exp (gen) l) l)))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) x-0) (mul l l (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l l (rec x-0)))))
    ((load priv-stor-0 (cat pt-2 (pv a l-0)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 a b (exp (gen) x-0))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l-0)))))
  (label 318)
  (parent 230)
  (unrealized (7 0) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pval)
    (priv-stor locn) (x rndx) (y expt) (l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (gen) (mul l l)))
  (deflistener l)
  (precedes ((0 2) (7 0)) ((0 4) (2 0)) ((2 2) (4 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((5 1) (9 0)) ((5 2) (0 1))
    ((6 1) (0 3)) ((7 1) (6 0)) ((8 1) (7 0)) ((9 1) (8 0)))
  (uniq-orig na l)
  (uniq-gen x)
  (absent (x l))
  (precur (4 0) (8 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((5 1) (0 0)) ((5 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener l) (mul l l) (8 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l)) (send (cat (exp (gen) l) l)))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (gen) (mul l l))) (send (cat (gen) (mul l l))))
    ((recv l) (send l)))
  (label 319)
  (parent 232)
  (unrealized (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb na-0 nb-0 data) (self a name)
    (pt pt-0 pt-1 pval) (ga gx base) (priv-stor locn) (x rndx) (y expt)
    (y-0 l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) y-0) (mul (rec y-0) l l)))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b self) (ga ga) (gx gx)
    (priv-stor priv-stor) (l l) (y y-0))
  (precedes ((0 2) (7 0)) ((0 4) (2 0)) ((2 2) (4 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((5 1) (9 0)) ((5 2) (0 1))
    ((6 1) (0 3)) ((7 1) (6 0)) ((8 1) (7 0)) ((9 3) (8 0)))
  (uniq-orig na nb-0 l)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l))
  (precur (4 0) (8 0))
  (gen-st (pv self l))
  (facts (ltb-of a ga) (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((5 1) (0 0)) ((5 1) (2 0)) ((5 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 10 5 ltx-gen 2)
    (ch-msg priv-stor-0 (cat pt-2 (pv b l-0))) (9 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l)) (send (cat (exp (gen) l) l)))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) y-0) (mul (rec y-0) l l)))
      (send (cat (exp (gen) y-0) (mul (rec y-0) l l))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a self gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a self (hash (exp ga l) (exp gx y-0)))))))
  (label 320)
  (parent 233)
  (unrealized (7 0) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (self a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (ga gx base)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (l y-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) y-0) (mul l l (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b) (ga ga) (gx gx)
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (7 0)) ((0 4) (2 0)) ((2 2) (4 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((5 2) (0 1)) ((6 1) (0 3))
    ((7 1) (6 0)) ((8 1) (7 0)) ((9 3) (8 0)) ((10 1) (9 0)))
  (uniq-orig na nb-0 l l-0)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l-0))
  (precur (4 0) (8 0))
  (gen-st (pv self l) (pv b l-0))
  (facts (ltb-of b (exp (gen) l-0)) (ltb-of a ga)
    (ltb-of self (exp (gen) l)) (ltx-of b l-0) (ltx-of self l))
  (leads-to ((5 1) (0 0)) ((5 1) (2 0)) ((10 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-0 (cat pt-2 (pv b l-0))) (9 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l)) (send (cat (exp (gen) l) l)))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) y-0) (mul l l (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l l (rec y-0)))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a b (hash (exp ga l-0) (exp gx y-0))))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))))
  (label 321)
  (parent 233)
  (unrealized (7 0) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pval)
    (priv-stor locn) (x rndx) (y expt) (y-0 l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self) (ga (exp (gen) l))
    (gx (exp (gen) (mul x y (rec y-0)))) (priv-stor priv-stor) (l l)
    (y y-0))
  (precedes ((0 2) (6 2)) ((0 4) (2 0)) ((2 2) (3 0)) ((3 1) (1 0))
    ((4 1) (0 0)) ((4 1) (6 0)) ((4 2) (5 0)) ((4 2) (6 1))
    ((5 1) (0 1)) ((6 3) (0 3)))
  (uniq-orig na nb l)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l))
  (precur (3 0) (5 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((4 1) (6 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) l) l)) (send (cat (exp (gen) l) l)))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))))
  (label 322)
  (parent 236)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb na-0 data) (self a b name)
    (pt pt-0 pt-1 pt-2 pval) (gb base) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 x-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor)
    (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l-0))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
  (defstrand init 3 (na na-0) (a a) (b b) (gb gb)
    (priv-stor priv-stor-0) (l l) (x x-0))
  (precedes ((0 2) (7 2)) ((0 4) (2 0)) ((2 2) (4 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((5 1) (7 0)) ((5 2) (6 0))
    ((6 1) (0 1)) ((7 3) (0 3)) ((8 1) (7 1)) ((9 2) (8 0)))
  (uniq-orig na nb na-0 l-0)
  (uniq-gen x y-0 x-0)
  (absent (x l-0) (y-0 l-0) (x-0 l))
  (precur (4 0) (6 0) (8 0))
  (gen-st (pv self l-0) (pv a l))
  (facts (ltb-of a (exp (gen) l)) (ltb-of b gb)
    (ltb-of self (exp (gen) l-0)) (ltx-of a l) (ltx-of self l-0))
  (leads-to ((5 1) (0 0)) ((5 1) (2 0)) ((5 1) (7 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    gen-st-ltx-disclose-0 ltx-ltb trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand init 3) (exp (gen) x-0) (8 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l-0)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l-0)))
      (stor priv-stor (cat pt "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l-0)) (send (cat (exp (gen) l-0) l-0)))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor (cat pt-1 (pv self l-0)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self
            (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-0 (rec x-0)))))
    ((load priv-stor-0 (cat pt-2 (pv a l)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 a b (exp (gen) x-0)))))
  (label 323)
  (parent 237)
  (unrealized (7 1) (8 0) (9 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pval)
    (priv-stor locn) (y expt) (y-0 l x rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul y x))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul y x))))
  (deflistener (cat (exp (gen) l) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self) (ga (exp (gen) l))
    (gx (exp (gen) (mul y (rec y-0) x))) (priv-stor priv-stor) (l l)
    (y y-0))
  (deflistener (cat (exp (gen) x) (mul l (rec x))))
  (precedes ((0 2) (8 0)) ((0 4) (2 0)) ((2 2) (4 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((5 1) (7 0)) ((5 2) (6 0))
    ((6 1) (0 1)) ((7 3) (0 3)) ((8 1) (7 1)))
  (uniq-orig na nb l)
  (uniq-gen y-0 x)
  (absent (y-0 l) (x l))
  (precur (4 0) (6 0) (8 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((5 1) (0 0)) ((5 1) (2 0)) ((5 1) (7 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 9 0 init 3) (exp (gen) x-0) (8 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul y x))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul y x))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul y x)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul y x))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul y x)))))
    ((recv (cat (exp (gen) l) l)) (send (cat (exp (gen) l) l)))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self (exp (gen) (mul y (rec y-0) x))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul y x)))))))
    ((recv (cat (exp (gen) x) (mul l (rec x))))
      (send (cat (exp (gen) x) (mul l (rec x))))))
  (label 324)
  (parent 237)
  (unrealized (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pval)
    (priv-stor locn) (x rndx) (y expt) (y-0 l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self) (ga (exp (gen) l))
    (gx (exp (gen) (mul x y (rec y-0)))) (priv-stor priv-stor) (l l)
    (y y-0))
  (deflistener (cat (gen) l))
  (precedes ((0 2) (7 2)) ((0 4) (2 0)) ((2 2) (4 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((5 1) (7 0)) ((5 1) (8 0))
    ((5 2) (6 0)) ((6 1) (0 1)) ((7 3) (0 3)) ((8 1) (7 1)))
  (uniq-orig na nb l)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l))
  (precur (4 0) (6 0) (8 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((5 1) (0 0)) ((5 1) (2 0)) ((5 1) (7 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (contracted (l-0 l) (w l)) (gen) (8 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l)) (send (cat (exp (gen) l) l)))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))))
    ((recv (cat (gen) l)) (send (cat (gen) l))))
  (label 325)
  (parent 237)
  (unrealized (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb na-0 nb-0 data) (self a b name)
    (pt pt-0 pt-1 pt-2 pval) (ga gx base) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 y-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor)
    (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l-0))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) y-1) (mul l-0 (rec y-1))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b) (ga ga) (gx gx)
    (priv-stor priv-stor-0) (l l) (y y-1))
  (precedes ((0 2) (7 2)) ((0 4) (2 0)) ((2 2) (4 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((5 1) (7 0)) ((5 2) (6 0))
    ((6 1) (0 1)) ((7 3) (0 3)) ((8 1) (7 1)) ((9 3) (8 0)))
  (uniq-orig na nb nb-0 l-0)
  (uniq-gen x y-0 y-1)
  (absent (x l-0) (y-0 l-0) (y-1 l))
  (precur (4 0) (6 0) (8 0))
  (gen-st (pv self l-0) (pv b l))
  (facts (ltb-of b (exp (gen) l)) (ltb-of a ga)
    (ltb-of self (exp (gen) l-0)) (ltx-of b l) (ltx-of self l-0))
  (leads-to ((5 1) (0 0)) ((5 1) (2 0)) ((5 1) (7 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    gen-st-ltx-disclose-0 ltx-ltb trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand resp 4) (exp (gen) y-1) (8 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l-0)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l-0)))
      (stor priv-stor (cat pt "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l-0)) (send (cat (exp (gen) l-0) l-0)))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor (cat pt-1 (pv self l-0)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self
            (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) y-1) (mul l-0 (rec y-1))))
      (send (cat (exp (gen) y-1) (mul l-0 (rec y-1)))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b gx))
      (send
        (cat (exp (gen) y-1)
          (enc na-0 nb-0 a b (hash (exp ga l) (exp gx y-1)))))))
  (label 326)
  (parent 237)
  (unrealized (7 1) (8 0) (9 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pval)
    (priv-stor locn) (x rndx) (y expt) (y-0 l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self) (ga (exp (gen) l))
    (gx (exp (gen) (mul x y (rec y-0)))) (priv-stor priv-stor) (l l)
    (y y-0))
  (deflistener (cat (exp (gen) l) (one)))
  (precedes ((0 2) (7 2)) ((0 4) (2 0)) ((2 2) (4 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((5 1) (7 0)) ((5 2) (6 0))
    ((5 2) (8 0)) ((6 1) (0 1)) ((7 3) (0 3)) ((8 1) (7 1)))
  (uniq-orig na nb l)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l))
  (precur (4 0) (6 0) (8 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((5 1) (0 0)) ((5 1) (2 0)) ((5 1) (7 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 9 5 ltx-gen 3) (exp (gen) l-0) (8 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l)) (send (cat (exp (gen) l) l)))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one)))))
  (label 327)
  (parent 237)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self) (ga (exp (gen) l))
    (gx (exp (gen) (mul x y (rec y-0)))) (priv-stor priv-stor) (l l)
    (y y-0))
  (deflistener (cat (exp (gen) l-0) (mul l (rec l-0))))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (7 2)) ((0 4) (2 0)) ((2 2) (4 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((5 1) (7 0)) ((5 2) (6 0))
    ((6 1) (0 1)) ((7 3) (0 3)) ((8 1) (7 1)) ((9 2) (8 0)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l))
  (precur (4 0) (6 0) (8 0))
  (gen-st (pv self l))
  (facts (ltb-of self-0 (exp (gen) l-0)) (ltb-of self (exp (gen) l))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((5 1) (0 0)) ((5 1) (2 0)) ((5 1) (7 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-ltx-gen-ltx-of0 fact-resp-ltb-of0
    ltx-ltb trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 3) (exp (gen) l-0) (8 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l)) (send (cat (exp (gen) l) l)))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l-0) (mul l (rec l-0))))
      (send (cat (exp (gen) l-0) (mul l (rec l-0)))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-3 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 328)
  (parent 237)
  (unrealized (7 1) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb na-0 data) (self a b name)
    (pt pt-0 pt-1 pt-2 pval) (gb base) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 x-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor)
    (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l-0))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) l-0) (one)))
  (deflistener (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) x-0) (mul l-0 l-0 (rec x-0))))
  (defstrand init 3 (na na-0) (a a) (b b) (gb gb)
    (priv-stor priv-stor-0) (l l) (x x-0))
  (precedes ((0 2) (8 0)) ((0 4) (2 0)) ((2 2) (4 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((5 2) (6 0)) ((6 1) (0 1))
    ((7 1) (0 3)) ((8 1) (7 0)) ((9 1) (8 0)) ((10 2) (9 0)))
  (uniq-orig na na-0 l-0)
  (uniq-gen x x-0)
  (absent (x l-0) (x-0 l))
  (precur (4 0) (6 0) (9 0))
  (gen-st (pv self l-0) (pv a l))
  (facts (ltb-of a (exp (gen) l)) (ltb-of b gb)
    (ltb-of self (exp (gen) l-0)) (ltx-of a l) (ltx-of self l-0))
  (leads-to ((5 1) (0 0)) ((5 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    gen-st-ltx-disclose-0 ltx-ltb trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand init 3) (exp (gen) x-0) (9 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l-0)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l-0)))
      (stor priv-stor (cat pt "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l-0)) (send (cat (exp (gen) l-0) l-0)))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((recv (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) x-0) (mul l-0 l-0 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-0 l-0 (rec x-0)))))
    ((load priv-stor-0 (cat pt-2 (pv a l)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 a b (exp (gen) x-0)))))
  (label 329)
  (parent 238)
  (unrealized (8 0) (9 0) (10 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pval)
    (priv-stor locn) (y expt) (l x rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul y x))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul y x))))
  (deflistener (cat (exp (gen) l) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) l) (one)))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul y x))))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul y x))))
  (deflistener (cat (exp (gen) x) (mul l l (rec x))))
  (precedes ((0 2) (9 0)) ((0 4) (2 0)) ((2 2) (4 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((5 2) (6 0)) ((6 1) (0 1))
    ((7 1) (0 3)) ((8 1) (7 0)) ((9 1) (8 0)))
  (uniq-orig na l)
  (uniq-gen x)
  (absent (x l))
  (precur (4 0) (6 0) (9 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((5 1) (0 0)) ((5 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 10 0 init 3) (exp (gen) x-0) (9 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul y x))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul y x))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul y x)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul y x))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul y x)))))
    ((recv (cat (exp (gen) l) l)) (send (cat (exp (gen) l) l)))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul y x))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul y x)))))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul y x))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul y x)))))
    ((recv (cat (exp (gen) x) (mul l l (rec x))))
      (send (cat (exp (gen) x) (mul l l (rec x))))))
  (label 330)
  (parent 238)
  (unrealized (8 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pval)
    (priv-stor locn) (x rndx) (y expt) (l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) l) (one)))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (gen) (mul l l)))
  (precedes ((0 2) (8 0)) ((0 4) (2 0)) ((2 2) (4 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((5 2) (6 0)) ((6 1) (0 1))
    ((7 1) (0 3)) ((8 1) (7 0)) ((9 1) (8 0)))
  (uniq-orig na l)
  (uniq-gen x)
  (absent (x l))
  (precur (4 0) (6 0) (9 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((5 1) (0 0)) ((5 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (contracted (l-0 l) (w (mul l l))) (gen) (9 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l)) (send (cat (exp (gen) l) l)))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (gen) (mul l l))) (send (cat (gen) (mul l l)))))
  (label 331)
  (parent 238)
  (unrealized (8 0) (9 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb na-0 nb-0 data) (self a b name)
    (pt pt-0 pt-1 pt-2 pval) (ga gx base) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 y-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor)
    (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l-0))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) l-0) (one)))
  (deflistener (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) y-0) (mul l-0 l-0 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b) (ga ga) (gx gx)
    (priv-stor priv-stor-0) (l l) (y y-0))
  (precedes ((0 2) (8 0)) ((0 4) (2 0)) ((2 2) (4 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((5 2) (6 0)) ((6 1) (0 1))
    ((7 1) (0 3)) ((8 1) (7 0)) ((9 1) (8 0)) ((10 3) (9 0)))
  (uniq-orig na nb-0 l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (4 0) (6 0) (9 0))
  (gen-st (pv self l-0) (pv b l))
  (facts (ltb-of b (exp (gen) l)) (ltb-of a ga)
    (ltb-of self (exp (gen) l-0)) (ltx-of b l) (ltx-of self l-0))
  (leads-to ((5 1) (0 0)) ((5 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    gen-st-ltx-disclose-0 ltx-ltb trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand resp 4) (exp (gen) y-0) (9 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l-0)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l-0)))
      (stor priv-stor (cat pt "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l-0)) (send (cat (exp (gen) l-0) l-0)))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((recv (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) y-0) (mul l-0 l-0 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-0 l-0 (rec y-0)))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a b (hash (exp ga l) (exp gx y-0)))))))
  (label 332)
  (parent 238)
  (unrealized (8 0) (9 0) (10 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pval)
    (priv-stor locn) (x rndx) (y expt) (l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) l) (one)))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l))
  (precedes ((0 2) (8 0)) ((0 4) (2 0)) ((2 2) (4 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((5 2) (6 0)) ((5 2) (9 0))
    ((6 1) (0 1)) ((7 1) (0 3)) ((8 1) (7 0)) ((9 1) (8 0)))
  (uniq-orig na l)
  (uniq-gen x)
  (absent (x l))
  (precur (4 0) (6 0) (9 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((5 1) (0 0)) ((5 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 10 5 ltx-gen 3) (exp (gen) l-0)
    (9 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l)) (send (cat (exp (gen) l) l)))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l)) (send (cat (exp (gen) l) l))))
  (label 333)
  (parent 238)
  (unrealized (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) l) (one)))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) (mul l l (rec l-0))))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (8 0)) ((0 4) (2 0)) ((2 2) (4 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((5 2) (6 0)) ((6 1) (0 1))
    ((7 1) (0 3)) ((8 1) (7 0)) ((9 1) (8 0)) ((10 2) (9 0)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (precur (4 0) (6 0) (9 0))
  (gen-st (pv self l))
  (facts (ltb-of self-0 (exp (gen) l-0)) (ltb-of self (exp (gen) l))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((5 1) (0 0)) ((5 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-ltx-gen-ltx-of0 fact-resp-ltb-of0
    ltx-ltb trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 3) (exp (gen) l-0) (9 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l)) (send (cat (exp (gen) l) l)))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) (mul l l (rec l-0))))
      (send (cat (exp (gen) l-0) (mul l l (rec l-0)))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-3 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 334)
  (parent 238)
  (unrealized (8 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self-0) (b self)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self-0) (b self)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor) (l l) (y y-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (5 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (1 0))
    ((4 1) (5 0)) ((4 2) (0 1)) ((5 3) (0 3)) ((6 1) (0 0))
    ((6 2) (5 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self-0 (exp (gen) l-0)) (ltb-of self (exp (gen) l))
    (ltx-of self l) (ltx-of self-0 l-0))
  (leads-to ((4 1) (3 0)) ((4 1) (5 0)) ((6 1) (0 0)) ((6 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self-0 self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt "nil")) (send l-0))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (recv (cat na self-0 self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 335)
  (parent 239)
  (realized)
  (shape)
  (maps
    ((0 1 2 3)
      ((l l-0) (l-b l) (x x) (y y) (a self-0) (b self) (na na) (nb nb)
        (priv-stor priv-stor-0) (self self-0) (priv-stor-0 priv-stor-0)
        (self-0 self) (priv-stor-1 priv-stor))))
  (origs (l-0 (6 1)) (pt-4 (6 1)) (l (4 1)) (pt-2 (4 1)) (nb (5 3))
    (pt (2 1)) (pt-0 (3 1)) (na (0 2)))
  (ugens (x (0 2))))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (self self-0 b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (gb base)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (y-0 l x-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) x-0) (mul (rec x-0) l-0)))
  (defstrand init 3 (na na-0) (a self) (b b) (gb gb)
    (priv-stor priv-stor) (l l-0) (x x-0))
  (precedes ((0 2) (8 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((4 1) (0 0)) ((4 1) (10 0)) ((5 1) (1 0)) ((6 1) (5 0))
    ((7 1) (8 0)) ((7 2) (0 1)) ((8 3) (0 3)) ((9 1) (8 1))
    ((10 2) (9 0)))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen x y-0 x-0)
  (absent (x l-0) (y-0 l) (x-0 l-0))
  (precur (9 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of b gb) (ltb-of self (exp (gen) l-0))
    (ltb-of self-0 (exp (gen) l)) (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((4 1) (10 0)) ((7 1) (3 0))
    ((7 1) (8 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 4 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv a l-1))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l-0)))
      (stor priv-stor (cat pt-0 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) x-0) (mul (rec x-0) l-0)))
      (send (cat (exp (gen) x-0) (mul (rec x-0) l-0))))
    ((load priv-stor (cat pt (pv self l-0)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 self b (exp (gen) x-0)))))
  (label 336)
  (parent 240)
  (unrealized (8 1) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (self self-0 b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (gb base)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (y-0 l x-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) x-0) (mul l (rec x-0))))
  (defstrand init 3 (na na-0) (a self-0) (b b) (gb gb)
    (priv-stor priv-stor-0) (l l-0) (x x-0))
  (precedes ((0 2) (8 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (8 0))
    ((7 1) (10 0)) ((7 2) (0 1)) ((8 3) (0 3)) ((9 1) (8 1))
    ((10 2) (9 0)))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen x y-0 x-0)
  (absent (x l) (y-0 l-0) (x-0 l-0))
  (precur (9 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of b gb) (ltb-of self (exp (gen) l))
    (ltb-of self-0 (exp (gen) l-0)) (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((7 1) (3 0)) ((7 1) (8 0))
    ((7 1) (10 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 7 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv a l-1))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) x-0) (mul l (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l (rec x-0)))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 self-0 b (exp (gen) x-0)))))
  (label 337)
  (parent 240)
  (unrealized (8 1) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (self self-0 a b name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (gb base) (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (y-0 l l-0 x-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
  (defstrand init 3 (na na-0) (a a) (b b) (gb gb)
    (priv-stor priv-stor-1) (l l-1) (x x-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self a)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (8 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (8 0))
    ((7 2) (0 1)) ((8 3) (0 3)) ((9 1) (8 1)) ((10 2) (9 0))
    ((11 1) (10 0)))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen x y-0 x-0)
  (absent (x l-0) (y-0 l) (x-0 l-1))
  (precur (9 0))
  (gen-st (pv self l-0) (pv self-0 l) (pv a l-1))
  (facts (ltb-of a (exp (gen) l-1)) (ltb-of b gb)
    (ltb-of self (exp (gen) l-0)) (ltb-of self-0 (exp (gen) l))
    (ltx-of a l-1) (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((7 1) (3 0)) ((7 1) (8 0))
    ((11 1) (10 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv a l-1))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l-0)))
      (stor priv-stor (cat pt-0 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-0 (rec x-0)))))
    ((load priv-stor-1 (cat pt-5 (pv a l-1)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 a b (exp (gen) x-0))))
    ((load priv-stor-1 (cat pt-6 ignore-1))
      (stor priv-stor-1 (cat pt-5 (pv a l-1)))))
  (label 338)
  (parent 240)
  (unrealized (8 1) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self-0) (b self)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self-0) (b self)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor) (l l) (y y-0))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (6 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (4 0))
    ((4 1) (1 0)) ((5 1) (6 0)) ((5 2) (0 1)) ((6 3) (0 3))
    ((7 1) (6 1)) ((8 1) (0 0)) ((8 2) (7 0)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (7 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self-0 (exp (gen) l-0)) (ltb-of self (exp (gen) l))
    (ltx-of self l) (ltx-of self-0 l-0))
  (leads-to ((5 1) (3 0)) ((5 1) (6 0)) ((8 1) (0 0)) ((8 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self-0 self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt "nil")) (send l-0))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (recv (cat na self-0 self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 339)
  (parent 243)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data)
    (self self-0 a name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (ga gx base)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (y-0 l y-1 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) y-1) (mul (rec y-1) l-0)))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b self) (ga ga) (gx gx)
    (priv-stor priv-stor) (l l-0) (y y-1))
  (precedes ((0 2) (8 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((4 1) (0 0)) ((4 1) (10 0)) ((5 1) (1 0)) ((6 1) (5 0))
    ((7 1) (8 0)) ((7 2) (0 1)) ((8 3) (0 3)) ((9 1) (8 1))
    ((10 3) (9 0)))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen x y-0 y-1)
  (absent (x l-0) (y-0 l) (y-1 l-0))
  (precur (9 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of a ga) (ltb-of self (exp (gen) l-0))
    (ltb-of self-0 (exp (gen) l)) (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((4 1) (10 0)) ((7 1) (3 0))
    ((7 1) (8 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 4 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv b l-1))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l-0)))
      (stor priv-stor (cat pt-0 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) y-1) (mul (rec y-1) l-0)))
      (send (cat (exp (gen) y-1) (mul (rec y-1) l-0))))
    ((load priv-stor (cat pt (pv self l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a self gx))
      (send
        (cat (exp (gen) y-1)
          (enc na-0 nb-0 a self (hash (exp ga l-0) (exp gx y-1)))))))
  (label 340)
  (parent 244)
  (unrealized (8 1) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data)
    (self self-0 a name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (ga gx base)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (y-0 l y-1 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) y-1) (mul l (rec y-1))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b self-0) (ga ga) (gx gx)
    (priv-stor priv-stor-0) (l l-0) (y y-1))
  (precedes ((0 2) (8 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (8 0))
    ((7 1) (10 0)) ((7 2) (0 1)) ((8 3) (0 3)) ((9 1) (8 1))
    ((10 3) (9 0)))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen x y-0 y-1)
  (absent (x l) (y-0 l-0) (y-1 l-0))
  (precur (9 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of a ga) (ltb-of self (exp (gen) l))
    (ltb-of self-0 (exp (gen) l-0)) (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((7 1) (3 0)) ((7 1) (8 0))
    ((7 1) (10 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 7 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv b l-1))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) y-1) (mul l (rec y-1))))
      (send (cat (exp (gen) y-1) (mul l (rec y-1)))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a self-0 gx))
      (send
        (cat (exp (gen) y-1)
          (enc na-0 nb-0 a self-0 (hash (exp ga l-0) (exp gx y-1)))))))
  (label 341)
  (parent 244)
  (unrealized (8 1) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (self self-0 a b name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (ga gx base) (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx)
    (y expt) (y-0 l l-0 y-1 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) y-1) (mul l-0 (rec y-1))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b) (ga ga) (gx gx)
    (priv-stor priv-stor-1) (l l-1) (y y-1))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (8 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (8 0))
    ((7 2) (0 1)) ((8 3) (0 3)) ((9 1) (8 1)) ((10 3) (9 0))
    ((11 1) (10 0)))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen x y-0 y-1)
  (absent (x l-0) (y-0 l) (y-1 l-1))
  (precur (9 0))
  (gen-st (pv self l-0) (pv self-0 l) (pv b l-1))
  (facts (ltb-of b (exp (gen) l-1)) (ltb-of a ga)
    (ltb-of self (exp (gen) l-0)) (ltb-of self-0 (exp (gen) l))
    (ltx-of b l-1) (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((7 1) (3 0)) ((7 1) (8 0))
    ((11 1) (10 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv b l-1))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l-0)))
      (stor priv-stor (cat pt-0 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) y-1) (mul l-0 (rec y-1))))
      (send (cat (exp (gen) y-1) (mul l-0 (rec y-1)))))
    ((load priv-stor-1 (cat pt-5 (pv b l-1)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b gx))
      (send
        (cat (exp (gen) y-1)
          (enc na-0 nb-0 a b (hash (exp ga l-1) (exp gx y-1))))))
    ((load priv-stor-1 (cat pt-6 ignore-1))
      (stor priv-stor-1 (cat pt-5 (pv b l-1)))))
  (label 342)
  (parent 244)
  (unrealized (8 1) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self-0) (b self)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand resp 4 (na na) (nb nb) (a self-0) (b self)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor) (l l) (y y-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (7 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (4 0))
    ((4 1) (1 0)) ((5 1) (7 0)) ((5 2) (6 0)) ((6 1) (0 1))
    ((7 3) (0 3)) ((8 1) (0 0)) ((8 2) (7 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (6 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self-0 (exp (gen) l-0)) (ltb-of self (exp (gen) l))
    (ltx-of self l) (ltx-of self-0 l-0))
  (leads-to ((5 1) (3 0)) ((5 1) (7 0)) ((8 1) (0 0)) ((8 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self-0 self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt "nil")) (send l-0))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (recv (cat na self-0 self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 343)
  (parent 247)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (self self-0 a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval) (gb base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (y-0 l l-0 l-1 x-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-1)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-1))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-1))
  (deflistener (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-1)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
  (defstrand init 3 (na na-0) (a a) (b b) (gb gb)
    (priv-stor priv-stor-1) (l l-0) (x x-0))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (9 0))
    ((7 2) (8 0)) ((8 1) (0 1)) ((9 3) (0 3)) ((10 1) (9 1))
    ((11 2) (10 0)))
  (uniq-orig na nb na-0 l l-1)
  (uniq-gen x y-0 x-0)
  (absent (x l-1) (y-0 l) (x-0 l-0))
  (precur (8 0) (10 0))
  (gen-st (pv self l-1) (pv self-0 l) (pv a l-0))
  (facts (ltb-of a (exp (gen) l-0)) (ltb-of b gb)
    (ltb-of self (exp (gen) l-1)) (ltb-of self-0 (exp (gen) l))
    (ltx-of a l-0) (ltx-of self-0 l) (ltx-of self l-1))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((7 1) (3 0)) ((7 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    gen-st-ltx-disclose-0 ltx-ltb trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand init 3) (exp (gen) x-0) (10 0))
  (traces
    ((load priv-stor (cat pt (pv self l-1)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l-1)))
      (stor priv-stor (cat pt-0 "nil")) (send l-1))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l-1))))
    ((recv (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-1)) (send (cat (exp (gen) l) l-1)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-1 (rec x-0)))))
    ((load priv-stor-1 (cat pt-5 (pv a l-0)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 a b (exp (gen) x-0)))))
  (label 344)
  (parent 248)
  (unrealized (9 1) (10 0) (11 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (y expt) (y-0 l l-0 x rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y x))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul y (rec y-0) x)))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) x) (mul l-0 (rec x))))
  (precedes ((0 2) (10 0)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (9 0))
    ((7 2) (8 0)) ((8 1) (0 1)) ((9 3) (0 3)) ((10 1) (9 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen y-0 x)
  (absent (y-0 l) (x l-0))
  (precur (8 0) (10 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of self-0 (exp (gen) l))
    (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((7 1) (3 0)) ((7 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 11 0 init 3) (exp (gen) x-0) (10 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x)))))
    ((load priv-stor (cat pt (pv self l-0)))
      (stor priv-stor (cat pt-0 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y x))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y x)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul y (rec y-0) x))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x)))))))
    ((recv (cat (exp (gen) x) (mul l-0 (rec x))))
      (send (cat (exp (gen) x) (mul l-0 (rec x))))))
  (label 345)
  (parent 248)
  (unrealized (9 1) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (gen) l-0))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((4 1) (0 0)) ((4 1) (10 0)) ((5 1) (1 0)) ((6 1) (5 0))
    ((7 1) (9 0)) ((7 2) (8 0)) ((8 1) (0 1)) ((9 3) (0 3))
    ((10 1) (9 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (8 0) (10 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of self-0 (exp (gen) l))
    (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((7 1) (3 0)) ((7 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (contracted (l-1 l-0) (w l-0)) (gen) (10 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l-0)))
      (stor priv-stor (cat pt-0 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0))))
  (label 346)
  (parent 248)
  (unrealized (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self-0) (b self)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand resp 4 (na na) (nb nb) (a self-0) (b self)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor) (l l) (y y-0))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (8 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (8 0)) ((6 2) (7 0))
    ((7 1) (0 1)) ((8 3) (0 3)) ((9 1) (8 1)) ((10 1) (0 0))
    ((10 2) (9 0)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (7 0) (9 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self-0 (exp (gen) l-0)) (ltb-of self (exp (gen) l))
    (ltx-of self l) (ltx-of self-0 l-0))
  (leads-to ((6 1) (3 0)) ((6 1) (8 0)) ((10 1) (0 0)) ((10 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 4 11 ltx-gen 3) (exp (gen) l-1)
    (10 0))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self-0 self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt "nil")) (send l-0))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (recv (cat na self-0 self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 347)
  (parent 248)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data)
    (self self-0 a b name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (ga gx base) (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx)
    (y expt) (y-0 l l-0 l-1 y-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-1)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-1))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-1))
  (deflistener (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-1)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) y-1) (mul l-1 (rec y-1))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b) (ga ga) (gx gx)
    (priv-stor priv-stor-1) (l l-0) (y y-1))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (9 0))
    ((7 2) (8 0)) ((8 1) (0 1)) ((9 3) (0 3)) ((10 1) (9 1))
    ((11 3) (10 0)))
  (uniq-orig na nb nb-0 l l-1)
  (uniq-gen x y-0 y-1)
  (absent (x l-1) (y-0 l) (y-1 l-0))
  (precur (8 0) (10 0))
  (gen-st (pv self l-1) (pv self-0 l) (pv b l-0))
  (facts (ltb-of b (exp (gen) l-0)) (ltb-of a ga)
    (ltb-of self (exp (gen) l-1)) (ltb-of self-0 (exp (gen) l))
    (ltx-of b l-0) (ltx-of self-0 l) (ltx-of self l-1))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((7 1) (3 0)) ((7 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    gen-st-ltx-disclose-0 ltx-ltb trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand resp 4) (exp (gen) y-1) (10 0))
  (traces
    ((load priv-stor (cat pt (pv self l-1)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l-1)))
      (stor priv-stor (cat pt-0 "nil")) (send l-1))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l-1))))
    ((recv (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-1)) (send (cat (exp (gen) l) l-1)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) y-1) (mul l-1 (rec y-1))))
      (send (cat (exp (gen) y-1) (mul l-1 (rec y-1)))))
    ((load priv-stor-1 (cat pt-5 (pv b l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b gx))
      (send
        (cat (exp (gen) y-1)
          (enc na-0 nb-0 a b (hash (exp ga l-0) (exp gx y-1)))))))
  (label 348)
  (parent 248)
  (unrealized (9 1) (10 0) (11 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) l-0) (mul l (rec l-0))))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (9 0))
    ((7 2) (8 0)) ((7 2) (10 0)) ((8 1) (0 1)) ((9 3) (0 3))
    ((10 1) (9 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l-0))
  (precur (8 0) (10 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((7 1) (3 0)) ((7 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 11 7 ltx-gen 3) (exp (gen) l-1)
    (10 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l-0) (mul l (rec l-0))))
      (send (cat (exp (gen) l-0) (mul l (rec l-0))))))
  (label 349)
  (parent 248)
  (unrealized (9 1) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data)
    (self self-0 self-1 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (y-0 l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self-1)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (9 0))
    ((7 2) (8 0)) ((8 1) (0 1)) ((9 3) (0 3)) ((10 1) (9 1))
    ((11 2) (10 0)))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (8 0) (10 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of self-1 (exp (gen) l-1)) (ltb-of self (exp (gen) l-0))
    (ltb-of self-0 (exp (gen) l)) (ltx-of self-1 l-1) (ltx-of self-0 l)
    (ltx-of self l-0))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((7 1) (3 0)) ((7 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-ltx-gen-ltx-of0 fact-resp-ltb-of0
    ltx-ltb trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 3) (exp (gen) l-1) (10 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l-0)))
      (stor priv-stor (cat pt-0 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
      (send (cat (exp (gen) l-1) (mul l-0 (rec l-1)))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self-1 l-1)))
      (send
        (sig (body self-1 (exp (gen) l-1) (pubk "sig" self-1))
          (privk "sig" self-1)))))
  (label 350)
  (parent 248)
  (unrealized (9 1) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self-0) (b self)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (gen) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self-0) (b self)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor) (l l) (y y-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (8 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (5 0))
    ((3 2) (6 0)) ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (5 0))
    ((7 1) (8 0)) ((7 2) (0 1)) ((8 3) (0 3)) ((9 1) (0 0))
    ((9 2) (8 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (6 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self-0 (exp (gen) l-0)) (ltb-of self (exp (gen) l))
    (ltx-of self l) (ltx-of self-0 l-0))
  (leads-to ((7 1) (3 0)) ((7 1) (8 0)) ((9 1) (0 0)) ((9 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 4 10 ltx-gen 3) (exp (gen) l-0)
    (9 1))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self-0 self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt "nil")) (send l-0))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (gen) l)) (send (cat (gen) l)))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (recv (cat na self-0 self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 351)
  (parent 251)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l y-0 l-0 rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) (mul l (rec w))) w))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((3 2) (7 0)) ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0))
    ((7 1) (6 0)) ((8 1) (9 0)) ((8 2) (0 1)) ((9 3) (0 3))
    ((10 1) (9 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l-0))
  (precur (7 0) (10 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((8 1) (3 0)) ((8 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul l (rec w))) w)) (exp (gen) l)
    (9 1))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) (mul l (rec w))) w))
      (send (cat (exp (gen) (mul l (rec w))) w))))
  (label 352)
  (parent 251)
  (unrealized (10 0))
  (comment "7 in cohort - 7 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (precedes ((0 2) (10 0)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((3 2) (7 0)) ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0))
    ((7 1) (6 0)) ((8 1) (11 0)) ((8 2) (0 1)) ((9 1) (0 3))
    ((10 1) (9 0)) ((11 1) (10 0)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (precur (7 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((8 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l) l-0))
    (exp (gen) (mul l l-0)) (10 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0))))
  (label 353)
  (parent 252)
  (unrealized (11 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (precedes ((0 2) (10 0)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((3 2) (7 0)) ((4 1) (0 0)) ((4 1) (11 0)) ((5 1) (1 0))
    ((6 1) (5 0)) ((7 1) (6 0)) ((8 2) (0 1)) ((9 1) (0 3))
    ((10 1) (9 0)) ((11 1) (10 0)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (precur (7 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((8 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l-0) l))
    (exp (gen) (mul l l-0)) (10 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l))))
  (label 354)
  (parent 252)
  (unrealized (11 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l y-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (gen) l-0))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (precedes ((0 2) (10 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((3 2) (7 0)) ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0))
    ((7 1) (6 0)) ((8 1) (0 1)) ((9 1) (10 0)) ((9 2) (8 0))
    ((10 3) (0 3)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l-0))
  (precur (7 0) (8 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((9 1) (3 0)) ((9 1) (10 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 9 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv self-0 l-0))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))))
  (label 355)
  (parent 259)
  (unrealized (10 1))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (gen) l-0))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (precedes ((0 2) (11 0)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((3 2) (7 0)) ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0))
    ((7 1) (6 0)) ((8 1) (0 1)) ((9 2) (8 0)) ((10 1) (0 3))
    ((11 1) (10 0)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (precur (7 0) (8 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((9 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation encryption-test
    (added-listener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
  (label 356)
  (parent 260)
  (unrealized (11 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self-0) (b self)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self-0) (b self)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor) (l l) (y y-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (7 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (4 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (7 0)) ((6 2) (0 1))
    ((6 2) (5 0)) ((7 3) (0 3)) ((8 1) (0 0)) ((8 2) (7 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (5 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self-0 (exp (gen) l-0)) (ltb-of self (exp (gen) l))
    (ltx-of self l) (ltx-of self-0 l-0))
  (leads-to ((6 1) (3 0)) ((6 1) (7 0)) ((8 1) (0 0)) ((8 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self-0 self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt "nil")) (send l-0))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (recv (cat na self-0 self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 357)
  (parent 261)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (self self-0 a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval) (gb base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (y-0 l l-0 l-1 x-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-1)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-1))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-1))
  (deflistener (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-1))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-1)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
  (defstrand init 3 (na na-0) (a a) (b b) (gb gb)
    (priv-stor priv-stor-1) (l l-0) (x x-0))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (6 0))
    ((8 1) (9 0)) ((8 2) (0 1)) ((8 2) (7 0)) ((9 3) (0 3))
    ((10 1) (9 1)) ((11 2) (10 0)))
  (uniq-orig na nb na-0 l l-1)
  (uniq-gen x y-0 x-0)
  (absent (x l-1) (y-0 l) (x-0 l-0))
  (precur (7 0) (10 0))
  (gen-st (pv self l-1) (pv self-0 l) (pv a l-0))
  (facts (ltb-of a (exp (gen) l-0)) (ltb-of b gb)
    (ltb-of self (exp (gen) l-1)) (ltb-of self-0 (exp (gen) l))
    (ltx-of a l-0) (ltx-of self-0 l) (ltx-of self l-1))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((8 1) (3 0)) ((8 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    gen-st-ltx-disclose-0 ltx-ltb trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand init 3) (exp (gen) x-0) (10 0))
  (traces
    ((load priv-stor (cat pt (pv self l-1)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l-1)))
      (stor priv-stor (cat pt-0 "nil")) (send l-1))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l-1))))
    ((recv (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-1)) (send (cat (exp (gen) l) l-1)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-1 (rec x-0)))))
    ((load priv-stor-1 (cat pt-5 (pv a l-0)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 a b (exp (gen) x-0)))))
  (label 358)
  (parent 262)
  (unrealized (9 1) (10 0) (11 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (y expt) (y-0 l l-0 x rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y x))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul y (rec y-0) x)))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) x) (mul l-0 (rec x))))
  (precedes ((0 2) (10 0)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (6 0))
    ((8 1) (9 0)) ((8 2) (0 1)) ((8 2) (7 0)) ((9 3) (0 3))
    ((10 1) (9 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen y-0 x)
  (absent (y-0 l) (x l-0))
  (precur (7 0) (10 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of self-0 (exp (gen) l))
    (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((8 1) (3 0)) ((8 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 11 0 init 3) (exp (gen) x-0) (10 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x)))))
    ((load priv-stor (cat pt (pv self l-0)))
      (stor priv-stor (cat pt-0 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y x))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y x)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul y (rec y-0) x))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x)))))))
    ((recv (cat (exp (gen) x) (mul l-0 (rec x))))
      (send (cat (exp (gen) x) (mul l-0 (rec x))))))
  (label 359)
  (parent 262)
  (unrealized (9 1) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (gen) l-0))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((4 1) (0 0)) ((4 1) (10 0)) ((5 1) (1 0)) ((6 1) (5 0))
    ((7 1) (6 0)) ((8 1) (9 0)) ((8 2) (0 1)) ((8 2) (7 0))
    ((9 3) (0 3)) ((10 1) (9 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (7 0) (10 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of self-0 (exp (gen) l))
    (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((8 1) (3 0)) ((8 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (contracted (l-1 l-0) (w l-0)) (gen) (10 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l-0)))
      (stor priv-stor (cat pt-0 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0))))
  (label 360)
  (parent 262)
  (unrealized (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self-0) (b self)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self-0) (b self)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor) (l l) (y y-0))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (8 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (5 0)) ((7 1) (8 0))
    ((7 2) (0 1)) ((7 2) (6 0)) ((8 3) (0 3)) ((9 1) (8 1))
    ((10 1) (0 0)) ((10 2) (9 0)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (6 0) (9 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self-0 (exp (gen) l-0)) (ltb-of self (exp (gen) l))
    (ltx-of self l) (ltx-of self-0 l-0))
  (leads-to ((7 1) (3 0)) ((7 1) (8 0)) ((10 1) (0 0)) ((10 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 4 11 ltx-gen 3) (exp (gen) l-1)
    (10 0))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self-0 self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt "nil")) (send l-0))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (recv (cat na self-0 self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 361)
  (parent 262)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data)
    (self self-0 a b name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (ga gx base) (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx)
    (y expt) (y-0 l l-0 l-1 y-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-1)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-1))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-1))
  (deflistener (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-1))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-1)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) y-1) (mul l-1 (rec y-1))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b) (ga ga) (gx gx)
    (priv-stor priv-stor-1) (l l-0) (y y-1))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (6 0))
    ((8 1) (9 0)) ((8 2) (0 1)) ((8 2) (7 0)) ((9 3) (0 3))
    ((10 1) (9 1)) ((11 3) (10 0)))
  (uniq-orig na nb nb-0 l l-1)
  (uniq-gen x y-0 y-1)
  (absent (x l-1) (y-0 l) (y-1 l-0))
  (precur (7 0) (10 0))
  (gen-st (pv self l-1) (pv self-0 l) (pv b l-0))
  (facts (ltb-of b (exp (gen) l-0)) (ltb-of a ga)
    (ltb-of self (exp (gen) l-1)) (ltb-of self-0 (exp (gen) l))
    (ltx-of b l-0) (ltx-of self-0 l) (ltx-of self l-1))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((8 1) (3 0)) ((8 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    gen-st-ltx-disclose-0 ltx-ltb trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand resp 4) (exp (gen) y-1) (10 0))
  (traces
    ((load priv-stor (cat pt (pv self l-1)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l-1)))
      (stor priv-stor (cat pt-0 "nil")) (send l-1))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l-1))))
    ((recv (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-1)) (send (cat (exp (gen) l) l-1)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) y-1) (mul l-1 (rec y-1))))
      (send (cat (exp (gen) y-1) (mul l-1 (rec y-1)))))
    ((load priv-stor-1 (cat pt-5 (pv b l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b gx))
      (send
        (cat (exp (gen) y-1)
          (enc na-0 nb-0 a b (hash (exp ga l-0) (exp gx y-1)))))))
  (label 362)
  (parent 262)
  (unrealized (9 1) (10 0) (11 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) l-0) (mul l (rec l-0))))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (6 0))
    ((8 1) (9 0)) ((8 2) (0 1)) ((8 2) (7 0)) ((8 2) (10 0))
    ((9 3) (0 3)) ((10 1) (9 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l-0))
  (precur (7 0) (10 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((8 1) (3 0)) ((8 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 11 8 ltx-gen 3) (exp (gen) l-1)
    (10 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l-0) (mul l (rec l-0))))
      (send (cat (exp (gen) l-0) (mul l (rec l-0))))))
  (label 363)
  (parent 262)
  (unrealized (9 1) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data)
    (self self-0 self-1 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (y-0 l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self-1)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (6 0))
    ((8 1) (9 0)) ((8 2) (0 1)) ((8 2) (7 0)) ((9 3) (0 3))
    ((10 1) (9 1)) ((11 2) (10 0)))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (7 0) (10 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of self-1 (exp (gen) l-1)) (ltb-of self (exp (gen) l-0))
    (ltb-of self-0 (exp (gen) l)) (ltx-of self-1 l-1) (ltx-of self-0 l)
    (ltx-of self l-0))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((8 1) (3 0)) ((8 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-ltx-gen-ltx-of0 fact-resp-ltb-of0
    ltx-ltb trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 3) (exp (gen) l-1) (10 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l-0)))
      (stor priv-stor (cat pt-0 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
      (send (cat (exp (gen) l-1) (mul l-0 (rec l-1)))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self-1 l-1)))
      (send
        (sig (body self-1 (exp (gen) l-1) (pubk "sig" self-1))
          (privk "sig" self-1)))))
  (label 364)
  (parent 262)
  (unrealized (9 1) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self-0) (b self)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand resp 4 (na na) (nb nb) (a self-0) (b self)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor) (l l) (y y-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (5 0)) ((7 1) (9 0))
    ((7 2) (6 0)) ((7 2) (8 0)) ((8 1) (0 1)) ((9 3) (0 3))
    ((10 1) (0 0)) ((10 2) (9 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (6 0) (8 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self-0 (exp (gen) l-0)) (ltb-of self (exp (gen) l))
    (ltx-of self l) (ltx-of self-0 l-0))
  (leads-to ((7 1) (3 0)) ((7 1) (9 0)) ((10 1) (0 0)) ((10 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 4 11 ltx-gen 3) (exp (gen) l-0)
    (10 1))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self-0 self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt "nil")) (send l-0))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (recv (cat na self-0 self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 365)
  (parent 265)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l y-0 l-0 rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) (mul l (rec w))) w))
  (precedes ((0 2) (10 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (6 0))
    ((8 1) (10 0)) ((8 2) (7 0)) ((8 2) (9 0)) ((9 1) (0 1))
    ((10 3) (0 3)) ((11 1) (10 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l-0))
  (precur (7 0) (9 0) (11 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((8 1) (3 0)) ((8 1) (10 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul l (rec w))) w)) (exp (gen) l)
    (10 1))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) (mul l (rec w))) w))
      (send (cat (exp (gen) (mul l (rec w))) w))))
  (label 366)
  (parent 265)
  (unrealized (11 0))
  (comment "7 in cohort - 7 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l-0) (one)))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (precedes ((0 2) (11 0)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (6 0))
    ((8 1) (12 0)) ((8 2) (7 0)) ((8 2) (9 0)) ((9 1) (0 1))
    ((10 1) (0 3)) ((11 1) (10 0)) ((12 1) (11 0)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (precur (7 0) (9 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((8 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l) l-0))
    (exp (gen) (mul l l-0)) (11 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0))))
  (label 367)
  (parent 266)
  (unrealized (12 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l-0) (one)))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (precedes ((0 2) (11 0)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((4 1) (0 0)) ((4 1) (12 0)) ((5 1) (1 0)) ((6 1) (5 0))
    ((7 1) (6 0)) ((8 2) (7 0)) ((8 2) (9 0)) ((9 1) (0 1))
    ((10 1) (0 3)) ((11 1) (10 0)) ((12 1) (11 0)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (precur (7 0) (9 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((8 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l-0) l))
    (exp (gen) (mul l l-0)) (11 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l))))
  (label 368)
  (parent 266)
  (unrealized (12 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (precedes ((0 2) (6 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (1 0))
    ((4 1) (0 0)) ((4 2) (6 1)) ((5 1) (6 0)) ((5 2) (0 1))
    ((6 3) (0 3)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of self-0 (exp (gen) l))
    (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((5 1) (3 0)) ((5 1) (6 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (stor priv-stor (cat pt "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))))
  (label 369)
  (parent 267)
  (realized)
  (shape)
  (maps
    ((0 1 2 3)
      ((l l-0) (l-b l) (x x) (y y) (a self) (b self-0) (na na) (nb nb)
        (priv-stor priv-stor) (self self) (priv-stor-0 priv-stor)
        (self-0 self-0) (priv-stor-1 priv-stor-0))))
  (origs (l-0 (4 1)) (pt-2 (4 1)) (l (5 1)) (pt-4 (5 1)) (nb (6 3))
    (pt-0 (3 1)) (pt (2 1)) (na (0 2)))
  (ugens (x (0 2))))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (self self-0 b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (gb base)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (y-0 l x-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) x-0) (mul (rec x-0) l-0)))
  (defstrand init 3 (na na-0) (a self) (b b) (gb gb)
    (priv-stor priv-stor) (l l-0) (x x-0))
  (precedes ((0 2) (8 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (0 0)) ((6 1) (10 0))
    ((6 2) (5 0)) ((7 1) (8 0)) ((7 2) (0 1)) ((8 3) (0 3))
    ((9 1) (8 1)) ((10 2) (9 0)))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen x y-0 x-0)
  (absent (x l-0) (y-0 l) (x-0 l-0))
  (precur (9 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of b gb) (ltb-of self (exp (gen) l-0))
    (ltb-of self-0 (exp (gen) l)) (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((6 1) (0 0)) ((6 1) (2 0)) ((6 1) (10 0)) ((7 1) (3 0))
    ((7 1) (8 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 6 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv a l-1))) (10 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (stor priv-stor (cat pt "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) x-0) (mul (rec x-0) l-0)))
      (send (cat (exp (gen) x-0) (mul (rec x-0) l-0))))
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 self b (exp (gen) x-0)))))
  (label 370)
  (parent 268)
  (unrealized (8 1) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (self self-0 b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (gb base)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (y-0 l x-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) x-0) (mul l (rec x-0))))
  (defstrand init 3 (na na-0) (a self-0) (b b) (gb gb)
    (priv-stor priv-stor-0) (l l-0) (x x-0))
  (precedes ((0 2) (8 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (0 0)) ((6 2) (5 0))
    ((7 1) (8 0)) ((7 1) (10 0)) ((7 2) (0 1)) ((8 3) (0 3))
    ((9 1) (8 1)) ((10 2) (9 0)))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen x y-0 x-0)
  (absent (x l) (y-0 l-0) (x-0 l-0))
  (precur (9 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of b gb) (ltb-of self (exp (gen) l))
    (ltb-of self-0 (exp (gen) l-0)) (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((6 1) (0 0)) ((6 1) (2 0)) ((7 1) (3 0)) ((7 1) (8 0))
    ((7 1) (10 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 7 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv a l-1))) (10 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) x-0) (mul l (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l (rec x-0)))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 self-0 b (exp (gen) x-0)))))
  (label 371)
  (parent 268)
  (unrealized (8 1) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (self self-0 a b name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (gb base) (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (y-0 l l-0 x-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
  (defstrand init 3 (na na-0) (a a) (b b) (gb gb)
    (priv-stor priv-stor-1) (l l-1) (x x-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self a)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (8 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (0 0)) ((6 2) (5 0))
    ((7 1) (8 0)) ((7 2) (0 1)) ((8 3) (0 3)) ((9 1) (8 1))
    ((10 2) (9 0)) ((11 1) (10 0)))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen x y-0 x-0)
  (absent (x l-0) (y-0 l) (x-0 l-1))
  (precur (9 0))
  (gen-st (pv self l-0) (pv self-0 l) (pv a l-1))
  (facts (ltb-of a (exp (gen) l-1)) (ltb-of b gb)
    (ltb-of self (exp (gen) l-0)) (ltb-of self-0 (exp (gen) l))
    (ltx-of a l-1) (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((6 1) (0 0)) ((6 1) (2 0)) ((7 1) (3 0)) ((7 1) (8 0))
    ((11 1) (10 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv a l-1))) (10 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (stor priv-stor (cat pt "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-0 (rec x-0)))))
    ((load priv-stor-1 (cat pt-5 (pv a l-1)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 a b (exp (gen) x-0))))
    ((load priv-stor-1 (cat pt-6 ignore-1))
      (stor priv-stor-1 (cat pt-5 (pv a l-1)))))
  (label 372)
  (parent 268)
  (unrealized (8 1) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) l-0) (one)))
  (precedes ((0 2) (7 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (4 0))
    ((4 1) (1 0)) ((5 1) (0 0)) ((5 2) (8 0)) ((6 1) (7 0))
    ((6 2) (0 1)) ((7 3) (0 3)) ((8 1) (7 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (8 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of self-0 (exp (gen) l))
    (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((5 1) (0 0)) ((5 1) (2 0)) ((6 1) (3 0)) ((6 1) (7 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (stor priv-stor (cat pt "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one)))))
  (label 373)
  (parent 271)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data)
    (self self-0 a name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (ga gx base)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (y-0 l y-1 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) y-1) (mul (rec y-1) l-0)))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b self) (ga ga) (gx gx)
    (priv-stor priv-stor) (l l-0) (y y-1))
  (precedes ((0 2) (8 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (0 0)) ((6 1) (10 0))
    ((6 2) (5 0)) ((7 1) (8 0)) ((7 2) (0 1)) ((8 3) (0 3))
    ((9 1) (8 1)) ((10 3) (9 0)))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen x y-0 y-1)
  (absent (x l-0) (y-0 l) (y-1 l-0))
  (precur (9 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of a ga) (ltb-of self (exp (gen) l-0))
    (ltb-of self-0 (exp (gen) l)) (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((6 1) (0 0)) ((6 1) (2 0)) ((6 1) (10 0)) ((7 1) (3 0))
    ((7 1) (8 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 6 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv b l-1))) (10 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (stor priv-stor (cat pt "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) y-1) (mul (rec y-1) l-0)))
      (send (cat (exp (gen) y-1) (mul (rec y-1) l-0))))
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a self gx))
      (send
        (cat (exp (gen) y-1)
          (enc na-0 nb-0 a self (hash (exp ga l-0) (exp gx y-1)))))))
  (label 374)
  (parent 272)
  (unrealized (8 1) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data)
    (self self-0 a name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (ga gx base)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (y-0 l y-1 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) y-1) (mul l (rec y-1))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b self-0) (ga ga) (gx gx)
    (priv-stor priv-stor-0) (l l-0) (y y-1))
  (precedes ((0 2) (8 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (0 0)) ((6 2) (5 0))
    ((7 1) (8 0)) ((7 1) (10 0)) ((7 2) (0 1)) ((8 3) (0 3))
    ((9 1) (8 1)) ((10 3) (9 0)))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen x y-0 y-1)
  (absent (x l) (y-0 l-0) (y-1 l-0))
  (precur (9 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of a ga) (ltb-of self (exp (gen) l))
    (ltb-of self-0 (exp (gen) l-0)) (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((6 1) (0 0)) ((6 1) (2 0)) ((7 1) (3 0)) ((7 1) (8 0))
    ((7 1) (10 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 7 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv b l-1))) (10 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) y-1) (mul l (rec y-1))))
      (send (cat (exp (gen) y-1) (mul l (rec y-1)))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a self-0 gx))
      (send
        (cat (exp (gen) y-1)
          (enc na-0 nb-0 a self-0 (hash (exp ga l-0) (exp gx y-1)))))))
  (label 375)
  (parent 272)
  (unrealized (8 1) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (self self-0 a b name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (ga gx base) (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx)
    (y expt) (y-0 l l-0 y-1 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) y-1) (mul l-0 (rec y-1))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b) (ga ga) (gx gx)
    (priv-stor priv-stor-1) (l l-1) (y y-1))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (8 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (0 0)) ((6 2) (5 0))
    ((7 1) (8 0)) ((7 2) (0 1)) ((8 3) (0 3)) ((9 1) (8 1))
    ((10 3) (9 0)) ((11 1) (10 0)))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen x y-0 y-1)
  (absent (x l-0) (y-0 l) (y-1 l-1))
  (precur (9 0))
  (gen-st (pv self l-0) (pv self-0 l) (pv b l-1))
  (facts (ltb-of b (exp (gen) l-1)) (ltb-of a ga)
    (ltb-of self (exp (gen) l-0)) (ltb-of self-0 (exp (gen) l))
    (ltx-of b l-1) (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((6 1) (0 0)) ((6 1) (2 0)) ((7 1) (3 0)) ((7 1) (8 0))
    ((11 1) (10 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv b l-1))) (10 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (stor priv-stor (cat pt "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) y-1) (mul l-0 (rec y-1))))
      (send (cat (exp (gen) y-1) (mul l-0 (rec y-1)))))
    ((load priv-stor-1 (cat pt-5 (pv b l-1)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b gx))
      (send
        (cat (exp (gen) y-1)
          (enc na-0 nb-0 a b (hash (exp ga l-1) (exp gx y-1))))))
    ((load priv-stor-1 (cat pt-6 ignore-1))
      (stor priv-stor-1 (cat pt-5 (pv b l-1)))))
  (label 376)
  (parent 272)
  (unrealized (8 1) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (precedes ((0 2) (8 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (4 0))
    ((4 1) (1 0)) ((5 1) (0 0)) ((5 2) (8 1)) ((6 1) (0 1))
    ((7 1) (8 0)) ((7 2) (6 0)) ((8 3) (0 3)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (6 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of self-0 (exp (gen) l))
    (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((5 1) (0 0)) ((5 1) (2 0)) ((7 1) (3 0)) ((7 1) (8 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (stor priv-stor (cat pt "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))))
  (label 377)
  (parent 275)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (self self-0 a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval) (gb base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (y-0 l l-0 l-1 x-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-1)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-1))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-1) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-1))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-1)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
  (defstrand init 3 (na na-0) (a a) (b b) (gb gb)
    (priv-stor priv-stor-1) (l l-0) (x x-0))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (0 0)) ((6 2) (5 0))
    ((7 1) (0 1)) ((8 1) (9 0)) ((8 2) (7 0)) ((9 3) (0 3))
    ((10 1) (9 1)) ((11 2) (10 0)))
  (uniq-orig na nb na-0 l l-1)
  (uniq-gen x y-0 x-0)
  (absent (x l-1) (y-0 l) (x-0 l-0))
  (precur (7 0) (10 0))
  (gen-st (pv self l-1) (pv self-0 l) (pv a l-0))
  (facts (ltb-of a (exp (gen) l-0)) (ltb-of b gb)
    (ltb-of self (exp (gen) l-1)) (ltb-of self-0 (exp (gen) l))
    (ltx-of a l-0) (ltx-of self-0 l) (ltx-of self l-1))
  (leads-to ((6 1) (0 0)) ((6 1) (2 0)) ((8 1) (3 0)) ((8 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    gen-st-ltx-disclose-0 ltx-ltb trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand init 3) (exp (gen) x-0) (10 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l-1)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l-1)))
      (stor priv-stor (cat pt "nil")) (send l-1))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-1) l)) (send (cat (exp (gen) l-1) l)))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-1 (rec x-0)))))
    ((load priv-stor-1 (cat pt-5 (pv a l-0)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 a b (exp (gen) x-0)))))
  (label 378)
  (parent 276)
  (unrealized (9 1) (10 0) (11 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (y expt) (y-0 l l-0 x rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y x))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul y (rec y-0) x)))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) x) (mul l-0 (rec x))))
  (precedes ((0 2) (10 0)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (0 0)) ((6 2) (5 0))
    ((7 1) (0 1)) ((8 1) (9 0)) ((8 2) (7 0)) ((9 3) (0 3))
    ((10 1) (9 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen y-0 x)
  (absent (y-0 l) (x l-0))
  (precur (7 0) (10 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of self-0 (exp (gen) l))
    (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((6 1) (0 0)) ((6 1) (2 0)) ((8 1) (3 0)) ((8 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 11 0 init 3) (exp (gen) x-0) (10 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x)))))
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (stor priv-stor (cat pt "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y x))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y x)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul y (rec y-0) x))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x)))))))
    ((recv (cat (exp (gen) x) (mul l-0 (rec x))))
      (send (cat (exp (gen) x) (mul l-0 (rec x))))))
  (label 379)
  (parent 276)
  (unrealized (9 1) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (gen) l-0))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (0 0)) ((6 1) (10 0))
    ((6 2) (5 0)) ((7 1) (0 1)) ((8 1) (9 0)) ((8 2) (7 0))
    ((9 3) (0 3)) ((10 1) (9 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (7 0) (10 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of self-0 (exp (gen) l))
    (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((6 1) (0 0)) ((6 1) (2 0)) ((8 1) (3 0)) ((8 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (contracted (l-1 l-0) (w l-0)) (gen) (10 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (stor priv-stor (cat pt "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0))))
  (label 380)
  (parent 276)
  (unrealized (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) l-0) (one)))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (0 0)) ((6 2) (10 0))
    ((7 1) (0 1)) ((8 1) (9 0)) ((8 2) (7 0)) ((9 3) (0 3))
    ((10 1) (9 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (7 0) (10 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of self-0 (exp (gen) l))
    (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((6 1) (0 0)) ((6 1) (2 0)) ((8 1) (3 0)) ((8 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 11 6 ltx-gen 3) (exp (gen) l-1)
    (10 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (stor priv-stor (cat pt "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one)))))
  (label 381)
  (parent 276)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data)
    (self self-0 a b name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (ga gx base) (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx)
    (y expt) (y-0 l l-0 l-1 y-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-1)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-1))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-1) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-1))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-1)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) y-1) (mul l-1 (rec y-1))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b) (ga ga) (gx gx)
    (priv-stor priv-stor-1) (l l-0) (y y-1))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (0 0)) ((6 2) (5 0))
    ((7 1) (0 1)) ((8 1) (9 0)) ((8 2) (7 0)) ((9 3) (0 3))
    ((10 1) (9 1)) ((11 3) (10 0)))
  (uniq-orig na nb nb-0 l l-1)
  (uniq-gen x y-0 y-1)
  (absent (x l-1) (y-0 l) (y-1 l-0))
  (precur (7 0) (10 0))
  (gen-st (pv self l-1) (pv self-0 l) (pv b l-0))
  (facts (ltb-of b (exp (gen) l-0)) (ltb-of a ga)
    (ltb-of self (exp (gen) l-1)) (ltb-of self-0 (exp (gen) l))
    (ltx-of b l-0) (ltx-of self-0 l) (ltx-of self l-1))
  (leads-to ((6 1) (0 0)) ((6 1) (2 0)) ((8 1) (3 0)) ((8 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    gen-st-ltx-disclose-0 ltx-ltb trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand resp 4) (exp (gen) y-1) (10 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l-1)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l-1)))
      (stor priv-stor (cat pt "nil")) (send l-1))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-1) l)) (send (cat (exp (gen) l-1) l)))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) y-1) (mul l-1 (rec y-1))))
      (send (cat (exp (gen) y-1) (mul l-1 (rec y-1)))))
    ((load priv-stor-1 (cat pt-5 (pv b l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b gx))
      (send
        (cat (exp (gen) y-1)
          (enc na-0 nb-0 a b (hash (exp ga l-0) (exp gx y-1)))))))
  (label 382)
  (parent 276)
  (unrealized (9 1) (10 0) (11 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) l-0) (mul l (rec l-0))))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (0 0)) ((6 2) (5 0))
    ((7 1) (0 1)) ((8 1) (9 0)) ((8 2) (7 0)) ((8 2) (10 0))
    ((9 3) (0 3)) ((10 1) (9 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l-0))
  (precur (7 0) (10 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((6 1) (0 0)) ((6 1) (2 0)) ((8 1) (3 0)) ((8 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 11 8 ltx-gen 3) (exp (gen) l-1)
    (10 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l-0) (mul l (rec l-0))))
      (send (cat (exp (gen) l-0) (mul l (rec l-0))))))
  (label 383)
  (parent 276)
  (unrealized (9 1) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data)
    (self self-0 self-1 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (y-0 l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self-1)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (0 0)) ((6 2) (5 0))
    ((7 1) (0 1)) ((8 1) (9 0)) ((8 2) (7 0)) ((9 3) (0 3))
    ((10 1) (9 1)) ((11 2) (10 0)))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (7 0) (10 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of self-1 (exp (gen) l-1)) (ltb-of self (exp (gen) l-0))
    (ltb-of self-0 (exp (gen) l)) (ltx-of self-1 l-1) (ltx-of self-0 l)
    (ltx-of self l-0))
  (leads-to ((6 1) (0 0)) ((6 1) (2 0)) ((8 1) (3 0)) ((8 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-ltx-gen-ltx-of0 fact-resp-ltb-of0
    ltx-ltb trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 3) (exp (gen) l-1) (10 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (stor priv-stor (cat pt "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
      (send (cat (exp (gen) l-1) (mul l-0 (rec l-1)))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self-1 l-1)))
      (send
        (sig (body self-1 (exp (gen) l-1) (pubk "sig" self-1))
          (privk "sig" self-1)))))
  (label 384)
  (parent 276)
  (unrealized (9 1) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self-0) (b self)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self-0) (b self)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor) (l l) (y y-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (8 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((3 2) (5 0)) ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (5 0))
    ((7 1) (8 0)) ((7 2) (0 1)) ((8 3) (0 3)) ((9 1) (0 0))
    ((9 2) (8 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (6 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self-0 (exp (gen) l-0)) (ltb-of self (exp (gen) l))
    (ltx-of self l) (ltx-of self-0 l-0))
  (leads-to ((7 1) (3 0)) ((7 1) (8 0)) ((9 1) (0 0)) ((9 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 4 10 ltx-gen 3) (exp (gen) l-0)
    (9 1))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self-0 self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt "nil")) (send l-0))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (recv (cat na self-0 self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 385)
  (parent 279)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l y-0 l-0 rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (gen) l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) (mul l (rec w))) w))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (7 0))
    ((3 2) (6 0)) ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0))
    ((7 1) (6 0)) ((8 1) (9 0)) ((8 2) (0 1)) ((9 3) (0 3))
    ((10 1) (9 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l-0))
  (precur (7 0) (10 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((8 1) (3 0)) ((8 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul l (rec w))) w)) (exp (gen) l)
    (9 1))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (gen) l)) (send (cat (gen) l)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) (mul l (rec w))) w))
      (send (cat (exp (gen) (mul l (rec w))) w))))
  (label 386)
  (parent 279)
  (unrealized (10 0))
  (comment "7 in cohort - 7 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (gen) l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (precedes ((0 2) (10 0)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (7 0))
    ((3 2) (6 0)) ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0))
    ((7 1) (6 0)) ((8 1) (11 0)) ((8 2) (0 1)) ((9 1) (0 3))
    ((10 1) (9 0)) ((11 1) (10 0)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (precur (7 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((8 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l) l-0))
    (exp (gen) (mul l l-0)) (10 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (gen) l)) (send (cat (gen) l)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0))))
  (label 387)
  (parent 280)
  (unrealized (11 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (gen) l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (precedes ((0 2) (10 0)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (7 0))
    ((3 2) (6 0)) ((4 1) (0 0)) ((4 1) (11 0)) ((5 1) (1 0))
    ((6 1) (5 0)) ((7 1) (6 0)) ((8 2) (0 1)) ((9 1) (0 3))
    ((10 1) (9 0)) ((11 1) (10 0)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (precur (7 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((8 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l-0) l))
    (exp (gen) (mul l l-0)) (10 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (gen) l)) (send (cat (gen) l)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l))))
  (label 388)
  (parent 280)
  (unrealized (11 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l y-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (gen) l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (precedes ((0 2) (10 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (7 0))
    ((3 2) (6 0)) ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0))
    ((7 1) (6 0)) ((8 1) (0 1)) ((9 1) (10 0)) ((9 2) (8 0))
    ((10 3) (0 3)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l-0))
  (precur (7 0) (8 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((9 1) (3 0)) ((9 1) (10 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 9 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv self-0 l-0))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (gen) l)) (send (cat (gen) l)))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))))
  (label 389)
  (parent 287)
  (unrealized (10 1))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (gen) l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (precedes ((0 2) (11 0)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (7 0))
    ((3 2) (6 0)) ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0))
    ((7 1) (6 0)) ((8 1) (0 1)) ((9 2) (8 0)) ((10 1) (0 3))
    ((11 1) (10 0)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (precur (7 0) (8 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((9 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation encryption-test
    (added-listener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (gen) l)) (send (cat (gen) l)))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
  (label 390)
  (parent 288)
  (unrealized (11 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (precedes ((0 2) (8 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (4 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (0 0)) ((6 2) (5 0))
    ((6 2) (8 1)) ((7 1) (8 0)) ((7 2) (0 1)) ((8 3) (0 3)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (5 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of self-0 (exp (gen) l))
    (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((6 1) (0 0)) ((6 1) (2 0)) ((7 1) (3 0)) ((7 1) (8 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (stor priv-stor (cat pt "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))))
  (label 391)
  (parent 289)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (self self-0 a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval) (gb base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (y-0 l l-0 l-1 x-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-1)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-1))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-1) l))
  (deflistener (cat (exp (gen) l-1) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-1)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
  (defstrand init 3 (na na-0) (a a) (b b) (gb gb)
    (priv-stor priv-stor-1) (l l-0) (x x-0))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (5 0)) ((7 1) (0 0))
    ((7 2) (6 0)) ((8 1) (9 0)) ((8 2) (0 1)) ((9 3) (0 3))
    ((10 1) (9 1)) ((11 2) (10 0)))
  (uniq-orig na nb na-0 l l-1)
  (uniq-gen x y-0 x-0)
  (absent (x l-1) (y-0 l) (x-0 l-0))
  (precur (6 0) (10 0))
  (gen-st (pv self l-1) (pv self-0 l) (pv a l-0))
  (facts (ltb-of a (exp (gen) l-0)) (ltb-of b gb)
    (ltb-of self (exp (gen) l-1)) (ltb-of self-0 (exp (gen) l))
    (ltx-of a l-0) (ltx-of self-0 l) (ltx-of self l-1))
  (leads-to ((7 1) (0 0)) ((7 1) (2 0)) ((8 1) (3 0)) ((8 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    gen-st-ltx-disclose-0 ltx-ltb trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand init 3) (exp (gen) x-0) (10 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l-1)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l-1)))
      (stor priv-stor (cat pt "nil")) (send l-1))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-1) l)) (send (cat (exp (gen) l-1) l)))
    ((recv (cat (exp (gen) l-1) (one)))
      (send (cat (exp (gen) l-1) (one))))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-1 (rec x-0)))))
    ((load priv-stor-1 (cat pt-5 (pv a l-0)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 a b (exp (gen) x-0)))))
  (label 392)
  (parent 290)
  (unrealized (9 1) (10 0) (11 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (y expt) (y-0 l l-0 x rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y x))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul y (rec y-0) x)))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) x) (mul l-0 (rec x))))
  (precedes ((0 2) (10 0)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (5 0)) ((7 1) (0 0))
    ((7 2) (6 0)) ((8 1) (9 0)) ((8 2) (0 1)) ((9 3) (0 3))
    ((10 1) (9 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen y-0 x)
  (absent (y-0 l) (x l-0))
  (precur (6 0) (10 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of self-0 (exp (gen) l))
    (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((7 1) (0 0)) ((7 1) (2 0)) ((8 1) (3 0)) ((8 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 11 0 init 3) (exp (gen) x-0) (10 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x)))))
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (stor priv-stor (cat pt "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y x))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y x)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul y (rec y-0) x))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x)))))))
    ((recv (cat (exp (gen) x) (mul l-0 (rec x))))
      (send (cat (exp (gen) x) (mul l-0 (rec x))))))
  (label 393)
  (parent 290)
  (unrealized (9 1) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (gen) l-0))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (5 0)) ((7 1) (0 0))
    ((7 1) (10 0)) ((7 2) (6 0)) ((8 1) (9 0)) ((8 2) (0 1))
    ((9 3) (0 3)) ((10 1) (9 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (6 0) (10 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of self-0 (exp (gen) l))
    (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((7 1) (0 0)) ((7 1) (2 0)) ((8 1) (3 0)) ((8 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (contracted (l-1 l-0) (w l-0)) (gen) (10 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (stor priv-stor (cat pt "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0))))
  (label 394)
  (parent 290)
  (unrealized (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) l-0) (one)))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (5 0)) ((7 1) (0 0))
    ((7 2) (6 0)) ((7 2) (10 0)) ((8 1) (9 0)) ((8 2) (0 1))
    ((9 3) (0 3)) ((10 1) (9 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (6 0) (10 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of self-0 (exp (gen) l))
    (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((7 1) (0 0)) ((7 1) (2 0)) ((8 1) (3 0)) ((8 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 11 7 ltx-gen 3) (exp (gen) l-1)
    (10 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (stor priv-stor (cat pt "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one)))))
  (label 395)
  (parent 290)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data)
    (self self-0 a b name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (ga gx base) (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx)
    (y expt) (y-0 l l-0 l-1 y-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-1)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-1))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-1) l))
  (deflistener (cat (exp (gen) l-1) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-1)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) y-1) (mul l-1 (rec y-1))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b) (ga ga) (gx gx)
    (priv-stor priv-stor-1) (l l-0) (y y-1))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (5 0)) ((7 1) (0 0))
    ((7 2) (6 0)) ((8 1) (9 0)) ((8 2) (0 1)) ((9 3) (0 3))
    ((10 1) (9 1)) ((11 3) (10 0)))
  (uniq-orig na nb nb-0 l l-1)
  (uniq-gen x y-0 y-1)
  (absent (x l-1) (y-0 l) (y-1 l-0))
  (precur (6 0) (10 0))
  (gen-st (pv self l-1) (pv self-0 l) (pv b l-0))
  (facts (ltb-of b (exp (gen) l-0)) (ltb-of a ga)
    (ltb-of self (exp (gen) l-1)) (ltb-of self-0 (exp (gen) l))
    (ltx-of b l-0) (ltx-of self-0 l) (ltx-of self l-1))
  (leads-to ((7 1) (0 0)) ((7 1) (2 0)) ((8 1) (3 0)) ((8 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    gen-st-ltx-disclose-0 ltx-ltb trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand resp 4) (exp (gen) y-1) (10 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l-1)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l-1)))
      (stor priv-stor (cat pt "nil")) (send l-1))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-1) l)) (send (cat (exp (gen) l-1) l)))
    ((recv (cat (exp (gen) l-1) (one)))
      (send (cat (exp (gen) l-1) (one))))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) y-1) (mul l-1 (rec y-1))))
      (send (cat (exp (gen) y-1) (mul l-1 (rec y-1)))))
    ((load priv-stor-1 (cat pt-5 (pv b l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b gx))
      (send
        (cat (exp (gen) y-1)
          (enc na-0 nb-0 a b (hash (exp ga l-0) (exp gx y-1)))))))
  (label 396)
  (parent 290)
  (unrealized (9 1) (10 0) (11 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) l-0) (mul l (rec l-0))))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (5 0)) ((7 1) (0 0))
    ((7 2) (6 0)) ((8 1) (9 0)) ((8 2) (0 1)) ((8 2) (10 0))
    ((9 3) (0 3)) ((10 1) (9 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l-0))
  (precur (6 0) (10 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((7 1) (0 0)) ((7 1) (2 0)) ((8 1) (3 0)) ((8 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 11 8 ltx-gen 3) (exp (gen) l-1)
    (10 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l-0) (mul l (rec l-0))))
      (send (cat (exp (gen) l-0) (mul l (rec l-0))))))
  (label 397)
  (parent 290)
  (unrealized (9 1) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data)
    (self self-0 self-1 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (y-0 l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self-1)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (5 0)) ((7 1) (0 0))
    ((7 2) (6 0)) ((8 1) (9 0)) ((8 2) (0 1)) ((9 3) (0 3))
    ((10 1) (9 1)) ((11 2) (10 0)))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (6 0) (10 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of self-1 (exp (gen) l-1)) (ltb-of self (exp (gen) l-0))
    (ltb-of self-0 (exp (gen) l)) (ltx-of self-1 l-1) (ltx-of self-0 l)
    (ltx-of self l-0))
  (leads-to ((7 1) (0 0)) ((7 1) (2 0)) ((8 1) (3 0)) ((8 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-ltx-gen-ltx-of0 fact-resp-ltb-of0
    ltx-ltb trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 3) (exp (gen) l-1) (10 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (stor priv-stor (cat pt "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
      (send (cat (exp (gen) l-1) (mul l-0 (rec l-1)))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self-1 l-1)))
      (send
        (sig (body self-1 (exp (gen) l-1) (pubk "sig" self-1))
          (privk "sig" self-1)))))
  (label 398)
  (parent 290)
  (unrealized (9 1) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (precedes ((0 2) (10 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (5 0)) ((7 1) (0 0))
    ((7 2) (6 0)) ((7 2) (10 1)) ((8 1) (0 1)) ((9 1) (10 0))
    ((9 2) (8 0)) ((10 3) (0 3)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (6 0) (8 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of self-0 (exp (gen) l))
    (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((7 1) (0 0)) ((7 1) (2 0)) ((9 1) (3 0)) ((9 1) (10 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 11 7 ltx-gen 3) (exp (gen) l-0)
    (10 1))
  (traces
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (stor priv-stor (cat pt "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))))
  (label 399)
  (parent 293)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l y-0 l-0 rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) (mul l (rec w))) w))
  (precedes ((0 2) (10 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (5 0)) ((7 1) (0 0))
    ((7 2) (6 0)) ((8 1) (0 1)) ((9 1) (10 0)) ((9 2) (8 0))
    ((10 3) (0 3)) ((11 1) (10 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l-0))
  (precur (6 0) (8 0) (11 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((7 1) (0 0)) ((7 1) (2 0)) ((9 1) (3 0)) ((9 1) (10 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul l (rec w))) w)) (exp (gen) l)
    (10 1))
  (traces
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) (mul l (rec w))) w))
      (send (cat (exp (gen) (mul l (rec w))) w))))
  (label 400)
  (parent 293)
  (unrealized (11 0))
  (comment "7 in cohort - 7 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (precedes ((0 2) (11 0)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (5 0)) ((7 1) (0 0))
    ((7 2) (6 0)) ((8 1) (0 1)) ((9 1) (12 0)) ((9 2) (8 0))
    ((10 1) (0 3)) ((11 1) (10 0)) ((12 1) (11 0)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (precur (6 0) (8 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((7 1) (0 0)) ((7 1) (2 0)) ((9 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l) l-0))
    (exp (gen) (mul l l-0)) (11 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0))))
  (label 401)
  (parent 294)
  (unrealized (12 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (precedes ((0 2) (11 0)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (5 0)) ((7 1) (0 0))
    ((7 1) (12 0)) ((7 2) (6 0)) ((8 1) (0 1)) ((9 2) (8 0))
    ((10 1) (0 3)) ((11 1) (10 0)) ((12 1) (11 0)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (precur (6 0) (8 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((7 1) (0 0)) ((7 1) (2 0)) ((9 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l-0) l))
    (exp (gen) (mul l l-0)) (11 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l))))
  (label 402)
  (parent 294)
  (unrealized (12 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pval)
    (priv-stor locn) (x rndx) (y expt) (y-0 l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener l)
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self) (ga (exp (gen) l))
    (gx (exp (gen) (mul x y (rec y-0)))) (priv-stor priv-stor) (l l)
    (y y-0))
  (precedes ((0 2) (5 2)) ((0 4) (2 0)) ((2 2) (3 0)) ((3 1) (1 0))
    ((4 1) (0 0)) ((4 1) (5 0)) ((4 2) (0 1)) ((4 2) (5 1))
    ((5 3) (0 3)))
  (uniq-orig na nb l)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((4 1) (5 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l)) ((recv l) (send l))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))))
  (label 403)
  (parent 295)
  (seen 311)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb na-0 data) (self b name)
    (pt pt-0 pt-1 pval) (gb base) (priv-stor locn) (x rndx) (y expt)
    (y-0 x-0 l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (gen) (mul l l)))
  (deflistener l)
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self) (ga (exp (gen) l))
    (gx (exp (gen) (mul x y (rec y-0)))) (priv-stor priv-stor) (l l)
    (y y-0))
  (deflistener (cat (exp (gen) x-0) (mul (rec x-0) l)))
  (defstrand init 3 (na na-0) (a self) (b b) (gb gb)
    (priv-stor priv-stor) (l l) (x x-0))
  (precedes ((0 2) (7 2)) ((0 4) (2 0)) ((2 2) (5 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (4 0)) ((6 1) (0 0)) ((6 1) (7 0))
    ((6 1) (9 0)) ((6 2) (0 1)) ((7 3) (0 3)) ((8 1) (7 1))
    ((9 2) (8 0)))
  (uniq-orig na nb na-0 l)
  (uniq-gen x y-0 x-0)
  (absent (x l) (y-0 l) (x-0 l))
  (precur (4 0) (8 0))
  (gen-st (pv self l))
  (facts (ltb-of b gb) (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((6 1) (0 0)) ((6 1) (2 0)) ((6 1) (7 0)) ((6 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 10 6 ltx-gen 2)
    (ch-msg priv-stor-0 (cat pt-2 (pv a l-0))) (9 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (gen) (mul l l))) (send (cat (gen) (mul l l))))
    ((recv l) (send l))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) x-0) (mul (rec x-0) l)))
      (send (cat (exp (gen) x-0) (mul (rec x-0) l))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 self b (exp (gen) x-0)))))
  (label 404)
  (parent 296)
  (unrealized (7 1) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (self a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (gb base) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l x-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (gen) (mul l l)))
  (deflistener l)
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self) (ga (exp (gen) l))
    (gx (exp (gen) (mul x y (rec y-0)))) (priv-stor priv-stor) (l l)
    (y y-0))
  (deflistener (cat (exp (gen) x-0) (mul l (rec x-0))))
  (defstrand init 3 (na na-0) (a a) (b b) (gb gb)
    (priv-stor priv-stor-0) (l l-0) (x x-0))
  (defstrand ltx-gen 2 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (7 2)) ((0 4) (2 0)) ((2 2) (5 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (4 0)) ((6 1) (0 0)) ((6 1) (7 0))
    ((6 2) (0 1)) ((7 3) (0 3)) ((8 1) (7 1)) ((9 2) (8 0))
    ((10 1) (9 0)))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen x y-0 x-0)
  (absent (x l) (y-0 l) (x-0 l-0))
  (precur (4 0) (8 0))
  (gen-st (pv self l) (pv a l-0))
  (facts (ltb-of a (exp (gen) l-0)) (ltb-of b gb)
    (ltb-of self (exp (gen) l)) (ltx-of a l-0) (ltx-of self l))
  (leads-to ((6 1) (0 0)) ((6 1) (2 0)) ((6 1) (7 0)) ((10 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-0 (cat pt-2 (pv a l-0))) (9 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (gen) (mul l l))) (send (cat (gen) (mul l l))))
    ((recv l) (send l))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) x-0) (mul l (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l (rec x-0)))))
    ((load priv-stor-0 (cat pt-2 (pv a l-0)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 a b (exp (gen) x-0))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l-0)))))
  (label 405)
  (parent 296)
  (unrealized (7 1) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb na-0 nb-0 data) (self a name)
    (pt pt-0 pt-1 pval) (ga gx base) (priv-stor locn) (x rndx) (y expt)
    (y-0 y-1 l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (gen) (mul l l)))
  (deflistener l)
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self) (ga (exp (gen) l))
    (gx (exp (gen) (mul x y (rec y-0)))) (priv-stor priv-stor) (l l)
    (y y-0))
  (deflistener (cat (exp (gen) y-1) (mul (rec y-1) l)))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b self) (ga ga) (gx gx)
    (priv-stor priv-stor) (l l) (y y-1))
  (precedes ((0 2) (7 2)) ((0 4) (2 0)) ((2 2) (5 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (4 0)) ((6 1) (0 0)) ((6 1) (7 0))
    ((6 1) (9 0)) ((6 2) (0 1)) ((7 3) (0 3)) ((8 1) (7 1))
    ((9 3) (8 0)))
  (uniq-orig na nb nb-0 l)
  (uniq-gen x y-0 y-1)
  (absent (x l) (y-0 l) (y-1 l))
  (precur (4 0) (8 0))
  (gen-st (pv self l))
  (facts (ltb-of a ga) (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((6 1) (0 0)) ((6 1) (2 0)) ((6 1) (7 0)) ((6 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 10 6 ltx-gen 2)
    (ch-msg priv-stor-0 (cat pt-2 (pv b l-0))) (9 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (gen) (mul l l))) (send (cat (gen) (mul l l))))
    ((recv l) (send l))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) y-1) (mul (rec y-1) l)))
      (send (cat (exp (gen) y-1) (mul (rec y-1) l))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a self gx))
      (send
        (cat (exp (gen) y-1)
          (enc na-0 nb-0 a self (hash (exp ga l) (exp gx y-1)))))))
  (label 406)
  (parent 299)
  (unrealized (7 1) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (self a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (ga gx base)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (y-0 l y-1 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (gen) (mul l l)))
  (deflistener l)
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self) (ga (exp (gen) l))
    (gx (exp (gen) (mul x y (rec y-0)))) (priv-stor priv-stor) (l l)
    (y y-0))
  (deflistener (cat (exp (gen) y-1) (mul l (rec y-1))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b) (ga ga) (gx gx)
    (priv-stor priv-stor-0) (l l-0) (y y-1))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (7 2)) ((0 4) (2 0)) ((2 2) (5 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (4 0)) ((6 1) (0 0)) ((6 1) (7 0))
    ((6 2) (0 1)) ((7 3) (0 3)) ((8 1) (7 1)) ((9 3) (8 0))
    ((10 1) (9 0)))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen x y-0 y-1)
  (absent (x l) (y-0 l) (y-1 l-0))
  (precur (4 0) (8 0))
  (gen-st (pv self l) (pv b l-0))
  (facts (ltb-of b (exp (gen) l-0)) (ltb-of a ga)
    (ltb-of self (exp (gen) l)) (ltx-of b l-0) (ltx-of self l))
  (leads-to ((6 1) (0 0)) ((6 1) (2 0)) ((6 1) (7 0)) ((10 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-0 (cat pt-2 (pv b l-0))) (9 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (gen) (mul l l))) (send (cat (gen) (mul l l))))
    ((recv l) (send l))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) y-1) (mul l (rec y-1))))
      (send (cat (exp (gen) y-1) (mul l (rec y-1)))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b gx))
      (send
        (cat (exp (gen) y-1)
          (enc na-0 nb-0 a b (hash (exp ga l-0) (exp gx y-1))))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))))
  (label 407)
  (parent 299)
  (unrealized (7 1) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pval)
    (priv-stor locn) (x rndx) (y expt) (y-0 l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (gen) (mul l l)))
  (deflistener l)
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self) (ga (exp (gen) l))
    (gx (exp (gen) (mul x y (rec y-0)))) (priv-stor priv-stor) (l l)
    (y y-0))
  (deflistener (cat (exp (gen) l) (one)))
  (precedes ((0 2) (6 2)) ((0 4) (2 0)) ((2 2) (4 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((5 1) (6 0)) ((5 2) (0 1))
    ((5 2) (7 0)) ((6 3) (0 3)) ((7 1) (6 1)))
  (uniq-orig na nb l)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l))
  (precur (3 0) (7 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((5 1) (0 0)) ((5 1) (2 0)) ((5 1) (6 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (gen) (mul l l))) (send (cat (gen) (mul l l))))
    ((recv l) (send l))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one)))))
  (label 408)
  (parent 300)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb na-0 data) (self b name)
    (pt pt-0 pt-1 pval) (gb base) (priv-stor locn) (x rndx) (y expt)
    (x-0 l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (gen) (mul l l)))
  (deflistener l)
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) x-0) (mul (rec x-0) l l)))
  (defstrand init 3 (na na-0) (a self) (b b) (gb gb)
    (priv-stor priv-stor) (l l) (x x-0))
  (precedes ((0 2) (8 0)) ((0 4) (2 0)) ((2 2) (5 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (4 0)) ((6 1) (0 0)) ((6 1) (10 0))
    ((6 2) (0 1)) ((7 1) (0 3)) ((8 1) (7 0)) ((9 1) (8 0))
    ((10 2) (9 0)))
  (uniq-orig na na-0 l)
  (uniq-gen x x-0)
  (absent (x l) (x-0 l))
  (precur (4 0) (9 0))
  (gen-st (pv self l))
  (facts (ltb-of b gb) (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((6 1) (0 0)) ((6 1) (2 0)) ((6 1) (10 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 6 ltx-gen 2)
    (ch-msg priv-stor-0 (cat pt-2 (pv a l-0))) (10 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (gen) (mul l l))) (send (cat (gen) (mul l l))))
    ((recv l) (send l))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) x-0) (mul (rec x-0) l l)))
      (send (cat (exp (gen) x-0) (mul (rec x-0) l l))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 self b (exp (gen) x-0)))))
  (label 409)
  (parent 302)
  (unrealized (8 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (self a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (gb base) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l x-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (gen) (mul l l)))
  (deflistener l)
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) x-0) (mul l l (rec x-0))))
  (defstrand init 3 (na na-0) (a a) (b b) (gb gb)
    (priv-stor priv-stor-0) (l l-0) (x x-0))
  (defstrand ltx-gen 2 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (8 0)) ((0 4) (2 0)) ((2 2) (5 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (4 0)) ((6 1) (0 0)) ((6 2) (0 1))
    ((7 1) (0 3)) ((8 1) (7 0)) ((9 1) (8 0)) ((10 2) (9 0))
    ((11 1) (10 0)))
  (uniq-orig na na-0 l l-0)
  (uniq-gen x x-0)
  (absent (x l) (x-0 l-0))
  (precur (4 0) (9 0))
  (gen-st (pv self l) (pv a l-0))
  (facts (ltb-of a (exp (gen) l-0)) (ltb-of b gb)
    (ltb-of self (exp (gen) l)) (ltx-of a l-0) (ltx-of self l))
  (leads-to ((6 1) (0 0)) ((6 1) (2 0)) ((11 1) (10 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-0 (cat pt-2 (pv a l-0))) (10 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (gen) (mul l l))) (send (cat (gen) (mul l l))))
    ((recv l) (send l))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) x-0) (mul l l (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l l (rec x-0)))))
    ((load priv-stor-0 (cat pt-2 (pv a l-0)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 a b (exp (gen) x-0))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l-0)))))
  (label 410)
  (parent 302)
  (unrealized (8 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pval)
    (priv-stor locn) (x rndx) (y expt) (l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (gen) (mul l l)))
  (deflistener l)
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (gen) (mul l l)))
  (deflistener l)
  (precedes ((0 2) (8 0)) ((0 4) (2 0)) ((2 2) (5 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (4 0)) ((6 1) (0 0)) ((6 1) (10 0))
    ((6 2) (0 1)) ((7 1) (0 3)) ((8 1) (7 0)) ((9 1) (8 0))
    ((10 1) (9 0)))
  (uniq-orig na l)
  (uniq-gen x)
  (absent (x l))
  (precur (4 0) (9 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((6 1) (0 0)) ((6 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener l) (mul l l) (9 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (gen) (mul l l))) (send (cat (gen) (mul l l))))
    ((recv l) (send l))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (gen) (mul l l))) (send (cat (gen) (mul l l))))
    ((recv l) (send l)))
  (label 411)
  (parent 304)
  (unrealized (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb na-0 nb-0 data) (self a name)
    (pt pt-0 pt-1 pval) (ga gx base) (priv-stor locn) (x rndx) (y expt)
    (y-0 l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (gen) (mul l l)))
  (deflistener l)
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) y-0) (mul (rec y-0) l l)))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b self) (ga ga) (gx gx)
    (priv-stor priv-stor) (l l) (y y-0))
  (precedes ((0 2) (8 0)) ((0 4) (2 0)) ((2 2) (5 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (4 0)) ((6 1) (0 0)) ((6 1) (10 0))
    ((6 2) (0 1)) ((7 1) (0 3)) ((8 1) (7 0)) ((9 1) (8 0))
    ((10 3) (9 0)))
  (uniq-orig na nb-0 l)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l))
  (precur (4 0) (9 0))
  (gen-st (pv self l))
  (facts (ltb-of a ga) (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((6 1) (0 0)) ((6 1) (2 0)) ((6 1) (10 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 6 ltx-gen 2)
    (ch-msg priv-stor-0 (cat pt-2 (pv b l-0))) (10 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (gen) (mul l l))) (send (cat (gen) (mul l l))))
    ((recv l) (send l))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) y-0) (mul (rec y-0) l l)))
      (send (cat (exp (gen) y-0) (mul (rec y-0) l l))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a self gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a self (hash (exp ga l) (exp gx y-0)))))))
  (label 412)
  (parent 305)
  (unrealized (8 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (self a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (ga gx base)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (l y-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (gen) (mul l l)))
  (deflistener l)
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) y-0) (mul l l (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b) (ga ga) (gx gx)
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (8 0)) ((0 4) (2 0)) ((2 2) (5 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (4 0)) ((6 1) (0 0)) ((6 2) (0 1))
    ((7 1) (0 3)) ((8 1) (7 0)) ((9 1) (8 0)) ((10 3) (9 0))
    ((11 1) (10 0)))
  (uniq-orig na nb-0 l l-0)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l-0))
  (precur (4 0) (9 0))
  (gen-st (pv self l) (pv b l-0))
  (facts (ltb-of b (exp (gen) l-0)) (ltb-of a ga)
    (ltb-of self (exp (gen) l)) (ltx-of b l-0) (ltx-of self l))
  (leads-to ((6 1) (0 0)) ((6 1) (2 0)) ((11 1) (10 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-0 (cat pt-2 (pv b l-0))) (10 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (gen) (mul l l))) (send (cat (gen) (mul l l))))
    ((recv l) (send l))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) y-0) (mul l l (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l l (rec y-0)))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a b (hash (exp ga l-0) (exp gx y-0))))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))))
  (label 413)
  (parent 305)
  (unrealized (8 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pval)
    (priv-stor locn) (x rndx) (y expt) (y-0 l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (gen) (mul l l)))
  (deflistener l)
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self) (ga (exp (gen) l))
    (gx (exp (gen) (mul x y (rec y-0)))) (priv-stor priv-stor) (l l)
    (y y-0))
  (precedes ((0 2) (7 2)) ((0 4) (2 0)) ((2 2) (4 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (0 1)) ((6 1) (0 0)) ((6 1) (7 0))
    ((6 2) (5 0)) ((6 2) (7 1)) ((7 3) (0 3)))
  (uniq-orig na nb l)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l))
  (precur (3 0) (5 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((6 1) (0 0)) ((6 1) (2 0)) ((6 1) (7 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (gen) (mul l l))) (send (cat (gen) (mul l l))))
    ((recv l) (send l))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))))
  (label 414)
  (parent 308)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb na-0 data) (self a b name)
    (pt pt-0 pt-1 pt-2 pval) (gb base) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 x-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor)
    (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (gen) (mul l-0 l-0)))
  (deflistener l-0)
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
  (defstrand init 3 (na na-0) (a a) (b b) (gb gb)
    (priv-stor priv-stor-0) (l l) (x x-0))
  (precedes ((0 2) (8 2)) ((0 4) (2 0)) ((2 2) (5 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (4 0)) ((6 1) (0 1)) ((7 1) (0 0))
    ((7 1) (8 0)) ((7 2) (6 0)) ((8 3) (0 3)) ((9 1) (8 1))
    ((10 2) (9 0)))
  (uniq-orig na nb na-0 l-0)
  (uniq-gen x y-0 x-0)
  (absent (x l-0) (y-0 l-0) (x-0 l))
  (precur (4 0) (6 0) (9 0))
  (gen-st (pv self l-0) (pv a l))
  (facts (ltb-of a (exp (gen) l)) (ltb-of b gb)
    (ltb-of self (exp (gen) l-0)) (ltx-of a l) (ltx-of self l-0))
  (leads-to ((7 1) (0 0)) ((7 1) (2 0)) ((7 1) (8 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    gen-st-ltx-disclose-0 ltx-ltb trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand init 3) (exp (gen) x-0) (9 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l-0)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l-0)))
      (stor priv-stor (cat pt "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (gen) (mul l-0 l-0))) (send (cat (gen) (mul l-0 l-0))))
    ((recv l-0) (send l-0))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-1 (pv self l-0)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self
            (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-0 (rec x-0)))))
    ((load priv-stor-0 (cat pt-2 (pv a l)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 a b (exp (gen) x-0)))))
  (label 415)
  (parent 309)
  (unrealized (8 1) (9 0) (10 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pval)
    (priv-stor locn) (y expt) (y-0 l x rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul y x))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul y x))))
  (deflistener (cat (gen) (mul l l)))
  (deflistener l)
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self) (ga (exp (gen) l))
    (gx (exp (gen) (mul y (rec y-0) x))) (priv-stor priv-stor) (l l)
    (y y-0))
  (deflistener (cat (exp (gen) x) (mul l (rec x))))
  (precedes ((0 2) (9 0)) ((0 4) (2 0)) ((2 2) (5 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (4 0)) ((6 1) (0 1)) ((7 1) (0 0))
    ((7 1) (8 0)) ((7 2) (6 0)) ((8 3) (0 3)) ((9 1) (8 1)))
  (uniq-orig na nb l)
  (uniq-gen y-0 x)
  (absent (y-0 l) (x l))
  (precur (4 0) (6 0) (9 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((7 1) (0 0)) ((7 1) (2 0)) ((7 1) (8 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 10 0 init 3) (exp (gen) x-0) (9 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul y x))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul y x))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul y x)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul y x))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul y x)))))
    ((recv (cat (gen) (mul l l))) (send (cat (gen) (mul l l))))
    ((recv l) (send l))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self (exp (gen) (mul y (rec y-0) x))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul y x)))))))
    ((recv (cat (exp (gen) x) (mul l (rec x))))
      (send (cat (exp (gen) x) (mul l (rec x))))))
  (label 416)
  (parent 309)
  (unrealized (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pval)
    (priv-stor locn) (x rndx) (y expt) (y-0 l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (gen) (mul l l)))
  (deflistener l)
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self) (ga (exp (gen) l))
    (gx (exp (gen) (mul x y (rec y-0)))) (priv-stor priv-stor) (l l)
    (y y-0))
  (deflistener (cat (gen) l))
  (precedes ((0 2) (8 2)) ((0 4) (2 0)) ((2 2) (5 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (4 0)) ((6 1) (0 1)) ((7 1) (0 0))
    ((7 1) (8 0)) ((7 1) (9 0)) ((7 2) (6 0)) ((8 3) (0 3))
    ((9 1) (8 1)))
  (uniq-orig na nb l)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l))
  (precur (4 0) (6 0) (9 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((7 1) (0 0)) ((7 1) (2 0)) ((7 1) (8 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (contracted (l-0 l) (w l)) (gen) (9 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (gen) (mul l l))) (send (cat (gen) (mul l l))))
    ((recv l) (send l))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))))
    ((recv (cat (gen) l)) (send (cat (gen) l))))
  (label 417)
  (parent 309)
  (unrealized (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb na-0 nb-0 data) (self a b name)
    (pt pt-0 pt-1 pt-2 pval) (ga gx base) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 y-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor)
    (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (gen) (mul l-0 l-0)))
  (deflistener l-0)
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) y-1) (mul l-0 (rec y-1))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b) (ga ga) (gx gx)
    (priv-stor priv-stor-0) (l l) (y y-1))
  (precedes ((0 2) (8 2)) ((0 4) (2 0)) ((2 2) (5 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (4 0)) ((6 1) (0 1)) ((7 1) (0 0))
    ((7 1) (8 0)) ((7 2) (6 0)) ((8 3) (0 3)) ((9 1) (8 1))
    ((10 3) (9 0)))
  (uniq-orig na nb nb-0 l-0)
  (uniq-gen x y-0 y-1)
  (absent (x l-0) (y-0 l-0) (y-1 l))
  (precur (4 0) (6 0) (9 0))
  (gen-st (pv self l-0) (pv b l))
  (facts (ltb-of b (exp (gen) l)) (ltb-of a ga)
    (ltb-of self (exp (gen) l-0)) (ltx-of b l) (ltx-of self l-0))
  (leads-to ((7 1) (0 0)) ((7 1) (2 0)) ((7 1) (8 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    gen-st-ltx-disclose-0 ltx-ltb trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand resp 4) (exp (gen) y-1) (9 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l-0)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l-0)))
      (stor priv-stor (cat pt "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (gen) (mul l-0 l-0))) (send (cat (gen) (mul l-0 l-0))))
    ((recv l-0) (send l-0))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-1 (pv self l-0)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self
            (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) y-1) (mul l-0 (rec y-1))))
      (send (cat (exp (gen) y-1) (mul l-0 (rec y-1)))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b gx))
      (send
        (cat (exp (gen) y-1)
          (enc na-0 nb-0 a b (hash (exp ga l) (exp gx y-1)))))))
  (label 418)
  (parent 309)
  (unrealized (8 1) (9 0) (10 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pval)
    (priv-stor locn) (x rndx) (y expt) (y-0 l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (gen) (mul l l)))
  (deflistener l)
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self) (ga (exp (gen) l))
    (gx (exp (gen) (mul x y (rec y-0)))) (priv-stor priv-stor) (l l)
    (y y-0))
  (deflistener (cat (exp (gen) l) (one)))
  (precedes ((0 2) (8 2)) ((0 4) (2 0)) ((2 2) (5 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (4 0)) ((6 1) (0 1)) ((7 1) (0 0))
    ((7 1) (8 0)) ((7 2) (6 0)) ((7 2) (9 0)) ((8 3) (0 3))
    ((9 1) (8 1)))
  (uniq-orig na nb l)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l))
  (precur (4 0) (6 0) (9 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((7 1) (0 0)) ((7 1) (2 0)) ((7 1) (8 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 10 7 ltx-gen 3) (exp (gen) l-0)
    (9 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (gen) (mul l l))) (send (cat (gen) (mul l l))))
    ((recv l) (send l))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one)))))
  (label 419)
  (parent 309)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (gen) (mul l l)))
  (deflistener l)
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self) (ga (exp (gen) l))
    (gx (exp (gen) (mul x y (rec y-0)))) (priv-stor priv-stor) (l l)
    (y y-0))
  (deflistener (cat (exp (gen) l-0) (mul l (rec l-0))))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (8 2)) ((0 4) (2 0)) ((2 2) (5 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (4 0)) ((6 1) (0 1)) ((7 1) (0 0))
    ((7 1) (8 0)) ((7 2) (6 0)) ((8 3) (0 3)) ((9 1) (8 1))
    ((10 2) (9 0)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l))
  (precur (4 0) (6 0) (9 0))
  (gen-st (pv self l))
  (facts (ltb-of self-0 (exp (gen) l-0)) (ltb-of self (exp (gen) l))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((7 1) (0 0)) ((7 1) (2 0)) ((7 1) (8 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-ltx-gen-ltx-of0 fact-resp-ltb-of0
    ltx-ltb trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 3) (exp (gen) l-0) (9 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (gen) (mul l l))) (send (cat (gen) (mul l l))))
    ((recv l) (send l))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l-0) (mul l (rec l-0))))
      (send (cat (exp (gen) l-0) (mul l (rec l-0)))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-3 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 420)
  (parent 309)
  (unrealized (8 1) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb na-0 data) (self a b name)
    (pt pt-0 pt-1 pt-2 pval) (gb base) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 x-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor)
    (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (gen) (mul l-0 l-0)))
  (deflistener l-0)
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) x-0) (mul l-0 l-0 (rec x-0))))
  (defstrand init 3 (na na-0) (a a) (b b) (gb gb)
    (priv-stor priv-stor-0) (l l) (x x-0))
  (precedes ((0 2) (9 0)) ((0 4) (2 0)) ((2 2) (5 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (4 0)) ((6 1) (0 1)) ((7 1) (0 0))
    ((7 2) (6 0)) ((8 1) (0 3)) ((9 1) (8 0)) ((10 1) (9 0))
    ((11 2) (10 0)))
  (uniq-orig na na-0 l-0)
  (uniq-gen x x-0)
  (absent (x l-0) (x-0 l))
  (precur (4 0) (6 0) (10 0))
  (gen-st (pv self l-0) (pv a l))
  (facts (ltb-of a (exp (gen) l)) (ltb-of b gb)
    (ltb-of self (exp (gen) l-0)) (ltx-of a l) (ltx-of self l-0))
  (leads-to ((7 1) (0 0)) ((7 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    gen-st-ltx-disclose-0 ltx-ltb trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand init 3) (exp (gen) x-0) (10 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l-0)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l-0)))
      (stor priv-stor (cat pt "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (gen) (mul l-0 l-0))) (send (cat (gen) (mul l-0 l-0))))
    ((recv l-0) (send l-0))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) x-0) (mul l-0 l-0 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-0 l-0 (rec x-0)))))
    ((load priv-stor-0 (cat pt-2 (pv a l)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 a b (exp (gen) x-0)))))
  (label 421)
  (parent 310)
  (unrealized (9 0) (10 0) (11 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pval)
    (priv-stor locn) (y expt) (l x rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul y x))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul y x))))
  (deflistener (cat (gen) (mul l l)))
  (deflistener l)
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul y x))))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul y x))))
  (deflistener (cat (exp (gen) x) (mul l l (rec x))))
  (precedes ((0 2) (10 0)) ((0 4) (2 0)) ((2 2) (5 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (4 0)) ((6 1) (0 1)) ((7 1) (0 0))
    ((7 2) (6 0)) ((8 1) (0 3)) ((9 1) (8 0)) ((10 1) (9 0)))
  (uniq-orig na l)
  (uniq-gen x)
  (absent (x l))
  (precur (4 0) (6 0) (10 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((7 1) (0 0)) ((7 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 11 0 init 3) (exp (gen) x-0) (10 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul y x))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul y x))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul y x)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul y x))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul y x)))))
    ((recv (cat (gen) (mul l l))) (send (cat (gen) (mul l l))))
    ((recv l) (send l))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul y x))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul y x)))))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul y x))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul y x)))))
    ((recv (cat (exp (gen) x) (mul l l (rec x))))
      (send (cat (exp (gen) x) (mul l l (rec x))))))
  (label 422)
  (parent 310)
  (unrealized (9 0) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pval)
    (priv-stor locn) (x rndx) (y expt) (l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (gen) (mul l l)))
  (deflistener l)
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (gen) (mul l l)))
  (precedes ((0 2) (9 0)) ((0 4) (2 0)) ((2 2) (5 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (4 0)) ((6 1) (0 1)) ((7 1) (0 0))
    ((7 2) (6 0)) ((8 1) (0 3)) ((9 1) (8 0)) ((10 1) (9 0)))
  (uniq-orig na l)
  (uniq-gen x)
  (absent (x l))
  (precur (4 0) (6 0) (10 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((7 1) (0 0)) ((7 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (contracted (l-0 l) (w (mul l l))) (gen) (10 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (gen) (mul l l))) (send (cat (gen) (mul l l))))
    ((recv l) (send l))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (gen) (mul l l))) (send (cat (gen) (mul l l)))))
  (label 423)
  (parent 310)
  (unrealized (9 0) (10 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb na-0 nb-0 data) (self a b name)
    (pt pt-0 pt-1 pt-2 pval) (ga gx base) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 y-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor)
    (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (gen) (mul l-0 l-0)))
  (deflistener l-0)
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) y-0) (mul l-0 l-0 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b) (ga ga) (gx gx)
    (priv-stor priv-stor-0) (l l) (y y-0))
  (precedes ((0 2) (9 0)) ((0 4) (2 0)) ((2 2) (5 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (4 0)) ((6 1) (0 1)) ((7 1) (0 0))
    ((7 2) (6 0)) ((8 1) (0 3)) ((9 1) (8 0)) ((10 1) (9 0))
    ((11 3) (10 0)))
  (uniq-orig na nb-0 l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (4 0) (6 0) (10 0))
  (gen-st (pv self l-0) (pv b l))
  (facts (ltb-of b (exp (gen) l)) (ltb-of a ga)
    (ltb-of self (exp (gen) l-0)) (ltx-of b l) (ltx-of self l-0))
  (leads-to ((7 1) (0 0)) ((7 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    gen-st-ltx-disclose-0 ltx-ltb trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand resp 4) (exp (gen) y-0) (10 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l-0)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l-0)))
      (stor priv-stor (cat pt "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (gen) (mul l-0 l-0))) (send (cat (gen) (mul l-0 l-0))))
    ((recv l-0) (send l-0))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l-0 l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) y-0) (mul l-0 l-0 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-0 l-0 (rec y-0)))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a b (hash (exp ga l) (exp gx y-0)))))))
  (label 424)
  (parent 310)
  (unrealized (9 0) (10 0) (11 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pval)
    (priv-stor locn) (x rndx) (y expt) (l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (gen) (mul l l)))
  (deflistener l)
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l))
  (precedes ((0 2) (9 0)) ((0 4) (2 0)) ((2 2) (5 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (4 0)) ((6 1) (0 1)) ((7 1) (0 0))
    ((7 2) (6 0)) ((7 2) (10 0)) ((8 1) (0 3)) ((9 1) (8 0))
    ((10 1) (9 0)))
  (uniq-orig na l)
  (uniq-gen x)
  (absent (x l))
  (precur (4 0) (6 0) (10 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((7 1) (0 0)) ((7 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 11 7 ltx-gen 3) (exp (gen) l-0)
    (10 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (gen) (mul l l))) (send (cat (gen) (mul l l))))
    ((recv l) (send l))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l)) (send (cat (exp (gen) l) l))))
  (label 425)
  (parent 310)
  (unrealized (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (gen) (mul l l)))
  (deflistener l)
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) (mul l l (rec l-0))))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (9 0)) ((0 4) (2 0)) ((2 2) (5 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (4 0)) ((6 1) (0 1)) ((7 1) (0 0))
    ((7 2) (6 0)) ((8 1) (0 3)) ((9 1) (8 0)) ((10 1) (9 0))
    ((11 2) (10 0)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (precur (4 0) (6 0) (10 0))
  (gen-st (pv self l))
  (facts (ltb-of self-0 (exp (gen) l-0)) (ltb-of self (exp (gen) l))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((7 1) (0 0)) ((7 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-ltx-gen-ltx-of0 fact-resp-ltb-of0
    ltx-ltb trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 3) (exp (gen) l-0) (10 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (gen) (mul l l))) (send (cat (gen) (mul l l))))
    ((recv l) (send l))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) (mul l l (rec l-0))))
      (send (cat (exp (gen) l-0) (mul l l (rec l-0)))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-3 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 426)
  (parent 310)
  (unrealized (9 0) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pval)
    (priv-stor locn) (x rndx) (y expt) (y-0 l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self) (ga (exp (gen) l))
    (gx (exp (gen) (mul x y (rec y-0)))) (priv-stor priv-stor) (l l)
    (y y-0))
  (deflistener (cat (exp (gen) l) (one)))
  (precedes ((0 2) (4 2)) ((0 4) (2 0)) ((2 2) (1 0)) ((3 1) (0 0))
    ((3 1) (4 0)) ((3 2) (0 1)) ((3 2) (5 0)) ((4 3) (0 3))
    ((5 1) (4 1)))
  (uniq-orig na nb l)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l))
  (precur (5 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((3 1) (0 0)) ((3 1) (2 0)) ((3 1) (4 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one)))))
  (label 427)
  (parent 316)
  (seen 311)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pval)
    (priv-stor locn) (x rndx) (y expt) (y-0 l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self) (ga (exp (gen) l))
    (gx (exp (gen) (mul x y (rec y-0)))) (priv-stor priv-stor) (l l)
    (y y-0))
  (precedes ((0 2) (5 2)) ((0 4) (2 0)) ((2 2) (1 0)) ((3 1) (0 0))
    ((3 1) (5 0)) ((3 2) (4 0)) ((3 2) (5 1)) ((4 1) (0 1))
    ((5 3) (0 3)))
  (uniq-orig na nb l)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l))
  (precur (4 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((3 1) (0 0)) ((3 1) (2 0)) ((3 1) (5 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))))
  (label 428)
  (parent 322)
  (seen 311)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb na-0 data) (self b name)
    (pt pt-0 pt-1 pval) (gb base) (priv-stor locn) (x rndx) (y expt)
    (y-0 x-0 l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self) (ga (exp (gen) l))
    (gx (exp (gen) (mul x y (rec y-0)))) (priv-stor priv-stor) (l l)
    (y y-0))
  (deflistener (cat (exp (gen) x-0) (mul (rec x-0) l)))
  (defstrand init 3 (na na-0) (a self) (b b) (gb gb)
    (priv-stor priv-stor) (l l) (x x-0))
  (precedes ((0 2) (7 2)) ((0 4) (2 0)) ((2 2) (4 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((5 1) (7 0)) ((5 1) (9 0))
    ((5 2) (6 0)) ((6 1) (0 1)) ((7 3) (0 3)) ((8 1) (7 1))
    ((9 2) (8 0)))
  (uniq-orig na nb na-0 l)
  (uniq-gen x y-0 x-0)
  (absent (x l) (y-0 l) (x-0 l))
  (precur (4 0) (6 0) (8 0))
  (gen-st (pv self l))
  (facts (ltb-of b gb) (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((5 1) (0 0)) ((5 1) (2 0)) ((5 1) (7 0)) ((5 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 10 5 ltx-gen 2)
    (ch-msg priv-stor-0 (cat pt-2 (pv a l-0))) (9 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l)) (send (cat (exp (gen) l) l)))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) x-0) (mul (rec x-0) l)))
      (send (cat (exp (gen) x-0) (mul (rec x-0) l))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 self b (exp (gen) x-0)))))
  (label 429)
  (parent 323)
  (unrealized (7 1) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (self a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (gb base) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l x-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self) (ga (exp (gen) l))
    (gx (exp (gen) (mul x y (rec y-0)))) (priv-stor priv-stor) (l l)
    (y y-0))
  (deflistener (cat (exp (gen) x-0) (mul l (rec x-0))))
  (defstrand init 3 (na na-0) (a a) (b b) (gb gb)
    (priv-stor priv-stor-0) (l l-0) (x x-0))
  (defstrand ltx-gen 2 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (7 2)) ((0 4) (2 0)) ((2 2) (4 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((5 1) (7 0)) ((5 2) (6 0))
    ((6 1) (0 1)) ((7 3) (0 3)) ((8 1) (7 1)) ((9 2) (8 0))
    ((10 1) (9 0)))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen x y-0 x-0)
  (absent (x l) (y-0 l) (x-0 l-0))
  (precur (4 0) (6 0) (8 0))
  (gen-st (pv self l) (pv a l-0))
  (facts (ltb-of a (exp (gen) l-0)) (ltb-of b gb)
    (ltb-of self (exp (gen) l)) (ltx-of a l-0) (ltx-of self l))
  (leads-to ((5 1) (0 0)) ((5 1) (2 0)) ((5 1) (7 0)) ((10 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-0 (cat pt-2 (pv a l-0))) (9 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l)) (send (cat (exp (gen) l) l)))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) x-0) (mul l (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l (rec x-0)))))
    ((load priv-stor-0 (cat pt-2 (pv a l-0)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 a b (exp (gen) x-0))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l-0)))))
  (label 430)
  (parent 323)
  (unrealized (7 1) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb na-0 nb-0 data) (self a name)
    (pt pt-0 pt-1 pval) (ga gx base) (priv-stor locn) (x rndx) (y expt)
    (y-0 y-1 l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self) (ga (exp (gen) l))
    (gx (exp (gen) (mul x y (rec y-0)))) (priv-stor priv-stor) (l l)
    (y y-0))
  (deflistener (cat (exp (gen) y-1) (mul (rec y-1) l)))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b self) (ga ga) (gx gx)
    (priv-stor priv-stor) (l l) (y y-1))
  (precedes ((0 2) (7 2)) ((0 4) (2 0)) ((2 2) (4 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((5 1) (7 0)) ((5 1) (9 0))
    ((5 2) (6 0)) ((6 1) (0 1)) ((7 3) (0 3)) ((8 1) (7 1))
    ((9 3) (8 0)))
  (uniq-orig na nb nb-0 l)
  (uniq-gen x y-0 y-1)
  (absent (x l) (y-0 l) (y-1 l))
  (precur (4 0) (6 0) (8 0))
  (gen-st (pv self l))
  (facts (ltb-of a ga) (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((5 1) (0 0)) ((5 1) (2 0)) ((5 1) (7 0)) ((5 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 10 5 ltx-gen 2)
    (ch-msg priv-stor-0 (cat pt-2 (pv b l-0))) (9 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l)) (send (cat (exp (gen) l) l)))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) y-1) (mul (rec y-1) l)))
      (send (cat (exp (gen) y-1) (mul (rec y-1) l))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a self gx))
      (send
        (cat (exp (gen) y-1)
          (enc na-0 nb-0 a self (hash (exp ga l) (exp gx y-1)))))))
  (label 431)
  (parent 326)
  (unrealized (7 1) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (self a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (ga gx base)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (y-0 l y-1 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self) (ga (exp (gen) l))
    (gx (exp (gen) (mul x y (rec y-0)))) (priv-stor priv-stor) (l l)
    (y y-0))
  (deflistener (cat (exp (gen) y-1) (mul l (rec y-1))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b) (ga ga) (gx gx)
    (priv-stor priv-stor-0) (l l-0) (y y-1))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (7 2)) ((0 4) (2 0)) ((2 2) (4 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((5 1) (7 0)) ((5 2) (6 0))
    ((6 1) (0 1)) ((7 3) (0 3)) ((8 1) (7 1)) ((9 3) (8 0))
    ((10 1) (9 0)))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen x y-0 y-1)
  (absent (x l) (y-0 l) (y-1 l-0))
  (precur (4 0) (6 0) (8 0))
  (gen-st (pv self l) (pv b l-0))
  (facts (ltb-of b (exp (gen) l-0)) (ltb-of a ga)
    (ltb-of self (exp (gen) l)) (ltx-of b l-0) (ltx-of self l))
  (leads-to ((5 1) (0 0)) ((5 1) (2 0)) ((5 1) (7 0)) ((10 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-0 (cat pt-2 (pv b l-0))) (9 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l)) (send (cat (exp (gen) l) l)))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) y-1) (mul l (rec y-1))))
      (send (cat (exp (gen) y-1) (mul l (rec y-1)))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b gx))
      (send
        (cat (exp (gen) y-1)
          (enc na-0 nb-0 a b (hash (exp ga l-0) (exp gx y-1))))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))))
  (label 432)
  (parent 326)
  (unrealized (7 1) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pval)
    (priv-stor locn) (x rndx) (y expt) (y-0 l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self) (ga (exp (gen) l))
    (gx (exp (gen) (mul x y (rec y-0)))) (priv-stor priv-stor) (l l)
    (y y-0))
  (deflistener (cat (exp (gen) l) (one)))
  (precedes ((0 2) (6 2)) ((0 4) (2 0)) ((2 2) (3 0)) ((3 1) (1 0))
    ((4 1) (0 0)) ((4 1) (6 0)) ((4 2) (5 0)) ((4 2) (7 0))
    ((5 1) (0 1)) ((6 3) (0 3)) ((7 1) (6 1)))
  (uniq-orig na nb l)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l))
  (precur (3 0) (5 0) (7 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((4 1) (6 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) l) l)) (send (cat (exp (gen) l) l)))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one)))))
  (label 433)
  (parent 327)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb na-0 data) (self b name)
    (pt pt-0 pt-1 pval) (gb base) (priv-stor locn) (x rndx) (y expt)
    (x-0 l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) l) (one)))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) x-0) (mul (rec x-0) l l)))
  (defstrand init 3 (na na-0) (a self) (b b) (gb gb)
    (priv-stor priv-stor) (l l) (x x-0))
  (precedes ((0 2) (8 0)) ((0 4) (2 0)) ((2 2) (4 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((5 1) (10 0)) ((5 2) (6 0))
    ((6 1) (0 1)) ((7 1) (0 3)) ((8 1) (7 0)) ((9 1) (8 0))
    ((10 2) (9 0)))
  (uniq-orig na na-0 l)
  (uniq-gen x x-0)
  (absent (x l) (x-0 l))
  (precur (4 0) (6 0) (9 0))
  (gen-st (pv self l))
  (facts (ltb-of b gb) (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((5 1) (0 0)) ((5 1) (2 0)) ((5 1) (10 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 5 ltx-gen 2)
    (ch-msg priv-stor-0 (cat pt-2 (pv a l-0))) (10 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l)) (send (cat (exp (gen) l) l)))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) x-0) (mul (rec x-0) l l)))
      (send (cat (exp (gen) x-0) (mul (rec x-0) l l))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 self b (exp (gen) x-0)))))
  (label 434)
  (parent 329)
  (unrealized (8 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (self a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (gb base) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l x-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) l) (one)))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) x-0) (mul l l (rec x-0))))
  (defstrand init 3 (na na-0) (a a) (b b) (gb gb)
    (priv-stor priv-stor-0) (l l-0) (x x-0))
  (defstrand ltx-gen 2 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (8 0)) ((0 4) (2 0)) ((2 2) (4 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((5 2) (6 0)) ((6 1) (0 1))
    ((7 1) (0 3)) ((8 1) (7 0)) ((9 1) (8 0)) ((10 2) (9 0))
    ((11 1) (10 0)))
  (uniq-orig na na-0 l l-0)
  (uniq-gen x x-0)
  (absent (x l) (x-0 l-0))
  (precur (4 0) (6 0) (9 0))
  (gen-st (pv self l) (pv a l-0))
  (facts (ltb-of a (exp (gen) l-0)) (ltb-of b gb)
    (ltb-of self (exp (gen) l)) (ltx-of a l-0) (ltx-of self l))
  (leads-to ((5 1) (0 0)) ((5 1) (2 0)) ((11 1) (10 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-0 (cat pt-2 (pv a l-0))) (10 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l)) (send (cat (exp (gen) l) l)))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) x-0) (mul l l (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l l (rec x-0)))))
    ((load priv-stor-0 (cat pt-2 (pv a l-0)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 a b (exp (gen) x-0))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l-0)))))
  (label 435)
  (parent 329)
  (unrealized (8 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pval)
    (priv-stor locn) (x rndx) (y expt) (l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) l) (one)))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (gen) (mul l l)))
  (deflistener l)
  (precedes ((0 2) (8 0)) ((0 4) (2 0)) ((2 2) (4 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((5 1) (10 0)) ((5 2) (6 0))
    ((6 1) (0 1)) ((7 1) (0 3)) ((8 1) (7 0)) ((9 1) (8 0))
    ((10 1) (9 0)))
  (uniq-orig na l)
  (uniq-gen x)
  (absent (x l))
  (precur (4 0) (6 0) (9 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((5 1) (0 0)) ((5 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener l) (mul l l) (9 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l)) (send (cat (exp (gen) l) l)))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (gen) (mul l l))) (send (cat (gen) (mul l l))))
    ((recv l) (send l)))
  (label 436)
  (parent 331)
  (unrealized (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb na-0 nb-0 data) (self a name)
    (pt pt-0 pt-1 pval) (ga gx base) (priv-stor locn) (x rndx) (y expt)
    (y-0 l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) l) (one)))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) y-0) (mul (rec y-0) l l)))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b self) (ga ga) (gx gx)
    (priv-stor priv-stor) (l l) (y y-0))
  (precedes ((0 2) (8 0)) ((0 4) (2 0)) ((2 2) (4 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((5 1) (10 0)) ((5 2) (6 0))
    ((6 1) (0 1)) ((7 1) (0 3)) ((8 1) (7 0)) ((9 1) (8 0))
    ((10 3) (9 0)))
  (uniq-orig na nb-0 l)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l))
  (precur (4 0) (6 0) (9 0))
  (gen-st (pv self l))
  (facts (ltb-of a ga) (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((5 1) (0 0)) ((5 1) (2 0)) ((5 1) (10 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 5 ltx-gen 2)
    (ch-msg priv-stor-0 (cat pt-2 (pv b l-0))) (10 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l)) (send (cat (exp (gen) l) l)))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) y-0) (mul (rec y-0) l l)))
      (send (cat (exp (gen) y-0) (mul (rec y-0) l l))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a self gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a self (hash (exp ga l) (exp gx y-0)))))))
  (label 437)
  (parent 332)
  (unrealized (8 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (self a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (ga gx base)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (l y-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) l) (one)))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) y-0) (mul l l (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b) (ga ga) (gx gx)
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (8 0)) ((0 4) (2 0)) ((2 2) (4 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((5 2) (6 0)) ((6 1) (0 1))
    ((7 1) (0 3)) ((8 1) (7 0)) ((9 1) (8 0)) ((10 3) (9 0))
    ((11 1) (10 0)))
  (uniq-orig na nb-0 l l-0)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l-0))
  (precur (4 0) (6 0) (9 0))
  (gen-st (pv self l) (pv b l-0))
  (facts (ltb-of b (exp (gen) l-0)) (ltb-of a ga)
    (ltb-of self (exp (gen) l)) (ltx-of b l-0) (ltx-of self l))
  (leads-to ((5 1) (0 0)) ((5 1) (2 0)) ((11 1) (10 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-0 (cat pt-2 (pv b l-0))) (10 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l)) (send (cat (exp (gen) l) l)))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) y-0) (mul l l (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l l (rec y-0)))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a b (hash (exp ga l-0) (exp gx y-0))))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))))
  (label 438)
  (parent 332)
  (unrealized (8 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self-0) (b self)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self-0) (b self)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor) (l l) (y y-0))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (5 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (1 0))
    ((4 1) (5 0)) ((4 2) (0 1)) ((5 3) (0 3)) ((6 1) (5 1))
    ((7 1) (0 0)) ((7 2) (6 0)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (6 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self-0 (exp (gen) l-0)) (ltb-of self (exp (gen) l))
    (ltx-of self l) (ltx-of self-0 l-0))
  (leads-to ((4 1) (3 0)) ((4 1) (5 0)) ((7 1) (0 0)) ((7 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self-0 self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt "nil")) (send l-0))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (recv (cat na self-0 self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 439)
  (parent 339)
  (seen 335)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self-0) (b self)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand resp 4 (na na) (nb nb) (a self-0) (b self)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor) (l l) (y y-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (6 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (1 0))
    ((4 1) (6 0)) ((4 2) (5 0)) ((5 1) (0 1)) ((6 3) (0 3))
    ((7 1) (0 0)) ((7 2) (6 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (5 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self-0 (exp (gen) l-0)) (ltb-of self (exp (gen) l))
    (ltx-of self l) (ltx-of self-0 l-0))
  (leads-to ((4 1) (3 0)) ((4 1) (6 0)) ((7 1) (0 0)) ((7 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self-0 self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt "nil")) (send l-0))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (recv (cat na self-0 self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 440)
  (parent 343)
  (seen 335)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (self self-0 b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (gb base)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (y-0 l x-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) x-0) (mul (rec x-0) l-0)))
  (defstrand init 3 (na na-0) (a self) (b b) (gb gb)
    (priv-stor priv-stor) (l l-0) (x x-0))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((4 1) (0 0)) ((4 1) (11 0)) ((5 1) (1 0)) ((6 1) (5 0))
    ((7 1) (9 0)) ((7 2) (8 0)) ((8 1) (0 1)) ((9 3) (0 3))
    ((10 1) (9 1)) ((11 2) (10 0)))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen x y-0 x-0)
  (absent (x l-0) (y-0 l) (x-0 l-0))
  (precur (8 0) (10 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of b gb) (ltb-of self (exp (gen) l-0))
    (ltb-of self-0 (exp (gen) l)) (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((4 1) (11 0)) ((7 1) (3 0))
    ((7 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 12 4 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv a l-1))) (11 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l-0)))
      (stor priv-stor (cat pt-0 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) x-0) (mul (rec x-0) l-0)))
      (send (cat (exp (gen) x-0) (mul (rec x-0) l-0))))
    ((load priv-stor (cat pt (pv self l-0)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 self b (exp (gen) x-0)))))
  (label 441)
  (parent 344)
  (unrealized (9 1) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (self self-0 b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (gb base)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (y-0 l x-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) x-0) (mul l (rec x-0))))
  (defstrand init 3 (na na-0) (a self-0) (b b) (gb gb)
    (priv-stor priv-stor-0) (l l-0) (x x-0))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (9 0))
    ((7 1) (11 0)) ((7 2) (8 0)) ((8 1) (0 1)) ((9 3) (0 3))
    ((10 1) (9 1)) ((11 2) (10 0)))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen x y-0 x-0)
  (absent (x l) (y-0 l-0) (x-0 l-0))
  (precur (8 0) (10 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of b gb) (ltb-of self (exp (gen) l))
    (ltb-of self-0 (exp (gen) l-0)) (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((7 1) (3 0)) ((7 1) (9 0))
    ((7 1) (11 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 12 7 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv a l-1))) (11 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) x-0) (mul l (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l (rec x-0)))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 self-0 b (exp (gen) x-0)))))
  (label 442)
  (parent 344)
  (unrealized (9 1) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (self self-0 a b name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (gb base) (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (y-0 l l-0 x-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
  (defstrand init 3 (na na-0) (a a) (b b) (gb gb)
    (priv-stor priv-stor-1) (l l-1) (x x-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self a)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (9 0))
    ((7 2) (8 0)) ((8 1) (0 1)) ((9 3) (0 3)) ((10 1) (9 1))
    ((11 2) (10 0)) ((12 1) (11 0)))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen x y-0 x-0)
  (absent (x l-0) (y-0 l) (x-0 l-1))
  (precur (8 0) (10 0))
  (gen-st (pv self l-0) (pv self-0 l) (pv a l-1))
  (facts (ltb-of a (exp (gen) l-1)) (ltb-of b gb)
    (ltb-of self (exp (gen) l-0)) (ltb-of self-0 (exp (gen) l))
    (ltx-of a l-1) (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((7 1) (3 0)) ((7 1) (9 0))
    ((12 1) (11 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv a l-1))) (11 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l-0)))
      (stor priv-stor (cat pt-0 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-0 (rec x-0)))))
    ((load priv-stor-1 (cat pt-5 (pv a l-1)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 a b (exp (gen) x-0))))
    ((load priv-stor-1 (cat pt-6 ignore-1))
      (stor priv-stor-1 (cat pt-5 (pv a l-1)))))
  (label 443)
  (parent 344)
  (unrealized (9 1) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self-0) (b self)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand resp 4 (na na) (nb nb) (a self-0) (b self)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor) (l l) (y y-0))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (7 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (4 0))
    ((4 1) (1 0)) ((5 1) (7 0)) ((5 2) (6 0)) ((6 1) (0 1))
    ((7 3) (0 3)) ((8 1) (7 1)) ((9 1) (0 0)) ((9 2) (8 0)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (6 0) (8 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self-0 (exp (gen) l-0)) (ltb-of self (exp (gen) l))
    (ltx-of self l) (ltx-of self-0 l-0))
  (leads-to ((5 1) (3 0)) ((5 1) (7 0)) ((9 1) (0 0)) ((9 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self-0 self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt "nil")) (send l-0))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (recv (cat na self-0 self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 444)
  (parent 347)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data)
    (self self-0 a name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (ga gx base)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (y-0 l y-1 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) y-1) (mul (rec y-1) l-0)))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b self) (ga ga) (gx gx)
    (priv-stor priv-stor) (l l-0) (y y-1))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((4 1) (0 0)) ((4 1) (11 0)) ((5 1) (1 0)) ((6 1) (5 0))
    ((7 1) (9 0)) ((7 2) (8 0)) ((8 1) (0 1)) ((9 3) (0 3))
    ((10 1) (9 1)) ((11 3) (10 0)))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen x y-0 y-1)
  (absent (x l-0) (y-0 l) (y-1 l-0))
  (precur (8 0) (10 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of a ga) (ltb-of self (exp (gen) l-0))
    (ltb-of self-0 (exp (gen) l)) (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((4 1) (11 0)) ((7 1) (3 0))
    ((7 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 12 4 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv b l-1))) (11 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l-0)))
      (stor priv-stor (cat pt-0 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) y-1) (mul (rec y-1) l-0)))
      (send (cat (exp (gen) y-1) (mul (rec y-1) l-0))))
    ((load priv-stor (cat pt (pv self l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a self gx))
      (send
        (cat (exp (gen) y-1)
          (enc na-0 nb-0 a self (hash (exp ga l-0) (exp gx y-1)))))))
  (label 445)
  (parent 348)
  (unrealized (9 1) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data)
    (self self-0 a name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (ga gx base)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (y-0 l y-1 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) y-1) (mul l (rec y-1))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b self-0) (ga ga) (gx gx)
    (priv-stor priv-stor-0) (l l-0) (y y-1))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (9 0))
    ((7 1) (11 0)) ((7 2) (8 0)) ((8 1) (0 1)) ((9 3) (0 3))
    ((10 1) (9 1)) ((11 3) (10 0)))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen x y-0 y-1)
  (absent (x l) (y-0 l-0) (y-1 l-0))
  (precur (8 0) (10 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of a ga) (ltb-of self (exp (gen) l))
    (ltb-of self-0 (exp (gen) l-0)) (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((7 1) (3 0)) ((7 1) (9 0))
    ((7 1) (11 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 12 7 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv b l-1))) (11 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) y-1) (mul l (rec y-1))))
      (send (cat (exp (gen) y-1) (mul l (rec y-1)))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a self-0 gx))
      (send
        (cat (exp (gen) y-1)
          (enc na-0 nb-0 a self-0 (hash (exp ga l-0) (exp gx y-1)))))))
  (label 446)
  (parent 348)
  (unrealized (9 1) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (self self-0 a b name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (ga gx base) (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx)
    (y expt) (y-0 l l-0 y-1 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) y-1) (mul l-0 (rec y-1))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b) (ga ga) (gx gx)
    (priv-stor priv-stor-1) (l l-1) (y y-1))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (9 0))
    ((7 2) (8 0)) ((8 1) (0 1)) ((9 3) (0 3)) ((10 1) (9 1))
    ((11 3) (10 0)) ((12 1) (11 0)))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen x y-0 y-1)
  (absent (x l-0) (y-0 l) (y-1 l-1))
  (precur (8 0) (10 0))
  (gen-st (pv self l-0) (pv self-0 l) (pv b l-1))
  (facts (ltb-of b (exp (gen) l-1)) (ltb-of a ga)
    (ltb-of self (exp (gen) l-0)) (ltb-of self-0 (exp (gen) l))
    (ltx-of b l-1) (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((7 1) (3 0)) ((7 1) (9 0))
    ((12 1) (11 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv b l-1))) (11 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l-0)))
      (stor priv-stor (cat pt-0 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) y-1) (mul l-0 (rec y-1))))
      (send (cat (exp (gen) y-1) (mul l-0 (rec y-1)))))
    ((load priv-stor-1 (cat pt-5 (pv b l-1)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b gx))
      (send
        (cat (exp (gen) y-1)
          (enc na-0 nb-0 a b (hash (exp ga l-1) (exp gx y-1))))))
    ((load priv-stor-1 (cat pt-6 ignore-1))
      (stor priv-stor-1 (cat pt-5 (pv b l-1)))))
  (label 447)
  (parent 348)
  (unrealized (9 1) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self-0) (b self)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (gen) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self-0) (b self)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor) (l l) (y y-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (7 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (4 0))
    ((3 2) (5 0)) ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (7 0))
    ((6 2) (0 1)) ((7 3) (0 3)) ((8 1) (0 0)) ((8 2) (7 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (5 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self-0 (exp (gen) l-0)) (ltb-of self (exp (gen) l))
    (ltx-of self l) (ltx-of self-0 l-0))
  (leads-to ((6 1) (3 0)) ((6 1) (7 0)) ((8 1) (0 0)) ((8 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self-0 self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt "nil")) (send l-0))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (gen) l)) (send (cat (gen) l)))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (recv (cat na self-0 self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 448)
  (parent 351)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (self self-0 a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval) (gb base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (y-0 l l-0 l-1 x-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-1)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-1))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-1))
  (deflistener (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-1))
  (deflistener (cat (gen) l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-1)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
  (defstrand init 3 (na na-0) (a a) (b b) (gb gb)
    (priv-stor priv-stor-1) (l l-0) (x x-0))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((3 2) (7 0)) ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0))
    ((7 1) (6 0)) ((8 1) (9 0)) ((8 2) (0 1)) ((9 3) (0 3))
    ((10 1) (9 1)) ((11 2) (10 0)))
  (uniq-orig na nb na-0 l l-1)
  (uniq-gen x y-0 x-0)
  (absent (x l-1) (y-0 l) (x-0 l-0))
  (precur (7 0) (10 0))
  (gen-st (pv self l-1) (pv self-0 l) (pv a l-0))
  (facts (ltb-of a (exp (gen) l-0)) (ltb-of b gb)
    (ltb-of self (exp (gen) l-1)) (ltb-of self-0 (exp (gen) l))
    (ltx-of a l-0) (ltx-of self-0 l) (ltx-of self l-1))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((8 1) (3 0)) ((8 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    gen-st-ltx-disclose-0 ltx-ltb trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand init 3) (exp (gen) x-0) (10 0))
  (traces
    ((load priv-stor (cat pt (pv self l-1)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l-1)))
      (stor priv-stor (cat pt-0 "nil")) (send l-1))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l-1))))
    ((recv (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-1)) (send (cat (exp (gen) l) l-1)))
    ((recv (cat (gen) l)) (send (cat (gen) l)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-1 (rec x-0)))))
    ((load priv-stor-1 (cat pt-5 (pv a l-0)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 a b (exp (gen) x-0)))))
  (label 449)
  (parent 352)
  (unrealized (9 1) (10 0) (11 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (y expt) (y-0 l l-0 x rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y x))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (gen) l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul y (rec y-0) x)))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) x) (mul l-0 (rec x))))
  (precedes ((0 2) (10 0)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((3 2) (7 0)) ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0))
    ((7 1) (6 0)) ((8 1) (9 0)) ((8 2) (0 1)) ((9 3) (0 3))
    ((10 1) (9 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen y-0 x)
  (absent (y-0 l) (x l-0))
  (precur (7 0) (10 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of self-0 (exp (gen) l))
    (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((8 1) (3 0)) ((8 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 11 0 init 3) (exp (gen) x-0) (10 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x)))))
    ((load priv-stor (cat pt (pv self l-0)))
      (stor priv-stor (cat pt-0 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y x))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y x)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (gen) l)) (send (cat (gen) l)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul y (rec y-0) x))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x)))))))
    ((recv (cat (exp (gen) x) (mul l-0 (rec x))))
      (send (cat (exp (gen) x) (mul l-0 (rec x))))))
  (label 450)
  (parent 352)
  (unrealized (9 1) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (gen) l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (gen) l-0))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((3 2) (7 0)) ((4 1) (0 0)) ((4 1) (10 0)) ((5 1) (1 0))
    ((6 1) (5 0)) ((7 1) (6 0)) ((8 1) (9 0)) ((8 2) (0 1))
    ((9 3) (0 3)) ((10 1) (9 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (7 0) (10 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of self-0 (exp (gen) l))
    (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((8 1) (3 0)) ((8 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (contracted (l-1 l-0) (w l-0)) (gen) (10 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l-0)))
      (stor priv-stor (cat pt-0 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (gen) l)) (send (cat (gen) l)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0))))
  (label 451)
  (parent 352)
  (unrealized (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self-0) (b self)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (gen) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self-0) (b self)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor) (l l) (y y-0))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (8 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (5 0))
    ((3 2) (6 0)) ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (5 0))
    ((7 1) (8 0)) ((7 2) (0 1)) ((8 3) (0 3)) ((9 1) (8 1))
    ((10 1) (0 0)) ((10 2) (9 0)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (6 0) (9 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self-0 (exp (gen) l-0)) (ltb-of self (exp (gen) l))
    (ltx-of self l) (ltx-of self-0 l-0))
  (leads-to ((7 1) (3 0)) ((7 1) (8 0)) ((10 1) (0 0)) ((10 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 4 11 ltx-gen 3) (exp (gen) l-1)
    (10 0))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self-0 self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt "nil")) (send l-0))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (gen) l)) (send (cat (gen) l)))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (recv (cat na self-0 self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 452)
  (parent 352)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data)
    (self self-0 a b name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (ga gx base) (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx)
    (y expt) (y-0 l l-0 l-1 y-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-1)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-1))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-1))
  (deflistener (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-1))
  (deflistener (cat (gen) l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-1)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) y-1) (mul l-1 (rec y-1))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b) (ga ga) (gx gx)
    (priv-stor priv-stor-1) (l l-0) (y y-1))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((3 2) (7 0)) ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0))
    ((7 1) (6 0)) ((8 1) (9 0)) ((8 2) (0 1)) ((9 3) (0 3))
    ((10 1) (9 1)) ((11 3) (10 0)))
  (uniq-orig na nb nb-0 l l-1)
  (uniq-gen x y-0 y-1)
  (absent (x l-1) (y-0 l) (y-1 l-0))
  (precur (7 0) (10 0))
  (gen-st (pv self l-1) (pv self-0 l) (pv b l-0))
  (facts (ltb-of b (exp (gen) l-0)) (ltb-of a ga)
    (ltb-of self (exp (gen) l-1)) (ltb-of self-0 (exp (gen) l))
    (ltx-of b l-0) (ltx-of self-0 l) (ltx-of self l-1))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((8 1) (3 0)) ((8 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    gen-st-ltx-disclose-0 ltx-ltb trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand resp 4) (exp (gen) y-1) (10 0))
  (traces
    ((load priv-stor (cat pt (pv self l-1)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l-1)))
      (stor priv-stor (cat pt-0 "nil")) (send l-1))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l-1))))
    ((recv (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-1)) (send (cat (exp (gen) l) l-1)))
    ((recv (cat (gen) l)) (send (cat (gen) l)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) y-1) (mul l-1 (rec y-1))))
      (send (cat (exp (gen) y-1) (mul l-1 (rec y-1)))))
    ((load priv-stor-1 (cat pt-5 (pv b l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b gx))
      (send
        (cat (exp (gen) y-1)
          (enc na-0 nb-0 a b (hash (exp ga l-0) (exp gx y-1)))))))
  (label 453)
  (parent 352)
  (unrealized (9 1) (10 0) (11 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) l-0) (mul l (rec l-0))))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((3 2) (7 0)) ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0))
    ((7 1) (6 0)) ((8 1) (9 0)) ((8 2) (0 1)) ((8 2) (10 0))
    ((9 3) (0 3)) ((10 1) (9 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l-0))
  (precur (7 0) (10 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((8 1) (3 0)) ((8 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 11 8 ltx-gen 3) (exp (gen) l-1)
    (10 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l-0) (mul l (rec l-0))))
      (send (cat (exp (gen) l-0) (mul l (rec l-0))))))
  (label 454)
  (parent 352)
  (unrealized (9 1) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data)
    (self self-0 self-1 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (y-0 l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (gen) l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self-1)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((3 2) (7 0)) ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0))
    ((7 1) (6 0)) ((8 1) (9 0)) ((8 2) (0 1)) ((9 3) (0 3))
    ((10 1) (9 1)) ((11 2) (10 0)))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (7 0) (10 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of self-1 (exp (gen) l-1)) (ltb-of self (exp (gen) l-0))
    (ltb-of self-0 (exp (gen) l)) (ltx-of self-1 l-1) (ltx-of self-0 l)
    (ltx-of self l-0))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((8 1) (3 0)) ((8 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-ltx-gen-ltx-of0 fact-resp-ltb-of0
    ltx-ltb trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 3) (exp (gen) l-1) (10 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l-0)))
      (stor priv-stor (cat pt-0 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (gen) l)) (send (cat (gen) l)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
      (send (cat (exp (gen) l-1) (mul l-0 (rec l-1)))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self-1 l-1)))
      (send
        (sig (body self-1 (exp (gen) l-1) (pubk "sig" self-1))
          (privk "sig" self-1)))))
  (label 455)
  (parent 352)
  (unrealized (9 1) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self-0) (b self)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (gen) l))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self-0) (b self)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor) (l l) (y y-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (5 0))
    ((3 2) (6 0)) ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (5 0))
    ((7 1) (0 1)) ((8 1) (9 0)) ((8 2) (7 0)) ((9 3) (0 3))
    ((10 1) (0 0)) ((10 2) (9 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (6 0) (7 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self-0 (exp (gen) l-0)) (ltb-of self (exp (gen) l))
    (ltx-of self l) (ltx-of self-0 l-0))
  (leads-to ((8 1) (3 0)) ((8 1) (9 0)) ((10 1) (0 0)) ((10 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 4 11 ltx-gen 3) (exp (gen) l-0)
    (10 1))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self-0 self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt "nil")) (send l-0))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (gen) l)) (send (cat (gen) l)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (recv (cat na self-0 self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 456)
  (parent 355)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l y-0 l-0 rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (gen) l-0))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) (mul l (rec w))) w))
  (precedes ((0 2) (10 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((3 2) (7 0)) ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0))
    ((7 1) (6 0)) ((8 1) (0 1)) ((9 1) (10 0)) ((9 2) (8 0))
    ((10 3) (0 3)) ((11 1) (10 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l-0))
  (precur (7 0) (8 0) (11 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((9 1) (3 0)) ((9 1) (10 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul l (rec w))) w)) (exp (gen) l)
    (10 1))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) (mul l (rec w))) w))
      (send (cat (exp (gen) (mul l (rec w))) w))))
  (label 457)
  (parent 355)
  (unrealized (11 0))
  (comment "7 in cohort - 7 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (gen) l-0))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (precedes ((0 2) (11 0)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((3 2) (7 0)) ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0))
    ((7 1) (6 0)) ((8 1) (0 1)) ((9 1) (12 0)) ((9 2) (8 0))
    ((10 1) (0 3)) ((11 1) (10 0)) ((12 1) (11 0)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (precur (7 0) (8 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((9 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l) l-0))
    (exp (gen) (mul l l-0)) (11 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0))))
  (label 458)
  (parent 356)
  (unrealized (12 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (gen) l-0))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (precedes ((0 2) (11 0)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((3 2) (7 0)) ((4 1) (0 0)) ((4 1) (12 0)) ((5 1) (1 0))
    ((6 1) (5 0)) ((7 1) (6 0)) ((8 1) (0 1)) ((9 2) (8 0))
    ((10 1) (0 3)) ((11 1) (10 0)) ((12 1) (11 0)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (precur (7 0) (8 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((9 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l-0) l))
    (exp (gen) (mul l l-0)) (11 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l))))
  (label 459)
  (parent 356)
  (unrealized (12 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self-0) (b self)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self-0) (b self)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor) (l l) (y y-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (6 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (1 0))
    ((4 1) (1 0)) ((5 1) (6 0)) ((5 2) (0 1)) ((5 2) (4 0))
    ((6 3) (0 3)) ((7 1) (0 0)) ((7 2) (6 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (4 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self-0 (exp (gen) l-0)) (ltb-of self (exp (gen) l))
    (ltx-of self l) (ltx-of self-0 l-0))
  (leads-to ((5 1) (3 0)) ((5 1) (6 0)) ((7 1) (0 0)) ((7 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self-0 self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt "nil")) (send l-0))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (recv (cat na self-0 self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 460)
  (parent 357)
  (seen 335)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (self self-0 b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (gb base)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (y-0 l x-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) x-0) (mul (rec x-0) l-0)))
  (defstrand init 3 (na na-0) (a self) (b b) (gb gb)
    (priv-stor priv-stor) (l l-0) (x x-0))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((4 1) (0 0)) ((4 1) (11 0)) ((5 1) (1 0)) ((6 1) (5 0))
    ((7 1) (6 0)) ((8 1) (9 0)) ((8 2) (0 1)) ((8 2) (7 0))
    ((9 3) (0 3)) ((10 1) (9 1)) ((11 2) (10 0)))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen x y-0 x-0)
  (absent (x l-0) (y-0 l) (x-0 l-0))
  (precur (7 0) (10 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of b gb) (ltb-of self (exp (gen) l-0))
    (ltb-of self-0 (exp (gen) l)) (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((4 1) (11 0)) ((8 1) (3 0))
    ((8 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 12 4 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv a l-1))) (11 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l-0)))
      (stor priv-stor (cat pt-0 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) x-0) (mul (rec x-0) l-0)))
      (send (cat (exp (gen) x-0) (mul (rec x-0) l-0))))
    ((load priv-stor (cat pt (pv self l-0)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 self b (exp (gen) x-0)))))
  (label 461)
  (parent 358)
  (unrealized (9 1) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (self self-0 b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (gb base)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (y-0 l x-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) x-0) (mul l (rec x-0))))
  (defstrand init 3 (na na-0) (a self-0) (b b) (gb gb)
    (priv-stor priv-stor-0) (l l-0) (x x-0))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (6 0))
    ((8 1) (9 0)) ((8 1) (11 0)) ((8 2) (0 1)) ((8 2) (7 0))
    ((9 3) (0 3)) ((10 1) (9 1)) ((11 2) (10 0)))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen x y-0 x-0)
  (absent (x l) (y-0 l-0) (x-0 l-0))
  (precur (7 0) (10 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of b gb) (ltb-of self (exp (gen) l))
    (ltb-of self-0 (exp (gen) l-0)) (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((8 1) (3 0)) ((8 1) (9 0))
    ((8 1) (11 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 12 8 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv a l-1))) (11 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) x-0) (mul l (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l (rec x-0)))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 self-0 b (exp (gen) x-0)))))
  (label 462)
  (parent 358)
  (unrealized (9 1) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (self self-0 a b name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (gb base) (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (y-0 l l-0 x-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
  (defstrand init 3 (na na-0) (a a) (b b) (gb gb)
    (priv-stor priv-stor-1) (l l-1) (x x-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self a)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (6 0))
    ((8 1) (9 0)) ((8 2) (0 1)) ((8 2) (7 0)) ((9 3) (0 3))
    ((10 1) (9 1)) ((11 2) (10 0)) ((12 1) (11 0)))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen x y-0 x-0)
  (absent (x l-0) (y-0 l) (x-0 l-1))
  (precur (7 0) (10 0))
  (gen-st (pv self l-0) (pv self-0 l) (pv a l-1))
  (facts (ltb-of a (exp (gen) l-1)) (ltb-of b gb)
    (ltb-of self (exp (gen) l-0)) (ltb-of self-0 (exp (gen) l))
    (ltx-of a l-1) (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((8 1) (3 0)) ((8 1) (9 0))
    ((12 1) (11 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv a l-1))) (11 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l-0)))
      (stor priv-stor (cat pt-0 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-0 (rec x-0)))))
    ((load priv-stor-1 (cat pt-5 (pv a l-1)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 a b (exp (gen) x-0))))
    ((load priv-stor-1 (cat pt-6 ignore-1))
      (stor priv-stor-1 (cat pt-5 (pv a l-1)))))
  (label 463)
  (parent 358)
  (unrealized (9 1) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self-0) (b self)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self-0) (b self)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor) (l l) (y y-0))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (7 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (4 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (7 0)) ((6 2) (0 1))
    ((6 2) (5 0)) ((7 3) (0 3)) ((8 1) (7 1)) ((9 1) (0 0))
    ((9 2) (8 0)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (5 0) (8 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self-0 (exp (gen) l-0)) (ltb-of self (exp (gen) l))
    (ltx-of self l) (ltx-of self-0 l-0))
  (leads-to ((6 1) (3 0)) ((6 1) (7 0)) ((9 1) (0 0)) ((9 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self-0 self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt "nil")) (send l-0))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (recv (cat na self-0 self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 464)
  (parent 361)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data)
    (self self-0 a name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (ga gx base)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (y-0 l y-1 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) y-1) (mul (rec y-1) l-0)))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b self) (ga ga) (gx gx)
    (priv-stor priv-stor) (l l-0) (y y-1))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((4 1) (0 0)) ((4 1) (11 0)) ((5 1) (1 0)) ((6 1) (5 0))
    ((7 1) (6 0)) ((8 1) (9 0)) ((8 2) (0 1)) ((8 2) (7 0))
    ((9 3) (0 3)) ((10 1) (9 1)) ((11 3) (10 0)))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen x y-0 y-1)
  (absent (x l-0) (y-0 l) (y-1 l-0))
  (precur (7 0) (10 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of a ga) (ltb-of self (exp (gen) l-0))
    (ltb-of self-0 (exp (gen) l)) (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((4 1) (11 0)) ((8 1) (3 0))
    ((8 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 12 4 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv b l-1))) (11 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l-0)))
      (stor priv-stor (cat pt-0 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) y-1) (mul (rec y-1) l-0)))
      (send (cat (exp (gen) y-1) (mul (rec y-1) l-0))))
    ((load priv-stor (cat pt (pv self l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a self gx))
      (send
        (cat (exp (gen) y-1)
          (enc na-0 nb-0 a self (hash (exp ga l-0) (exp gx y-1)))))))
  (label 465)
  (parent 362)
  (unrealized (9 1) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data)
    (self self-0 a name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (ga gx base)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (y-0 l y-1 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) y-1) (mul l (rec y-1))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b self-0) (ga ga) (gx gx)
    (priv-stor priv-stor-0) (l l-0) (y y-1))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (6 0))
    ((8 1) (9 0)) ((8 1) (11 0)) ((8 2) (0 1)) ((8 2) (7 0))
    ((9 3) (0 3)) ((10 1) (9 1)) ((11 3) (10 0)))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen x y-0 y-1)
  (absent (x l) (y-0 l-0) (y-1 l-0))
  (precur (7 0) (10 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of a ga) (ltb-of self (exp (gen) l))
    (ltb-of self-0 (exp (gen) l-0)) (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((8 1) (3 0)) ((8 1) (9 0))
    ((8 1) (11 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 12 8 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv b l-1))) (11 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) y-1) (mul l (rec y-1))))
      (send (cat (exp (gen) y-1) (mul l (rec y-1)))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a self-0 gx))
      (send
        (cat (exp (gen) y-1)
          (enc na-0 nb-0 a self-0 (hash (exp ga l-0) (exp gx y-1)))))))
  (label 466)
  (parent 362)
  (unrealized (9 1) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (self self-0 a b name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (ga gx base) (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx)
    (y expt) (y-0 l l-0 y-1 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) y-1) (mul l-0 (rec y-1))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b) (ga ga) (gx gx)
    (priv-stor priv-stor-1) (l l-1) (y y-1))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (6 0))
    ((8 1) (9 0)) ((8 2) (0 1)) ((8 2) (7 0)) ((9 3) (0 3))
    ((10 1) (9 1)) ((11 3) (10 0)) ((12 1) (11 0)))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen x y-0 y-1)
  (absent (x l-0) (y-0 l) (y-1 l-1))
  (precur (7 0) (10 0))
  (gen-st (pv self l-0) (pv self-0 l) (pv b l-1))
  (facts (ltb-of b (exp (gen) l-1)) (ltb-of a ga)
    (ltb-of self (exp (gen) l-0)) (ltb-of self-0 (exp (gen) l))
    (ltx-of b l-1) (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((8 1) (3 0)) ((8 1) (9 0))
    ((12 1) (11 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv b l-1))) (11 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l-0)))
      (stor priv-stor (cat pt-0 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) y-1) (mul l-0 (rec y-1))))
      (send (cat (exp (gen) y-1) (mul l-0 (rec y-1)))))
    ((load priv-stor-1 (cat pt-5 (pv b l-1)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b gx))
      (send
        (cat (exp (gen) y-1)
          (enc na-0 nb-0 a b (hash (exp ga l-1) (exp gx y-1))))))
    ((load priv-stor-1 (cat pt-6 ignore-1))
      (stor priv-stor-1 (cat pt-5 (pv b l-1)))))
  (label 467)
  (parent 362)
  (unrealized (9 1) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self-0) (b self)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand resp 4 (na na) (nb nb) (a self-0) (b self)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor) (l l) (y y-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (8 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (4 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (8 0)) ((6 2) (5 0))
    ((6 2) (7 0)) ((7 1) (0 1)) ((8 3) (0 3)) ((9 1) (0 0))
    ((9 2) (8 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (5 0) (7 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self-0 (exp (gen) l-0)) (ltb-of self (exp (gen) l))
    (ltx-of self l) (ltx-of self-0 l-0))
  (leads-to ((6 1) (3 0)) ((6 1) (8 0)) ((9 1) (0 0)) ((9 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self-0 self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt "nil")) (send l-0))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (recv (cat na self-0 self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 468)
  (parent 365)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (self self-0 a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval) (gb base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (y-0 l l-0 l-1 x-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-1)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-1))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-1))
  (deflistener (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-1))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-1)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
  (defstrand init 3 (na na-0) (a a) (b b) (gb gb)
    (priv-stor priv-stor-1) (l l-0) (x x-0))
  (precedes ((0 2) (10 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (6 0))
    ((8 1) (10 0)) ((8 2) (7 0)) ((8 2) (9 0)) ((9 1) (0 1))
    ((10 3) (0 3)) ((11 1) (10 1)) ((12 2) (11 0)))
  (uniq-orig na nb na-0 l l-1)
  (uniq-gen x y-0 x-0)
  (absent (x l-1) (y-0 l) (x-0 l-0))
  (precur (7 0) (9 0) (11 0))
  (gen-st (pv self l-1) (pv self-0 l) (pv a l-0))
  (facts (ltb-of a (exp (gen) l-0)) (ltb-of b gb)
    (ltb-of self (exp (gen) l-1)) (ltb-of self-0 (exp (gen) l))
    (ltx-of a l-0) (ltx-of self-0 l) (ltx-of self l-1))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((8 1) (3 0)) ((8 1) (10 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    gen-st-ltx-disclose-0 ltx-ltb trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand init 3) (exp (gen) x-0) (11 0))
  (traces
    ((load priv-stor (cat pt (pv self l-1)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l-1)))
      (stor priv-stor (cat pt-0 "nil")) (send l-1))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l-1))))
    ((recv (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-1)) (send (cat (exp (gen) l) l-1)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-1 (rec x-0)))))
    ((load priv-stor-1 (cat pt-5 (pv a l-0)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 a b (exp (gen) x-0)))))
  (label 469)
  (parent 366)
  (unrealized (10 1) (11 0) (12 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (y expt) (y-0 l l-0 x rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y x))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul y (rec y-0) x)))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) x) (mul l-0 (rec x))))
  (precedes ((0 2) (11 0)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (6 0))
    ((8 1) (10 0)) ((8 2) (7 0)) ((8 2) (9 0)) ((9 1) (0 1))
    ((10 3) (0 3)) ((11 1) (10 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen y-0 x)
  (absent (y-0 l) (x l-0))
  (precur (7 0) (9 0) (11 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of self-0 (exp (gen) l))
    (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((8 1) (3 0)) ((8 1) (10 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 12 0 init 3) (exp (gen) x-0) (11 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x)))))
    ((load priv-stor (cat pt (pv self l-0)))
      (stor priv-stor (cat pt-0 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y x))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y x)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul y (rec y-0) x))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x)))))))
    ((recv (cat (exp (gen) x) (mul l-0 (rec x))))
      (send (cat (exp (gen) x) (mul l-0 (rec x))))))
  (label 470)
  (parent 366)
  (unrealized (10 1) (11 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (gen) l-0))
  (precedes ((0 2) (10 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((4 1) (0 0)) ((4 1) (11 0)) ((5 1) (1 0)) ((6 1) (5 0))
    ((7 1) (6 0)) ((8 1) (10 0)) ((8 2) (7 0)) ((8 2) (9 0))
    ((9 1) (0 1)) ((10 3) (0 3)) ((11 1) (10 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (7 0) (9 0) (11 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of self-0 (exp (gen) l))
    (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((8 1) (3 0)) ((8 1) (10 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (contracted (l-1 l-0) (w l-0)) (gen) (11 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l-0)))
      (stor priv-stor (cat pt-0 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0))))
  (label 471)
  (parent 366)
  (unrealized (11 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self-0) (b self)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand resp 4 (na na) (nb nb) (a self-0) (b self)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor) (l l) (y y-0))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (5 0)) ((7 1) (9 0))
    ((7 2) (6 0)) ((7 2) (8 0)) ((8 1) (0 1)) ((9 3) (0 3))
    ((10 1) (9 1)) ((11 1) (0 0)) ((11 2) (10 0)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (6 0) (8 0) (10 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self-0 (exp (gen) l-0)) (ltb-of self (exp (gen) l))
    (ltx-of self l) (ltx-of self-0 l-0))
  (leads-to ((7 1) (3 0)) ((7 1) (9 0)) ((11 1) (0 0)) ((11 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 4 12 ltx-gen 3) (exp (gen) l-1)
    (11 0))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self-0 self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt "nil")) (send l-0))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (recv (cat na self-0 self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 472)
  (parent 366)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data)
    (self self-0 a b name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (ga gx base) (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx)
    (y expt) (y-0 l l-0 l-1 y-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-1)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-1))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-1))
  (deflistener (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-1))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-1)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) y-1) (mul l-1 (rec y-1))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b) (ga ga) (gx gx)
    (priv-stor priv-stor-1) (l l-0) (y y-1))
  (precedes ((0 2) (10 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (6 0))
    ((8 1) (10 0)) ((8 2) (7 0)) ((8 2) (9 0)) ((9 1) (0 1))
    ((10 3) (0 3)) ((11 1) (10 1)) ((12 3) (11 0)))
  (uniq-orig na nb nb-0 l l-1)
  (uniq-gen x y-0 y-1)
  (absent (x l-1) (y-0 l) (y-1 l-0))
  (precur (7 0) (9 0) (11 0))
  (gen-st (pv self l-1) (pv self-0 l) (pv b l-0))
  (facts (ltb-of b (exp (gen) l-0)) (ltb-of a ga)
    (ltb-of self (exp (gen) l-1)) (ltb-of self-0 (exp (gen) l))
    (ltx-of b l-0) (ltx-of self-0 l) (ltx-of self l-1))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((8 1) (3 0)) ((8 1) (10 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    gen-st-ltx-disclose-0 ltx-ltb trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand resp 4) (exp (gen) y-1) (11 0))
  (traces
    ((load priv-stor (cat pt (pv self l-1)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l-1)))
      (stor priv-stor (cat pt-0 "nil")) (send l-1))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l-1))))
    ((recv (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-1)) (send (cat (exp (gen) l) l-1)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) y-1) (mul l-1 (rec y-1))))
      (send (cat (exp (gen) y-1) (mul l-1 (rec y-1)))))
    ((load priv-stor-1 (cat pt-5 (pv b l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b gx))
      (send
        (cat (exp (gen) y-1)
          (enc na-0 nb-0 a b (hash (exp ga l-0) (exp gx y-1)))))))
  (label 473)
  (parent 366)
  (unrealized (10 1) (11 0) (12 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) l-0) (mul l (rec l-0))))
  (precedes ((0 2) (10 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (6 0))
    ((8 1) (10 0)) ((8 2) (7 0)) ((8 2) (9 0)) ((8 2) (11 0))
    ((9 1) (0 1)) ((10 3) (0 3)) ((11 1) (10 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l-0))
  (precur (7 0) (9 0) (11 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((8 1) (3 0)) ((8 1) (10 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 12 8 ltx-gen 3) (exp (gen) l-1)
    (11 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l-0) (mul l (rec l-0))))
      (send (cat (exp (gen) l-0) (mul l (rec l-0))))))
  (label 474)
  (parent 366)
  (unrealized (10 1) (11 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data)
    (self self-0 self-1 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (y-0 l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self-1)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (10 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (6 0))
    ((8 1) (10 0)) ((8 2) (7 0)) ((8 2) (9 0)) ((9 1) (0 1))
    ((10 3) (0 3)) ((11 1) (10 1)) ((12 2) (11 0)))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (7 0) (9 0) (11 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of self-1 (exp (gen) l-1)) (ltb-of self (exp (gen) l-0))
    (ltb-of self-0 (exp (gen) l)) (ltx-of self-1 l-1) (ltx-of self-0 l)
    (ltx-of self l-0))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((8 1) (3 0)) ((8 1) (10 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-ltx-gen-ltx-of0 fact-resp-ltb-of0
    ltx-ltb trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 3) (exp (gen) l-1) (11 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l-0)))
      (stor priv-stor (cat pt-0 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
      (send (cat (exp (gen) l-1) (mul l-0 (rec l-1)))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self-1 l-1)))
      (send
        (sig (body self-1 (exp (gen) l-1) (pubk "sig" self-1))
          (privk "sig" self-1)))))
  (label 475)
  (parent 366)
  (unrealized (10 1) (11 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) l-0) (one)))
  (precedes ((0 2) (6 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (1 0))
    ((4 1) (0 0)) ((4 2) (7 0)) ((5 1) (6 0)) ((5 2) (0 1))
    ((6 3) (0 3)) ((7 1) (6 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (7 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of self-0 (exp (gen) l))
    (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((5 1) (3 0)) ((5 1) (6 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (stor priv-stor (cat pt "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one)))))
  (label 476)
  (parent 373)
  (seen 369)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (precedes ((0 2) (7 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (1 0))
    ((4 1) (0 0)) ((4 2) (7 1)) ((5 1) (0 1)) ((6 1) (7 0))
    ((6 2) (5 0)) ((7 3) (0 3)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (5 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of self-0 (exp (gen) l))
    (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((6 1) (3 0)) ((6 1) (7 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (stor priv-stor (cat pt "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))))
  (label 477)
  (parent 377)
  (seen 369)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (self self-0 b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (gb base)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (y-0 l x-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) x-0) (mul (rec x-0) l-0)))
  (defstrand init 3 (na na-0) (a self) (b b) (gb gb)
    (priv-stor priv-stor) (l l-0) (x x-0))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (0 0)) ((6 1) (11 0))
    ((6 2) (5 0)) ((7 1) (0 1)) ((8 1) (9 0)) ((8 2) (7 0))
    ((9 3) (0 3)) ((10 1) (9 1)) ((11 2) (10 0)))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen x y-0 x-0)
  (absent (x l-0) (y-0 l) (x-0 l-0))
  (precur (7 0) (10 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of b gb) (ltb-of self (exp (gen) l-0))
    (ltb-of self-0 (exp (gen) l)) (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((6 1) (0 0)) ((6 1) (2 0)) ((6 1) (11 0)) ((8 1) (3 0))
    ((8 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 12 6 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv a l-1))) (11 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (stor priv-stor (cat pt "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) x-0) (mul (rec x-0) l-0)))
      (send (cat (exp (gen) x-0) (mul (rec x-0) l-0))))
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 self b (exp (gen) x-0)))))
  (label 478)
  (parent 378)
  (unrealized (9 1) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (self self-0 b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (gb base)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (y-0 l x-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) x-0) (mul l (rec x-0))))
  (defstrand init 3 (na na-0) (a self-0) (b b) (gb gb)
    (priv-stor priv-stor-0) (l l-0) (x x-0))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (0 0)) ((6 2) (5 0))
    ((7 1) (0 1)) ((8 1) (9 0)) ((8 1) (11 0)) ((8 2) (7 0))
    ((9 3) (0 3)) ((10 1) (9 1)) ((11 2) (10 0)))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen x y-0 x-0)
  (absent (x l) (y-0 l-0) (x-0 l-0))
  (precur (7 0) (10 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of b gb) (ltb-of self (exp (gen) l))
    (ltb-of self-0 (exp (gen) l-0)) (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((6 1) (0 0)) ((6 1) (2 0)) ((8 1) (3 0)) ((8 1) (9 0))
    ((8 1) (11 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 12 8 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv a l-1))) (11 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) x-0) (mul l (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l (rec x-0)))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 self-0 b (exp (gen) x-0)))))
  (label 479)
  (parent 378)
  (unrealized (9 1) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (self self-0 a b name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (gb base) (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (y-0 l l-0 x-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
  (defstrand init 3 (na na-0) (a a) (b b) (gb gb)
    (priv-stor priv-stor-1) (l l-1) (x x-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self a)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (0 0)) ((6 2) (5 0))
    ((7 1) (0 1)) ((8 1) (9 0)) ((8 2) (7 0)) ((9 3) (0 3))
    ((10 1) (9 1)) ((11 2) (10 0)) ((12 1) (11 0)))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen x y-0 x-0)
  (absent (x l-0) (y-0 l) (x-0 l-1))
  (precur (7 0) (10 0))
  (gen-st (pv self l-0) (pv self-0 l) (pv a l-1))
  (facts (ltb-of a (exp (gen) l-1)) (ltb-of b gb)
    (ltb-of self (exp (gen) l-0)) (ltb-of self-0 (exp (gen) l))
    (ltx-of a l-1) (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((6 1) (0 0)) ((6 1) (2 0)) ((8 1) (3 0)) ((8 1) (9 0))
    ((12 1) (11 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv a l-1))) (11 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (stor priv-stor (cat pt "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-0 (rec x-0)))))
    ((load priv-stor-1 (cat pt-5 (pv a l-1)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 a b (exp (gen) x-0))))
    ((load priv-stor-1 (cat pt-6 ignore-1))
      (stor priv-stor-1 (cat pt-5 (pv a l-1)))))
  (label 480)
  (parent 378)
  (unrealized (9 1) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) l-0) (one)))
  (precedes ((0 2) (8 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (4 0))
    ((4 1) (1 0)) ((5 1) (0 0)) ((5 2) (9 0)) ((6 1) (0 1))
    ((7 1) (8 0)) ((7 2) (6 0)) ((8 3) (0 3)) ((9 1) (8 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (6 0) (9 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of self-0 (exp (gen) l))
    (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((5 1) (0 0)) ((5 1) (2 0)) ((7 1) (3 0)) ((7 1) (8 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (stor priv-stor (cat pt "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one)))))
  (label 481)
  (parent 381)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data)
    (self self-0 a name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (ga gx base)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (y-0 l y-1 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) y-1) (mul (rec y-1) l-0)))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b self) (ga ga) (gx gx)
    (priv-stor priv-stor) (l l-0) (y y-1))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (0 0)) ((6 1) (11 0))
    ((6 2) (5 0)) ((7 1) (0 1)) ((8 1) (9 0)) ((8 2) (7 0))
    ((9 3) (0 3)) ((10 1) (9 1)) ((11 3) (10 0)))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen x y-0 y-1)
  (absent (x l-0) (y-0 l) (y-1 l-0))
  (precur (7 0) (10 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of a ga) (ltb-of self (exp (gen) l-0))
    (ltb-of self-0 (exp (gen) l)) (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((6 1) (0 0)) ((6 1) (2 0)) ((6 1) (11 0)) ((8 1) (3 0))
    ((8 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 12 6 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv b l-1))) (11 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (stor priv-stor (cat pt "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) y-1) (mul (rec y-1) l-0)))
      (send (cat (exp (gen) y-1) (mul (rec y-1) l-0))))
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a self gx))
      (send
        (cat (exp (gen) y-1)
          (enc na-0 nb-0 a self (hash (exp ga l-0) (exp gx y-1)))))))
  (label 482)
  (parent 382)
  (unrealized (9 1) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data)
    (self self-0 a name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (ga gx base)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (y-0 l y-1 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) y-1) (mul l (rec y-1))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b self-0) (ga ga) (gx gx)
    (priv-stor priv-stor-0) (l l-0) (y y-1))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (0 0)) ((6 2) (5 0))
    ((7 1) (0 1)) ((8 1) (9 0)) ((8 1) (11 0)) ((8 2) (7 0))
    ((9 3) (0 3)) ((10 1) (9 1)) ((11 3) (10 0)))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen x y-0 y-1)
  (absent (x l) (y-0 l-0) (y-1 l-0))
  (precur (7 0) (10 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of a ga) (ltb-of self (exp (gen) l))
    (ltb-of self-0 (exp (gen) l-0)) (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((6 1) (0 0)) ((6 1) (2 0)) ((8 1) (3 0)) ((8 1) (9 0))
    ((8 1) (11 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 12 8 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv b l-1))) (11 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) y-1) (mul l (rec y-1))))
      (send (cat (exp (gen) y-1) (mul l (rec y-1)))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a self-0 gx))
      (send
        (cat (exp (gen) y-1)
          (enc na-0 nb-0 a self-0 (hash (exp ga l-0) (exp gx y-1)))))))
  (label 483)
  (parent 382)
  (unrealized (9 1) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (self self-0 a b name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (ga gx base) (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx)
    (y expt) (y-0 l l-0 y-1 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) y-1) (mul l-0 (rec y-1))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b) (ga ga) (gx gx)
    (priv-stor priv-stor-1) (l l-1) (y y-1))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (0 0)) ((6 2) (5 0))
    ((7 1) (0 1)) ((8 1) (9 0)) ((8 2) (7 0)) ((9 3) (0 3))
    ((10 1) (9 1)) ((11 3) (10 0)) ((12 1) (11 0)))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen x y-0 y-1)
  (absent (x l-0) (y-0 l) (y-1 l-1))
  (precur (7 0) (10 0))
  (gen-st (pv self l-0) (pv self-0 l) (pv b l-1))
  (facts (ltb-of b (exp (gen) l-1)) (ltb-of a ga)
    (ltb-of self (exp (gen) l-0)) (ltb-of self-0 (exp (gen) l))
    (ltx-of b l-1) (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((6 1) (0 0)) ((6 1) (2 0)) ((8 1) (3 0)) ((8 1) (9 0))
    ((12 1) (11 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv b l-1))) (11 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (stor priv-stor (cat pt "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) y-1) (mul l-0 (rec y-1))))
      (send (cat (exp (gen) y-1) (mul l-0 (rec y-1)))))
    ((load priv-stor-1 (cat pt-5 (pv b l-1)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b gx))
      (send
        (cat (exp (gen) y-1)
          (enc na-0 nb-0 a b (hash (exp ga l-1) (exp gx y-1))))))
    ((load priv-stor-1 (cat pt-6 ignore-1))
      (stor priv-stor-1 (cat pt-5 (pv b l-1)))))
  (label 484)
  (parent 382)
  (unrealized (9 1) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self-0) (b self)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self-0) (b self)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor) (l l) (y y-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (7 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (5 0))
    ((3 2) (4 0)) ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (7 0))
    ((6 2) (0 1)) ((7 3) (0 3)) ((8 1) (0 0)) ((8 2) (7 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (5 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self-0 (exp (gen) l-0)) (ltb-of self (exp (gen) l))
    (ltx-of self l) (ltx-of self-0 l-0))
  (leads-to ((6 1) (3 0)) ((6 1) (7 0)) ((8 1) (0 0)) ((8 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self-0 self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt "nil")) (send l-0))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (recv (cat na self-0 self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 485)
  (parent 385)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (self self-0 a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval) (gb base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (y-0 l l-0 l-1 x-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-1)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-1))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-1))
  (deflistener (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-1) l))
  (deflistener (cat (gen) l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-1)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
  (defstrand init 3 (na na-0) (a a) (b b) (gb gb)
    (priv-stor priv-stor-1) (l l-0) (x x-0))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (7 0))
    ((3 2) (6 0)) ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0))
    ((7 1) (6 0)) ((8 1) (9 0)) ((8 2) (0 1)) ((9 3) (0 3))
    ((10 1) (9 1)) ((11 2) (10 0)))
  (uniq-orig na nb na-0 l l-1)
  (uniq-gen x y-0 x-0)
  (absent (x l-1) (y-0 l) (x-0 l-0))
  (precur (7 0) (10 0))
  (gen-st (pv self l-1) (pv self-0 l) (pv a l-0))
  (facts (ltb-of a (exp (gen) l-0)) (ltb-of b gb)
    (ltb-of self (exp (gen) l-1)) (ltb-of self-0 (exp (gen) l))
    (ltx-of a l-0) (ltx-of self-0 l) (ltx-of self l-1))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((8 1) (3 0)) ((8 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    gen-st-ltx-disclose-0 ltx-ltb trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand init 3) (exp (gen) x-0) (10 0))
  (traces
    ((load priv-stor (cat pt (pv self l-1)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l-1)))
      (stor priv-stor (cat pt-0 "nil")) (send l-1))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l-1))))
    ((recv (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-1) l)) (send (cat (exp (gen) l-1) l)))
    ((recv (cat (gen) l-1)) (send (cat (gen) l-1)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-1 (rec x-0)))))
    ((load priv-stor-1 (cat pt-5 (pv a l-0)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 a b (exp (gen) x-0)))))
  (label 486)
  (parent 386)
  (unrealized (9 1) (10 0) (11 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (y expt) (y-0 l l-0 x rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y x))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul y (rec y-0) x)))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) x) (mul l-0 (rec x))))
  (precedes ((0 2) (10 0)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (7 0))
    ((3 2) (6 0)) ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0))
    ((7 1) (6 0)) ((8 1) (9 0)) ((8 2) (0 1)) ((9 3) (0 3))
    ((10 1) (9 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen y-0 x)
  (absent (y-0 l) (x l-0))
  (precur (7 0) (10 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of self-0 (exp (gen) l))
    (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((8 1) (3 0)) ((8 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 11 0 init 3) (exp (gen) x-0) (10 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x)))))
    ((load priv-stor (cat pt (pv self l-0)))
      (stor priv-stor (cat pt-0 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y x))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y x)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul y (rec y-0) x))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x)))))))
    ((recv (cat (exp (gen) x) (mul l-0 (rec x))))
      (send (cat (exp (gen) x) (mul l-0 (rec x))))))
  (label 487)
  (parent 386)
  (unrealized (9 1) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (gen) l-0))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (7 0))
    ((3 2) (6 0)) ((4 1) (0 0)) ((4 1) (10 0)) ((5 1) (1 0))
    ((6 1) (5 0)) ((7 1) (6 0)) ((8 1) (9 0)) ((8 2) (0 1))
    ((9 3) (0 3)) ((10 1) (9 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (7 0) (10 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of self-0 (exp (gen) l))
    (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((8 1) (3 0)) ((8 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (contracted (l-1 l-0) (w l-0)) (gen) (10 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l-0)))
      (stor priv-stor (cat pt-0 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0))))
  (label 488)
  (parent 386)
  (unrealized (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self-0) (b self)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self-0) (b self)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor) (l l) (y y-0))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (8 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((3 2) (5 0)) ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (5 0))
    ((7 1) (8 0)) ((7 2) (0 1)) ((8 3) (0 3)) ((9 1) (8 1))
    ((10 1) (0 0)) ((10 2) (9 0)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (6 0) (9 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self-0 (exp (gen) l-0)) (ltb-of self (exp (gen) l))
    (ltx-of self l) (ltx-of self-0 l-0))
  (leads-to ((7 1) (3 0)) ((7 1) (8 0)) ((10 1) (0 0)) ((10 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 4 11 ltx-gen 3) (exp (gen) l-1)
    (10 0))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self-0 self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt "nil")) (send l-0))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (recv (cat na self-0 self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 489)
  (parent 386)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data)
    (self self-0 a b name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (ga gx base) (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx)
    (y expt) (y-0 l l-0 l-1 y-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-1)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-1))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-1))
  (deflistener (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-1) l))
  (deflistener (cat (gen) l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-1)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) y-1) (mul l-1 (rec y-1))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b) (ga ga) (gx gx)
    (priv-stor priv-stor-1) (l l-0) (y y-1))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (7 0))
    ((3 2) (6 0)) ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0))
    ((7 1) (6 0)) ((8 1) (9 0)) ((8 2) (0 1)) ((9 3) (0 3))
    ((10 1) (9 1)) ((11 3) (10 0)))
  (uniq-orig na nb nb-0 l l-1)
  (uniq-gen x y-0 y-1)
  (absent (x l-1) (y-0 l) (y-1 l-0))
  (precur (7 0) (10 0))
  (gen-st (pv self l-1) (pv self-0 l) (pv b l-0))
  (facts (ltb-of b (exp (gen) l-0)) (ltb-of a ga)
    (ltb-of self (exp (gen) l-1)) (ltb-of self-0 (exp (gen) l))
    (ltx-of b l-0) (ltx-of self-0 l) (ltx-of self l-1))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((8 1) (3 0)) ((8 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    gen-st-ltx-disclose-0 ltx-ltb trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand resp 4) (exp (gen) y-1) (10 0))
  (traces
    ((load priv-stor (cat pt (pv self l-1)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l-1)))
      (stor priv-stor (cat pt-0 "nil")) (send l-1))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l-1))))
    ((recv (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-1) l)) (send (cat (exp (gen) l-1) l)))
    ((recv (cat (gen) l-1)) (send (cat (gen) l-1)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) y-1) (mul l-1 (rec y-1))))
      (send (cat (exp (gen) y-1) (mul l-1 (rec y-1)))))
    ((load priv-stor-1 (cat pt-5 (pv b l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b gx))
      (send
        (cat (exp (gen) y-1)
          (enc na-0 nb-0 a b (hash (exp ga l-0) (exp gx y-1)))))))
  (label 490)
  (parent 386)
  (unrealized (9 1) (10 0) (11 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (gen) l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) l-0) (mul l (rec l-0))))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (7 0))
    ((3 2) (6 0)) ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0))
    ((7 1) (6 0)) ((8 1) (9 0)) ((8 2) (0 1)) ((8 2) (10 0))
    ((9 3) (0 3)) ((10 1) (9 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l-0))
  (precur (7 0) (10 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((8 1) (3 0)) ((8 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 11 8 ltx-gen 3) (exp (gen) l-1)
    (10 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (gen) l)) (send (cat (gen) l)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l-0) (mul l (rec l-0))))
      (send (cat (exp (gen) l-0) (mul l (rec l-0))))))
  (label 491)
  (parent 386)
  (unrealized (9 1) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data)
    (self self-0 self-1 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (y-0 l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self-1)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (7 0))
    ((3 2) (6 0)) ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0))
    ((7 1) (6 0)) ((8 1) (9 0)) ((8 2) (0 1)) ((9 3) (0 3))
    ((10 1) (9 1)) ((11 2) (10 0)))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (7 0) (10 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of self-1 (exp (gen) l-1)) (ltb-of self (exp (gen) l-0))
    (ltb-of self-0 (exp (gen) l)) (ltx-of self-1 l-1) (ltx-of self-0 l)
    (ltx-of self l-0))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((8 1) (3 0)) ((8 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-ltx-gen-ltx-of0 fact-resp-ltb-of0
    ltx-ltb trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 3) (exp (gen) l-1) (10 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l-0)))
      (stor priv-stor (cat pt-0 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
      (send (cat (exp (gen) l-1) (mul l-0 (rec l-1)))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self-1 l-1)))
      (send
        (sig (body self-1 (exp (gen) l-1) (pubk "sig" self-1))
          (privk "sig" self-1)))))
  (label 492)
  (parent 386)
  (unrealized (9 1) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self-0) (b self)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (gen) l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self-0) (b self)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor) (l l) (y y-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((3 2) (5 0)) ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (5 0))
    ((7 1) (0 1)) ((8 1) (9 0)) ((8 2) (7 0)) ((9 3) (0 3))
    ((10 1) (0 0)) ((10 2) (9 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (6 0) (7 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self-0 (exp (gen) l-0)) (ltb-of self (exp (gen) l))
    (ltx-of self l) (ltx-of self-0 l-0))
  (leads-to ((8 1) (3 0)) ((8 1) (9 0)) ((10 1) (0 0)) ((10 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 4 11 ltx-gen 3) (exp (gen) l-0)
    (10 1))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self-0 self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt "nil")) (send l-0))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (recv (cat na self-0 self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 493)
  (parent 389)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l y-0 l-0 rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (gen) l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) (mul l (rec w))) w))
  (precedes ((0 2) (10 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (7 0))
    ((3 2) (6 0)) ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0))
    ((7 1) (6 0)) ((8 1) (0 1)) ((9 1) (10 0)) ((9 2) (8 0))
    ((10 3) (0 3)) ((11 1) (10 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l-0))
  (precur (7 0) (8 0) (11 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((9 1) (3 0)) ((9 1) (10 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul l (rec w))) w)) (exp (gen) l)
    (10 1))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (gen) l)) (send (cat (gen) l)))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) (mul l (rec w))) w))
      (send (cat (exp (gen) (mul l (rec w))) w))))
  (label 494)
  (parent 389)
  (unrealized (11 0))
  (comment "7 in cohort - 7 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (gen) l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (precedes ((0 2) (11 0)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (7 0))
    ((3 2) (6 0)) ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0))
    ((7 1) (6 0)) ((8 1) (0 1)) ((9 1) (12 0)) ((9 2) (8 0))
    ((10 1) (0 3)) ((11 1) (10 0)) ((12 1) (11 0)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (precur (7 0) (8 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((9 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l) l-0))
    (exp (gen) (mul l l-0)) (11 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (gen) l)) (send (cat (gen) l)))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0))))
  (label 495)
  (parent 390)
  (unrealized (12 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (gen) l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (precedes ((0 2) (11 0)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (7 0))
    ((3 2) (6 0)) ((4 1) (0 0)) ((4 1) (12 0)) ((5 1) (1 0))
    ((6 1) (5 0)) ((7 1) (6 0)) ((8 1) (0 1)) ((9 2) (8 0))
    ((10 1) (0 3)) ((11 1) (10 0)) ((12 1) (11 0)))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (precur (7 0) (8 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((9 1) (3 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l-0) l))
    (exp (gen) (mul l l-0)) (11 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (gen) l)) (send (cat (gen) l)))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l))))
  (label 496)
  (parent 390)
  (unrealized (12 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (precedes ((0 2) (7 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (1 0))
    ((4 1) (1 0)) ((5 1) (0 0)) ((5 2) (4 0)) ((5 2) (7 1))
    ((6 1) (7 0)) ((6 2) (0 1)) ((7 3) (0 3)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (4 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of self-0 (exp (gen) l))
    (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((5 1) (0 0)) ((5 1) (2 0)) ((6 1) (3 0)) ((6 1) (7 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (stor priv-stor (cat pt "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))))
  (label 497)
  (parent 391)
  (seen 369)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (self self-0 b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (gb base)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (y-0 l x-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) x-0) (mul (rec x-0) l-0)))
  (defstrand init 3 (na na-0) (a self) (b b) (gb gb)
    (priv-stor priv-stor) (l l-0) (x x-0))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (5 0)) ((7 1) (0 0))
    ((7 1) (11 0)) ((7 2) (6 0)) ((8 1) (9 0)) ((8 2) (0 1))
    ((9 3) (0 3)) ((10 1) (9 1)) ((11 2) (10 0)))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen x y-0 x-0)
  (absent (x l-0) (y-0 l) (x-0 l-0))
  (precur (6 0) (10 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of b gb) (ltb-of self (exp (gen) l-0))
    (ltb-of self-0 (exp (gen) l)) (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((7 1) (0 0)) ((7 1) (2 0)) ((7 1) (11 0)) ((8 1) (3 0))
    ((8 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 12 7 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv a l-1))) (11 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (stor priv-stor (cat pt "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) x-0) (mul (rec x-0) l-0)))
      (send (cat (exp (gen) x-0) (mul (rec x-0) l-0))))
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 self b (exp (gen) x-0)))))
  (label 498)
  (parent 392)
  (unrealized (9 1) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (self self-0 b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (gb base)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (y-0 l x-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) x-0) (mul l (rec x-0))))
  (defstrand init 3 (na na-0) (a self-0) (b b) (gb gb)
    (priv-stor priv-stor-0) (l l-0) (x x-0))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (5 0)) ((7 1) (0 0))
    ((7 2) (6 0)) ((8 1) (9 0)) ((8 1) (11 0)) ((8 2) (0 1))
    ((9 3) (0 3)) ((10 1) (9 1)) ((11 2) (10 0)))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen x y-0 x-0)
  (absent (x l) (y-0 l-0) (x-0 l-0))
  (precur (6 0) (10 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of b gb) (ltb-of self (exp (gen) l))
    (ltb-of self-0 (exp (gen) l-0)) (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((7 1) (0 0)) ((7 1) (2 0)) ((8 1) (3 0)) ((8 1) (9 0))
    ((8 1) (11 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 12 8 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv a l-1))) (11 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) x-0) (mul l (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l (rec x-0)))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 self-0 b (exp (gen) x-0)))))
  (label 499)
  (parent 392)
  (unrealized (9 1) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (self self-0 a b name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (gb base) (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (y-0 l l-0 x-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
  (defstrand init 3 (na na-0) (a a) (b b) (gb gb)
    (priv-stor priv-stor-1) (l l-1) (x x-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self a)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (5 0)) ((7 1) (0 0))
    ((7 2) (6 0)) ((8 1) (9 0)) ((8 2) (0 1)) ((9 3) (0 3))
    ((10 1) (9 1)) ((11 2) (10 0)) ((12 1) (11 0)))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen x y-0 x-0)
  (absent (x l-0) (y-0 l) (x-0 l-1))
  (precur (6 0) (10 0))
  (gen-st (pv self l-0) (pv self-0 l) (pv a l-1))
  (facts (ltb-of a (exp (gen) l-1)) (ltb-of b gb)
    (ltb-of self (exp (gen) l-0)) (ltb-of self-0 (exp (gen) l))
    (ltx-of a l-1) (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((7 1) (0 0)) ((7 1) (2 0)) ((8 1) (3 0)) ((8 1) (9 0))
    ((12 1) (11 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv a l-1))) (11 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (stor priv-stor (cat pt "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-0 (rec x-0)))))
    ((load priv-stor-1 (cat pt-5 (pv a l-1)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 a b (exp (gen) x-0))))
    ((load priv-stor-1 (cat pt-6 ignore-1))
      (stor priv-stor-1 (cat pt-5 (pv a l-1)))))
  (label 500)
  (parent 392)
  (unrealized (9 1) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) l-0) (one)))
  (precedes ((0 2) (8 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (4 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (0 0)) ((6 2) (5 0))
    ((6 2) (9 0)) ((7 1) (8 0)) ((7 2) (0 1)) ((8 3) (0 3))
    ((9 1) (8 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (5 0) (9 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of self-0 (exp (gen) l))
    (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((6 1) (0 0)) ((6 1) (2 0)) ((7 1) (3 0)) ((7 1) (8 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (stor priv-stor (cat pt "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one)))))
  (label 501)
  (parent 395)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data)
    (self self-0 a name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (ga gx base)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (y-0 l y-1 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) y-1) (mul (rec y-1) l-0)))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b self) (ga ga) (gx gx)
    (priv-stor priv-stor) (l l-0) (y y-1))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (5 0)) ((7 1) (0 0))
    ((7 1) (11 0)) ((7 2) (6 0)) ((8 1) (9 0)) ((8 2) (0 1))
    ((9 3) (0 3)) ((10 1) (9 1)) ((11 3) (10 0)))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen x y-0 y-1)
  (absent (x l-0) (y-0 l) (y-1 l-0))
  (precur (6 0) (10 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of a ga) (ltb-of self (exp (gen) l-0))
    (ltb-of self-0 (exp (gen) l)) (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((7 1) (0 0)) ((7 1) (2 0)) ((7 1) (11 0)) ((8 1) (3 0))
    ((8 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 12 7 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv b l-1))) (11 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (stor priv-stor (cat pt "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) y-1) (mul (rec y-1) l-0)))
      (send (cat (exp (gen) y-1) (mul (rec y-1) l-0))))
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a self gx))
      (send
        (cat (exp (gen) y-1)
          (enc na-0 nb-0 a self (hash (exp ga l-0) (exp gx y-1)))))))
  (label 502)
  (parent 396)
  (unrealized (9 1) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data)
    (self self-0 a name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (ga gx base)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (y-0 l y-1 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) y-1) (mul l (rec y-1))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b self-0) (ga ga) (gx gx)
    (priv-stor priv-stor-0) (l l-0) (y y-1))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (5 0)) ((7 1) (0 0))
    ((7 2) (6 0)) ((8 1) (9 0)) ((8 1) (11 0)) ((8 2) (0 1))
    ((9 3) (0 3)) ((10 1) (9 1)) ((11 3) (10 0)))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen x y-0 y-1)
  (absent (x l) (y-0 l-0) (y-1 l-0))
  (precur (6 0) (10 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of a ga) (ltb-of self (exp (gen) l))
    (ltb-of self-0 (exp (gen) l-0)) (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((7 1) (0 0)) ((7 1) (2 0)) ((8 1) (3 0)) ((8 1) (9 0))
    ((8 1) (11 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 12 8 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv b l-1))) (11 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) y-1) (mul l (rec y-1))))
      (send (cat (exp (gen) y-1) (mul l (rec y-1)))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a self-0 gx))
      (send
        (cat (exp (gen) y-1)
          (enc na-0 nb-0 a self-0 (hash (exp ga l-0) (exp gx y-1)))))))
  (label 503)
  (parent 396)
  (unrealized (9 1) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (self self-0 a b name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (ga gx base) (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx)
    (y expt) (y-0 l l-0 y-1 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) y-1) (mul l-0 (rec y-1))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b) (ga ga) (gx gx)
    (priv-stor priv-stor-1) (l l-1) (y y-1))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (5 0)) ((7 1) (0 0))
    ((7 2) (6 0)) ((8 1) (9 0)) ((8 2) (0 1)) ((9 3) (0 3))
    ((10 1) (9 1)) ((11 3) (10 0)) ((12 1) (11 0)))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen x y-0 y-1)
  (absent (x l-0) (y-0 l) (y-1 l-1))
  (precur (6 0) (10 0))
  (gen-st (pv self l-0) (pv self-0 l) (pv b l-1))
  (facts (ltb-of b (exp (gen) l-1)) (ltb-of a ga)
    (ltb-of self (exp (gen) l-0)) (ltb-of self-0 (exp (gen) l))
    (ltx-of b l-1) (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((7 1) (0 0)) ((7 1) (2 0)) ((8 1) (3 0)) ((8 1) (9 0))
    ((12 1) (11 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv b l-1))) (11 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (stor priv-stor (cat pt "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) y-1) (mul l-0 (rec y-1))))
      (send (cat (exp (gen) y-1) (mul l-0 (rec y-1)))))
    ((load priv-stor-1 (cat pt-5 (pv b l-1)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b gx))
      (send
        (cat (exp (gen) y-1)
          (enc na-0 nb-0 a b (hash (exp ga l-1) (exp gx y-1))))))
    ((load priv-stor-1 (cat pt-6 ignore-1))
      (stor priv-stor-1 (cat pt-5 (pv b l-1)))))
  (label 504)
  (parent 396)
  (unrealized (9 1) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (4 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (0 0)) ((6 2) (5 0))
    ((6 2) (9 1)) ((7 1) (0 1)) ((8 1) (9 0)) ((8 2) (7 0))
    ((9 3) (0 3)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (5 0) (7 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of self-0 (exp (gen) l))
    (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((6 1) (0 0)) ((6 1) (2 0)) ((8 1) (3 0)) ((8 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (stor priv-stor (cat pt "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))))
  (label 505)
  (parent 399)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (self self-0 a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval) (gb base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (y-0 l l-0 l-1 x-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-1)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-1))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-1) l))
  (deflistener (cat (exp (gen) l-1) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-1))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-1)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
  (defstrand init 3 (na na-0) (a a) (b b) (gb gb)
    (priv-stor priv-stor-1) (l l-0) (x x-0))
  (precedes ((0 2) (10 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (5 0)) ((7 1) (0 0))
    ((7 2) (6 0)) ((8 1) (0 1)) ((9 1) (10 0)) ((9 2) (8 0))
    ((10 3) (0 3)) ((11 1) (10 1)) ((12 2) (11 0)))
  (uniq-orig na nb na-0 l l-1)
  (uniq-gen x y-0 x-0)
  (absent (x l-1) (y-0 l) (x-0 l-0))
  (precur (6 0) (8 0) (11 0))
  (gen-st (pv self l-1) (pv self-0 l) (pv a l-0))
  (facts (ltb-of a (exp (gen) l-0)) (ltb-of b gb)
    (ltb-of self (exp (gen) l-1)) (ltb-of self-0 (exp (gen) l))
    (ltx-of a l-0) (ltx-of self-0 l) (ltx-of self l-1))
  (leads-to ((7 1) (0 0)) ((7 1) (2 0)) ((9 1) (3 0)) ((9 1) (10 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    gen-st-ltx-disclose-0 ltx-ltb trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand init 3) (exp (gen) x-0) (11 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l-1)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l-1)))
      (stor priv-stor (cat pt "nil")) (send l-1))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-1) l)) (send (cat (exp (gen) l-1) l)))
    ((recv (cat (exp (gen) l-1) (one)))
      (send (cat (exp (gen) l-1) (one))))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-1 (rec x-0)))))
    ((load priv-stor-1 (cat pt-5 (pv a l-0)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 a b (exp (gen) x-0)))))
  (label 506)
  (parent 400)
  (unrealized (10 1) (11 0) (12 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (y expt) (y-0 l l-0 x rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y x))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul y (rec y-0) x)))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) x) (mul l-0 (rec x))))
  (precedes ((0 2) (11 0)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (5 0)) ((7 1) (0 0))
    ((7 2) (6 0)) ((8 1) (0 1)) ((9 1) (10 0)) ((9 2) (8 0))
    ((10 3) (0 3)) ((11 1) (10 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen y-0 x)
  (absent (y-0 l) (x l-0))
  (precur (6 0) (8 0) (11 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of self-0 (exp (gen) l))
    (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((7 1) (0 0)) ((7 1) (2 0)) ((9 1) (3 0)) ((9 1) (10 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 12 0 init 3) (exp (gen) x-0) (11 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x)))))
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (stor priv-stor (cat pt "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y x))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y x)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul y (rec y-0) x))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x)))))))
    ((recv (cat (exp (gen) x) (mul l-0 (rec x))))
      (send (cat (exp (gen) x) (mul l-0 (rec x))))))
  (label 507)
  (parent 400)
  (unrealized (10 1) (11 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (gen) l-0))
  (precedes ((0 2) (10 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (5 0)) ((7 1) (0 0))
    ((7 1) (11 0)) ((7 2) (6 0)) ((8 1) (0 1)) ((9 1) (10 0))
    ((9 2) (8 0)) ((10 3) (0 3)) ((11 1) (10 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (6 0) (8 0) (11 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of self-0 (exp (gen) l))
    (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((7 1) (0 0)) ((7 1) (2 0)) ((9 1) (3 0)) ((9 1) (10 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (contracted (l-1 l-0) (w l-0)) (gen) (11 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (stor priv-stor (cat pt "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0))))
  (label 508)
  (parent 400)
  (unrealized (11 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) l-0) (one)))
  (precedes ((0 2) (10 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (5 0)) ((7 1) (0 0))
    ((7 2) (6 0)) ((7 2) (11 0)) ((8 1) (0 1)) ((9 1) (10 0))
    ((9 2) (8 0)) ((10 3) (0 3)) ((11 1) (10 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (6 0) (8 0) (11 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of self-0 (exp (gen) l))
    (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((7 1) (0 0)) ((7 1) (2 0)) ((9 1) (3 0)) ((9 1) (10 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 12 7 ltx-gen 3) (exp (gen) l-1)
    (11 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (stor priv-stor (cat pt "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one)))))
  (label 509)
  (parent 400)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data)
    (self self-0 a b name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (ga gx base) (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx)
    (y expt) (y-0 l l-0 l-1 y-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-1)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-1))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-1) l))
  (deflistener (cat (exp (gen) l-1) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-1))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-1)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) y-1) (mul l-1 (rec y-1))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b) (ga ga) (gx gx)
    (priv-stor priv-stor-1) (l l-0) (y y-1))
  (precedes ((0 2) (10 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (5 0)) ((7 1) (0 0))
    ((7 2) (6 0)) ((8 1) (0 1)) ((9 1) (10 0)) ((9 2) (8 0))
    ((10 3) (0 3)) ((11 1) (10 1)) ((12 3) (11 0)))
  (uniq-orig na nb nb-0 l l-1)
  (uniq-gen x y-0 y-1)
  (absent (x l-1) (y-0 l) (y-1 l-0))
  (precur (6 0) (8 0) (11 0))
  (gen-st (pv self l-1) (pv self-0 l) (pv b l-0))
  (facts (ltb-of b (exp (gen) l-0)) (ltb-of a ga)
    (ltb-of self (exp (gen) l-1)) (ltb-of self-0 (exp (gen) l))
    (ltx-of b l-0) (ltx-of self-0 l) (ltx-of self l-1))
  (leads-to ((7 1) (0 0)) ((7 1) (2 0)) ((9 1) (3 0)) ((9 1) (10 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    gen-st-ltx-disclose-0 ltx-ltb trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand resp 4) (exp (gen) y-1) (11 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l-1)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l-1)))
      (stor priv-stor (cat pt "nil")) (send l-1))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-1) l)) (send (cat (exp (gen) l-1) l)))
    ((recv (cat (exp (gen) l-1) (one)))
      (send (cat (exp (gen) l-1) (one))))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) y-1) (mul l-1 (rec y-1))))
      (send (cat (exp (gen) y-1) (mul l-1 (rec y-1)))))
    ((load priv-stor-1 (cat pt-5 (pv b l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b gx))
      (send
        (cat (exp (gen) y-1)
          (enc na-0 nb-0 a b (hash (exp ga l-0) (exp gx y-1)))))))
  (label 510)
  (parent 400)
  (unrealized (10 1) (11 0) (12 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) l-0) (mul l (rec l-0))))
  (precedes ((0 2) (10 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (5 0)) ((7 1) (0 0))
    ((7 2) (6 0)) ((8 1) (0 1)) ((9 1) (10 0)) ((9 2) (8 0))
    ((9 2) (11 0)) ((10 3) (0 3)) ((11 1) (10 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l-0))
  (precur (6 0) (8 0) (11 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((7 1) (0 0)) ((7 1) (2 0)) ((9 1) (3 0)) ((9 1) (10 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 12 9 ltx-gen 3) (exp (gen) l-1)
    (11 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l-0) (mul l (rec l-0))))
      (send (cat (exp (gen) l-0) (mul l (rec l-0))))))
  (label 511)
  (parent 400)
  (unrealized (10 1) (11 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data)
    (self self-0 self-1 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (y-0 l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self-1)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (10 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (5 0)) ((7 1) (0 0))
    ((7 2) (6 0)) ((8 1) (0 1)) ((9 1) (10 0)) ((9 2) (8 0))
    ((10 3) (0 3)) ((11 1) (10 1)) ((12 2) (11 0)))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (6 0) (8 0) (11 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of self-1 (exp (gen) l-1)) (ltb-of self (exp (gen) l-0))
    (ltb-of self-0 (exp (gen) l)) (ltx-of self-1 l-1) (ltx-of self-0 l)
    (ltx-of self l-0))
  (leads-to ((7 1) (0 0)) ((7 1) (2 0)) ((9 1) (3 0)) ((9 1) (10 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-ltx-gen-ltx-of0 fact-resp-ltb-of0
    ltx-ltb trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 3) (exp (gen) l-1) (11 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (stor priv-stor (cat pt "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
      (send (cat (exp (gen) l-1) (mul l-0 (rec l-1)))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self-1 l-1)))
      (send
        (sig (body self-1 (exp (gen) l-1) (pubk "sig" self-1))
          (privk "sig" self-1)))))
  (label 512)
  (parent 400)
  (unrealized (10 1) (11 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pval)
    (priv-stor locn) (x rndx) (y expt) (y-0 l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener l)
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self) (ga (exp (gen) l))
    (gx (exp (gen) (mul x y (rec y-0)))) (priv-stor priv-stor) (l l)
    (y y-0))
  (deflistener (cat (exp (gen) l) (one)))
  (precedes ((0 2) (5 2)) ((0 4) (2 0)) ((2 2) (3 0)) ((3 1) (1 0))
    ((4 1) (0 0)) ((4 1) (5 0)) ((4 2) (0 1)) ((4 2) (6 0))
    ((5 3) (0 3)) ((6 1) (5 1)))
  (uniq-orig na nb l)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l))
  (precur (6 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((4 1) (5 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l)) ((recv l) (send l))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one)))))
  (label 513)
  (parent 408)
  (seen 427)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pval)
    (priv-stor locn) (x rndx) (y expt) (y-0 l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener l)
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self) (ga (exp (gen) l))
    (gx (exp (gen) (mul x y (rec y-0)))) (priv-stor priv-stor) (l l)
    (y y-0))
  (precedes ((0 2) (6 2)) ((0 4) (2 0)) ((2 2) (3 0)) ((3 1) (1 0))
    ((4 1) (0 1)) ((5 1) (0 0)) ((5 1) (6 0)) ((5 2) (4 0))
    ((5 2) (6 1)) ((6 3) (0 3)))
  (uniq-orig na nb l)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l))
  (precur (4 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((5 1) (0 0)) ((5 1) (2 0)) ((5 1) (6 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l)) ((recv l) (send l))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))))
  (label 514)
  (parent 414)
  (seen 428)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb na-0 data) (self b name)
    (pt pt-0 pt-1 pval) (gb base) (priv-stor locn) (x rndx) (y expt)
    (y-0 x-0 l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (gen) (mul l l)))
  (deflistener l)
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self) (ga (exp (gen) l))
    (gx (exp (gen) (mul x y (rec y-0)))) (priv-stor priv-stor) (l l)
    (y y-0))
  (deflistener (cat (exp (gen) x-0) (mul (rec x-0) l)))
  (defstrand init 3 (na na-0) (a self) (b b) (gb gb)
    (priv-stor priv-stor) (l l) (x x-0))
  (precedes ((0 2) (8 2)) ((0 4) (2 0)) ((2 2) (5 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (4 0)) ((6 1) (0 1)) ((7 1) (0 0))
    ((7 1) (8 0)) ((7 1) (10 0)) ((7 2) (6 0)) ((8 3) (0 3))
    ((9 1) (8 1)) ((10 2) (9 0)))
  (uniq-orig na nb na-0 l)
  (uniq-gen x y-0 x-0)
  (absent (x l) (y-0 l) (x-0 l))
  (precur (4 0) (6 0) (9 0))
  (gen-st (pv self l))
  (facts (ltb-of b gb) (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((7 1) (0 0)) ((7 1) (2 0)) ((7 1) (8 0)) ((7 1) (10 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 7 ltx-gen 2)
    (ch-msg priv-stor-0 (cat pt-2 (pv a l-0))) (10 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (gen) (mul l l))) (send (cat (gen) (mul l l))))
    ((recv l) (send l))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) x-0) (mul (rec x-0) l)))
      (send (cat (exp (gen) x-0) (mul (rec x-0) l))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 self b (exp (gen) x-0)))))
  (label 515)
  (parent 415)
  (unrealized (8 1) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (self a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (gb base) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l x-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (gen) (mul l l)))
  (deflistener l)
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self) (ga (exp (gen) l))
    (gx (exp (gen) (mul x y (rec y-0)))) (priv-stor priv-stor) (l l)
    (y y-0))
  (deflistener (cat (exp (gen) x-0) (mul l (rec x-0))))
  (defstrand init 3 (na na-0) (a a) (b b) (gb gb)
    (priv-stor priv-stor-0) (l l-0) (x x-0))
  (defstrand ltx-gen 2 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (8 2)) ((0 4) (2 0)) ((2 2) (5 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (4 0)) ((6 1) (0 1)) ((7 1) (0 0))
    ((7 1) (8 0)) ((7 2) (6 0)) ((8 3) (0 3)) ((9 1) (8 1))
    ((10 2) (9 0)) ((11 1) (10 0)))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen x y-0 x-0)
  (absent (x l) (y-0 l) (x-0 l-0))
  (precur (4 0) (6 0) (9 0))
  (gen-st (pv self l) (pv a l-0))
  (facts (ltb-of a (exp (gen) l-0)) (ltb-of b gb)
    (ltb-of self (exp (gen) l)) (ltx-of a l-0) (ltx-of self l))
  (leads-to ((7 1) (0 0)) ((7 1) (2 0)) ((7 1) (8 0)) ((11 1) (10 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-0 (cat pt-2 (pv a l-0))) (10 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (gen) (mul l l))) (send (cat (gen) (mul l l))))
    ((recv l) (send l))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) x-0) (mul l (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l (rec x-0)))))
    ((load priv-stor-0 (cat pt-2 (pv a l-0)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 a b (exp (gen) x-0))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l-0)))))
  (label 516)
  (parent 415)
  (unrealized (8 1) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb na-0 nb-0 data) (self a name)
    (pt pt-0 pt-1 pval) (ga gx base) (priv-stor locn) (x rndx) (y expt)
    (y-0 y-1 l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (gen) (mul l l)))
  (deflistener l)
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self) (ga (exp (gen) l))
    (gx (exp (gen) (mul x y (rec y-0)))) (priv-stor priv-stor) (l l)
    (y y-0))
  (deflistener (cat (exp (gen) y-1) (mul (rec y-1) l)))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b self) (ga ga) (gx gx)
    (priv-stor priv-stor) (l l) (y y-1))
  (precedes ((0 2) (8 2)) ((0 4) (2 0)) ((2 2) (5 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (4 0)) ((6 1) (0 1)) ((7 1) (0 0))
    ((7 1) (8 0)) ((7 1) (10 0)) ((7 2) (6 0)) ((8 3) (0 3))
    ((9 1) (8 1)) ((10 3) (9 0)))
  (uniq-orig na nb nb-0 l)
  (uniq-gen x y-0 y-1)
  (absent (x l) (y-0 l) (y-1 l))
  (precur (4 0) (6 0) (9 0))
  (gen-st (pv self l))
  (facts (ltb-of a ga) (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((7 1) (0 0)) ((7 1) (2 0)) ((7 1) (8 0)) ((7 1) (10 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 7 ltx-gen 2)
    (ch-msg priv-stor-0 (cat pt-2 (pv b l-0))) (10 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (gen) (mul l l))) (send (cat (gen) (mul l l))))
    ((recv l) (send l))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) y-1) (mul (rec y-1) l)))
      (send (cat (exp (gen) y-1) (mul (rec y-1) l))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a self gx))
      (send
        (cat (exp (gen) y-1)
          (enc na-0 nb-0 a self (hash (exp ga l) (exp gx y-1)))))))
  (label 517)
  (parent 418)
  (unrealized (8 1) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (self a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (ga gx base)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (y-0 l y-1 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (gen) (mul l l)))
  (deflistener l)
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self) (ga (exp (gen) l))
    (gx (exp (gen) (mul x y (rec y-0)))) (priv-stor priv-stor) (l l)
    (y y-0))
  (deflistener (cat (exp (gen) y-1) (mul l (rec y-1))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b) (ga ga) (gx gx)
    (priv-stor priv-stor-0) (l l-0) (y y-1))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (8 2)) ((0 4) (2 0)) ((2 2) (5 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (4 0)) ((6 1) (0 1)) ((7 1) (0 0))
    ((7 1) (8 0)) ((7 2) (6 0)) ((8 3) (0 3)) ((9 1) (8 1))
    ((10 3) (9 0)) ((11 1) (10 0)))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen x y-0 y-1)
  (absent (x l) (y-0 l) (y-1 l-0))
  (precur (4 0) (6 0) (9 0))
  (gen-st (pv self l) (pv b l-0))
  (facts (ltb-of b (exp (gen) l-0)) (ltb-of a ga)
    (ltb-of self (exp (gen) l)) (ltx-of b l-0) (ltx-of self l))
  (leads-to ((7 1) (0 0)) ((7 1) (2 0)) ((7 1) (8 0)) ((11 1) (10 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-0 (cat pt-2 (pv b l-0))) (10 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (gen) (mul l l))) (send (cat (gen) (mul l l))))
    ((recv l) (send l))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) y-1) (mul l (rec y-1))))
      (send (cat (exp (gen) y-1) (mul l (rec y-1)))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b gx))
      (send
        (cat (exp (gen) y-1)
          (enc na-0 nb-0 a b (hash (exp ga l-0) (exp gx y-1))))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))))
  (label 518)
  (parent 418)
  (unrealized (8 1) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pval)
    (priv-stor locn) (x rndx) (y expt) (y-0 l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (gen) (mul l l)))
  (deflistener l)
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self) (ga (exp (gen) l))
    (gx (exp (gen) (mul x y (rec y-0)))) (priv-stor priv-stor) (l l)
    (y y-0))
  (deflistener (cat (exp (gen) l) (one)))
  (precedes ((0 2) (7 2)) ((0 4) (2 0)) ((2 2) (4 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (0 1)) ((6 1) (0 0)) ((6 1) (7 0))
    ((6 2) (5 0)) ((6 2) (8 0)) ((7 3) (0 3)) ((8 1) (7 1)))
  (uniq-orig na nb l)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l))
  (precur (3 0) (5 0) (8 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((6 1) (0 0)) ((6 1) (2 0)) ((6 1) (7 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (gen) (mul l l))) (send (cat (gen) (mul l l))))
    ((recv l) (send l))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one)))))
  (label 519)
  (parent 419)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb na-0 data) (self b name)
    (pt pt-0 pt-1 pval) (gb base) (priv-stor locn) (x rndx) (y expt)
    (x-0 l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (gen) (mul l l)))
  (deflistener l)
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) x-0) (mul (rec x-0) l l)))
  (defstrand init 3 (na na-0) (a self) (b b) (gb gb)
    (priv-stor priv-stor) (l l) (x x-0))
  (precedes ((0 2) (9 0)) ((0 4) (2 0)) ((2 2) (5 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (4 0)) ((6 1) (0 1)) ((7 1) (0 0))
    ((7 1) (11 0)) ((7 2) (6 0)) ((8 1) (0 3)) ((9 1) (8 0))
    ((10 1) (9 0)) ((11 2) (10 0)))
  (uniq-orig na na-0 l)
  (uniq-gen x x-0)
  (absent (x l) (x-0 l))
  (precur (4 0) (6 0) (10 0))
  (gen-st (pv self l))
  (facts (ltb-of b gb) (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((7 1) (0 0)) ((7 1) (2 0)) ((7 1) (11 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 12 7 ltx-gen 2)
    (ch-msg priv-stor-0 (cat pt-2 (pv a l-0))) (11 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (gen) (mul l l))) (send (cat (gen) (mul l l))))
    ((recv l) (send l))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) x-0) (mul (rec x-0) l l)))
      (send (cat (exp (gen) x-0) (mul (rec x-0) l l))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 self b (exp (gen) x-0)))))
  (label 520)
  (parent 421)
  (unrealized (9 0) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (self a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (gb base) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (l x-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (gen) (mul l l)))
  (deflistener l)
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) x-0) (mul l l (rec x-0))))
  (defstrand init 3 (na na-0) (a a) (b b) (gb gb)
    (priv-stor priv-stor-0) (l l-0) (x x-0))
  (defstrand ltx-gen 2 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (9 0)) ((0 4) (2 0)) ((2 2) (5 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (4 0)) ((6 1) (0 1)) ((7 1) (0 0))
    ((7 2) (6 0)) ((8 1) (0 3)) ((9 1) (8 0)) ((10 1) (9 0))
    ((11 2) (10 0)) ((12 1) (11 0)))
  (uniq-orig na na-0 l l-0)
  (uniq-gen x x-0)
  (absent (x l) (x-0 l-0))
  (precur (4 0) (6 0) (10 0))
  (gen-st (pv self l) (pv a l-0))
  (facts (ltb-of a (exp (gen) l-0)) (ltb-of b gb)
    (ltb-of self (exp (gen) l)) (ltx-of a l-0) (ltx-of self l))
  (leads-to ((7 1) (0 0)) ((7 1) (2 0)) ((12 1) (11 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-0 (cat pt-2 (pv a l-0))) (11 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (gen) (mul l l))) (send (cat (gen) (mul l l))))
    ((recv l) (send l))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) x-0) (mul l l (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l l (rec x-0)))))
    ((load priv-stor-0 (cat pt-2 (pv a l-0)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 a b (exp (gen) x-0))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l-0)))))
  (label 521)
  (parent 421)
  (unrealized (9 0) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pval)
    (priv-stor locn) (x rndx) (y expt) (l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (gen) (mul l l)))
  (deflistener l)
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (gen) (mul l l)))
  (deflistener l)
  (precedes ((0 2) (9 0)) ((0 4) (2 0)) ((2 2) (5 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (4 0)) ((6 1) (0 1)) ((7 1) (0 0))
    ((7 1) (11 0)) ((7 2) (6 0)) ((8 1) (0 3)) ((9 1) (8 0))
    ((10 1) (9 0)) ((11 1) (10 0)))
  (uniq-orig na l)
  (uniq-gen x)
  (absent (x l))
  (precur (4 0) (6 0) (10 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((7 1) (0 0)) ((7 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener l) (mul l l) (10 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (gen) (mul l l))) (send (cat (gen) (mul l l))))
    ((recv l) (send l))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (gen) (mul l l))) (send (cat (gen) (mul l l))))
    ((recv l) (send l)))
  (label 522)
  (parent 423)
  (unrealized (11 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb na-0 nb-0 data) (self a name)
    (pt pt-0 pt-1 pval) (ga gx base) (priv-stor locn) (x rndx) (y expt)
    (y-0 l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (gen) (mul l l)))
  (deflistener l)
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) y-0) (mul (rec y-0) l l)))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b self) (ga ga) (gx gx)
    (priv-stor priv-stor) (l l) (y y-0))
  (precedes ((0 2) (9 0)) ((0 4) (2 0)) ((2 2) (5 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (4 0)) ((6 1) (0 1)) ((7 1) (0 0))
    ((7 1) (11 0)) ((7 2) (6 0)) ((8 1) (0 3)) ((9 1) (8 0))
    ((10 1) (9 0)) ((11 3) (10 0)))
  (uniq-orig na nb-0 l)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l))
  (precur (4 0) (6 0) (10 0))
  (gen-st (pv self l))
  (facts (ltb-of a ga) (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((7 1) (0 0)) ((7 1) (2 0)) ((7 1) (11 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 12 7 ltx-gen 2)
    (ch-msg priv-stor-0 (cat pt-2 (pv b l-0))) (11 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (gen) (mul l l))) (send (cat (gen) (mul l l))))
    ((recv l) (send l))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) y-0) (mul (rec y-0) l l)))
      (send (cat (exp (gen) y-0) (mul (rec y-0) l l))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a self gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a self (hash (exp ga l) (exp gx y-0)))))))
  (label 523)
  (parent 424)
  (unrealized (9 0) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (self a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (ga gx base)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (l y-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (gen) (mul l l)))
  (deflistener l)
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) y-0) (mul l l (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b) (ga ga) (gx gx)
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (9 0)) ((0 4) (2 0)) ((2 2) (5 0)) ((3 1) (1 0))
    ((4 1) (3 0)) ((5 1) (4 0)) ((6 1) (0 1)) ((7 1) (0 0))
    ((7 2) (6 0)) ((8 1) (0 3)) ((9 1) (8 0)) ((10 1) (9 0))
    ((11 3) (10 0)) ((12 1) (11 0)))
  (uniq-orig na nb-0 l l-0)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l-0))
  (precur (4 0) (6 0) (10 0))
  (gen-st (pv self l) (pv b l-0))
  (facts (ltb-of b (exp (gen) l-0)) (ltb-of a ga)
    (ltb-of self (exp (gen) l)) (ltx-of b l-0) (ltx-of self l))
  (leads-to ((7 1) (0 0)) ((7 1) (2 0)) ((12 1) (11 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-0 (cat pt-2 (pv b l-0))) (11 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (gen) (mul l l))) (send (cat (gen) (mul l l))))
    ((recv l) (send l))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) y-0) (mul l l (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l l (rec y-0)))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a b (hash (exp ga l-0) (exp gx y-0))))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))))
  (label 524)
  (parent 424)
  (unrealized (9 0) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pval)
    (priv-stor locn) (x rndx) (y expt) (y-0 l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self) (ga (exp (gen) l))
    (gx (exp (gen) (mul x y (rec y-0)))) (priv-stor priv-stor) (l l)
    (y y-0))
  (deflistener (cat (exp (gen) l) (one)))
  (precedes ((0 2) (5 2)) ((0 4) (2 0)) ((2 2) (1 0)) ((3 1) (0 0))
    ((3 1) (5 0)) ((3 2) (4 0)) ((3 2) (6 0)) ((4 1) (0 1))
    ((5 3) (0 3)) ((6 1) (5 1)))
  (uniq-orig na nb l)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l))
  (precur (4 0) (6 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((3 1) (0 0)) ((3 1) (2 0)) ((3 1) (5 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one)))))
  (label 525)
  (parent 433)
  (seen 427)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self-0) (b self)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand resp 4 (na na) (nb nb) (a self-0) (b self)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor) (l l) (y y-0))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (6 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (1 0))
    ((4 1) (6 0)) ((4 2) (5 0)) ((5 1) (0 1)) ((6 3) (0 3))
    ((7 1) (6 1)) ((8 1) (0 0)) ((8 2) (7 0)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (5 0) (7 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self-0 (exp (gen) l-0)) (ltb-of self (exp (gen) l))
    (ltx-of self l) (ltx-of self-0 l-0))
  (leads-to ((4 1) (3 0)) ((4 1) (6 0)) ((8 1) (0 0)) ((8 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self-0 self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt "nil")) (send l-0))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (recv (cat na self-0 self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 526)
  (parent 444)
  (seen 439)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self-0) (b self)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (gen) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self-0) (b self)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor) (l l) (y y-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (6 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (1 0))
    ((3 2) (4 0)) ((4 1) (1 0)) ((5 1) (6 0)) ((5 2) (0 1))
    ((6 3) (0 3)) ((7 1) (0 0)) ((7 2) (6 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (4 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self-0 (exp (gen) l-0)) (ltb-of self (exp (gen) l))
    (ltx-of self l) (ltx-of self-0 l-0))
  (leads-to ((5 1) (3 0)) ((5 1) (6 0)) ((7 1) (0 0)) ((7 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self-0 self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt "nil")) (send l-0))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((recv (cat (gen) l)) (send (cat (gen) l)))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (recv (cat na self-0 self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 527)
  (parent 448)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (self self-0 b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (gb base)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (y-0 l x-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (gen) l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) x-0) (mul (rec x-0) l-0)))
  (defstrand init 3 (na na-0) (a self) (b b) (gb gb)
    (priv-stor priv-stor) (l l-0) (x x-0))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((3 2) (7 0)) ((4 1) (0 0)) ((4 1) (11 0)) ((5 1) (1 0))
    ((6 1) (5 0)) ((7 1) (6 0)) ((8 1) (9 0)) ((8 2) (0 1))
    ((9 3) (0 3)) ((10 1) (9 1)) ((11 2) (10 0)))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen x y-0 x-0)
  (absent (x l-0) (y-0 l) (x-0 l-0))
  (precur (7 0) (10 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of b gb) (ltb-of self (exp (gen) l-0))
    (ltb-of self-0 (exp (gen) l)) (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((4 1) (11 0)) ((8 1) (3 0))
    ((8 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 12 4 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv a l-1))) (11 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l-0)))
      (stor priv-stor (cat pt-0 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (gen) l)) (send (cat (gen) l)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) x-0) (mul (rec x-0) l-0)))
      (send (cat (exp (gen) x-0) (mul (rec x-0) l-0))))
    ((load priv-stor (cat pt (pv self l-0)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 self b (exp (gen) x-0)))))
  (label 528)
  (parent 449)
  (unrealized (9 1) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (self self-0 b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (gb base)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (y-0 l x-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) x-0) (mul l (rec x-0))))
  (defstrand init 3 (na na-0) (a self-0) (b b) (gb gb)
    (priv-stor priv-stor-0) (l l-0) (x x-0))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((3 2) (7 0)) ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0))
    ((7 1) (6 0)) ((8 1) (9 0)) ((8 1) (11 0)) ((8 2) (0 1))
    ((9 3) (0 3)) ((10 1) (9 1)) ((11 2) (10 0)))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen x y-0 x-0)
  (absent (x l) (y-0 l-0) (x-0 l-0))
  (precur (7 0) (10 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of b gb) (ltb-of self (exp (gen) l))
    (ltb-of self-0 (exp (gen) l-0)) (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((8 1) (3 0)) ((8 1) (9 0))
    ((8 1) (11 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 12 8 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv a l-1))) (11 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) x-0) (mul l (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l (rec x-0)))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 self-0 b (exp (gen) x-0)))))
  (label 529)
  (parent 449)
  (unrealized (9 1) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (self self-0 a b name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (gb base) (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (y-0 l l-0 x-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (gen) l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
  (defstrand init 3 (na na-0) (a a) (b b) (gb gb)
    (priv-stor priv-stor-1) (l l-1) (x x-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self a)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((3 2) (7 0)) ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0))
    ((7 1) (6 0)) ((8 1) (9 0)) ((8 2) (0 1)) ((9 3) (0 3))
    ((10 1) (9 1)) ((11 2) (10 0)) ((12 1) (11 0)))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen x y-0 x-0)
  (absent (x l-0) (y-0 l) (x-0 l-1))
  (precur (7 0) (10 0))
  (gen-st (pv self l-0) (pv self-0 l) (pv a l-1))
  (facts (ltb-of a (exp (gen) l-1)) (ltb-of b gb)
    (ltb-of self (exp (gen) l-0)) (ltb-of self-0 (exp (gen) l))
    (ltx-of a l-1) (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((8 1) (3 0)) ((8 1) (9 0))
    ((12 1) (11 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv a l-1))) (11 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l-0)))
      (stor priv-stor (cat pt-0 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (gen) l)) (send (cat (gen) l)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-0 (rec x-0)))))
    ((load priv-stor-1 (cat pt-5 (pv a l-1)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 a b (exp (gen) x-0))))
    ((load priv-stor-1 (cat pt-6 ignore-1))
      (stor priv-stor-1 (cat pt-5 (pv a l-1)))))
  (label 530)
  (parent 449)
  (unrealized (9 1) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self-0) (b self)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (gen) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self-0) (b self)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor) (l l) (y y-0))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (7 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (4 0))
    ((3 2) (5 0)) ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (7 0))
    ((6 2) (0 1)) ((7 3) (0 3)) ((8 1) (7 1)) ((9 1) (0 0))
    ((9 2) (8 0)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (5 0) (8 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self-0 (exp (gen) l-0)) (ltb-of self (exp (gen) l))
    (ltx-of self l) (ltx-of self-0 l-0))
  (leads-to ((6 1) (3 0)) ((6 1) (7 0)) ((9 1) (0 0)) ((9 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self-0 self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt "nil")) (send l-0))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (gen) l)) (send (cat (gen) l)))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (recv (cat na self-0 self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 531)
  (parent 452)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data)
    (self self-0 a name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (ga gx base)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (y-0 l y-1 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (gen) l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) y-1) (mul (rec y-1) l-0)))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b self) (ga ga) (gx gx)
    (priv-stor priv-stor) (l l-0) (y y-1))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((3 2) (7 0)) ((4 1) (0 0)) ((4 1) (11 0)) ((5 1) (1 0))
    ((6 1) (5 0)) ((7 1) (6 0)) ((8 1) (9 0)) ((8 2) (0 1))
    ((9 3) (0 3)) ((10 1) (9 1)) ((11 3) (10 0)))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen x y-0 y-1)
  (absent (x l-0) (y-0 l) (y-1 l-0))
  (precur (7 0) (10 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of a ga) (ltb-of self (exp (gen) l-0))
    (ltb-of self-0 (exp (gen) l)) (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((4 1) (11 0)) ((8 1) (3 0))
    ((8 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 12 4 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv b l-1))) (11 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l-0)))
      (stor priv-stor (cat pt-0 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (gen) l)) (send (cat (gen) l)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) y-1) (mul (rec y-1) l-0)))
      (send (cat (exp (gen) y-1) (mul (rec y-1) l-0))))
    ((load priv-stor (cat pt (pv self l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a self gx))
      (send
        (cat (exp (gen) y-1)
          (enc na-0 nb-0 a self (hash (exp ga l-0) (exp gx y-1)))))))
  (label 532)
  (parent 453)
  (unrealized (9 1) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data)
    (self self-0 a name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (ga gx base)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (y-0 l y-1 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) y-1) (mul l (rec y-1))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b self-0) (ga ga) (gx gx)
    (priv-stor priv-stor-0) (l l-0) (y y-1))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((3 2) (7 0)) ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0))
    ((7 1) (6 0)) ((8 1) (9 0)) ((8 1) (11 0)) ((8 2) (0 1))
    ((9 3) (0 3)) ((10 1) (9 1)) ((11 3) (10 0)))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen x y-0 y-1)
  (absent (x l) (y-0 l-0) (y-1 l-0))
  (precur (7 0) (10 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of a ga) (ltb-of self (exp (gen) l))
    (ltb-of self-0 (exp (gen) l-0)) (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((8 1) (3 0)) ((8 1) (9 0))
    ((8 1) (11 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 12 8 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv b l-1))) (11 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) y-1) (mul l (rec y-1))))
      (send (cat (exp (gen) y-1) (mul l (rec y-1)))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a self-0 gx))
      (send
        (cat (exp (gen) y-1)
          (enc na-0 nb-0 a self-0 (hash (exp ga l-0) (exp gx y-1)))))))
  (label 533)
  (parent 453)
  (unrealized (9 1) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (self self-0 a b name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (ga gx base) (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx)
    (y expt) (y-0 l l-0 y-1 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (gen) l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) y-1) (mul l-0 (rec y-1))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b) (ga ga) (gx gx)
    (priv-stor priv-stor-1) (l l-1) (y y-1))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((3 2) (7 0)) ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0))
    ((7 1) (6 0)) ((8 1) (9 0)) ((8 2) (0 1)) ((9 3) (0 3))
    ((10 1) (9 1)) ((11 3) (10 0)) ((12 1) (11 0)))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen x y-0 y-1)
  (absent (x l-0) (y-0 l) (y-1 l-1))
  (precur (7 0) (10 0))
  (gen-st (pv self l-0) (pv self-0 l) (pv b l-1))
  (facts (ltb-of b (exp (gen) l-1)) (ltb-of a ga)
    (ltb-of self (exp (gen) l-0)) (ltb-of self-0 (exp (gen) l))
    (ltx-of b l-1) (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((8 1) (3 0)) ((8 1) (9 0))
    ((12 1) (11 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv b l-1))) (11 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l-0)))
      (stor priv-stor (cat pt-0 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (gen) l)) (send (cat (gen) l)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) y-1) (mul l-0 (rec y-1))))
      (send (cat (exp (gen) y-1) (mul l-0 (rec y-1)))))
    ((load priv-stor-1 (cat pt-5 (pv b l-1)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b gx))
      (send
        (cat (exp (gen) y-1)
          (enc na-0 nb-0 a b (hash (exp ga l-1) (exp gx y-1))))))
    ((load priv-stor-1 (cat pt-6 ignore-1))
      (stor priv-stor-1 (cat pt-5 (pv b l-1)))))
  (label 534)
  (parent 453)
  (unrealized (9 1) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self-0) (b self)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (gen) l))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self-0) (b self)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor) (l l) (y y-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (8 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (4 0))
    ((3 2) (5 0)) ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (0 1))
    ((7 1) (8 0)) ((7 2) (6 0)) ((8 3) (0 3)) ((9 1) (0 0))
    ((9 2) (8 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (5 0) (6 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self-0 (exp (gen) l-0)) (ltb-of self (exp (gen) l))
    (ltx-of self l) (ltx-of self-0 l-0))
  (leads-to ((7 1) (3 0)) ((7 1) (8 0)) ((9 1) (0 0)) ((9 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self-0 self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt "nil")) (send l-0))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (gen) l)) (send (cat (gen) l)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (recv (cat na self-0 self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 535)
  (parent 456)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (self self-0 a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval) (gb base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (y-0 l l-0 l-1 x-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-1)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-1))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-1))
  (deflistener (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-1))
  (deflistener (cat (gen) l))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-1)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
  (defstrand init 3 (na na-0) (a a) (b b) (gb gb)
    (priv-stor priv-stor-1) (l l-0) (x x-0))
  (precedes ((0 2) (10 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((3 2) (7 0)) ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0))
    ((7 1) (6 0)) ((8 1) (0 1)) ((9 1) (10 0)) ((9 2) (8 0))
    ((10 3) (0 3)) ((11 1) (10 1)) ((12 2) (11 0)))
  (uniq-orig na nb na-0 l l-1)
  (uniq-gen x y-0 x-0)
  (absent (x l-1) (y-0 l) (x-0 l-0))
  (precur (7 0) (8 0) (11 0))
  (gen-st (pv self l-1) (pv self-0 l) (pv a l-0))
  (facts (ltb-of a (exp (gen) l-0)) (ltb-of b gb)
    (ltb-of self (exp (gen) l-1)) (ltb-of self-0 (exp (gen) l))
    (ltx-of a l-0) (ltx-of self-0 l) (ltx-of self l-1))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((9 1) (3 0)) ((9 1) (10 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    gen-st-ltx-disclose-0 ltx-ltb trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand init 3) (exp (gen) x-0) (11 0))
  (traces
    ((load priv-stor (cat pt (pv self l-1)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l-1)))
      (stor priv-stor (cat pt-0 "nil")) (send l-1))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l-1))))
    ((recv (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-1)) (send (cat (exp (gen) l) l-1)))
    ((recv (cat (gen) l)) (send (cat (gen) l)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-1 (rec x-0)))))
    ((load priv-stor-1 (cat pt-5 (pv a l-0)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 a b (exp (gen) x-0)))))
  (label 536)
  (parent 457)
  (unrealized (10 1) (11 0) (12 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (y expt) (y-0 l l-0 x rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y x))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (gen) l))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul y (rec y-0) x)))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) x) (mul l-0 (rec x))))
  (precedes ((0 2) (11 0)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((3 2) (7 0)) ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0))
    ((7 1) (6 0)) ((8 1) (0 1)) ((9 1) (10 0)) ((9 2) (8 0))
    ((10 3) (0 3)) ((11 1) (10 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen y-0 x)
  (absent (y-0 l) (x l-0))
  (precur (7 0) (8 0) (11 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of self-0 (exp (gen) l))
    (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((9 1) (3 0)) ((9 1) (10 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 12 0 init 3) (exp (gen) x-0) (11 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x)))))
    ((load priv-stor (cat pt (pv self l-0)))
      (stor priv-stor (cat pt-0 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y x))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y x)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (gen) l)) (send (cat (gen) l)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul y (rec y-0) x))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x)))))))
    ((recv (cat (exp (gen) x) (mul l-0 (rec x))))
      (send (cat (exp (gen) x) (mul l-0 (rec x))))))
  (label 537)
  (parent 457)
  (unrealized (10 1) (11 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (gen) l))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (gen) l-0))
  (precedes ((0 2) (10 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((3 2) (7 0)) ((4 1) (0 0)) ((4 1) (11 0)) ((5 1) (1 0))
    ((6 1) (5 0)) ((7 1) (6 0)) ((8 1) (0 1)) ((9 1) (10 0))
    ((9 2) (8 0)) ((10 3) (0 3)) ((11 1) (10 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (7 0) (8 0) (11 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of self-0 (exp (gen) l))
    (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((9 1) (3 0)) ((9 1) (10 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (contracted (l-1 l-0) (w l-0)) (gen) (11 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l-0)))
      (stor priv-stor (cat pt-0 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (gen) l)) (send (cat (gen) l)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0))))
  (label 538)
  (parent 457)
  (unrealized (11 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self-0) (b self)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (gen) l))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self-0) (b self)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor) (l l) (y y-0))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (5 0))
    ((3 2) (6 0)) ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (5 0))
    ((7 1) (0 1)) ((8 1) (9 0)) ((8 2) (7 0)) ((9 3) (0 3))
    ((10 1) (9 1)) ((11 1) (0 0)) ((11 2) (10 0)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (6 0) (7 0) (10 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self-0 (exp (gen) l-0)) (ltb-of self (exp (gen) l))
    (ltx-of self l) (ltx-of self-0 l-0))
  (leads-to ((8 1) (3 0)) ((8 1) (9 0)) ((11 1) (0 0)) ((11 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 4 12 ltx-gen 3) (exp (gen) l-1)
    (11 0))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self-0 self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt "nil")) (send l-0))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (gen) l)) (send (cat (gen) l)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (recv (cat na self-0 self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 539)
  (parent 457)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data)
    (self self-0 a b name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (ga gx base) (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx)
    (y expt) (y-0 l l-0 l-1 y-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-1)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-1))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-1))
  (deflistener (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-1))
  (deflistener (cat (gen) l))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-1)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) y-1) (mul l-1 (rec y-1))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b) (ga ga) (gx gx)
    (priv-stor priv-stor-1) (l l-0) (y y-1))
  (precedes ((0 2) (10 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((3 2) (7 0)) ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0))
    ((7 1) (6 0)) ((8 1) (0 1)) ((9 1) (10 0)) ((9 2) (8 0))
    ((10 3) (0 3)) ((11 1) (10 1)) ((12 3) (11 0)))
  (uniq-orig na nb nb-0 l l-1)
  (uniq-gen x y-0 y-1)
  (absent (x l-1) (y-0 l) (y-1 l-0))
  (precur (7 0) (8 0) (11 0))
  (gen-st (pv self l-1) (pv self-0 l) (pv b l-0))
  (facts (ltb-of b (exp (gen) l-0)) (ltb-of a ga)
    (ltb-of self (exp (gen) l-1)) (ltb-of self-0 (exp (gen) l))
    (ltx-of b l-0) (ltx-of self-0 l) (ltx-of self l-1))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((9 1) (3 0)) ((9 1) (10 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    gen-st-ltx-disclose-0 ltx-ltb trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand resp 4) (exp (gen) y-1) (11 0))
  (traces
    ((load priv-stor (cat pt (pv self l-1)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l-1)))
      (stor priv-stor (cat pt-0 "nil")) (send l-1))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l-1))))
    ((recv (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-1)) (send (cat (exp (gen) l) l-1)))
    ((recv (cat (gen) l)) (send (cat (gen) l)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) y-1) (mul l-1 (rec y-1))))
      (send (cat (exp (gen) y-1) (mul l-1 (rec y-1)))))
    ((load priv-stor-1 (cat pt-5 (pv b l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b gx))
      (send
        (cat (exp (gen) y-1)
          (enc na-0 nb-0 a b (hash (exp ga l-0) (exp gx y-1)))))))
  (label 540)
  (parent 457)
  (unrealized (10 1) (11 0) (12 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (gen) l-0))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) l-0) (mul l (rec l-0))))
  (precedes ((0 2) (10 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((3 2) (7 0)) ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0))
    ((7 1) (6 0)) ((8 1) (0 1)) ((9 1) (10 0)) ((9 2) (8 0))
    ((9 2) (11 0)) ((10 3) (0 3)) ((11 1) (10 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l-0))
  (precur (7 0) (8 0) (11 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((9 1) (3 0)) ((9 1) (10 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 12 9 ltx-gen 3) (exp (gen) l-1)
    (11 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l-0) (mul l (rec l-0))))
      (send (cat (exp (gen) l-0) (mul l (rec l-0))))))
  (label 541)
  (parent 457)
  (unrealized (10 1) (11 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data)
    (self self-0 self-1 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (y-0 l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (gen) l))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self-1)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (10 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((3 2) (7 0)) ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0))
    ((7 1) (6 0)) ((8 1) (0 1)) ((9 1) (10 0)) ((9 2) (8 0))
    ((10 3) (0 3)) ((11 1) (10 1)) ((12 2) (11 0)))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (7 0) (8 0) (11 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of self-1 (exp (gen) l-1)) (ltb-of self (exp (gen) l-0))
    (ltb-of self-0 (exp (gen) l)) (ltx-of self-1 l-1) (ltx-of self-0 l)
    (ltx-of self l-0))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((9 1) (3 0)) ((9 1) (10 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-ltx-gen-ltx-of0 fact-resp-ltb-of0
    ltx-ltb trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 3) (exp (gen) l-1) (11 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l-0)))
      (stor priv-stor (cat pt-0 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (gen) l)) (send (cat (gen) l)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
      (send (cat (exp (gen) l-1) (mul l-0 (rec l-1)))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self-1 l-1)))
      (send
        (sig (body self-1 (exp (gen) l-1) (pubk "sig" self-1))
          (privk "sig" self-1)))))
  (label 542)
  (parent 457)
  (unrealized (10 1) (11 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self-0) (b self)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self-0) (b self)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor) (l l) (y y-0))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (6 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (1 0))
    ((4 1) (1 0)) ((5 1) (6 0)) ((5 2) (0 1)) ((5 2) (4 0))
    ((6 3) (0 3)) ((7 1) (6 1)) ((8 1) (0 0)) ((8 2) (7 0)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (4 0) (7 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self-0 (exp (gen) l-0)) (ltb-of self (exp (gen) l))
    (ltx-of self l) (ltx-of self-0 l-0))
  (leads-to ((5 1) (3 0)) ((5 1) (6 0)) ((8 1) (0 0)) ((8 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self-0 self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt "nil")) (send l-0))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (recv (cat na self-0 self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 543)
  (parent 464)
  (seen 439)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self-0) (b self)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand resp 4 (na na) (nb nb) (a self-0) (b self)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor) (l l) (y y-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (7 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (1 0))
    ((4 1) (1 0)) ((5 1) (7 0)) ((5 2) (4 0)) ((5 2) (6 0))
    ((6 1) (0 1)) ((7 3) (0 3)) ((8 1) (0 0)) ((8 2) (7 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (4 0) (6 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self-0 (exp (gen) l-0)) (ltb-of self (exp (gen) l))
    (ltx-of self l) (ltx-of self-0 l-0))
  (leads-to ((5 1) (3 0)) ((5 1) (7 0)) ((8 1) (0 0)) ((8 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self-0 self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt "nil")) (send l-0))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (recv (cat na self-0 self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 544)
  (parent 468)
  (seen 440)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (self self-0 b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (gb base)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (y-0 l x-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) x-0) (mul (rec x-0) l-0)))
  (defstrand init 3 (na na-0) (a self) (b b) (gb gb)
    (priv-stor priv-stor) (l l-0) (x x-0))
  (precedes ((0 2) (10 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((4 1) (0 0)) ((4 1) (12 0)) ((5 1) (1 0)) ((6 1) (5 0))
    ((7 1) (6 0)) ((8 1) (10 0)) ((8 2) (7 0)) ((8 2) (9 0))
    ((9 1) (0 1)) ((10 3) (0 3)) ((11 1) (10 1)) ((12 2) (11 0)))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen x y-0 x-0)
  (absent (x l-0) (y-0 l) (x-0 l-0))
  (precur (7 0) (9 0) (11 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of b gb) (ltb-of self (exp (gen) l-0))
    (ltb-of self-0 (exp (gen) l)) (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((4 1) (12 0)) ((8 1) (3 0))
    ((8 1) (10 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 13 4 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv a l-1))) (12 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l-0)))
      (stor priv-stor (cat pt-0 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) x-0) (mul (rec x-0) l-0)))
      (send (cat (exp (gen) x-0) (mul (rec x-0) l-0))))
    ((load priv-stor (cat pt (pv self l-0)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 self b (exp (gen) x-0)))))
  (label 545)
  (parent 469)
  (unrealized (10 1) (11 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (self self-0 b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (gb base)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (y-0 l x-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) x-0) (mul l (rec x-0))))
  (defstrand init 3 (na na-0) (a self-0) (b b) (gb gb)
    (priv-stor priv-stor-0) (l l-0) (x x-0))
  (precedes ((0 2) (10 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (6 0))
    ((8 1) (10 0)) ((8 1) (12 0)) ((8 2) (7 0)) ((8 2) (9 0))
    ((9 1) (0 1)) ((10 3) (0 3)) ((11 1) (10 1)) ((12 2) (11 0)))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen x y-0 x-0)
  (absent (x l) (y-0 l-0) (x-0 l-0))
  (precur (7 0) (9 0) (11 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of b gb) (ltb-of self (exp (gen) l))
    (ltb-of self-0 (exp (gen) l-0)) (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((8 1) (3 0)) ((8 1) (10 0))
    ((8 1) (12 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 13 8 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv a l-1))) (12 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) x-0) (mul l (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l (rec x-0)))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 self-0 b (exp (gen) x-0)))))
  (label 546)
  (parent 469)
  (unrealized (10 1) (11 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (self self-0 a b name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (gb base) (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (y-0 l l-0 x-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
  (defstrand init 3 (na na-0) (a a) (b b) (gb gb)
    (priv-stor priv-stor-1) (l l-1) (x x-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self a)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (10 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (6 0))
    ((8 1) (10 0)) ((8 2) (7 0)) ((8 2) (9 0)) ((9 1) (0 1))
    ((10 3) (0 3)) ((11 1) (10 1)) ((12 2) (11 0)) ((13 1) (12 0)))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen x y-0 x-0)
  (absent (x l-0) (y-0 l) (x-0 l-1))
  (precur (7 0) (9 0) (11 0))
  (gen-st (pv self l-0) (pv self-0 l) (pv a l-1))
  (facts (ltb-of a (exp (gen) l-1)) (ltb-of b gb)
    (ltb-of self (exp (gen) l-0)) (ltb-of self-0 (exp (gen) l))
    (ltx-of a l-1) (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((8 1) (3 0)) ((8 1) (10 0))
    ((13 1) (12 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv a l-1))) (12 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l-0)))
      (stor priv-stor (cat pt-0 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-0 (rec x-0)))))
    ((load priv-stor-1 (cat pt-5 (pv a l-1)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 a b (exp (gen) x-0))))
    ((load priv-stor-1 (cat pt-6 ignore-1))
      (stor priv-stor-1 (cat pt-5 (pv a l-1)))))
  (label 547)
  (parent 469)
  (unrealized (10 1) (11 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self-0) (b self)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand resp 4 (na na) (nb nb) (a self-0) (b self)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor) (l l) (y y-0))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (8 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (4 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (8 0)) ((6 2) (5 0))
    ((6 2) (7 0)) ((7 1) (0 1)) ((8 3) (0 3)) ((9 1) (8 1))
    ((10 1) (0 0)) ((10 2) (9 0)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (5 0) (7 0) (9 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self-0 (exp (gen) l-0)) (ltb-of self (exp (gen) l))
    (ltx-of self l) (ltx-of self-0 l-0))
  (leads-to ((6 1) (3 0)) ((6 1) (8 0)) ((10 1) (0 0)) ((10 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self-0 self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt "nil")) (send l-0))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (recv (cat na self-0 self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 548)
  (parent 472)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data)
    (self self-0 a name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (ga gx base)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (y-0 l y-1 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) y-1) (mul (rec y-1) l-0)))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b self) (ga ga) (gx gx)
    (priv-stor priv-stor) (l l-0) (y y-1))
  (precedes ((0 2) (10 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((4 1) (0 0)) ((4 1) (12 0)) ((5 1) (1 0)) ((6 1) (5 0))
    ((7 1) (6 0)) ((8 1) (10 0)) ((8 2) (7 0)) ((8 2) (9 0))
    ((9 1) (0 1)) ((10 3) (0 3)) ((11 1) (10 1)) ((12 3) (11 0)))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen x y-0 y-1)
  (absent (x l-0) (y-0 l) (y-1 l-0))
  (precur (7 0) (9 0) (11 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of a ga) (ltb-of self (exp (gen) l-0))
    (ltb-of self-0 (exp (gen) l)) (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((4 1) (12 0)) ((8 1) (3 0))
    ((8 1) (10 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 13 4 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv b l-1))) (12 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l-0)))
      (stor priv-stor (cat pt-0 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) y-1) (mul (rec y-1) l-0)))
      (send (cat (exp (gen) y-1) (mul (rec y-1) l-0))))
    ((load priv-stor (cat pt (pv self l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a self gx))
      (send
        (cat (exp (gen) y-1)
          (enc na-0 nb-0 a self (hash (exp ga l-0) (exp gx y-1)))))))
  (label 549)
  (parent 473)
  (unrealized (10 1) (11 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data)
    (self self-0 a name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (ga gx base)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (y-0 l y-1 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) y-1) (mul l (rec y-1))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b self-0) (ga ga) (gx gx)
    (priv-stor priv-stor-0) (l l-0) (y y-1))
  (precedes ((0 2) (10 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (6 0))
    ((8 1) (10 0)) ((8 1) (12 0)) ((8 2) (7 0)) ((8 2) (9 0))
    ((9 1) (0 1)) ((10 3) (0 3)) ((11 1) (10 1)) ((12 3) (11 0)))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen x y-0 y-1)
  (absent (x l) (y-0 l-0) (y-1 l-0))
  (precur (7 0) (9 0) (11 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of a ga) (ltb-of self (exp (gen) l))
    (ltb-of self-0 (exp (gen) l-0)) (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((8 1) (3 0)) ((8 1) (10 0))
    ((8 1) (12 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 13 8 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv b l-1))) (12 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) y-1) (mul l (rec y-1))))
      (send (cat (exp (gen) y-1) (mul l (rec y-1)))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a self-0 gx))
      (send
        (cat (exp (gen) y-1)
          (enc na-0 nb-0 a self-0 (hash (exp ga l-0) (exp gx y-1)))))))
  (label 550)
  (parent 473)
  (unrealized (10 1) (11 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (self self-0 a b name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (ga gx base) (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx)
    (y expt) (y-0 l l-0 y-1 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) y-1) (mul l-0 (rec y-1))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b) (ga ga) (gx gx)
    (priv-stor priv-stor-1) (l l-1) (y y-1))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (10 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0)) ((7 1) (6 0))
    ((8 1) (10 0)) ((8 2) (7 0)) ((8 2) (9 0)) ((9 1) (0 1))
    ((10 3) (0 3)) ((11 1) (10 1)) ((12 3) (11 0)) ((13 1) (12 0)))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen x y-0 y-1)
  (absent (x l-0) (y-0 l) (y-1 l-1))
  (precur (7 0) (9 0) (11 0))
  (gen-st (pv self l-0) (pv self-0 l) (pv b l-1))
  (facts (ltb-of b (exp (gen) l-1)) (ltb-of a ga)
    (ltb-of self (exp (gen) l-0)) (ltb-of self-0 (exp (gen) l))
    (ltx-of b l-1) (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((8 1) (3 0)) ((8 1) (10 0))
    ((13 1) (12 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv b l-1))) (12 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l-0)))
      (stor priv-stor (cat pt-0 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) y-1) (mul l-0 (rec y-1))))
      (send (cat (exp (gen) y-1) (mul l-0 (rec y-1)))))
    ((load priv-stor-1 (cat pt-5 (pv b l-1)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b gx))
      (send
        (cat (exp (gen) y-1)
          (enc na-0 nb-0 a b (hash (exp ga l-1) (exp gx y-1))))))
    ((load priv-stor-1 (cat pt-6 ignore-1))
      (stor priv-stor-1 (cat pt-5 (pv b l-1)))))
  (label 551)
  (parent 473)
  (unrealized (10 1) (11 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) l-0) (one)))
  (precedes ((0 2) (7 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (1 0))
    ((4 1) (0 0)) ((4 2) (8 0)) ((5 1) (0 1)) ((6 1) (7 0))
    ((6 2) (5 0)) ((7 3) (0 3)) ((8 1) (7 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (5 0) (8 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of self-0 (exp (gen) l))
    (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((6 1) (3 0)) ((6 1) (7 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (stor priv-stor (cat pt "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one)))))
  (label 552)
  (parent 481)
  (seen 476)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self-0) (b self)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self-0) (b self)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor) (l l) (y y-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (6 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (4 0))
    ((3 2) (1 0)) ((4 1) (1 0)) ((5 1) (6 0)) ((5 2) (0 1))
    ((6 3) (0 3)) ((7 1) (0 0)) ((7 2) (6 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (4 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self-0 (exp (gen) l-0)) (ltb-of self (exp (gen) l))
    (ltx-of self l) (ltx-of self-0 l-0))
  (leads-to ((5 1) (3 0)) ((5 1) (6 0)) ((7 1) (0 0)) ((7 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self-0 self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt "nil")) (send l-0))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (recv (cat na self-0 self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 553)
  (parent 485)
  (seen 579)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (self self-0 b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (gb base)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (y-0 l x-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) x-0) (mul (rec x-0) l-0)))
  (defstrand init 3 (na na-0) (a self) (b b) (gb gb)
    (priv-stor priv-stor) (l l-0) (x x-0))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (7 0))
    ((3 2) (6 0)) ((4 1) (0 0)) ((4 1) (11 0)) ((5 1) (1 0))
    ((6 1) (5 0)) ((7 1) (6 0)) ((8 1) (9 0)) ((8 2) (0 1))
    ((9 3) (0 3)) ((10 1) (9 1)) ((11 2) (10 0)))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen x y-0 x-0)
  (absent (x l-0) (y-0 l) (x-0 l-0))
  (precur (7 0) (10 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of b gb) (ltb-of self (exp (gen) l-0))
    (ltb-of self-0 (exp (gen) l)) (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((4 1) (11 0)) ((8 1) (3 0))
    ((8 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 12 4 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv a l-1))) (11 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l-0)))
      (stor priv-stor (cat pt-0 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) x-0) (mul (rec x-0) l-0)))
      (send (cat (exp (gen) x-0) (mul (rec x-0) l-0))))
    ((load priv-stor (cat pt (pv self l-0)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 self b (exp (gen) x-0)))))
  (label 554)
  (parent 486)
  (unrealized (9 1) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (self self-0 b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (gb base)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (y-0 l x-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (gen) l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) x-0) (mul l (rec x-0))))
  (defstrand init 3 (na na-0) (a self-0) (b b) (gb gb)
    (priv-stor priv-stor-0) (l l-0) (x x-0))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (7 0))
    ((3 2) (6 0)) ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0))
    ((7 1) (6 0)) ((8 1) (9 0)) ((8 1) (11 0)) ((8 2) (0 1))
    ((9 3) (0 3)) ((10 1) (9 1)) ((11 2) (10 0)))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen x y-0 x-0)
  (absent (x l) (y-0 l-0) (x-0 l-0))
  (precur (7 0) (10 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of b gb) (ltb-of self (exp (gen) l))
    (ltb-of self-0 (exp (gen) l-0)) (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((8 1) (3 0)) ((8 1) (9 0))
    ((8 1) (11 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 12 8 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv a l-1))) (11 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (gen) l)) (send (cat (gen) l)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) x-0) (mul l (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l (rec x-0)))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 self-0 b (exp (gen) x-0)))))
  (label 555)
  (parent 486)
  (unrealized (9 1) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (self self-0 a b name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (gb base) (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (y-0 l l-0 x-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
  (defstrand init 3 (na na-0) (a a) (b b) (gb gb)
    (priv-stor priv-stor-1) (l l-1) (x x-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self a)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (7 0))
    ((3 2) (6 0)) ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0))
    ((7 1) (6 0)) ((8 1) (9 0)) ((8 2) (0 1)) ((9 3) (0 3))
    ((10 1) (9 1)) ((11 2) (10 0)) ((12 1) (11 0)))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen x y-0 x-0)
  (absent (x l-0) (y-0 l) (x-0 l-1))
  (precur (7 0) (10 0))
  (gen-st (pv self l-0) (pv self-0 l) (pv a l-1))
  (facts (ltb-of a (exp (gen) l-1)) (ltb-of b gb)
    (ltb-of self (exp (gen) l-0)) (ltb-of self-0 (exp (gen) l))
    (ltx-of a l-1) (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((8 1) (3 0)) ((8 1) (9 0))
    ((12 1) (11 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv a l-1))) (11 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l-0)))
      (stor priv-stor (cat pt-0 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-0 (rec x-0)))))
    ((load priv-stor-1 (cat pt-5 (pv a l-1)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 a b (exp (gen) x-0))))
    ((load priv-stor-1 (cat pt-6 ignore-1))
      (stor priv-stor-1 (cat pt-5 (pv a l-1)))))
  (label 556)
  (parent 486)
  (unrealized (9 1) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self-0) (b self)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self-0) (b self)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor) (l l) (y y-0))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (7 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (5 0))
    ((3 2) (4 0)) ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (7 0))
    ((6 2) (0 1)) ((7 3) (0 3)) ((8 1) (7 1)) ((9 1) (0 0))
    ((9 2) (8 0)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (5 0) (8 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self-0 (exp (gen) l-0)) (ltb-of self (exp (gen) l))
    (ltx-of self l) (ltx-of self-0 l-0))
  (leads-to ((6 1) (3 0)) ((6 1) (7 0)) ((9 1) (0 0)) ((9 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self-0 self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt "nil")) (send l-0))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (recv (cat na self-0 self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 557)
  (parent 489)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data)
    (self self-0 a name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (ga gx base)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (y-0 l y-1 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) y-1) (mul (rec y-1) l-0)))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b self) (ga ga) (gx gx)
    (priv-stor priv-stor) (l l-0) (y y-1))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (7 0))
    ((3 2) (6 0)) ((4 1) (0 0)) ((4 1) (11 0)) ((5 1) (1 0))
    ((6 1) (5 0)) ((7 1) (6 0)) ((8 1) (9 0)) ((8 2) (0 1))
    ((9 3) (0 3)) ((10 1) (9 1)) ((11 3) (10 0)))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen x y-0 y-1)
  (absent (x l-0) (y-0 l) (y-1 l-0))
  (precur (7 0) (10 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of a ga) (ltb-of self (exp (gen) l-0))
    (ltb-of self-0 (exp (gen) l)) (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((4 1) (11 0)) ((8 1) (3 0))
    ((8 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 12 4 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv b l-1))) (11 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l-0)))
      (stor priv-stor (cat pt-0 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) y-1) (mul (rec y-1) l-0)))
      (send (cat (exp (gen) y-1) (mul (rec y-1) l-0))))
    ((load priv-stor (cat pt (pv self l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a self gx))
      (send
        (cat (exp (gen) y-1)
          (enc na-0 nb-0 a self (hash (exp ga l-0) (exp gx y-1)))))))
  (label 558)
  (parent 490)
  (unrealized (9 1) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data)
    (self self-0 a name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (ga gx base)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (y-0 l y-1 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (gen) l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) y-1) (mul l (rec y-1))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b self-0) (ga ga) (gx gx)
    (priv-stor priv-stor-0) (l l-0) (y y-1))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (7 0))
    ((3 2) (6 0)) ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0))
    ((7 1) (6 0)) ((8 1) (9 0)) ((8 1) (11 0)) ((8 2) (0 1))
    ((9 3) (0 3)) ((10 1) (9 1)) ((11 3) (10 0)))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen x y-0 y-1)
  (absent (x l) (y-0 l-0) (y-1 l-0))
  (precur (7 0) (10 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of a ga) (ltb-of self (exp (gen) l))
    (ltb-of self-0 (exp (gen) l-0)) (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((8 1) (3 0)) ((8 1) (9 0))
    ((8 1) (11 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 12 8 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv b l-1))) (11 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (gen) l)) (send (cat (gen) l)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) y-1) (mul l (rec y-1))))
      (send (cat (exp (gen) y-1) (mul l (rec y-1)))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a self-0 gx))
      (send
        (cat (exp (gen) y-1)
          (enc na-0 nb-0 a self-0 (hash (exp ga l-0) (exp gx y-1)))))))
  (label 559)
  (parent 490)
  (unrealized (9 1) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (self self-0 a b name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (ga gx base) (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx)
    (y expt) (y-0 l l-0 y-1 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) y-1) (mul l-0 (rec y-1))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b) (ga ga) (gx gx)
    (priv-stor priv-stor-1) (l l-1) (y y-1))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (7 0))
    ((3 2) (6 0)) ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0))
    ((7 1) (6 0)) ((8 1) (9 0)) ((8 2) (0 1)) ((9 3) (0 3))
    ((10 1) (9 1)) ((11 3) (10 0)) ((12 1) (11 0)))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen x y-0 y-1)
  (absent (x l-0) (y-0 l) (y-1 l-1))
  (precur (7 0) (10 0))
  (gen-st (pv self l-0) (pv self-0 l) (pv b l-1))
  (facts (ltb-of b (exp (gen) l-1)) (ltb-of a ga)
    (ltb-of self (exp (gen) l-0)) (ltb-of self-0 (exp (gen) l))
    (ltx-of b l-1) (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((8 1) (3 0)) ((8 1) (9 0))
    ((12 1) (11 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv b l-1))) (11 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l-0)))
      (stor priv-stor (cat pt-0 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) y-1) (mul l-0 (rec y-1))))
      (send (cat (exp (gen) y-1) (mul l-0 (rec y-1)))))
    ((load priv-stor-1 (cat pt-5 (pv b l-1)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b gx))
      (send
        (cat (exp (gen) y-1)
          (enc na-0 nb-0 a b (hash (exp ga l-1) (exp gx y-1))))))
    ((load priv-stor-1 (cat pt-6 ignore-1))
      (stor priv-stor-1 (cat pt-5 (pv b l-1)))))
  (label 560)
  (parent 490)
  (unrealized (9 1) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self-0) (b self)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (gen) l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self-0) (b self)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor) (l l) (y y-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (8 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (5 0))
    ((3 2) (4 0)) ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (0 1))
    ((7 1) (8 0)) ((7 2) (6 0)) ((8 3) (0 3)) ((9 1) (0 0))
    ((9 2) (8 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (5 0) (6 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self-0 (exp (gen) l-0)) (ltb-of self (exp (gen) l))
    (ltx-of self l) (ltx-of self-0 l-0))
  (leads-to ((7 1) (3 0)) ((7 1) (8 0)) ((9 1) (0 0)) ((9 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self-0 self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt "nil")) (send l-0))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (recv (cat na self-0 self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 561)
  (parent 493)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (self self-0 a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval) (gb base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (y-0 l l-0 l-1 x-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-1)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-1))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-1))
  (deflistener (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-1) l))
  (deflistener (cat (gen) l-1))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-1)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
  (defstrand init 3 (na na-0) (a a) (b b) (gb gb)
    (priv-stor priv-stor-1) (l l-0) (x x-0))
  (precedes ((0 2) (10 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (7 0))
    ((3 2) (6 0)) ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0))
    ((7 1) (6 0)) ((8 1) (0 1)) ((9 1) (10 0)) ((9 2) (8 0))
    ((10 3) (0 3)) ((11 1) (10 1)) ((12 2) (11 0)))
  (uniq-orig na nb na-0 l l-1)
  (uniq-gen x y-0 x-0)
  (absent (x l-1) (y-0 l) (x-0 l-0))
  (precur (7 0) (8 0) (11 0))
  (gen-st (pv self l-1) (pv self-0 l) (pv a l-0))
  (facts (ltb-of a (exp (gen) l-0)) (ltb-of b gb)
    (ltb-of self (exp (gen) l-1)) (ltb-of self-0 (exp (gen) l))
    (ltx-of a l-0) (ltx-of self-0 l) (ltx-of self l-1))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((9 1) (3 0)) ((9 1) (10 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    gen-st-ltx-disclose-0 ltx-ltb trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand init 3) (exp (gen) x-0) (11 0))
  (traces
    ((load priv-stor (cat pt (pv self l-1)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l-1)))
      (stor priv-stor (cat pt-0 "nil")) (send l-1))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l-1))))
    ((recv (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-1) l)) (send (cat (exp (gen) l-1) l)))
    ((recv (cat (gen) l-1)) (send (cat (gen) l-1)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-1 (rec x-0)))))
    ((load priv-stor-1 (cat pt-5 (pv a l-0)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 a b (exp (gen) x-0)))))
  (label 562)
  (parent 494)
  (unrealized (10 1) (11 0) (12 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (y expt) (y-0 l l-0 x rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y x))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (gen) l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul y (rec y-0) x)))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) x) (mul l-0 (rec x))))
  (precedes ((0 2) (11 0)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (7 0))
    ((3 2) (6 0)) ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0))
    ((7 1) (6 0)) ((8 1) (0 1)) ((9 1) (10 0)) ((9 2) (8 0))
    ((10 3) (0 3)) ((11 1) (10 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen y-0 x)
  (absent (y-0 l) (x l-0))
  (precur (7 0) (8 0) (11 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of self-0 (exp (gen) l))
    (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((9 1) (3 0)) ((9 1) (10 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 12 0 init 3) (exp (gen) x-0) (11 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x)))))
    ((load priv-stor (cat pt (pv self l-0)))
      (stor priv-stor (cat pt-0 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y x))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y x)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul y (rec y-0) x))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x)))))))
    ((recv (cat (exp (gen) x) (mul l-0 (rec x))))
      (send (cat (exp (gen) x) (mul l-0 (rec x))))))
  (label 563)
  (parent 494)
  (unrealized (10 1) (11 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (gen) l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (gen) l-0))
  (precedes ((0 2) (10 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (7 0))
    ((3 2) (6 0)) ((4 1) (0 0)) ((4 1) (11 0)) ((5 1) (1 0))
    ((6 1) (5 0)) ((7 1) (6 0)) ((8 1) (0 1)) ((9 1) (10 0))
    ((9 2) (8 0)) ((10 3) (0 3)) ((11 1) (10 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (7 0) (8 0) (11 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of self-0 (exp (gen) l))
    (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((9 1) (3 0)) ((9 1) (10 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (contracted (l-1 l-0) (w l-0)) (gen) (11 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l-0)))
      (stor priv-stor (cat pt-0 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0))))
  (label 564)
  (parent 494)
  (unrealized (11 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self-0) (b self)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (gen) l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self-0) (b self)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor) (l l) (y y-0))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((3 2) (5 0)) ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (5 0))
    ((7 1) (0 1)) ((8 1) (9 0)) ((8 2) (7 0)) ((9 3) (0 3))
    ((10 1) (9 1)) ((11 1) (0 0)) ((11 2) (10 0)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (6 0) (7 0) (10 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self-0 (exp (gen) l-0)) (ltb-of self (exp (gen) l))
    (ltx-of self l) (ltx-of self-0 l-0))
  (leads-to ((8 1) (3 0)) ((8 1) (9 0)) ((11 1) (0 0)) ((11 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 4 12 ltx-gen 3) (exp (gen) l-1)
    (11 0))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self-0 self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt "nil")) (send l-0))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (recv (cat na self-0 self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 565)
  (parent 494)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data)
    (self self-0 a b name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (ga gx base) (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx)
    (y expt) (y-0 l l-0 l-1 y-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-1)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-1))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-1))
  (deflistener (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-1) l))
  (deflistener (cat (gen) l-1))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-1)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) y-1) (mul l-1 (rec y-1))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b) (ga ga) (gx gx)
    (priv-stor priv-stor-1) (l l-0) (y y-1))
  (precedes ((0 2) (10 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (7 0))
    ((3 2) (6 0)) ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0))
    ((7 1) (6 0)) ((8 1) (0 1)) ((9 1) (10 0)) ((9 2) (8 0))
    ((10 3) (0 3)) ((11 1) (10 1)) ((12 3) (11 0)))
  (uniq-orig na nb nb-0 l l-1)
  (uniq-gen x y-0 y-1)
  (absent (x l-1) (y-0 l) (y-1 l-0))
  (precur (7 0) (8 0) (11 0))
  (gen-st (pv self l-1) (pv self-0 l) (pv b l-0))
  (facts (ltb-of b (exp (gen) l-0)) (ltb-of a ga)
    (ltb-of self (exp (gen) l-1)) (ltb-of self-0 (exp (gen) l))
    (ltx-of b l-0) (ltx-of self-0 l) (ltx-of self l-1))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((9 1) (3 0)) ((9 1) (10 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    gen-st-ltx-disclose-0 ltx-ltb trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand resp 4) (exp (gen) y-1) (11 0))
  (traces
    ((load priv-stor (cat pt (pv self l-1)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l-1)))
      (stor priv-stor (cat pt-0 "nil")) (send l-1))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l-1))))
    ((recv (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-1) l)) (send (cat (exp (gen) l-1) l)))
    ((recv (cat (gen) l-1)) (send (cat (gen) l-1)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) y-1) (mul l-1 (rec y-1))))
      (send (cat (exp (gen) y-1) (mul l-1 (rec y-1)))))
    ((load priv-stor-1 (cat pt-5 (pv b l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b gx))
      (send
        (cat (exp (gen) y-1)
          (enc na-0 nb-0 a b (hash (exp ga l-0) (exp gx y-1)))))))
  (label 566)
  (parent 494)
  (unrealized (10 1) (11 0) (12 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (gen) l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) l-0) (mul l (rec l-0))))
  (precedes ((0 2) (10 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (7 0))
    ((3 2) (6 0)) ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0))
    ((7 1) (6 0)) ((8 1) (0 1)) ((9 1) (10 0)) ((9 2) (8 0))
    ((9 2) (11 0)) ((10 3) (0 3)) ((11 1) (10 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l-0))
  (precur (7 0) (8 0) (11 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self (exp (gen) l)) (ltb-of self-0 (exp (gen) l-0))
    (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((9 1) (3 0)) ((9 1) (10 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 12 9 ltx-gen 3) (exp (gen) l-1)
    (11 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (gen) l)) (send (cat (gen) l)))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l-0) (mul l (rec l-0))))
      (send (cat (exp (gen) l-0) (mul l (rec l-0))))))
  (label 567)
  (parent 494)
  (unrealized (10 1) (11 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data)
    (self self-0 self-1 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (y-0 l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (gen) l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self-1)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (10 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (7 0))
    ((3 2) (6 0)) ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0))
    ((7 1) (6 0)) ((8 1) (0 1)) ((9 1) (10 0)) ((9 2) (8 0))
    ((10 3) (0 3)) ((11 1) (10 1)) ((12 2) (11 0)))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (7 0) (8 0) (11 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of self-1 (exp (gen) l-1)) (ltb-of self (exp (gen) l-0))
    (ltb-of self-0 (exp (gen) l)) (ltx-of self-1 l-1) (ltx-of self-0 l)
    (ltx-of self l-0))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((9 1) (3 0)) ((9 1) (10 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-ltx-gen-ltx-of0 fact-resp-ltb-of0
    ltx-ltb trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 3) (exp (gen) l-1) (11 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l-0)))
      (stor priv-stor (cat pt-0 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
      (send (cat (exp (gen) l-1) (mul l-0 (rec l-1)))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self-1 l-1)))
      (send
        (sig (body self-1 (exp (gen) l-1) (pubk "sig" self-1))
          (privk "sig" self-1)))))
  (label 568)
  (parent 494)
  (unrealized (10 1) (11 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) l-0) (one)))
  (precedes ((0 2) (7 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (1 0))
    ((4 1) (1 0)) ((5 1) (0 0)) ((5 2) (4 0)) ((5 2) (8 0))
    ((6 1) (7 0)) ((6 2) (0 1)) ((7 3) (0 3)) ((8 1) (7 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (4 0) (8 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of self-0 (exp (gen) l))
    (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((5 1) (0 0)) ((5 1) (2 0)) ((6 1) (3 0)) ((6 1) (7 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (stor priv-stor (cat pt "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one)))))
  (label 569)
  (parent 501)
  (seen 476)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (precedes ((0 2) (8 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (1 0))
    ((4 1) (1 0)) ((5 1) (0 0)) ((5 2) (4 0)) ((5 2) (8 1))
    ((6 1) (0 1)) ((7 1) (8 0)) ((7 2) (6 0)) ((8 3) (0 3)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (4 0) (6 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of self-0 (exp (gen) l))
    (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((5 1) (0 0)) ((5 1) (2 0)) ((7 1) (3 0)) ((7 1) (8 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (stor priv-stor (cat pt "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))))
  (label 570)
  (parent 505)
  (seen 477)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (self self-0 b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (gb base)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (y-0 l x-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) x-0) (mul (rec x-0) l-0)))
  (defstrand init 3 (na na-0) (a self) (b b) (gb gb)
    (priv-stor priv-stor) (l l-0) (x x-0))
  (precedes ((0 2) (10 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (5 0)) ((7 1) (0 0))
    ((7 1) (12 0)) ((7 2) (6 0)) ((8 1) (0 1)) ((9 1) (10 0))
    ((9 2) (8 0)) ((10 3) (0 3)) ((11 1) (10 1)) ((12 2) (11 0)))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen x y-0 x-0)
  (absent (x l-0) (y-0 l) (x-0 l-0))
  (precur (6 0) (8 0) (11 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of b gb) (ltb-of self (exp (gen) l-0))
    (ltb-of self-0 (exp (gen) l)) (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((7 1) (0 0)) ((7 1) (2 0)) ((7 1) (12 0)) ((9 1) (3 0))
    ((9 1) (10 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 13 7 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv a l-1))) (12 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (stor priv-stor (cat pt "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) x-0) (mul (rec x-0) l-0)))
      (send (cat (exp (gen) x-0) (mul (rec x-0) l-0))))
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 self b (exp (gen) x-0)))))
  (label 571)
  (parent 506)
  (unrealized (10 1) (11 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (self self-0 b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (gb base)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (y-0 l x-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) x-0) (mul l (rec x-0))))
  (defstrand init 3 (na na-0) (a self-0) (b b) (gb gb)
    (priv-stor priv-stor-0) (l l-0) (x x-0))
  (precedes ((0 2) (10 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (5 0)) ((7 1) (0 0))
    ((7 2) (6 0)) ((8 1) (0 1)) ((9 1) (10 0)) ((9 1) (12 0))
    ((9 2) (8 0)) ((10 3) (0 3)) ((11 1) (10 1)) ((12 2) (11 0)))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen x y-0 x-0)
  (absent (x l) (y-0 l-0) (x-0 l-0))
  (precur (6 0) (8 0) (11 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of b gb) (ltb-of self (exp (gen) l))
    (ltb-of self-0 (exp (gen) l-0)) (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((7 1) (0 0)) ((7 1) (2 0)) ((9 1) (3 0)) ((9 1) (10 0))
    ((9 1) (12 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 13 9 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv a l-1))) (12 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) x-0) (mul l (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l (rec x-0)))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 self-0 b (exp (gen) x-0)))))
  (label 572)
  (parent 506)
  (unrealized (10 1) (11 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (self self-0 a b name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (gb base) (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (y-0 l l-0 x-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
  (defstrand init 3 (na na-0) (a a) (b b) (gb gb)
    (priv-stor priv-stor-1) (l l-1) (x x-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self a)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (10 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (5 0)) ((7 1) (0 0))
    ((7 2) (6 0)) ((8 1) (0 1)) ((9 1) (10 0)) ((9 2) (8 0))
    ((10 3) (0 3)) ((11 1) (10 1)) ((12 2) (11 0)) ((13 1) (12 0)))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen x y-0 x-0)
  (absent (x l-0) (y-0 l) (x-0 l-1))
  (precur (6 0) (8 0) (11 0))
  (gen-st (pv self l-0) (pv self-0 l) (pv a l-1))
  (facts (ltb-of a (exp (gen) l-1)) (ltb-of b gb)
    (ltb-of self (exp (gen) l-0)) (ltb-of self-0 (exp (gen) l))
    (ltx-of a l-1) (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((7 1) (0 0)) ((7 1) (2 0)) ((9 1) (3 0)) ((9 1) (10 0))
    ((13 1) (12 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv a l-1))) (12 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (stor priv-stor (cat pt "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-0 (rec x-0)))))
    ((load priv-stor-1 (cat pt-5 (pv a l-1)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 a b (exp (gen) x-0))))
    ((load priv-stor-1 (cat pt-6 ignore-1))
      (stor priv-stor-1 (cat pt-5 (pv a l-1)))))
  (label 573)
  (parent 506)
  (unrealized (10 1) (11 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) l-0) (one)))
  (precedes ((0 2) (9 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (4 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (0 0)) ((6 2) (5 0))
    ((6 2) (10 0)) ((7 1) (0 1)) ((8 1) (9 0)) ((8 2) (7 0))
    ((9 3) (0 3)) ((10 1) (9 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (5 0) (7 0) (10 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of self-0 (exp (gen) l))
    (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((6 1) (0 0)) ((6 1) (2 0)) ((8 1) (3 0)) ((8 1) (9 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (stor priv-stor (cat pt "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one)))))
  (label 574)
  (parent 509)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data)
    (self self-0 a name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (ga gx base)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (y-0 l y-1 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) y-1) (mul (rec y-1) l-0)))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b self) (ga ga) (gx gx)
    (priv-stor priv-stor) (l l-0) (y y-1))
  (precedes ((0 2) (10 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (5 0)) ((7 1) (0 0))
    ((7 1) (12 0)) ((7 2) (6 0)) ((8 1) (0 1)) ((9 1) (10 0))
    ((9 2) (8 0)) ((10 3) (0 3)) ((11 1) (10 1)) ((12 3) (11 0)))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen x y-0 y-1)
  (absent (x l-0) (y-0 l) (y-1 l-0))
  (precur (6 0) (8 0) (11 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of a ga) (ltb-of self (exp (gen) l-0))
    (ltb-of self-0 (exp (gen) l)) (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((7 1) (0 0)) ((7 1) (2 0)) ((7 1) (12 0)) ((9 1) (3 0))
    ((9 1) (10 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 13 7 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv b l-1))) (12 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (stor priv-stor (cat pt "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) y-1) (mul (rec y-1) l-0)))
      (send (cat (exp (gen) y-1) (mul (rec y-1) l-0))))
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a self gx))
      (send
        (cat (exp (gen) y-1)
          (enc na-0 nb-0 a self (hash (exp ga l-0) (exp gx y-1)))))))
  (label 575)
  (parent 510)
  (unrealized (10 1) (11 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data)
    (self self-0 a name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (ga gx base)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (y-0 l y-1 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) y-1) (mul l (rec y-1))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b self-0) (ga ga) (gx gx)
    (priv-stor priv-stor-0) (l l-0) (y y-1))
  (precedes ((0 2) (10 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (5 0)) ((7 1) (0 0))
    ((7 2) (6 0)) ((8 1) (0 1)) ((9 1) (10 0)) ((9 1) (12 0))
    ((9 2) (8 0)) ((10 3) (0 3)) ((11 1) (10 1)) ((12 3) (11 0)))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen x y-0 y-1)
  (absent (x l) (y-0 l-0) (y-1 l-0))
  (precur (6 0) (8 0) (11 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of a ga) (ltb-of self (exp (gen) l))
    (ltb-of self-0 (exp (gen) l-0)) (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((7 1) (0 0)) ((7 1) (2 0)) ((9 1) (3 0)) ((9 1) (10 0))
    ((9 1) (12 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 13 9 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv b l-1))) (12 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) y-1) (mul l (rec y-1))))
      (send (cat (exp (gen) y-1) (mul l (rec y-1)))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a self-0 gx))
      (send
        (cat (exp (gen) y-1)
          (enc na-0 nb-0 a self-0 (hash (exp ga l-0) (exp gx y-1)))))))
  (label 576)
  (parent 510)
  (unrealized (10 1) (11 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (self self-0 a b name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (ga gx base) (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx)
    (y expt) (y-0 l l-0 y-1 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) y-1) (mul l-0 (rec y-1))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b) (ga ga) (gx gx)
    (priv-stor priv-stor-1) (l l-1) (y y-1))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (10 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (5 0))
    ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (5 0)) ((7 1) (0 0))
    ((7 2) (6 0)) ((8 1) (0 1)) ((9 1) (10 0)) ((9 2) (8 0))
    ((10 3) (0 3)) ((11 1) (10 1)) ((12 3) (11 0)) ((13 1) (12 0)))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen x y-0 y-1)
  (absent (x l-0) (y-0 l) (y-1 l-1))
  (precur (6 0) (8 0) (11 0))
  (gen-st (pv self l-0) (pv self-0 l) (pv b l-1))
  (facts (ltb-of b (exp (gen) l-1)) (ltb-of a ga)
    (ltb-of self (exp (gen) l-0)) (ltb-of self-0 (exp (gen) l))
    (ltx-of b l-1) (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((7 1) (0 0)) ((7 1) (2 0)) ((9 1) (3 0)) ((9 1) (10 0))
    ((13 1) (12 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv b l-1))) (12 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (stor priv-stor (cat pt "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) y-1) (mul l-0 (rec y-1))))
      (send (cat (exp (gen) y-1) (mul l-0 (rec y-1)))))
    ((load priv-stor-1 (cat pt-5 (pv b l-1)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b gx))
      (send
        (cat (exp (gen) y-1)
          (enc na-0 nb-0 a b (hash (exp ga l-1) (exp gx y-1))))))
    ((load priv-stor-1 (cat pt-6 ignore-1))
      (stor priv-stor-1 (cat pt-5 (pv b l-1)))))
  (label 577)
  (parent 510)
  (unrealized (10 1) (11 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (self name) (pt pt-0 pt-1 pval)
    (priv-stor locn) (x rndx) (y expt) (y-0 l rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor) (l l) (x x))
  (deflistener (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener l)
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self) (ga (exp (gen) l))
    (gx (exp (gen) (mul x y (rec y-0)))) (priv-stor priv-stor) (l l)
    (y y-0))
  (deflistener (cat (exp (gen) l) (one)))
  (precedes ((0 2) (6 2)) ((0 4) (2 0)) ((2 2) (3 0)) ((3 1) (1 0))
    ((4 1) (0 1)) ((5 1) (0 0)) ((5 1) (6 0)) ((5 2) (4 0))
    ((5 2) (7 0)) ((6 3) (0 3)) ((7 1) (6 1)))
  (uniq-orig na nb l)
  (uniq-gen x y-0)
  (absent (x l) (y-0 l))
  (precur (4 0) (7 0))
  (gen-st (pv self l))
  (facts (ltb-of self (exp (gen) l)) (ltx-of self l))
  (leads-to ((5 1) (0 0)) ((5 1) (2 0)) ((5 1) (6 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (stor priv-stor (cat pt "nil")) (send l)) ((recv l) (send l))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt-1 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-1 (pv self l)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self
            (hash (exp (gen) (mul l l)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one)))))
  (label 578)
  (parent 519)
  (seen 525)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self-0) (b self)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self-0) (b self)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor) (l l) (y y-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (5 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (1 0))
    ((3 2) (1 0)) ((4 1) (5 0)) ((4 2) (0 1)) ((5 3) (0 3))
    ((6 1) (0 0)) ((6 2) (5 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self-0 (exp (gen) l-0)) (ltb-of self (exp (gen) l))
    (ltx-of self l) (ltx-of self-0 l-0))
  (leads-to ((4 1) (3 0)) ((4 1) (5 0)) ((6 1) (0 0)) ((6 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self-0 self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt "nil")) (send l-0))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (recv (cat na self-0 self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 579)
  (parent 527)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self-0) (b self)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (gen) l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self-0) (b self)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor) (l l) (y y-0))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (6 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (1 0))
    ((3 2) (4 0)) ((4 1) (1 0)) ((5 1) (6 0)) ((5 2) (0 1))
    ((6 3) (0 3)) ((7 1) (6 1)) ((8 1) (0 0)) ((8 2) (7 0)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (4 0) (7 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self-0 (exp (gen) l-0)) (ltb-of self (exp (gen) l))
    (ltx-of self l) (ltx-of self-0 l-0))
  (leads-to ((5 1) (3 0)) ((5 1) (6 0)) ((8 1) (0 0)) ((8 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self-0 self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt "nil")) (send l-0))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((recv (cat (gen) l)) (send (cat (gen) l)))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (recv (cat na self-0 self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 580)
  (parent 531)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self-0) (b self)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (gen) l))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self-0) (b self)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor) (l l) (y y-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (7 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (1 0))
    ((3 2) (4 0)) ((4 1) (1 0)) ((5 1) (0 1)) ((6 1) (7 0))
    ((6 2) (5 0)) ((7 3) (0 3)) ((8 1) (0 0)) ((8 2) (7 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (4 0) (5 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self-0 (exp (gen) l-0)) (ltb-of self (exp (gen) l))
    (ltx-of self l) (ltx-of self-0 l-0))
  (leads-to ((6 1) (3 0)) ((6 1) (7 0)) ((8 1) (0 0)) ((8 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self-0 self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt "nil")) (send l-0))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((recv (cat (gen) l)) (send (cat (gen) l)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (recv (cat na self-0 self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 581)
  (parent 535)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (self self-0 b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (gb base)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (y-0 l x-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (gen) l))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) x-0) (mul (rec x-0) l-0)))
  (defstrand init 3 (na na-0) (a self) (b b) (gb gb)
    (priv-stor priv-stor) (l l-0) (x x-0))
  (precedes ((0 2) (10 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((3 2) (7 0)) ((4 1) (0 0)) ((4 1) (12 0)) ((5 1) (1 0))
    ((6 1) (5 0)) ((7 1) (6 0)) ((8 1) (0 1)) ((9 1) (10 0))
    ((9 2) (8 0)) ((10 3) (0 3)) ((11 1) (10 1)) ((12 2) (11 0)))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen x y-0 x-0)
  (absent (x l-0) (y-0 l) (x-0 l-0))
  (precur (7 0) (8 0) (11 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of b gb) (ltb-of self (exp (gen) l-0))
    (ltb-of self-0 (exp (gen) l)) (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((4 1) (12 0)) ((9 1) (3 0))
    ((9 1) (10 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 13 4 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv a l-1))) (12 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l-0)))
      (stor priv-stor (cat pt-0 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (gen) l)) (send (cat (gen) l)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) x-0) (mul (rec x-0) l-0)))
      (send (cat (exp (gen) x-0) (mul (rec x-0) l-0))))
    ((load priv-stor (cat pt (pv self l-0)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 self b (exp (gen) x-0)))))
  (label 582)
  (parent 536)
  (unrealized (10 1) (11 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (self self-0 b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (gb base)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (y-0 l x-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (gen) l-0))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) x-0) (mul l (rec x-0))))
  (defstrand init 3 (na na-0) (a self-0) (b b) (gb gb)
    (priv-stor priv-stor-0) (l l-0) (x x-0))
  (precedes ((0 2) (10 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((3 2) (7 0)) ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0))
    ((7 1) (6 0)) ((8 1) (0 1)) ((9 1) (10 0)) ((9 1) (12 0))
    ((9 2) (8 0)) ((10 3) (0 3)) ((11 1) (10 1)) ((12 2) (11 0)))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen x y-0 x-0)
  (absent (x l) (y-0 l-0) (x-0 l-0))
  (precur (7 0) (8 0) (11 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of b gb) (ltb-of self (exp (gen) l))
    (ltb-of self-0 (exp (gen) l-0)) (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((9 1) (3 0)) ((9 1) (10 0))
    ((9 1) (12 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 13 9 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv a l-1))) (12 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) x-0) (mul l (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l (rec x-0)))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 self-0 b (exp (gen) x-0)))))
  (label 583)
  (parent 536)
  (unrealized (10 1) (11 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (self self-0 a b name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (gb base) (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (y-0 l l-0 x-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (gen) l))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
  (defstrand init 3 (na na-0) (a a) (b b) (gb gb)
    (priv-stor priv-stor-1) (l l-1) (x x-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self a)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (10 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((3 2) (7 0)) ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0))
    ((7 1) (6 0)) ((8 1) (0 1)) ((9 1) (10 0)) ((9 2) (8 0))
    ((10 3) (0 3)) ((11 1) (10 1)) ((12 2) (11 0)) ((13 1) (12 0)))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen x y-0 x-0)
  (absent (x l-0) (y-0 l) (x-0 l-1))
  (precur (7 0) (8 0) (11 0))
  (gen-st (pv self l-0) (pv self-0 l) (pv a l-1))
  (facts (ltb-of a (exp (gen) l-1)) (ltb-of b gb)
    (ltb-of self (exp (gen) l-0)) (ltb-of self-0 (exp (gen) l))
    (ltx-of a l-1) (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((9 1) (3 0)) ((9 1) (10 0))
    ((13 1) (12 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv a l-1))) (12 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l-0)))
      (stor priv-stor (cat pt-0 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (gen) l)) (send (cat (gen) l)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-0 (rec x-0)))))
    ((load priv-stor-1 (cat pt-5 (pv a l-1)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 a b (exp (gen) x-0))))
    ((load priv-stor-1 (cat pt-6 ignore-1))
      (stor priv-stor-1 (cat pt-5 (pv a l-1)))))
  (label 584)
  (parent 536)
  (unrealized (10 1) (11 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self-0) (b self)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (gen) l))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self-0) (b self)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor) (l l) (y y-0))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (8 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (4 0))
    ((3 2) (5 0)) ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (0 1))
    ((7 1) (8 0)) ((7 2) (6 0)) ((8 3) (0 3)) ((9 1) (8 1))
    ((10 1) (0 0)) ((10 2) (9 0)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (5 0) (6 0) (9 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self-0 (exp (gen) l-0)) (ltb-of self (exp (gen) l))
    (ltx-of self l) (ltx-of self-0 l-0))
  (leads-to ((7 1) (3 0)) ((7 1) (8 0)) ((10 1) (0 0)) ((10 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self-0 self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt "nil")) (send l-0))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (gen) l)) (send (cat (gen) l)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (recv (cat na self-0 self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 585)
  (parent 539)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data)
    (self self-0 a name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (ga gx base)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (y-0 l y-1 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (gen) l))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) y-1) (mul (rec y-1) l-0)))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b self) (ga ga) (gx gx)
    (priv-stor priv-stor) (l l-0) (y y-1))
  (precedes ((0 2) (10 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((3 2) (7 0)) ((4 1) (0 0)) ((4 1) (12 0)) ((5 1) (1 0))
    ((6 1) (5 0)) ((7 1) (6 0)) ((8 1) (0 1)) ((9 1) (10 0))
    ((9 2) (8 0)) ((10 3) (0 3)) ((11 1) (10 1)) ((12 3) (11 0)))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen x y-0 y-1)
  (absent (x l-0) (y-0 l) (y-1 l-0))
  (precur (7 0) (8 0) (11 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of a ga) (ltb-of self (exp (gen) l-0))
    (ltb-of self-0 (exp (gen) l)) (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((4 1) (12 0)) ((9 1) (3 0))
    ((9 1) (10 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 13 4 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv b l-1))) (12 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l-0)))
      (stor priv-stor (cat pt-0 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (gen) l)) (send (cat (gen) l)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) y-1) (mul (rec y-1) l-0)))
      (send (cat (exp (gen) y-1) (mul (rec y-1) l-0))))
    ((load priv-stor (cat pt (pv self l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a self gx))
      (send
        (cat (exp (gen) y-1)
          (enc na-0 nb-0 a self (hash (exp ga l-0) (exp gx y-1)))))))
  (label 586)
  (parent 540)
  (unrealized (10 1) (11 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data)
    (self self-0 a name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (ga gx base)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (y-0 l y-1 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (gen) l-0))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) y-1) (mul l (rec y-1))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b self-0) (ga ga) (gx gx)
    (priv-stor priv-stor-0) (l l-0) (y y-1))
  (precedes ((0 2) (10 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((3 2) (7 0)) ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0))
    ((7 1) (6 0)) ((8 1) (0 1)) ((9 1) (10 0)) ((9 1) (12 0))
    ((9 2) (8 0)) ((10 3) (0 3)) ((11 1) (10 1)) ((12 3) (11 0)))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen x y-0 y-1)
  (absent (x l) (y-0 l-0) (y-1 l-0))
  (precur (7 0) (8 0) (11 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of a ga) (ltb-of self (exp (gen) l))
    (ltb-of self-0 (exp (gen) l-0)) (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((9 1) (3 0)) ((9 1) (10 0))
    ((9 1) (12 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 13 9 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv b l-1))) (12 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) y-1) (mul l (rec y-1))))
      (send (cat (exp (gen) y-1) (mul l (rec y-1)))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a self-0 gx))
      (send
        (cat (exp (gen) y-1)
          (enc na-0 nb-0 a self-0 (hash (exp ga l-0) (exp gx y-1)))))))
  (label 587)
  (parent 540)
  (unrealized (10 1) (11 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (self self-0 a b name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (ga gx base) (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx)
    (y expt) (y-0 l l-0 y-1 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (gen) l))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) y-1) (mul l-0 (rec y-1))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b) (ga ga) (gx gx)
    (priv-stor priv-stor-1) (l l-1) (y y-1))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (10 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (6 0))
    ((3 2) (7 0)) ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0))
    ((7 1) (6 0)) ((8 1) (0 1)) ((9 1) (10 0)) ((9 2) (8 0))
    ((10 3) (0 3)) ((11 1) (10 1)) ((12 3) (11 0)) ((13 1) (12 0)))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen x y-0 y-1)
  (absent (x l-0) (y-0 l) (y-1 l-1))
  (precur (7 0) (8 0) (11 0))
  (gen-st (pv self l-0) (pv self-0 l) (pv b l-1))
  (facts (ltb-of b (exp (gen) l-1)) (ltb-of a ga)
    (ltb-of self (exp (gen) l-0)) (ltb-of self-0 (exp (gen) l))
    (ltx-of b l-1) (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((9 1) (3 0)) ((9 1) (10 0))
    ((13 1) (12 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv b l-1))) (12 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l-0)))
      (stor priv-stor (cat pt-0 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (gen) l)) (send (cat (gen) l)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) y-1) (mul l-0 (rec y-1))))
      (send (cat (exp (gen) y-1) (mul l-0 (rec y-1)))))
    ((load priv-stor-1 (cat pt-5 (pv b l-1)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b gx))
      (send
        (cat (exp (gen) y-1)
          (enc na-0 nb-0 a b (hash (exp ga l-1) (exp gx y-1))))))
    ((load priv-stor-1 (cat pt-6 ignore-1))
      (stor priv-stor-1 (cat pt-5 (pv b l-1)))))
  (label 588)
  (parent 540)
  (unrealized (10 1) (11 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self-0) (b self)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand resp 4 (na na) (nb nb) (a self-0) (b self)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor) (l l) (y y-0))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (7 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (1 0))
    ((4 1) (1 0)) ((5 1) (7 0)) ((5 2) (4 0)) ((5 2) (6 0))
    ((6 1) (0 1)) ((7 3) (0 3)) ((8 1) (7 1)) ((9 1) (0 0))
    ((9 2) (8 0)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (4 0) (6 0) (8 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self-0 (exp (gen) l-0)) (ltb-of self (exp (gen) l))
    (ltx-of self l) (ltx-of self-0 l-0))
  (leads-to ((5 1) (3 0)) ((5 1) (7 0)) ((9 1) (0 0)) ((9 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self-0 self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt "nil")) (send l-0))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (recv (cat na self-0 self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 589)
  (parent 548)
  (seen 526)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self-0) (b self)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self-0) (b self)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor) (l l) (y y-0))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (6 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (4 0))
    ((3 2) (1 0)) ((4 1) (1 0)) ((5 1) (6 0)) ((5 2) (0 1))
    ((6 3) (0 3)) ((7 1) (6 1)) ((8 1) (0 0)) ((8 2) (7 0)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (4 0) (7 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self-0 (exp (gen) l-0)) (ltb-of self (exp (gen) l))
    (ltx-of self l) (ltx-of self-0 l-0))
  (leads-to ((5 1) (3 0)) ((5 1) (6 0)) ((8 1) (0 0)) ((8 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self-0 self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt "nil")) (send l-0))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (recv (cat na self-0 self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 590)
  (parent 557)
  (seen 601)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self-0) (b self)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (gen) l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self-0) (b self)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor) (l l) (y y-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (7 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (4 0))
    ((3 2) (1 0)) ((4 1) (1 0)) ((5 1) (0 1)) ((6 1) (7 0))
    ((6 2) (5 0)) ((7 3) (0 3)) ((8 1) (0 0)) ((8 2) (7 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (4 0) (5 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self-0 (exp (gen) l-0)) (ltb-of self (exp (gen) l))
    (ltx-of self l) (ltx-of self-0 l-0))
  (leads-to ((6 1) (3 0)) ((6 1) (7 0)) ((8 1) (0 0)) ((8 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self-0 self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt "nil")) (send l-0))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (recv (cat na self-0 self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 591)
  (parent 561)
  (seen 602)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (self self-0 b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (gb base)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (y-0 l x-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (gen) l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) x-0) (mul (rec x-0) l-0)))
  (defstrand init 3 (na na-0) (a self) (b b) (gb gb)
    (priv-stor priv-stor) (l l-0) (x x-0))
  (precedes ((0 2) (10 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (7 0))
    ((3 2) (6 0)) ((4 1) (0 0)) ((4 1) (12 0)) ((5 1) (1 0))
    ((6 1) (5 0)) ((7 1) (6 0)) ((8 1) (0 1)) ((9 1) (10 0))
    ((9 2) (8 0)) ((10 3) (0 3)) ((11 1) (10 1)) ((12 2) (11 0)))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen x y-0 x-0)
  (absent (x l-0) (y-0 l) (x-0 l-0))
  (precur (7 0) (8 0) (11 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of b gb) (ltb-of self (exp (gen) l-0))
    (ltb-of self-0 (exp (gen) l)) (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((4 1) (12 0)) ((9 1) (3 0))
    ((9 1) (10 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 13 4 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv a l-1))) (12 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l-0)))
      (stor priv-stor (cat pt-0 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) x-0) (mul (rec x-0) l-0)))
      (send (cat (exp (gen) x-0) (mul (rec x-0) l-0))))
    ((load priv-stor (cat pt (pv self l-0)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 self b (exp (gen) x-0)))))
  (label 592)
  (parent 562)
  (unrealized (10 1) (11 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (self self-0 b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (gb base)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (y-0 l x-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (gen) l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) x-0) (mul l (rec x-0))))
  (defstrand init 3 (na na-0) (a self-0) (b b) (gb gb)
    (priv-stor priv-stor-0) (l l-0) (x x-0))
  (precedes ((0 2) (10 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (7 0))
    ((3 2) (6 0)) ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0))
    ((7 1) (6 0)) ((8 1) (0 1)) ((9 1) (10 0)) ((9 1) (12 0))
    ((9 2) (8 0)) ((10 3) (0 3)) ((11 1) (10 1)) ((12 2) (11 0)))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen x y-0 x-0)
  (absent (x l) (y-0 l-0) (x-0 l-0))
  (precur (7 0) (8 0) (11 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of b gb) (ltb-of self (exp (gen) l))
    (ltb-of self-0 (exp (gen) l-0)) (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((9 1) (3 0)) ((9 1) (10 0))
    ((9 1) (12 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 13 9 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv a l-1))) (12 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (gen) l)) (send (cat (gen) l)))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) x-0) (mul l (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l (rec x-0)))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 self-0 b (exp (gen) x-0)))))
  (label 593)
  (parent 562)
  (unrealized (10 1) (11 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (self self-0 a b name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (gb base) (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (y expt)
    (y-0 l l-0 x-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (gen) l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
  (defstrand init 3 (na na-0) (a a) (b b) (gb gb)
    (priv-stor priv-stor-1) (l l-1) (x x-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self a)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (10 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (7 0))
    ((3 2) (6 0)) ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0))
    ((7 1) (6 0)) ((8 1) (0 1)) ((9 1) (10 0)) ((9 2) (8 0))
    ((10 3) (0 3)) ((11 1) (10 1)) ((12 2) (11 0)) ((13 1) (12 0)))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen x y-0 x-0)
  (absent (x l-0) (y-0 l) (x-0 l-1))
  (precur (7 0) (8 0) (11 0))
  (gen-st (pv self l-0) (pv self-0 l) (pv a l-1))
  (facts (ltb-of a (exp (gen) l-1)) (ltb-of b gb)
    (ltb-of self (exp (gen) l-0)) (ltb-of self-0 (exp (gen) l))
    (ltx-of a l-1) (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((9 1) (3 0)) ((9 1) (10 0))
    ((13 1) (12 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv a l-1))) (12 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l-0)))
      (stor priv-stor (cat pt-0 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-0 (rec x-0)))))
    ((load priv-stor-1 (cat pt-5 (pv a l-1)))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na-0 a b (exp (gen) x-0))))
    ((load priv-stor-1 (cat pt-6 ignore-1))
      (stor priv-stor-1 (cat pt-5 (pv a l-1)))))
  (label 594)
  (parent 562)
  (unrealized (10 1) (11 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self-0) (b self)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (gen) l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self-0) (b self)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor) (l l) (y y-0))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (8 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (5 0))
    ((3 2) (4 0)) ((4 1) (1 0)) ((5 1) (4 0)) ((6 1) (0 1))
    ((7 1) (8 0)) ((7 2) (6 0)) ((8 3) (0 3)) ((9 1) (8 1))
    ((10 1) (0 0)) ((10 2) (9 0)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (5 0) (6 0) (9 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self-0 (exp (gen) l-0)) (ltb-of self (exp (gen) l))
    (ltx-of self l) (ltx-of self-0 l-0))
  (leads-to ((7 1) (3 0)) ((7 1) (8 0)) ((10 1) (0 0)) ((10 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self-0 self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt "nil")) (send l-0))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (recv (cat na self-0 self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 595)
  (parent 565)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data)
    (self self-0 a name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (ga gx base)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (y-0 l y-1 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (gen) l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) y-1) (mul (rec y-1) l-0)))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b self) (ga ga) (gx gx)
    (priv-stor priv-stor) (l l-0) (y y-1))
  (precedes ((0 2) (10 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (7 0))
    ((3 2) (6 0)) ((4 1) (0 0)) ((4 1) (12 0)) ((5 1) (1 0))
    ((6 1) (5 0)) ((7 1) (6 0)) ((8 1) (0 1)) ((9 1) (10 0))
    ((9 2) (8 0)) ((10 3) (0 3)) ((11 1) (10 1)) ((12 3) (11 0)))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen x y-0 y-1)
  (absent (x l-0) (y-0 l) (y-1 l-0))
  (precur (7 0) (8 0) (11 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of a ga) (ltb-of self (exp (gen) l-0))
    (ltb-of self-0 (exp (gen) l)) (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((4 1) (12 0)) ((9 1) (3 0))
    ((9 1) (10 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 13 4 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv b l-1))) (12 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l-0)))
      (stor priv-stor (cat pt-0 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) y-1) (mul (rec y-1) l-0)))
      (send (cat (exp (gen) y-1) (mul (rec y-1) l-0))))
    ((load priv-stor (cat pt (pv self l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a self gx))
      (send
        (cat (exp (gen) y-1)
          (enc na-0 nb-0 a self (hash (exp ga l-0) (exp gx y-1)))))))
  (label 596)
  (parent 566)
  (unrealized (10 1) (11 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data)
    (self self-0 a name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (ga gx base)
    (priv-stor priv-stor-0 locn) (x rndx) (y expt) (y-0 l y-1 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l-0)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (gen) l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) y-1) (mul l (rec y-1))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b self-0) (ga ga) (gx gx)
    (priv-stor priv-stor-0) (l l-0) (y y-1))
  (precedes ((0 2) (10 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (7 0))
    ((3 2) (6 0)) ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0))
    ((7 1) (6 0)) ((8 1) (0 1)) ((9 1) (10 0)) ((9 1) (12 0))
    ((9 2) (8 0)) ((10 3) (0 3)) ((11 1) (10 1)) ((12 3) (11 0)))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen x y-0 y-1)
  (absent (x l) (y-0 l-0) (y-1 l-0))
  (precur (7 0) (8 0) (11 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of a ga) (ltb-of self (exp (gen) l))
    (ltb-of self-0 (exp (gen) l-0)) (ltx-of self-0 l-0) (ltx-of self l))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((9 1) (3 0)) ((9 1) (10 0))
    ((9 1) (12 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 13 9 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv b l-1))) (12 0))
  (traces
    ((load priv-stor (cat pt (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (gen) l)) (send (cat (gen) l)))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) y-1) (mul l (rec y-1))))
      (send (cat (exp (gen) y-1) (mul l (rec y-1)))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a self-0 gx))
      (send
        (cat (exp (gen) y-1)
          (enc na-0 nb-0 a self-0 (hash (exp ga l-0) (exp gx y-1)))))))
  (label 597)
  (parent 566)
  (unrealized (10 1) (11 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (self self-0 a b name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (ga gx base) (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx)
    (y expt) (y-0 l l-0 y-1 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (deflistener (cat (exp (gen) l-0) l))
  (deflistener (cat (gen) l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) y-1) (mul l-0 (rec y-1))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b) (ga ga) (gx gx)
    (priv-stor priv-stor-1) (l l-1) (y y-1))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (10 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (7 0))
    ((3 2) (6 0)) ((4 1) (0 0)) ((5 1) (1 0)) ((6 1) (5 0))
    ((7 1) (6 0)) ((8 1) (0 1)) ((9 1) (10 0)) ((9 2) (8 0))
    ((10 3) (0 3)) ((11 1) (10 1)) ((12 3) (11 0)) ((13 1) (12 0)))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen x y-0 y-1)
  (absent (x l-0) (y-0 l) (y-1 l-1))
  (precur (7 0) (8 0) (11 0))
  (gen-st (pv self l-0) (pv self-0 l) (pv b l-1))
  (facts (ltb-of b (exp (gen) l-1)) (ltb-of a ga)
    (ltb-of self (exp (gen) l-0)) (ltb-of self-0 (exp (gen) l))
    (ltx-of b l-1) (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((4 1) (0 0)) ((4 1) (2 0)) ((9 1) (3 0)) ((9 1) (10 0))
    ((13 1) (12 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0 ltx-ltb
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-5 (pv b l-1))) (12 0))
  (traces
    ((load priv-stor (cat pt (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt (pv self l-0)))
      (stor priv-stor (cat pt-0 "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l))
    ((load priv-stor (cat pt-2 ignore))
      (stor priv-stor (cat pt (pv self l-0))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) y-1) (mul l-0 (rec y-1))))
      (send (cat (exp (gen) y-1) (mul l-0 (rec y-1)))))
    ((load priv-stor-1 (cat pt-5 (pv b l-1)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b gx))
      (send
        (cat (exp (gen) y-1)
          (enc na-0 nb-0 a b (hash (exp ga l-1) (exp gx y-1))))))
    ((load priv-stor-1 (cat pt-6 ignore-1))
      (stor priv-stor-1 (cat pt-5 (pv b l-1)))))
  (label 598)
  (parent 566)
  (unrealized (10 1) (11 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b self-0)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor) (l l-0)
    (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b self-0)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) l-0) (one)))
  (precedes ((0 2) (8 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((3 2) (1 0))
    ((4 1) (1 0)) ((5 1) (0 0)) ((5 2) (4 0)) ((5 2) (9 0))
    ((6 1) (0 1)) ((7 1) (8 0)) ((7 2) (6 0)) ((8 3) (0 3))
    ((9 1) (8 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (4 0) (6 0) (9 0))
  (gen-st (pv self l-0) (pv self-0 l))
  (facts (ltb-of self (exp (gen) l-0)) (ltb-of self-0 (exp (gen) l))
    (ltx-of self-0 l) (ltx-of self l-0))
  (leads-to ((5 1) (0 0)) ((5 1) (2 0)) ((7 1) (3 0)) ((7 1) (8 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (recv
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (send (cat na self self-0 (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor (cat pt-2 (pv self l-0)))
      (stor priv-stor (cat pt "nil")) (send l-0))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (stor priv-stor-0 (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l)))
      (send
        (sig (body self-0 (exp (gen) l) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self self-0 (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self self-0
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one)))))
  (label 599)
  (parent 574)
  (seen 552)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self-0) (b self)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self-0) (b self)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor) (l l) (y y-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (5 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (1 0))
    ((3 1) (1 0)) ((4 1) (5 0)) ((4 2) (0 1)) ((5 3) (0 3))
    ((6 1) (0 0)) ((6 2) (5 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self-0 (exp (gen) l-0)) (ltb-of self (exp (gen) l))
    (ltx-of self l) (ltx-of self-0 l-0))
  (leads-to ((4 1) (3 0)) ((4 1) (5 0)) ((6 1) (0 0)) ((6 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation generalization weakened ((3 2) (1 0)))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self-0 self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt "nil")) (send l-0))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (recv (cat na self-0 self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 600)
  (parent 579)
  (seen 335)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self-0) (b self)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self-0) (b self)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor) (l l) (y y-0))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (5 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (1 0))
    ((3 2) (1 0)) ((4 1) (5 0)) ((4 2) (0 1)) ((5 3) (0 3))
    ((6 1) (5 1)) ((7 1) (0 0)) ((7 2) (6 0)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (6 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self-0 (exp (gen) l-0)) (ltb-of self (exp (gen) l))
    (ltx-of self l) (ltx-of self-0 l-0))
  (leads-to ((4 1) (3 0)) ((4 1) (5 0)) ((7 1) (0 0)) ((7 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self-0 self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt "nil")) (send l-0))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (recv (cat na self-0 self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 601)
  (parent 580)
  (seen 579)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self-0) (b self)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self-0) (b self)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor) (l l) (y y-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (6 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (1 0))
    ((3 2) (1 0)) ((4 1) (0 1)) ((5 1) (6 0)) ((5 2) (4 0))
    ((6 3) (0 3)) ((7 1) (0 0)) ((7 2) (6 1)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (4 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self-0 (exp (gen) l-0)) (ltb-of self (exp (gen) l))
    (ltx-of self l) (ltx-of self-0 l-0))
  (leads-to ((5 1) (3 0)) ((5 1) (6 0)) ((7 1) (0 0)) ((7 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self-0 self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt "nil")) (send l-0))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (recv (cat na self-0 self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 602)
  (parent 581)
  (seen 579)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self-0) (b self)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (gen) l))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self-0) (b self)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor) (l l) (y y-0))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (7 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (1 0))
    ((3 2) (4 0)) ((4 1) (1 0)) ((5 1) (0 1)) ((6 1) (7 0))
    ((6 2) (5 0)) ((7 3) (0 3)) ((8 1) (7 1)) ((9 1) (0 0))
    ((9 2) (8 0)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (4 0) (5 0) (8 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self-0 (exp (gen) l-0)) (ltb-of self (exp (gen) l))
    (ltx-of self l) (ltx-of self-0 l-0))
  (leads-to ((6 1) (3 0)) ((6 1) (7 0)) ((9 1) (0 0)) ((9 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self-0 self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt "nil")) (send l-0))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((recv (cat (gen) l)) (send (cat (gen) l)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (recv (cat na self-0 self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 603)
  (parent 585)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self-0) (b self)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (gen) l-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self-0) (b self)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor) (l l) (y y-0))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (7 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (4 0))
    ((3 2) (1 0)) ((4 1) (1 0)) ((5 1) (0 1)) ((6 1) (7 0))
    ((6 2) (5 0)) ((7 3) (0 3)) ((8 1) (7 1)) ((9 1) (0 0))
    ((9 2) (8 0)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (4 0) (5 0) (8 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self-0 (exp (gen) l-0)) (ltb-of self (exp (gen) l))
    (ltx-of self l) (ltx-of self-0 l-0))
  (leads-to ((6 1) (3 0)) ((6 1) (7 0)) ((9 1) (0 0)) ((9 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self-0 self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt "nil")) (send l-0))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (recv (cat na self-0 self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 604)
  (parent 595)
  (seen 605)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (self self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (y expt) (y-0 l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self-0) (b self)
    (gb (exp (gen) l)) (gy (exp (gen) y)) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-0)
    (l l-0))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self self) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self-0) (b self)
    (ga (exp (gen) l-0)) (gx (exp (gen) (mul x y (rec y-0))))
    (priv-stor priv-stor) (l l) (y y-0))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self-0)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (6 2)) ((0 4) (2 0)) ((0 4) (3 0)) ((2 2) (1 0))
    ((3 2) (1 0)) ((4 1) (0 1)) ((5 1) (6 0)) ((5 2) (4 0))
    ((6 3) (0 3)) ((7 1) (6 1)) ((8 1) (0 0)) ((8 2) (7 0)))
  (uniq-orig na nb l l-0)
  (uniq-gen x y-0)
  (absent (x l-0) (y-0 l))
  (precur (4 0) (7 0))
  (gen-st (pv self l) (pv self-0 l-0))
  (facts (ltb-of self-0 (exp (gen) l-0)) (ltb-of self (exp (gen) l))
    (ltx-of self l) (ltx-of self-0 l-0))
  (leads-to ((5 1) (3 0)) ((5 1) (6 0)) ((8 1) (0 0)) ((8 1) (2 0)))
  (rule fact-ltx-disclose-ltx-of0 fact-resp-ltb-of0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na self-0 self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))
    ((load priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (stor priv-stor-0 (cat pt "nil")) (send l-0))
    ((load priv-stor (cat pt-2 (pv self l)))
      (stor priv-stor (cat pt-0 "nil")) (send l))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor (cat pt-1 ignore))
      (stor priv-stor (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-2 (pv self l)))
      (recv
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))
      (recv (cat na self-0 self (exp (gen) (mul x y (rec y-0)))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self-0 self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-3 ignore-0))
      (stor priv-stor-0 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 605)
  (parent 603)
  (seen 601)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(comment "Nothing left to do")
