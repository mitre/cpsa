(herald "DHCR: unified model (UM) three-component version" (bound 30)
  (limit 8000) (algebra diffie-hellman))

(comment "CPSA 4.4.5")
(comment "All input read from tst/dhcr_um3_goals.scm")
(comment "Step count limited to 8000")
(comment "Strand count bounded at 30")

(defprotocol dhcr-um3 diffie-hellman
  (defrole init
    (vars (l x rndx) (beta eta expt) (a b name) (na nb data)
      (priv-stor locn))
    (trace (load priv-stor (pv a l))
      (recv
        (sig (body b (exp (gen) beta) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) eta)
          (enc na nb a b
            (hash (exp (gen) (mul l eta)) (exp (gen) (mul x beta))
              (exp (gen) (mul x eta)))))) (send nb))
    (uniq-orig na)
    (uniq-gen x)
    (absent (x l) (x beta))
    (facts (neq a b))
    (gen-st (pv a l)))
  (defrole resp
    (vars (l y rndx) (alpha chi expt) (a b name) (na nb data)
      (priv-stor locn))
    (trace (load priv-stor (pv b l))
      (recv
        (sig (body a (exp (gen) alpha) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) chi)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y alpha)) (exp (gen) (mul l chi))
              (exp (gen) (mul y chi)))))) (recv nb) (send "done"))
    (uniq-orig nb)
    (uniq-gen y)
    (absent (y l) (y alpha) (y chi))
    (facts (neq a b))
    (gen-st (pv b l)))
  (defrole ltx-gen
    (vars (self name) (l rndx) (priv-stor locn) (ignore mesg))
    (trace (load priv-stor ignore) (stor priv-stor (pv self l))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    (uniq-orig l))
  (defrole ltx-disclose
    (vars (self name) (l rndx) (priv-stor locn))
    (trace (load priv-stor (pv self l)) (stor priv-stor "nil") (send l))
    (gen-st (pv self l)))
  (defrule undisclosed-not-disclosed
    (forall ((z strd) (l rndx))
      (implies
        (and (fact undisclosed l) (p "ltx-disclose" z (idx 2))
          (p "ltx-disclose" "l" z l))
        (false))))
  (defrule ltx-gen-once-inference
    (forall ((z1 z2 strd) (self name))
      (implies
        (and (fact ltx-gen-once self) (p "ltx-gen" z1 (idx 2))
          (p "ltx-gen" "self" z1 self) (p "ltx-gen" z2 (idx 2))
          (p "ltx-gen" "self" z2 self))
        (= z1 z2))))
  (defrule eq-means-=
    (forall ((v1 v2 mesg)) (implies (fact eq v1 v2) (= v1 v2))))
  (defgenrule neqRl_indx
    (forall ((x indx)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_strd
    (forall ((x strd)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_mesg
    (forall ((x mesg)) (implies (fact neq x x) (false))))
  (defgenrule scissorsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (trans z2 i2)
          (leads-to z0 i0 z1 i1) (leads-to z0 i0 z2 i2))
        (and (= z1 z2) (= i1 i2)))))
  (defgenrule cakeRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (leads-to z0 i0 z1 i1)
          (leads-to z0 i0 z2 i2) (prec z1 i1 z2 i2)) (false))))
  (defgenrule no-interruption
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (leads-to z0 i0 z2 i2) (trans z1 i1)
          (same-locn z0 i0 z1 i1) (prec z0 i0 z1 i1) (prec z1 i1 z2 i2))
        (false))))
  (defgenrule shearsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (trans z2 i2)
          (leads-to z0 i0 z1 i1) (same-locn z0 i0 z2 i2)
          (prec z0 i0 z2 i2))
        (or (and (= z1 z2) (= i1 i2)) (prec z1 i1 z2 i2)))))
  (defgenrule invShearsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (same-locn z0 i0 z1 i1)
          (leads-to z1 i1 z2 i2) (prec z0 i0 z2 i2))
        (or (and (= z0 z1) (= i0 i1)) (prec z0 i0 z1 i1)))))
  (defgenrule fact-init-neq0
    (forall ((z strd) (b a name))
      (implies
        (and (p "init" z (idx 2)) (p "init" "a" z a) (p "init" "b" z b))
        (fact neq a b))))
  (defgenrule fact-resp-neq0
    (forall ((z strd) (b a name))
      (implies
        (and (p "resp" z (idx 2)) (p "resp" "a" z a) (p "resp" "b" z b))
        (fact neq a b))))
  (defgenrule trRl_ltx-gen-at-1
    (forall ((z strd))
      (implies (p "ltx-gen" z (idx 2)) (trans z (idx 1)))))
  (defgenrule trRl_ltx-gen-at-0
    (forall ((z strd))
      (implies (p "ltx-gen" z (idx 2)) (trans z (idx 0)))))
  (defgenrule trRl_ltx-disclose-at-1
    (forall ((z strd))
      (implies (p "ltx-disclose" z (idx 2)) (trans z (idx 1)))))
  (defgenrule trRl_ltx-disclose-at-0
    (forall ((z strd))
      (implies (p "ltx-disclose" z (idx 2)) (trans z (idx 0)))))
  (defgenrule gen-st-init-0
    (forall ((z strd) (a name) (l rndx))
      (implies
        (and (p "init" z (idx 1)) (p "init" "l" z l) (p "init" "a" z a))
        (gen-st (pv a l)))))
  (defgenrule gen-st-resp-0
    (forall ((z strd) (b name) (l rndx))
      (implies
        (and (p "resp" z (idx 1)) (p "resp" "l" z l) (p "resp" "b" z b))
        (gen-st (pv b l)))))
  (defgenrule gen-st-ltx-disclose-0
    (forall ((z strd) (self name) (l rndx))
      (implies
        (and (p "ltx-disclose" z (idx 1)) (p "ltx-disclose" "l" z l)
          (p "ltx-disclose" "self" z self)) (gen-st (pv self l)))))
  (lang (sig sign) (body (tuple 3)) (pv (tuple 2))))

(defskeleton dhcr-um3
  (vars (na nb data) (a b name) (pt pval) (priv-stor locn)
    (l l-peer x rndx) (eta expt))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-peer) (eta eta))
  (non-orig (privk "sig" b))
  (uniq-orig na)
  (uniq-gen x)
  (absent (x l) (x l-peer))
  (facts (neq a b) (undisclosed l-peer))
  (goals
    (forall
      ((na nb data) (a b name) (l l-peer x rndx) (eta expt) (z strd))
      (implies
        (and (p "init" z 4) (p "init" "na" z na) (p "init" "nb" z nb)
          (p "init" "a" z a) (p "init" "b" z b) (p "init" "l" z l)
          (p "init" "x" z x) (p "init" "beta" z l-peer)
          (p "init" "eta" z eta) (non (privk "sig" b)) (ugen x)
          (uniq-at na z 2) (fact neq a b) (fact undisclosed l-peer))
        (exists ((z-1 strd) (y rndx) (w expt))
          (and (p "resp" z-1 4) (p "resp" "na" z-1 na)
            (p "resp" "nb" z-1 nb) (p "resp" "a" z-1 a)
            (p "resp" "b" z-1 b) (prec z 2 z-1 2))))))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-peer) (pubk "sig" b))
          (privk "sig" b))) (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) eta)
          (enc na nb a b
            (hash (exp (gen) (mul l eta)) (exp (gen) (mul l-peer x))
              (exp (gen) (mul x eta))))))))
  (label 0)
  (unrealized (0 1))
  (origs (na (0 2)))
  (ugens (x (0 2)))
  (comment "Not closed under rules"))

(defskeleton dhcr-um3
  (vars (na nb data) (a b name) (pt pval) (priv-stor locn)
    (l l-peer x rndx) (eta expt))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-peer) (eta eta))
  (non-orig (privk "sig" b))
  (uniq-orig na)
  (uniq-gen x)
  (absent (x l) (x l-peer))
  (gen-st (pv a l))
  (facts (neq b a) (neq a b) (undisclosed l-peer))
  (rule fact-resp-neq0 gen-st-ltx-disclose-0)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-peer) (pubk "sig" b))
          (privk "sig" b))) (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) eta)
          (enc na nb a b
            (hash (exp (gen) (mul l eta)) (exp (gen) (mul l-peer x))
              (exp (gen) (mul x eta))))))))
  (label 1)
  (parent 0)
  (unrealized (0 0) (0 1))
  (origs (na (0 2)))
  (ugens (x (0 2)))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore mesg) (na nb data) (a b name) (pt pt-0 pval)
    (priv-stor locn) (l-peer x rndx) (eta expt) (l rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-peer) (eta eta))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (precedes ((1 1) (0 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l)
  (uniq-gen x)
  (absent (x l-peer) (x l))
  (gen-st (pv a l))
  (facts (neq b a) (neq a b) (undisclosed l-peer))
  (leads-to ((1 1) (0 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor (cat pt (pv a l))) (0 0))
  (strand-map 0)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-peer) (pubk "sig" b))
          (privk "sig" b))) (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) eta)
          (enc na nb a b
            (hash (exp (gen) (mul eta l)) (exp (gen) (mul l-peer x))
              (exp (gen) (mul x eta)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l)))))
  (label 2)
  (parent 1)
  (unrealized (0 1) (0 3))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (eta expt) (l l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta eta))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((1 1) (0 0)) ((2 2) (0 1)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l))
  (facts (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation encryption-test (added-strand ltx-gen 3)
    (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)) (0 1))
  (strand-map 0 1)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) eta)
          (enc na nb a b
            (hash (exp (gen) (mul eta l)) (exp (gen) (mul x l-0))
              (exp (gen) (mul x eta)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))))
  (label 3)
  (parent 2)
  (unrealized (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul y l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-1) (y y) (alpha (mul l l-0 (rec l-1)))
    (chi (mul x l-0 (rec l-1))))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 2) (0 1)) ((3 3) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen y x)
  (absent (y (mul x l-0 (rec l-1))) (y (mul l l-0 (rec l-1))) (y l-1)
    (x l) (x l-0))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)))
  (rule fact-resp-neq0 gen-st-ltx-disclose-0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation encryption-test (added-strand resp 4)
    (enc na nb a b
      (hash (exp (gen) (mul y l l-0 (rec l-1))) (exp (gen) (mul x l-0))
        (exp (gen) (mul y x l-0 (rec l-1))))) (0 3))
  (strand-map 0 1 2)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y l-0 (rec l-1)))
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x l-0 (rec l-1)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1)))))))))
  (label 4)
  (parent 3)
  (unrealized (0 3) (3 0) (3 1) (3 2))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (eta expt) (l l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta eta))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) (mul eta l)) (exp (gen) (mul x l-0))
      (exp (gen) (mul x eta))))
  (precedes ((0 2) (3 0)) ((1 1) (0 0)) ((2 2) (0 1)) ((3 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l))
  (facts (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation encryption-test
    (added-listener
      (hash (exp (gen) (mul eta l)) (exp (gen) (mul x l-0))
        (exp (gen) (mul x eta))))
    (enc na nb a b
      (hash (exp (gen) (mul eta l)) (exp (gen) (mul x l-0))
        (exp (gen) (mul x eta)))) (0 3))
  (strand-map 0 1 2)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) eta)
          (enc na nb a b
            (hash (exp (gen) (mul eta l)) (exp (gen) (mul x l-0))
              (exp (gen) (mul x eta)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) (mul eta l)) (exp (gen) (mul x l-0))
         (exp (gen) (mul x eta))))
      (send
        (hash (exp (gen) (mul eta l)) (exp (gen) (mul x l-0))
          (exp (gen) (mul x eta))))))
  (label 5)
  (parent 3)
  (unrealized (3 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (y x l l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (l l-0) (y y) (alpha l) (chi x))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (3 0)) ((2 2) (0 1))
    ((3 3) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen y x)
  (absent (y x) (y l) (y l-0) (x l) (x l-0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((2 1) (3 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 4 2 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv b l-1))) (3 0))
  (strand-map 0 1 2 3)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l)) (exp (gen) (mul x l-0))
              (exp (gen) (mul y x)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l)) (exp (gen) (mul x l-0))
              (exp (gen) (mul y x))))))))
  (label 6)
  (parent 4)
  (unrealized (3 1))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul y l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-1) (y y) (alpha (mul l l-0 (rec l-1)))
    (chi (mul x l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 2) (0 1)) ((3 3) (0 3))
    ((4 1) (3 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x l-0 (rec l-1))) (y (mul l l-0 (rec l-1))) (y l-1)
    (x l) (x l-0))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((4 1) (3 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv b l-1))) (3 0))
  (strand-map 0 1 2 3)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y l-0 (rec l-1)))
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x l-0 (rec l-1)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1)))))
  (label 7)
  (parent 4)
  (unrealized (0 3) (3 1) (3 2))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (eta expt) (l l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta eta))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) (mul eta l)) (exp (gen) (mul x l-0))
      (exp (gen) (mul x eta))))
  (deflistener
    (cat (exp (gen) (mul eta l)) (exp (gen) (mul x l-0))
      (exp (gen) (mul x eta))))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((2 2) (0 1)) ((3 1) (0 3))
    ((4 1) (3 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l))
  (facts (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation encryption-test
    (added-listener
      (cat (exp (gen) (mul eta l)) (exp (gen) (mul x l-0))
        (exp (gen) (mul x eta))))
    (hash (exp (gen) (mul eta l)) (exp (gen) (mul x l-0))
      (exp (gen) (mul x eta))) (3 0))
  (strand-map 0 1 2 3)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) eta)
          (enc na nb a b
            (hash (exp (gen) (mul eta l)) (exp (gen) (mul x l-0))
              (exp (gen) (mul x eta)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) (mul eta l)) (exp (gen) (mul x l-0))
         (exp (gen) (mul x eta))))
      (send
        (hash (exp (gen) (mul eta l)) (exp (gen) (mul x l-0))
          (exp (gen) (mul x eta)))))
    ((recv
       (cat (exp (gen) (mul eta l)) (exp (gen) (mul x l-0))
         (exp (gen) (mul x eta))))
      (send
        (cat (exp (gen) (mul eta l)) (exp (gen) (mul x l-0))
          (exp (gen) (mul x eta))))))
  (label 8)
  (parent 5)
  (unrealized (4 0))
  (comment "8 in cohort - 8 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (y x l l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (l l-0) (x x) (beta l) (eta y))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (priv-stor priv-stor)
    (l l) (y y) (alpha l-0) (chi x))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (0 0)) ((3 2) (2 1)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen y x)
  (absent (y x) (y l) (y l-0) (x l) (x l-0))
  (gen-st (pv b l) (pv self l-0))
  (facts (neq b self) (neq self b) (undisclosed l))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 1 4 ltx-gen 3) (exp (gen) l-0) (3 1))
  (strand-map 0 3 1 2)
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
              (exp (gen) (mul y x)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
              (exp (gen) (mul y x)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 9)
  (parent 6)
  (realized)
  (shape)
  (satisfies yes)
  (maps
    ((0)
      ((na na) (nb nb) (a self) (b b) (l l-0) (l-peer l) (x x) (eta y)
        (priv-stor priv-stor-0))))
  (origs (l-0 (3 1)) (pt-2 (3 1)) (l (1 1)) (pt-0 (1 1)) (nb (2 3))
    (na (0 2)))
  (ugens (y (2 3)) (x (0 2))))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (y x l l-0 rndx) (w expt))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (l l-0) (y y) (alpha l) (chi x))
  (deflistener (cat (exp (gen) (mul l (rec w))) w))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (3 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 1)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen y x)
  (absent (y x) (y l) (y l-0) (x l) (x l-0))
  (precur (4 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((2 1) (3 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul l (rec w))) w)) (exp (gen) l)
    (3 1))
  (strand-map 0 1 2 3)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l)) (exp (gen) (mul x l-0))
              (exp (gen) (mul y x)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l)) (exp (gen) (mul x l-0))
              (exp (gen) (mul y x)))))))
    ((recv (cat (exp (gen) (mul l (rec w))) w))
      (send (cat (exp (gen) (mul l (rec w))) w))))
  (label 10)
  (parent 6)
  (unrealized (4 0))
  (comment "7 in cohort - 7 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul y l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-1) (y y) (alpha (mul l l-0 (rec l-1)))
    (chi (mul x l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l l-0)) l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 2) (0 1)) ((3 3) (0 3))
    ((4 1) (3 0)) ((4 1) (5 0)) ((5 1) (3 1)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x l-0 (rec l-1))) (y (mul l l-0 (rec l-1))) (y l-1)
    (x l) (x l-0))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((4 1) (3 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul l l-0)) l-1))
    (exp (gen) (mul l l-0 (rec l-1))) (3 1))
  (strand-map 0 1 2 3 4)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y l-0 (rec l-1)))
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x l-0 (rec l-1)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l l-0)) l-1))
      (send (cat (exp (gen) (mul l l-0)) l-1))))
  (label 11)
  (parent 7)
  (unrealized (0 3) (3 2) (5 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul y l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-1) (y y) (alpha (mul l l-0 (rec l-1)))
    (chi (mul x l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l (rec l-1))) l-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (5 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((5 1) (3 1)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x l-0 (rec l-1))) (y (mul l l-0 (rec l-1))) (y l-1)
    (x l) (x l-0))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((4 1) (3 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul l (rec l-1))) l-0))
    (exp (gen) (mul l l-0 (rec l-1))) (3 1))
  (strand-map 0 1 2 3 4)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y l-0 (rec l-1)))
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x l-0 (rec l-1)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l (rec l-1))) l-0))
      (send (cat (exp (gen) (mul l (rec l-1))) l-0))))
  (label 12)
  (parent 7)
  (unrealized (0 3) (3 2) (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul y l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-1) (y y) (alpha (mul l l-0 (rec l-1)))
    (chi (mul x l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l-0 (rec l-1))) l))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (5 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((5 1) (3 1)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x l-0 (rec l-1))) (y (mul l l-0 (rec l-1))) (y l-1)
    (x l) (x l-0))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((4 1) (3 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul l-0 (rec l-1))) l))
    (exp (gen) (mul l l-0 (rec l-1))) (3 1))
  (strand-map 0 1 2 3 4)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y l-0 (rec l-1)))
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x l-0 (rec l-1)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l-0 (rec l-1))) l))
      (send (cat (exp (gen) (mul l-0 (rec l-1))) l))))
  (label 13)
  (parent 7)
  (unrealized (0 3) (3 2) (5 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (a b a-0 b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x l l-0 rndx)
    (alpha chi expt) (l-1 y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-1) (x x) (beta l) (eta (mul (rec l-1) y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) y) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-1) y))))
  (deflistener
    (cat (exp (gen) y) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-1) y))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b-0)
    (priv-stor priv-stor-1) (l l-0) (y y) (alpha alpha) (chi chi))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((2 2) (0 1)) ((3 1) (0 3))
    ((4 1) (3 0)) ((5 3) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb-0 l l-1)
  (uniq-gen x y)
  (absent (x l) (x l-1) (y l-0) (y alpha) (y chi))
  (gen-st (pv a l-1) (pv b-0 l-0))
  (facts (neq b-0 a-0) (neq a-0 b-0) (neq b a) (neq a b)
    (undisclosed l))
  (leads-to ((1 1) (0 0)))
  (rule fact-init-neq0 fact-resp-neq0 gen-st-ltx-disclose-0
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand resp 4) (exp (gen) y) (4 0))
  (strand-map 0 1 2 3 4)
  (traces
    ((load priv-stor (cat pt (pv a l-1)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l-1) y))
          (enc na nb a b
            (hash (exp (gen) y) (exp (gen) (mul x l))
              (exp (gen) (mul x (rec l-1) y)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) y) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-1) y))))
      (send
        (hash (exp (gen) y) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-1) y)))))
    ((recv
       (cat (exp (gen) y) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-1) y))))
      (send
        (cat (exp (gen) y) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-1) y)))))
    ((load priv-stor-1 (cat pt-3 (pv b-0 l-0)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b-0 (exp (gen) chi)))
      (send
        (cat (exp (gen) y)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul alpha y)) (exp (gen) (mul l-0 chi))
              (exp (gen) (mul chi y))))))))
  (label 14)
  (parent 8)
  (unrealized (0 3) (4 0) (5 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (a b a-0 b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x l l-0 rndx) (beta expt)
    (l-1 x-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-1) (x x) (beta l) (eta (mul (rec l-1) x-0)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) x-0) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-1) x-0))))
  (deflistener
    (cat (exp (gen) x-0) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-1) x-0))))
  (defstrand init 3 (na na-0) (a a-0) (b b-0) (priv-stor priv-stor-1)
    (l l-0) (x x-0) (beta beta))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((2 2) (0 1)) ((3 1) (0 3))
    ((4 1) (3 0)) ((5 2) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na na-0 l l-1)
  (uniq-gen x x-0)
  (absent (x l) (x l-1) (x-0 l-0) (x-0 beta))
  (gen-st (pv a l-1) (pv a-0 l-0))
  (facts (neq a-0 b-0) (neq b-0 a-0) (neq b a) (neq a b)
    (undisclosed l))
  (leads-to ((1 1) (0 0)))
  (rule fact-init-neq0 fact-resp-neq0 gen-st-ltx-disclose-0
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand init 3) (exp (gen) x-0) (4 0))
  (strand-map 0 1 2 3 4)
  (traces
    ((load priv-stor (cat pt (pv a l-1)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l-1) x-0))
          (enc na nb a b
            (hash (exp (gen) x-0) (exp (gen) (mul x l))
              (exp (gen) (mul x (rec l-1) x-0)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) x-0) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-1) x-0))))
      (send
        (hash (exp (gen) x-0) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-1) x-0)))))
    ((recv
       (cat (exp (gen) x-0) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-1) x-0))))
      (send
        (cat (exp (gen) x-0) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-1) x-0)))))
    ((load priv-stor-1 (cat pt-3 (pv a-0 l-0)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0)))
      (send (cat na-0 a-0 b-0 (exp (gen) x-0)))))
  (label 15)
  (parent 8)
  (unrealized (0 3) (4 0) (5 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (x l l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta (rec l-0)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (gen) (exp (gen) (mul x l)) (exp (gen) (mul x (rec l-0)))))
  (deflistener
    (cat (gen) (exp (gen) (mul x l)) (exp (gen) (mul x (rec l-0)))))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((2 2) (0 1)) ((3 1) (0 3))
    ((4 1) (3 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l-0))
  (facts (neq b a) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (contracted (eta (rec l-0)) (l-1 l-0)) (gen)
    (4 0))
  (strand-map 0 1 2 3 4)
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (rec l-0))
          (enc na nb a b
            (hash (gen) (exp (gen) (mul x l))
              (exp (gen) (mul x (rec l-0))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (gen) (exp (gen) (mul x l)) (exp (gen) (mul x (rec l-0)))))
      (send
        (hash (gen) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0))))))
    ((recv
       (cat (gen) (exp (gen) (mul x l)) (exp (gen) (mul x (rec l-0)))))
      (send
        (cat (gen) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0)))))))
  (label 16)
  (parent 8)
  (unrealized (0 3) (4 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (l l-0 x rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul (rec l) x)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) x) (exp (gen) (mul l-0 x))
      (exp (gen) (mul (rec l) x x))))
  (deflistener
    (cat (exp (gen) x) (exp (gen) (mul l-0 x))
      (exp (gen) (mul (rec l) x x))))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((2 2) (0 1)) ((3 1) (0 3))
    ((4 1) (3 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l))
  (facts (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 5 0 init 3) (exp (gen) x-0) (4 0))
  (strand-map 0 1 2 3 4)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l) x))
          (enc na nb a b
            (hash (exp (gen) x) (exp (gen) (mul l-0 x))
              (exp (gen) (mul (rec l) x x)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) x) (exp (gen) (mul l-0 x))
         (exp (gen) (mul (rec l) x x))))
      (send
        (hash (exp (gen) x) (exp (gen) (mul l-0 x))
          (exp (gen) (mul (rec l) x x)))))
    ((recv
       (cat (exp (gen) x) (exp (gen) (mul l-0 x))
         (exp (gen) (mul (rec l) x x))))
      (send
        (cat (exp (gen) x) (exp (gen) (mul l-0 x))
          (exp (gen) (mul (rec l) x x))))))
  (label 17)
  (parent 8)
  (unrealized (0 3) (4 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (x l l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul (rec l) l-0)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) l-0) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) l-0))))
  (deflistener
    (cat (exp (gen) l-0) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) l-0))))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((2 2) (0 1)) ((3 1) (0 3))
    ((4 1) (3 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l))
  (facts (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 5 2 ltx-gen 3) (exp (gen) l-1) (4 0))
  (strand-map 0 1 2 3 4)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l) l-0))
          (enc na nb a b
            (hash (exp (gen) l-0) (exp (gen) (mul x l-0))
              (exp (gen) (mul x (rec l) l-0)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) l-0) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) l-0))))
      (send
        (hash (exp (gen) l-0) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) l-0)))))
    ((recv
       (cat (exp (gen) l-0) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) l-0))))
      (send
        (cat (exp (gen) l-0) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) l-0))))))
  (label 18)
  (parent 8)
  (unrealized (0 3) (4 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (x l l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (l l-0) (x x) (beta l) (eta (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (deflistener
    (hash (exp (gen) l-0) (exp (gen) (mul x l)) (exp (gen) x)))
  (deflistener
    (cat (exp (gen) l-0) (exp (gen) (mul x l)) (exp (gen) x)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (3 0)) ((1 2) (0 1)) ((2 1) (0 3)) ((3 1) (2 0))
    ((4 1) (0 0)) ((4 2) (3 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv self l-0))
  (facts (neq b self) (neq self b) (undisclosed l))
  (leads-to ((4 1) (0 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 1 5 ltx-gen 3) (exp (gen) l-1) (4 0))
  (strand-map 0 4 1 2 3)
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (gen)
          (enc na nb self b
            (hash (exp (gen) l-0) (exp (gen) (mul x l))
              (exp (gen) x))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) l-0) (exp (gen) (mul x l)) (exp (gen) x)))
      (send (hash (exp (gen) l-0) (exp (gen) (mul x l)) (exp (gen) x))))
    ((recv (cat (exp (gen) l-0) (exp (gen) (mul x l)) (exp (gen) x)))
      (send (cat (exp (gen) l-0) (exp (gen) (mul x l)) (exp (gen) x))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 19)
  (parent 8)
  (unrealized (3 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x l l-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta (mul (rec l-0) l-1)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) l-1) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) l-1))))
  (deflistener
    (cat (exp (gen) l-1) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) l-1))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((2 2) (0 1)) ((3 1) (0 3))
    ((4 1) (3 0)) ((5 2) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0 l-1)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l-0))
  (facts (neq b a) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 3) (exp (gen) l-1) (4 0))
  (strand-map 0 1 2 3 4)
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l-0) l-1))
          (enc na nb a b
            (hash (exp (gen) l-1) (exp (gen) (mul x l))
              (exp (gen) (mul x (rec l-0) l-1)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) l-1) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) l-1))))
      (send
        (hash (exp (gen) l-1) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) l-1)))))
    ((recv
       (cat (exp (gen) l-1) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) l-1))))
      (send
        (cat (exp (gen) l-1) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) l-1)))))
    ((load priv-stor-1 (cat pt-3 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))))
  (label 20)
  (parent 8)
  (unrealized (0 3) (4 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (eta expt) (l l-0 rndx) (w expt))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta eta))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) (mul eta l)) (exp (gen) (mul x l-0))
      (exp (gen) (mul x eta))))
  (deflistener
    (cat (exp (gen) (mul eta l)) (exp (gen) (mul x l-0))
      (exp (gen) (mul x eta))))
  (deflistener (cat (exp (gen) (mul eta l (rec w))) w))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((2 2) (0 1)) ((3 1) (0 3))
    ((4 1) (3 0)) ((5 1) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (5 0))
  (gen-st (pv a l))
  (facts (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul eta l (rec w))) w))
    (exp (gen) (mul eta l)) (4 0))
  (strand-map 0 1 2 3 4)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) eta)
          (enc na nb a b
            (hash (exp (gen) (mul eta l)) (exp (gen) (mul x l-0))
              (exp (gen) (mul x eta)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) (mul eta l)) (exp (gen) (mul x l-0))
         (exp (gen) (mul x eta))))
      (send
        (hash (exp (gen) (mul eta l)) (exp (gen) (mul x l-0))
          (exp (gen) (mul x eta)))))
    ((recv
       (cat (exp (gen) (mul eta l)) (exp (gen) (mul x l-0))
         (exp (gen) (mul x eta))))
      (send
        (cat (exp (gen) (mul eta l)) (exp (gen) (mul x l-0))
          (exp (gen) (mul x eta)))))
    ((recv (cat (exp (gen) (mul eta l (rec w))) w))
      (send (cat (exp (gen) (mul eta l (rec w))) w))))
  (label 21)
  (parent 8)
  (unrealized (4 0) (5 0))
  (comment "7 in cohort - 7 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (a b a-0 b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 rndx)
    (beta expt) (l-1 x-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-1) (x x) (beta l) (eta y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (l l) (y y) (alpha l-1) (chi x))
  (deflistener (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
  (defstrand init 3 (na na-0) (a a-0) (b b-0) (priv-stor priv-stor-1)
    (l l-0) (x x-0) (beta beta))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (3 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 1)) ((5 2) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-1)
  (uniq-gen y x x-0)
  (absent (y x) (y l) (y l-1) (x l) (x l-1) (x-0 l-0) (x-0 beta))
  (precur (4 0))
  (gen-st (pv a l-1) (pv b l) (pv a-0 l-0))
  (facts (neq a-0 b-0) (neq b-0 a-0) (neq b a) (neq a b)
    (undisclosed l))
  (leads-to ((1 1) (0 0)) ((2 1) (3 0)))
  (rule fact-init-neq0 fact-resp-neq0 gen-st-ltx-disclose-0
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand init 3) (exp (gen) x-0) (4 0))
  (strand-map 0 1 2 3 4)
  (traces
    ((load priv-stor (cat pt (pv a l-1)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l-1)) (exp (gen) (mul x l))
              (exp (gen) (mul y x)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (recv
        (sig (body a (exp (gen) l-1) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l-1)) (exp (gen) (mul x l))
              (exp (gen) (mul y x)))))))
    ((recv (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-1 (rec x-0)))))
    ((load priv-stor-1 (cat pt-3 (pv a-0 l-0)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0)))
      (send (cat na-0 a-0 b-0 (exp (gen) x-0)))))
  (label 22)
  (parent 10)
  (unrealized (3 1) (4 0) (5 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (y l l-0 x rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (l l-0) (y y) (alpha l) (chi x))
  (deflistener (cat (exp (gen) x) (mul l (rec x))))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((2 1) (3 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 1)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen y x)
  (absent (y l) (y l-0) (y x) (x l) (x l-0))
  (precur (4 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((2 1) (3 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 5 0 init 3) (exp (gen) x-0) (4 0))
  (strand-map 0 1 2 3 4)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l)) (exp (gen) (mul l-0 x))
              (exp (gen) (mul y x)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l)) (exp (gen) (mul l-0 x))
              (exp (gen) (mul y x)))))))
    ((recv (cat (exp (gen) x) (mul l (rec x))))
      (send (cat (exp (gen) x) (mul l (rec x))))))
  (label 23)
  (parent 10)
  (unrealized (3 1) (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (y x l l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (l l) (y y) (alpha l-0) (chi x))
  (deflistener (cat (gen) l-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (4 0)) ((2 1) (3 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 1)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen y x)
  (absent (y x) (y l) (y l-0) (x l) (x l-0))
  (precur (4 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq b a) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((2 1) (3 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (contracted (l-1 l-0) (w l-0)) (gen) (4 0))
  (strand-map 0 1 2 3 4)
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
              (exp (gen) (mul y x)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
              (exp (gen) (mul y x)))))))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0))))
  (label 24)
  (parent 10)
  (unrealized (4 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (y x l l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (l l-0) (x x) (beta l) (eta y))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (priv-stor priv-stor)
    (l l) (y y) (alpha l-0) (chi x))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen y x)
  (absent (y x) (y l) (y l-0) (x l) (x l-0))
  (precur (3 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (neq b self) (neq self b) (undisclosed l))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 1 5 ltx-gen 3) (exp (gen) l-1) (4 0))
  (strand-map 0 4 1 2 3)
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
              (exp (gen) (mul y x)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
              (exp (gen) (mul y x)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 25)
  (parent 10)
  (seen 9)
  (seen-ops
    (9 (operation generalization deleted (3 0)) (strand-map 0 1 2 4)))
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (a b a-0 b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 rndx)
    (alpha chi expt) (l-1 y-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-1) (x x) (beta l) (eta y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (l l) (y y) (alpha l-1) (chi x))
  (deflistener (cat (exp (gen) y-0) (mul l-1 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b-0)
    (priv-stor priv-stor-1) (l l-0) (y y-0) (alpha alpha) (chi chi))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (3 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 1)) ((5 3) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-1)
  (uniq-gen y x y-0)
  (absent (y x) (y l) (y l-1) (x l) (x l-1) (y-0 l-0) (y-0 alpha)
    (y-0 chi))
  (precur (4 0))
  (gen-st (pv a l-1) (pv b l) (pv b-0 l-0))
  (facts (neq b-0 a-0) (neq a-0 b-0) (neq b a) (neq a b)
    (undisclosed l))
  (leads-to ((1 1) (0 0)) ((2 1) (3 0)))
  (rule fact-init-neq0 fact-resp-neq0 gen-st-ltx-disclose-0
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand resp 4) (exp (gen) y-0) (4 0))
  (strand-map 0 1 2 3 4)
  (traces
    ((load priv-stor (cat pt (pv a l-1)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l-1)) (exp (gen) (mul x l))
              (exp (gen) (mul y x)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (recv
        (sig (body a (exp (gen) l-1) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l-1)) (exp (gen) (mul x l))
              (exp (gen) (mul y x)))))))
    ((recv (cat (exp (gen) y-0) (mul l-1 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-1 (rec y-0)))))
    ((load priv-stor-1 (cat pt-3 (pv b-0 l-0)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b-0 (exp (gen) chi)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul alpha y-0)) (exp (gen) (mul l-0 chi))
              (exp (gen) (mul chi y-0))))))))
  (label 26)
  (parent 10)
  (unrealized (3 1) (4 0) (5 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (y x l l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (l l-0) (y y) (alpha l) (chi x))
  (deflistener (cat (exp (gen) l-0) (mul l (rec l-0))))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (3 0)) ((2 2) (0 1))
    ((2 2) (4 0)) ((3 3) (0 3)) ((4 1) (3 1)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen y x)
  (absent (y x) (y l) (y l-0) (x l) (x l-0))
  (precur (4 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((2 1) (3 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 5 2 ltx-gen 3) (exp (gen) l-1) (4 0))
  (strand-map 0 1 2 3 4)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l)) (exp (gen) (mul x l-0))
              (exp (gen) (mul y x)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l)) (exp (gen) (mul x l-0))
              (exp (gen) (mul y x)))))))
    ((recv (cat (exp (gen) l-0) (mul l (rec l-0))))
      (send (cat (exp (gen) l-0) (mul l (rec l-0))))))
  (label 27)
  (parent 10)
  (unrealized (3 1) (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (l l) (y y) (alpha l-0) (chi x))
  (deflistener (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (3 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 1)) ((5 2) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y x) (y l) (y l-0) (x l) (x l-0))
  (precur (4 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq b a) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((2 1) (3 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 3) (exp (gen) l-1) (4 0))
  (strand-map 0 1 2 3 4)
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
              (exp (gen) (mul y x)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
              (exp (gen) (mul y x)))))))
    ((recv (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
      (send (cat (exp (gen) l-1) (mul l-0 (rec l-1)))))
    ((load priv-stor-1 (cat pt-3 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))))
  (label 28)
  (parent 10)
  (unrealized (3 1) (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul y l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-1) (y y) (alpha (mul l l-0 (rec l-1)))
    (chi (mul x l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l l-0)) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 2) (0 1)) ((3 3) (0 3))
    ((4 1) (3 0)) ((4 1) (6 0)) ((5 1) (3 1)) ((6 2) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x l-0 (rec l-1))) (y (mul l l-0 (rec l-1))) (y l-1)
    (x l) (x l-0))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-disclose 3) l-1 (5 0)
    (ch-msg priv-stor-1 (cat pt-3 (pv b l-1))))
  (strand-map 0 1 2 3 4 5)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y l-0 (rec l-1)))
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x l-0 (rec l-1)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l l-0)) l-1))
      (send (cat (exp (gen) (mul l l-0)) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l-1)))
  (label 29)
  (parent 11)
  (unrealized (0 3) (3 2) (5 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-1) (x x) (beta l) (eta (mul y l (rec l-0))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-0) (y y) (alpha (mul l (rec l-0) l-1))
    (chi (mul x l (rec l-0))))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul l (rec l-0))) l-1))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((5 1) (3 1)) ((6 2) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x l (rec l-0))) (y (mul l (rec l-0) l-1)) (y l-0)
    (x l) (x l-1))
  (gen-st (pv a l-1) (pv b l-0))
  (facts (neq b a) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((4 1) (3 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-disclose 3) l-1 (5 0)
    (ch-msg priv-stor (cat pt (pv a l-1))))
  (strand-map 0 1 2 3 4 5)
  (traces
    ((load priv-stor (cat pt (pv a l-1)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y l (rec l-0)))
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-1))
              (exp (gen) (mul x l))
              (exp (gen) (mul y x l (rec l-0))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x l (rec l-0)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-1))
              (exp (gen) (mul x l))
              (exp (gen) (mul y x l (rec l-0))))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul l (rec l-0))) l-1))
      (send (cat (exp (gen) (mul l (rec l-0))) l-1)))
    ((load priv-stor (cat pt (pv a l-1)))
      (stor priv-stor (cat pt-5 "nil")) (send l-1)))
  (label 30)
  (parent 13)
  (unrealized (0 3) (3 2) (5 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (a b a-0 name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x l rndx)
    (alpha chi expt) (y l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta (mul y (rec l-0))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) y) (exp (gen) (mul x l))
      (exp (gen) (mul x y (rec l-0)))))
  (deflistener
    (cat (exp (gen) y) (exp (gen) (mul x l))
      (exp (gen) (mul x y (rec l-0)))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b a)
    (priv-stor priv-stor) (l l-0) (y y) (alpha alpha) (chi chi))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((1 1) (5 0)) ((2 2) (0 1))
    ((3 1) (0 3)) ((4 1) (3 0)) ((5 3) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb-0 l l-0)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y alpha) (y chi) (y l-0))
  (gen-st (pv a l-0))
  (facts (neq a a-0) (neq a-0 a) (neq b a) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((1 1) (5 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 6 1 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv b-0 l-1))) (5 0))
  (strand-map 0 1 2 3 4 5)
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l-0)))
          (enc na nb a b
            (hash (exp (gen) y) (exp (gen) (mul x l))
              (exp (gen) (mul x y (rec l-0))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) y) (exp (gen) (mul x l))
         (exp (gen) (mul x y (rec l-0)))))
      (send
        (hash (exp (gen) y) (exp (gen) (mul x l))
          (exp (gen) (mul x y (rec l-0))))))
    ((recv
       (cat (exp (gen) y) (exp (gen) (mul x l))
         (exp (gen) (mul x y (rec l-0)))))
      (send
        (cat (exp (gen) y) (exp (gen) (mul x l))
          (exp (gen) (mul x y (rec l-0))))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 a (exp (gen) chi)))
      (send
        (cat (exp (gen) y)
          (enc na-0 nb-0 a-0 a
            (hash (exp (gen) (mul alpha y)) (exp (gen) (mul chi l-0))
              (exp (gen) (mul chi y))))))))
  (label 31)
  (parent 14)
  (unrealized (0 3) (4 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (a b a-0 name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (alpha chi expt) (l y l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul (rec l) y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) y) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) y))))
  (deflistener
    (cat (exp (gen) y) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) y))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b)
    (priv-stor priv-stor-0) (l l-0) (y y) (alpha alpha) (chi chi))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((2 1) (5 0)) ((2 2) (0 1))
    ((3 1) (0 3)) ((4 1) (3 0)) ((5 3) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb-0 l l-0)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y alpha) (y chi) (y l-0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq b a-0) (neq a-0 b) (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((2 1) (5 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 6 2 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv b-0 l-1))) (5 0))
  (strand-map 0 1 2 3 4 5)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l) y))
          (enc na nb a b
            (hash (exp (gen) y) (exp (gen) (mul x l-0))
              (exp (gen) (mul x (rec l) y)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) y) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) y))))
      (send
        (hash (exp (gen) y) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) y)))))
    ((recv
       (cat (exp (gen) y) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) y))))
      (send
        (cat (exp (gen) y) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) y)))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b (exp (gen) chi)))
      (send
        (cat (exp (gen) y)
          (enc na-0 nb-0 a-0 b
            (hash (exp (gen) (mul alpha y)) (exp (gen) (mul chi l-0))
              (exp (gen) (mul chi y))))))))
  (label 32)
  (parent 14)
  (unrealized (0 3) (4 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x l rndx) (alpha chi expt)
    (l-0 y l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta (mul (rec l-0) y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) y) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) y))))
  (deflistener
    (cat (exp (gen) y) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) y))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b-0)
    (priv-stor priv-stor-1) (l l-1) (y y) (alpha alpha) (chi chi))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b-0)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((2 2) (0 1)) ((3 1) (0 3))
    ((4 1) (3 0)) ((5 3) (4 0)) ((6 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb-0 l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y alpha) (y chi) (y l-1))
  (gen-st (pv a l-0) (pv b-0 l-1))
  (facts (neq b-0 a-0) (neq a-0 b-0) (neq b a) (neq a b)
    (undisclosed l))
  (leads-to ((1 1) (0 0)) ((6 1) (5 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv b-0 l-1))) (5 0))
  (strand-map 0 1 2 3 4 5)
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l-0) y))
          (enc na nb a b
            (hash (exp (gen) y) (exp (gen) (mul x l))
              (exp (gen) (mul x (rec l-0) y)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) y) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) y))))
      (send
        (hash (exp (gen) y) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) y)))))
    ((recv
       (cat (exp (gen) y) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) y))))
      (send
        (cat (exp (gen) y) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) y)))))
    ((load priv-stor-1 (cat pt-3 (pv b-0 l-1)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b-0 (exp (gen) chi)))
      (send
        (cat (exp (gen) y)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul alpha y)) (exp (gen) (mul chi l-1))
              (exp (gen) (mul chi y)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b-0 l-1)))))
  (label 33)
  (parent 14)
  (unrealized (0 3) (4 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x l rndx)
    (beta expt) (x-0 l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta (mul x-0 (rec l-0))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) x-0) (exp (gen) (mul x l))
      (exp (gen) (mul x x-0 (rec l-0)))))
  (deflistener
    (cat (exp (gen) x-0) (exp (gen) (mul x l))
      (exp (gen) (mul x x-0 (rec l-0)))))
  (defstrand init 3 (na na-0) (a a) (b b-0) (priv-stor priv-stor)
    (l l-0) (x x-0) (beta beta))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((1 1) (5 0)) ((2 2) (0 1))
    ((3 1) (0 3)) ((4 1) (3 0)) ((5 2) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na na-0 l l-0)
  (uniq-gen x x-0)
  (absent (x l) (x l-0) (x-0 beta) (x-0 l-0))
  (gen-st (pv a l-0))
  (facts (neq a b-0) (neq b-0 a) (neq b a) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((1 1) (5 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 6 1 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv a-0 l-1))) (5 0))
  (strand-map 0 1 2 3 4 5)
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul x-0 (rec l-0)))
          (enc na nb a b
            (hash (exp (gen) x-0) (exp (gen) (mul x l))
              (exp (gen) (mul x x-0 (rec l-0))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) x-0) (exp (gen) (mul x l))
         (exp (gen) (mul x x-0 (rec l-0)))))
      (send
        (hash (exp (gen) x-0) (exp (gen) (mul x l))
          (exp (gen) (mul x x-0 (rec l-0))))))
    ((recv
       (cat (exp (gen) x-0) (exp (gen) (mul x l))
         (exp (gen) (mul x x-0 (rec l-0)))))
      (send
        (cat (exp (gen) x-0) (exp (gen) (mul x l))
          (exp (gen) (mul x x-0 (rec l-0))))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a b-0 (exp (gen) x-0)))))
  (label 34)
  (parent 15)
  (unrealized (0 3) (4 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (beta expt) (l x-0 l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul (rec l) x-0)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) x-0) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) x-0))))
  (deflistener
    (cat (exp (gen) x-0) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) x-0))))
  (defstrand init 3 (na na-0) (a b) (b b-0) (priv-stor priv-stor-0)
    (l l-0) (x x-0) (beta beta))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((2 1) (5 0)) ((2 2) (0 1))
    ((3 1) (0 3)) ((4 1) (3 0)) ((5 2) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na na-0 l l-0)
  (uniq-gen x x-0)
  (absent (x l) (x l-0) (x-0 beta) (x-0 l-0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq b b-0) (neq b-0 b) (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((2 1) (5 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 6 2 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv a-0 l-1))) (5 0))
  (strand-map 0 1 2 3 4 5)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l) x-0))
          (enc na nb a b
            (hash (exp (gen) x-0) (exp (gen) (mul x l-0))
              (exp (gen) (mul x (rec l) x-0)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) x-0) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) x-0))))
      (send
        (hash (exp (gen) x-0) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) x-0)))))
    ((recv
       (cat (exp (gen) x-0) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) x-0))))
      (send
        (cat (exp (gen) x-0) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) x-0)))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 b b-0 (exp (gen) x-0)))))
  (label 35)
  (parent 15)
  (unrealized (0 3) (4 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (a b a-0 b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x l rndx) (beta expt)
    (l-0 x-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta (mul (rec l-0) x-0)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) x-0) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) x-0))))
  (deflistener
    (cat (exp (gen) x-0) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) x-0))))
  (defstrand init 3 (na na-0) (a a-0) (b b-0) (priv-stor priv-stor-1)
    (l l-1) (x x-0) (beta beta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self a-0)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((2 2) (0 1)) ((3 1) (0 3))
    ((4 1) (3 0)) ((5 2) (4 0)) ((6 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na na-0 l l-0 l-1)
  (uniq-gen x x-0)
  (absent (x l) (x l-0) (x-0 beta) (x-0 l-1))
  (gen-st (pv a l-0) (pv a-0 l-1))
  (facts (neq a-0 b-0) (neq b-0 a-0) (neq b a) (neq a b)
    (undisclosed l))
  (leads-to ((1 1) (0 0)) ((6 1) (5 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv a-0 l-1))) (5 0))
  (strand-map 0 1 2 3 4 5)
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l-0) x-0))
          (enc na nb a b
            (hash (exp (gen) x-0) (exp (gen) (mul x l))
              (exp (gen) (mul x (rec l-0) x-0)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) x-0) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) x-0))))
      (send
        (hash (exp (gen) x-0) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) x-0)))))
    ((recv
       (cat (exp (gen) x-0) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) x-0))))
      (send
        (cat (exp (gen) x-0) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) x-0)))))
    ((load priv-stor-1 (cat pt-3 (pv a-0 l-1)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a-0 b-0 (exp (gen) x-0))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv a-0 l-1)))))
  (label 36)
  (parent 15)
  (unrealized (0 3) (4 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (x l l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta (rec l-0)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (gen) (exp (gen) (mul x l)) (exp (gen) (mul x (rec l-0)))))
  (deflistener
    (cat (gen) (exp (gen) (mul x l)) (exp (gen) (mul x (rec l-0)))))
  (deflistener (cat (exp (gen) x) l))
  (precedes ((0 2) (5 0)) ((1 1) (0 0)) ((2 2) (0 1)) ((3 1) (0 3))
    ((4 1) (3 0)) ((5 1) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l-0))
  (facts (neq b a) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) x) l))
    (exp (gen) (mul x l)) (4 0))
  (strand-map 0 1 2 3 4)
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (rec l-0))
          (enc na nb a b
            (hash (gen) (exp (gen) (mul x l))
              (exp (gen) (mul x (rec l-0))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (gen) (exp (gen) (mul x l)) (exp (gen) (mul x (rec l-0)))))
      (send
        (hash (gen) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0))))))
    ((recv
       (cat (gen) (exp (gen) (mul x l)) (exp (gen) (mul x (rec l-0)))))
      (send
        (cat (gen) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0))))))
    ((recv (cat (exp (gen) x) l)) (send (cat (exp (gen) x) l))))
  (label 37)
  (parent 16)
  (unrealized (0 3) (4 0) (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (x l l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta (rec l-0)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (gen) (exp (gen) (mul x l)) (exp (gen) (mul x (rec l-0)))))
  (deflistener
    (cat (gen) (exp (gen) (mul x l)) (exp (gen) (mul x (rec l-0)))))
  (deflistener (cat (exp (gen) l) x))
  (precedes ((0 2) (5 0)) ((1 1) (0 0)) ((2 2) (0 1)) ((3 1) (0 3))
    ((4 1) (3 0)) ((5 1) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l-0))
  (facts (neq b a) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l) x))
    (exp (gen) (mul x l)) (4 0))
  (strand-map 0 1 2 3 4)
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (rec l-0))
          (enc na nb a b
            (hash (gen) (exp (gen) (mul x l))
              (exp (gen) (mul x (rec l-0))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (gen) (exp (gen) (mul x l)) (exp (gen) (mul x (rec l-0)))))
      (send
        (hash (gen) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0))))))
    ((recv
       (cat (gen) (exp (gen) (mul x l)) (exp (gen) (mul x (rec l-0)))))
      (send
        (cat (gen) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0))))))
    ((recv (cat (exp (gen) l) x)) (send (cat (exp (gen) l) x))))
  (label 38)
  (parent 16)
  (unrealized (4 0) (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (l l-0 x rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul (rec l) x)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) x) (exp (gen) (mul l-0 x))
      (exp (gen) (mul (rec l) x x))))
  (deflistener
    (cat (exp (gen) x) (exp (gen) (mul l-0 x))
      (exp (gen) (mul (rec l) x x))))
  (deflistener (cat (exp (gen) l-0) x))
  (precedes ((0 2) (5 0)) ((1 1) (0 0)) ((2 2) (0 1)) ((3 1) (0 3))
    ((4 1) (3 0)) ((5 1) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l))
  (facts (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l-0) x))
    (exp (gen) (mul l-0 x)) (4 0))
  (strand-map 0 1 2 3 4)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l) x))
          (enc na nb a b
            (hash (exp (gen) x) (exp (gen) (mul l-0 x))
              (exp (gen) (mul (rec l) x x)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) x) (exp (gen) (mul l-0 x))
         (exp (gen) (mul (rec l) x x))))
      (send
        (hash (exp (gen) x) (exp (gen) (mul l-0 x))
          (exp (gen) (mul (rec l) x x)))))
    ((recv
       (cat (exp (gen) x) (exp (gen) (mul l-0 x))
         (exp (gen) (mul (rec l) x x))))
      (send
        (cat (exp (gen) x) (exp (gen) (mul l-0 x))
          (exp (gen) (mul (rec l) x x)))))
    ((recv (cat (exp (gen) l-0) x)) (send (cat (exp (gen) l-0) x))))
  (label 39)
  (parent 17)
  (unrealized (4 0) (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (l l-0 x rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul (rec l) x)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) x) (exp (gen) (mul l-0 x))
      (exp (gen) (mul (rec l) x x))))
  (deflistener
    (cat (exp (gen) x) (exp (gen) (mul l-0 x))
      (exp (gen) (mul (rec l) x x))))
  (deflistener (cat (exp (gen) x) l-0))
  (precedes ((0 2) (5 0)) ((1 1) (0 0)) ((2 2) (0 1)) ((3 1) (0 3))
    ((4 1) (3 0)) ((5 1) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l))
  (facts (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) x) l-0))
    (exp (gen) (mul l-0 x)) (4 0))
  (strand-map 0 1 2 3 4)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l) x))
          (enc na nb a b
            (hash (exp (gen) x) (exp (gen) (mul l-0 x))
              (exp (gen) (mul (rec l) x x)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) x) (exp (gen) (mul l-0 x))
         (exp (gen) (mul (rec l) x x))))
      (send
        (hash (exp (gen) x) (exp (gen) (mul l-0 x))
          (exp (gen) (mul (rec l) x x)))))
    ((recv
       (cat (exp (gen) x) (exp (gen) (mul l-0 x))
         (exp (gen) (mul (rec l) x x))))
      (send
        (cat (exp (gen) x) (exp (gen) (mul l-0 x))
          (exp (gen) (mul (rec l) x x)))))
    ((recv (cat (exp (gen) x) l-0)) (send (cat (exp (gen) x) l-0))))
  (label 40)
  (parent 17)
  (unrealized (0 3) (4 0) (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (x l l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul (rec l) l-0)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) l-0) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) l-0))))
  (deflistener
    (cat (exp (gen) l-0) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) l-0))))
  (deflistener (cat (exp (gen) x) l-0))
  (precedes ((0 2) (5 0)) ((1 1) (0 0)) ((2 2) (0 1)) ((3 1) (0 3))
    ((4 1) (3 0)) ((5 1) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l))
  (facts (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) x) l-0))
    (exp (gen) (mul x l-0)) (4 0))
  (strand-map 0 1 2 3 4)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l) l-0))
          (enc na nb a b
            (hash (exp (gen) l-0) (exp (gen) (mul x l-0))
              (exp (gen) (mul x (rec l) l-0)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) l-0) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) l-0))))
      (send
        (hash (exp (gen) l-0) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) l-0)))))
    ((recv
       (cat (exp (gen) l-0) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) l-0))))
      (send
        (cat (exp (gen) l-0) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) l-0)))))
    ((recv (cat (exp (gen) x) l-0)) (send (cat (exp (gen) x) l-0))))
  (label 41)
  (parent 18)
  (unrealized (0 3) (4 0) (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (x l l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul (rec l) l-0)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) l-0) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) l-0))))
  (deflistener
    (cat (exp (gen) l-0) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) l-0))))
  (deflistener (cat (exp (gen) l-0) x))
  (precedes ((0 2) (5 0)) ((1 1) (0 0)) ((2 2) (0 1)) ((3 1) (0 3))
    ((4 1) (3 0)) ((5 1) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l))
  (facts (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l-0) x))
    (exp (gen) (mul x l-0)) (4 0))
  (strand-map 0 1 2 3 4)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l) l-0))
          (enc na nb a b
            (hash (exp (gen) l-0) (exp (gen) (mul x l-0))
              (exp (gen) (mul x (rec l) l-0)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) l-0) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) l-0))))
      (send
        (hash (exp (gen) l-0) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) l-0)))))
    ((recv
       (cat (exp (gen) l-0) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) l-0))))
      (send
        (cat (exp (gen) l-0) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) l-0)))))
    ((recv (cat (exp (gen) l-0) x)) (send (cat (exp (gen) l-0) x))))
  (label 42)
  (parent 18)
  (unrealized (4 0) (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (x l l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (l l-0) (x x) (beta l) (eta (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (deflistener
    (hash (exp (gen) l-0) (exp (gen) (mul x l)) (exp (gen) x)))
  (deflistener
    (cat (exp (gen) l-0) (exp (gen) (mul x l)) (exp (gen) x)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) x) l))
  (precedes ((0 2) (5 0)) ((1 2) (0 1)) ((2 1) (0 3)) ((3 1) (2 0))
    ((4 1) (0 0)) ((4 2) (3 0)) ((5 1) (3 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv self l-0))
  (facts (neq b self) (neq self b) (undisclosed l))
  (leads-to ((4 1) (0 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) x) l))
    (exp (gen) (mul x l)) (3 0))
  (strand-map 0 1 2 3 4)
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (gen)
          (enc na nb self b
            (hash (exp (gen) l-0) (exp (gen) (mul x l))
              (exp (gen) x))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) l-0) (exp (gen) (mul x l)) (exp (gen) x)))
      (send (hash (exp (gen) l-0) (exp (gen) (mul x l)) (exp (gen) x))))
    ((recv (cat (exp (gen) l-0) (exp (gen) (mul x l)) (exp (gen) x)))
      (send (cat (exp (gen) l-0) (exp (gen) (mul x l)) (exp (gen) x))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) x) l)) (send (cat (exp (gen) x) l))))
  (label 43)
  (parent 19)
  (unrealized (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (x l l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (l l-0) (x x) (beta l) (eta (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (deflistener
    (hash (exp (gen) l-0) (exp (gen) (mul x l)) (exp (gen) x)))
  (deflistener
    (cat (exp (gen) l-0) (exp (gen) (mul x l)) (exp (gen) x)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l) x))
  (precedes ((0 2) (5 0)) ((1 2) (0 1)) ((2 1) (0 3)) ((3 1) (2 0))
    ((4 1) (0 0)) ((4 2) (3 0)) ((5 1) (3 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv self l-0))
  (facts (neq b self) (neq self b) (undisclosed l))
  (leads-to ((4 1) (0 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l) x))
    (exp (gen) (mul x l)) (3 0))
  (strand-map 0 1 2 3 4)
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (gen)
          (enc na nb self b
            (hash (exp (gen) l-0) (exp (gen) (mul x l))
              (exp (gen) x))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) l-0) (exp (gen) (mul x l)) (exp (gen) x)))
      (send (hash (exp (gen) l-0) (exp (gen) (mul x l)) (exp (gen) x))))
    ((recv (cat (exp (gen) l-0) (exp (gen) (mul x l)) (exp (gen) x)))
      (send (cat (exp (gen) l-0) (exp (gen) (mul x l)) (exp (gen) x))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) x)) (send (cat (exp (gen) l) x))))
  (label 44)
  (parent 19)
  (unrealized (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x l l-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta (mul (rec l-0) l-1)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) l-1) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) l-1))))
  (deflistener
    (cat (exp (gen) l-1) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) l-1))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) x) l))
  (precedes ((0 2) (6 0)) ((1 1) (0 0)) ((2 2) (0 1)) ((3 1) (0 3))
    ((4 1) (3 0)) ((5 2) (4 0)) ((6 1) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0 l-1)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l-0))
  (facts (neq b a) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) x) l))
    (exp (gen) (mul x l)) (4 0))
  (strand-map 0 1 2 3 4 5)
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l-0) l-1))
          (enc na nb a b
            (hash (exp (gen) l-1) (exp (gen) (mul x l))
              (exp (gen) (mul x (rec l-0) l-1)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) l-1) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) l-1))))
      (send
        (hash (exp (gen) l-1) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) l-1)))))
    ((recv
       (cat (exp (gen) l-1) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) l-1))))
      (send
        (cat (exp (gen) l-1) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) l-1)))))
    ((load priv-stor-1 (cat pt-3 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) x) l)) (send (cat (exp (gen) x) l))))
  (label 45)
  (parent 20)
  (unrealized (0 3) (4 0) (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x l l-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta (mul (rec l-0) l-1)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) l-1) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) l-1))))
  (deflistener
    (cat (exp (gen) l-1) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) l-1))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) l) x))
  (precedes ((0 2) (6 0)) ((1 1) (0 0)) ((2 2) (0 1)) ((3 1) (0 3))
    ((4 1) (3 0)) ((5 2) (4 0)) ((6 1) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0 l-1)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l-0))
  (facts (neq b a) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l) x))
    (exp (gen) (mul x l)) (4 0))
  (strand-map 0 1 2 3 4 5)
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l-0) l-1))
          (enc na nb a b
            (hash (exp (gen) l-1) (exp (gen) (mul x l))
              (exp (gen) (mul x (rec l-0) l-1)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) l-1) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) l-1))))
      (send
        (hash (exp (gen) l-1) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) l-1)))))
    ((recv
       (cat (exp (gen) l-1) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) l-1))))
      (send
        (cat (exp (gen) l-1) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) l-1)))))
    ((load priv-stor-1 (cat pt-3 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) x)) (send (cat (exp (gen) l) x))))
  (label 46)
  (parent 20)
  (unrealized (4 0) (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (a b a-0 b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x l l-0 rndx) (beta expt)
    (l-1 rndx) (w expt) (x-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-1) (x x) (beta l) (eta (mul (rec l-1) w x-0)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-1) w x-0))))
  (deflistener
    (cat (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-1) w x-0))))
  (deflistener (cat (exp (gen) x-0) w))
  (defstrand init 3 (na na-0) (a a-0) (b b-0) (priv-stor priv-stor-1)
    (l l-0) (x x-0) (beta beta))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((2 2) (0 1)) ((3 1) (0 3))
    ((4 1) (3 0)) ((5 1) (4 0)) ((6 2) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na na-0 l l-1)
  (uniq-gen x x-0)
  (absent (x l) (x l-1) (x-0 l-0) (x-0 beta))
  (precur (5 0))
  (gen-st (pv a l-1) (pv a-0 l-0))
  (facts (neq a-0 b-0) (neq b-0 a-0) (neq b a) (neq a b)
    (undisclosed l))
  (leads-to ((1 1) (0 0)))
  (rule fact-init-neq0 fact-resp-neq0 gen-st-ltx-disclose-0
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand init 3) (exp (gen) x-0) (5 0))
  (strand-map 0 1 2 3 4 5)
  (traces
    ((load priv-stor (cat pt (pv a l-1)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l-1) w x-0))
          (enc na nb a b
            (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
              (exp (gen) (mul x (rec l-1) w x-0)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-1) w x-0))))
      (send
        (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-1) w x-0)))))
    ((recv
       (cat (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-1) w x-0))))
      (send
        (cat (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-1) w x-0)))))
    ((recv (cat (exp (gen) x-0) w)) (send (cat (exp (gen) x-0) w)))
    ((load priv-stor-1 (cat pt-3 (pv a-0 l-0)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0)))
      (send (cat na-0 a-0 b-0 (exp (gen) x-0)))))
  (label 47)
  (parent 21)
  (unrealized (0 3) (4 0) (6 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (w expt)
    (l l-0 x rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul w (rec l) x)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) (mul w x)) (exp (gen) (mul l-0 x))
      (exp (gen) (mul w (rec l) x x))))
  (deflistener
    (cat (exp (gen) (mul w x)) (exp (gen) (mul l-0 x))
      (exp (gen) (mul w (rec l) x x))))
  (deflistener (cat (exp (gen) x) w))
  (precedes ((0 2) (5 0)) ((1 1) (0 0)) ((2 2) (0 1)) ((3 1) (0 3))
    ((4 1) (3 0)) ((5 1) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (5 0))
  (gen-st (pv a l))
  (facts (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 6 0 init 3) (exp (gen) x-0) (5 0))
  (strand-map 0 1 2 3 4 5)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w (rec l) x))
          (enc na nb a b
            (hash (exp (gen) (mul w x)) (exp (gen) (mul l-0 x))
              (exp (gen) (mul w (rec l) x x)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) (mul w x)) (exp (gen) (mul l-0 x))
         (exp (gen) (mul w (rec l) x x))))
      (send
        (hash (exp (gen) (mul w x)) (exp (gen) (mul l-0 x))
          (exp (gen) (mul w (rec l) x x)))))
    ((recv
       (cat (exp (gen) (mul w x)) (exp (gen) (mul l-0 x))
         (exp (gen) (mul w (rec l) x x))))
      (send
        (cat (exp (gen) (mul w x)) (exp (gen) (mul l-0 x))
          (exp (gen) (mul w (rec l) x x)))))
    ((recv (cat (exp (gen) x) w)) (send (cat (exp (gen) x) w))))
  (label 48)
  (parent 21)
  (unrealized (0 3) (4 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x l l-0 rndx)
    (w expt))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta (mul (rec l-0) w)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) w) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) w))))
  (deflistener
    (cat (exp (gen) w) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) w))))
  (deflistener (cat (gen) w))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((2 2) (0 1)) ((3 1) (0 3))
    ((4 1) (3 0)) ((5 1) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (5 0))
  (gen-st (pv a l-0))
  (facts (neq b a) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (contracted (eta (mul (rec l-0) w)) (l-1 l-0) (w-0 w)) (gen) (5 0))
  (strand-map 0 1 2 3 4 5)
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l-0) w))
          (enc na nb a b
            (hash (exp (gen) w) (exp (gen) (mul x l))
              (exp (gen) (mul x (rec l-0) w)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) w) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) w))))
      (send
        (hash (exp (gen) w) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) w)))))
    ((recv
       (cat (exp (gen) w) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) w))))
      (send
        (cat (exp (gen) w) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) w)))))
    ((recv (cat (gen) w)) (send (cat (gen) w))))
  (label 49)
  (parent 21)
  (unrealized (0 3) (4 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x l rndx)
    (w expt) (l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (l l-0) (x x) (beta l) (eta w))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (deflistener
    (hash (exp (gen) (mul w l-0)) (exp (gen) (mul x l))
      (exp (gen) (mul x w))))
  (deflistener
    (cat (exp (gen) (mul w l-0)) (exp (gen) (mul x l))
      (exp (gen) (mul x w))))
  (deflistener (cat (exp (gen) l-0) w))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (3 0)) ((1 2) (0 1)) ((2 1) (0 3)) ((3 1) (2 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((5 2) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (4 0))
  (gen-st (pv self l-0))
  (facts (neq b self) (neq self b) (undisclosed l))
  (leads-to ((5 1) (0 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 1 6 ltx-gen 3) (exp (gen) l-1) (5 0))
  (strand-map 0 5 1 2 3 4)
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) w)
          (enc na nb self b
            (hash (exp (gen) (mul w l-0)) (exp (gen) (mul x l))
              (exp (gen) (mul x w)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) (mul w l-0)) (exp (gen) (mul x l))
         (exp (gen) (mul x w))))
      (send
        (hash (exp (gen) (mul w l-0)) (exp (gen) (mul x l))
          (exp (gen) (mul x w)))))
    ((recv
       (cat (exp (gen) (mul w l-0)) (exp (gen) (mul x l))
         (exp (gen) (mul x w))))
      (send
        (cat (exp (gen) (mul w l-0)) (exp (gen) (mul x l))
          (exp (gen) (mul x w)))))
    ((recv (cat (exp (gen) l-0) w)) (send (cat (exp (gen) l-0) w)))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 50)
  (parent 21)
  (unrealized (3 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (a b a-0 b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x l l-0 rndx)
    (alpha chi expt) (l-1 rndx) (w expt) (y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-1) (x x) (beta l) (eta (mul (rec l-1) w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) (mul w y)) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-1) w y))))
  (deflistener
    (cat (exp (gen) (mul w y)) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-1) w y))))
  (deflistener (cat (exp (gen) y) w))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b-0)
    (priv-stor priv-stor-1) (l l-0) (y y) (alpha alpha) (chi chi))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((2 2) (0 1)) ((3 1) (0 3))
    ((4 1) (3 0)) ((5 1) (4 0)) ((6 3) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb-0 l l-1)
  (uniq-gen x y)
  (absent (x l) (x l-1) (y l-0) (y alpha) (y chi))
  (precur (5 0))
  (gen-st (pv a l-1) (pv b-0 l-0))
  (facts (neq b-0 a-0) (neq a-0 b-0) (neq b a) (neq a b)
    (undisclosed l))
  (leads-to ((1 1) (0 0)))
  (rule fact-init-neq0 fact-resp-neq0 gen-st-ltx-disclose-0
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand resp 4) (exp (gen) y) (5 0))
  (strand-map 0 1 2 3 4 5)
  (traces
    ((load priv-stor (cat pt (pv a l-1)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l-1) w y))
          (enc na nb a b
            (hash (exp (gen) (mul w y)) (exp (gen) (mul x l))
              (exp (gen) (mul x (rec l-1) w y)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) (mul w y)) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-1) w y))))
      (send
        (hash (exp (gen) (mul w y)) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-1) w y)))))
    ((recv
       (cat (exp (gen) (mul w y)) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-1) w y))))
      (send
        (cat (exp (gen) (mul w y)) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-1) w y)))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w)))
    ((load priv-stor-1 (cat pt-3 (pv b-0 l-0)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b-0 (exp (gen) chi)))
      (send
        (cat (exp (gen) y)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul alpha y)) (exp (gen) (mul l-0 chi))
              (exp (gen) (mul chi y))))))))
  (label 51)
  (parent 21)
  (unrealized (0 3) (4 0) (6 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x l rndx)
    (w expt) (l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul (rec l) w l-0)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) (mul w l-0)) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) w l-0))))
  (deflistener
    (cat (exp (gen) (mul w l-0)) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) w l-0))))
  (deflistener (cat (exp (gen) l-0) w))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((2 2) (0 1)) ((2 2) (5 0))
    ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (5 0))
  (gen-st (pv a l))
  (facts (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 6 2 ltx-gen 3) (exp (gen) l-1) (5 0))
  (strand-map 0 1 2 3 4 5)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l) w l-0))
          (enc na nb a b
            (hash (exp (gen) (mul w l-0)) (exp (gen) (mul x l-0))
              (exp (gen) (mul x (rec l) w l-0)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) (mul w l-0)) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) w l-0))))
      (send
        (hash (exp (gen) (mul w l-0)) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) w l-0)))))
    ((recv
       (cat (exp (gen) (mul w l-0)) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) w l-0))))
      (send
        (cat (exp (gen) (mul w l-0)) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) w l-0)))))
    ((recv (cat (exp (gen) l-0) w)) (send (cat (exp (gen) l-0) w))))
  (label 52)
  (parent 21)
  (unrealized (0 3) (4 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x l l-0 rndx) (w expt)
    (l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta (mul (rec l-0) w l-1)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) (mul w l-1)) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) w l-1))))
  (deflistener
    (cat (exp (gen) (mul w l-1)) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) w l-1))))
  (deflistener (cat (exp (gen) l-1) w))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((2 2) (0 1)) ((3 1) (0 3))
    ((4 1) (3 0)) ((5 1) (4 0)) ((6 2) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0 l-1)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (5 0))
  (gen-st (pv a l-0))
  (facts (neq b a) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 3) (exp (gen) l-1) (5 0))
  (strand-map 0 1 2 3 4 5)
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l-0) w l-1))
          (enc na nb a b
            (hash (exp (gen) (mul w l-1)) (exp (gen) (mul x l))
              (exp (gen) (mul x (rec l-0) w l-1)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) (mul w l-1)) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) w l-1))))
      (send
        (hash (exp (gen) (mul w l-1)) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) w l-1)))))
    ((recv
       (cat (exp (gen) (mul w l-1)) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) w l-1))))
      (send
        (cat (exp (gen) (mul w l-1)) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) w l-1)))))
    ((recv (cat (exp (gen) l-1) w)) (send (cat (exp (gen) l-1) w)))
    ((load priv-stor-1 (cat pt-3 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))))
  (label 53)
  (parent 21)
  (unrealized (0 3) (4 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (y x l rndx)
    (beta expt) (x-0 l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (l l) (y y) (alpha l-0) (chi x))
  (deflistener (cat (exp (gen) x-0) (mul (rec x-0) l-0)))
  (defstrand init 3 (na na-0) (a a) (b b-0) (priv-stor priv-stor)
    (l l-0) (x x-0) (beta beta))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (5 0)) ((2 1) (3 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 1)) ((5 2) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen y x x-0)
  (absent (y x) (y l) (y l-0) (x l) (x l-0) (x-0 beta) (x-0 l-0))
  (precur (4 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq a b-0) (neq b-0 a) (neq b a) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((1 1) (5 0)) ((2 1) (3 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 6 1 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv a-0 l-1))) (5 0))
  (strand-map 0 1 2 3 4 5)
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
              (exp (gen) (mul y x)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
              (exp (gen) (mul y x)))))))
    ((recv (cat (exp (gen) x-0) (mul (rec x-0) l-0)))
      (send (cat (exp (gen) x-0) (mul (rec x-0) l-0))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a b-0 (exp (gen) x-0)))))
  (label 54)
  (parent 22)
  (unrealized (3 1) (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (y x rndx)
    (beta expt) (l x-0 l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (l l-0) (y y) (alpha l) (chi x))
  (deflistener (cat (exp (gen) x-0) (mul l (rec x-0))))
  (defstrand init 3 (na na-0) (a b) (b b-0) (priv-stor priv-stor-0)
    (l l-0) (x x-0) (beta beta))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (3 0)) ((2 1) (5 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 1)) ((5 2) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen y x x-0)
  (absent (y x) (y l) (y l-0) (x l) (x l-0) (x-0 beta) (x-0 l-0))
  (precur (4 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq b b-0) (neq b-0 b) (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((2 1) (3 0)) ((2 1) (5 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 6 2 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv a-0 l-1))) (5 0))
  (strand-map 0 1 2 3 4 5)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l)) (exp (gen) (mul x l-0))
              (exp (gen) (mul y x)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l)) (exp (gen) (mul x l-0))
              (exp (gen) (mul y x)))))))
    ((recv (cat (exp (gen) x-0) (mul l (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l (rec x-0)))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 b b-0 (exp (gen) x-0)))))
  (label 55)
  (parent 22)
  (unrealized (3 1) (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (a b a-0 b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l rndx) (beta expt)
    (l-0 x-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (l l) (y y) (alpha l-0) (chi x))
  (deflistener (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
  (defstrand init 3 (na na-0) (a a-0) (b b-0) (priv-stor priv-stor-1)
    (l l-1) (x x-0) (beta beta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self a-0)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (3 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 1)) ((5 2) (4 0)) ((6 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen y x x-0)
  (absent (y x) (y l) (y l-0) (x l) (x l-0) (x-0 beta) (x-0 l-1))
  (precur (4 0))
  (gen-st (pv a l-0) (pv b l) (pv a-0 l-1))
  (facts (neq a-0 b-0) (neq b-0 a-0) (neq b a) (neq a b)
    (undisclosed l))
  (leads-to ((1 1) (0 0)) ((2 1) (3 0)) ((6 1) (5 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv a-0 l-1))) (5 0))
  (strand-map 0 1 2 3 4 5)
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
              (exp (gen) (mul y x)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
              (exp (gen) (mul y x)))))))
    ((recv (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-0 (rec x-0)))))
    ((load priv-stor-1 (cat pt-3 (pv a-0 l-1)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a-0 b-0 (exp (gen) x-0))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv a-0 l-1)))))
  (label 56)
  (parent 22)
  (unrealized (3 1) (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn)
    (y x l l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (l l) (y y) (alpha l-0) (chi x))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (5 0)) ((2 1) (3 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 1)) ((5 2) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen y x)
  (absent (y x) (y l) (y l-0) (x l) (x l-0))
  (precur (4 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq b a) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((1 1) (5 0)) ((2 1) (3 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-disclose 3) l-0 (4 0)
    (ch-msg priv-stor (cat pt (pv a l-0))))
  (strand-map 0 1 2 3 4)
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
              (exp (gen) (mul y x)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
              (exp (gen) (mul y x)))))))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-3 "nil")) (send l-0)))
  (label 57)
  (parent 24)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (a b a-0 name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (y x l rndx)
    (alpha chi expt) (y-0 l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (l l) (y y) (alpha l-0) (chi x))
  (deflistener (cat (exp (gen) y-0) (mul (rec y-0) l-0)))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b a)
    (priv-stor priv-stor) (l l-0) (y y-0) (alpha alpha) (chi chi))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (5 0)) ((2 1) (3 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 1)) ((5 3) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen y x y-0)
  (absent (y x) (y l) (y l-0) (x l) (x l-0) (y-0 alpha) (y-0 chi)
    (y-0 l-0))
  (precur (4 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq a a-0) (neq a-0 a) (neq b a) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((1 1) (5 0)) ((2 1) (3 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 6 1 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv b-0 l-1))) (5 0))
  (strand-map 0 1 2 3 4 5)
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
              (exp (gen) (mul y x)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
              (exp (gen) (mul y x)))))))
    ((recv (cat (exp (gen) y-0) (mul (rec y-0) l-0)))
      (send (cat (exp (gen) y-0) (mul (rec y-0) l-0))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 a (exp (gen) chi)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 a
            (hash (exp (gen) (mul alpha y-0)) (exp (gen) (mul chi l-0))
              (exp (gen) (mul chi y-0))))))))
  (label 58)
  (parent 26)
  (unrealized (3 1) (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (a b a-0 name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (y x rndx)
    (alpha chi expt) (l y-0 l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (l l-0) (y y) (alpha l) (chi x))
  (deflistener (cat (exp (gen) y-0) (mul l (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b)
    (priv-stor priv-stor-0) (l l-0) (y y-0) (alpha alpha) (chi chi))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (3 0)) ((2 1) (5 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 1)) ((5 3) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen y x y-0)
  (absent (y x) (y l) (y l-0) (x l) (x l-0) (y-0 alpha) (y-0 chi)
    (y-0 l-0))
  (precur (4 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq b a-0) (neq a-0 b) (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((2 1) (3 0)) ((2 1) (5 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 6 2 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv b-0 l-1))) (5 0))
  (strand-map 0 1 2 3 4 5)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l)) (exp (gen) (mul x l-0))
              (exp (gen) (mul y x)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l)) (exp (gen) (mul x l-0))
              (exp (gen) (mul y x)))))))
    ((recv (cat (exp (gen) y-0) (mul l (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l (rec y-0)))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b (exp (gen) chi)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b
            (hash (exp (gen) (mul alpha y-0)) (exp (gen) (mul chi l-0))
              (exp (gen) (mul chi y-0))))))))
  (label 59)
  (parent 26)
  (unrealized (3 1) (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l rndx)
    (alpha chi expt) (l-0 y-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (l l) (y y) (alpha l-0) (chi x))
  (deflistener (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b-0)
    (priv-stor priv-stor-1) (l l-1) (y y-0) (alpha alpha) (chi chi))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b-0)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (3 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 1)) ((5 3) (4 0)) ((6 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen y x y-0)
  (absent (y x) (y l) (y l-0) (x l) (x l-0) (y-0 alpha) (y-0 chi)
    (y-0 l-1))
  (precur (4 0))
  (gen-st (pv a l-0) (pv b l) (pv b-0 l-1))
  (facts (neq b-0 a-0) (neq a-0 b-0) (neq b a) (neq a b)
    (undisclosed l))
  (leads-to ((1 1) (0 0)) ((2 1) (3 0)) ((6 1) (5 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv b-0 l-1))) (5 0))
  (strand-map 0 1 2 3 4 5)
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
              (exp (gen) (mul y x)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
              (exp (gen) (mul y x)))))))
    ((recv (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-0 (rec y-0)))))
    ((load priv-stor-1 (cat pt-3 (pv b-0 l-1)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b-0 (exp (gen) chi)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul alpha y-0)) (exp (gen) (mul chi l-1))
              (exp (gen) (mul chi y-0)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b-0 l-1)))))
  (label 60)
  (parent 26)
  (unrealized (3 1) (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul y l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-1) (y y) (alpha (mul l l-0 (rec l-1)))
    (chi (mul x l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l l-0)) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) l) l-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (7 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x l-0 (rec l-1))) (y (mul l l-0 (rec l-1))) (y l-1)
    (x l) (x l-0))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l) l-0))
    (exp (gen) (mul l l-0)) (5 0))
  (strand-map 0 1 2 3 4 5 6)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y l-0 (rec l-1)))
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x l-0 (rec l-1)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l l-0)) l-1))
      (send (cat (exp (gen) (mul l l-0)) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l-1))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0))))
  (label 61)
  (parent 29)
  (unrealized (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul y l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-1) (y y) (alpha (mul l l-0 (rec l-1)))
    (chi (mul x l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l l-0)) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) l-0) l))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (7 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x l-0 (rec l-1))) (y (mul l l-0 (rec l-1))) (y l-1)
    (x l) (x l-0))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l-0) l))
    (exp (gen) (mul l l-0)) (5 0))
  (strand-map 0 1 2 3 4 5 6)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y l-0 (rec l-1)))
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x l-0 (rec l-1)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l l-0)) l-1))
      (send (cat (exp (gen) (mul l l-0)) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l-1))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l))))
  (label 62)
  (parent 29)
  (unrealized (0 3) (3 2) (7 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-1) (x x) (beta l) (eta (mul y l (rec l-0))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-0) (y y) (alpha (mul l (rec l-0) l-1))
    (chi (mul x l (rec l-0))))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul l (rec l-0))) l-1))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-1))
  (deflistener (cat (exp (gen) l) l-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (7 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x l (rec l-0))) (y (mul l (rec l-0) l-1)) (y l-0)
    (x l) (x l-1))
  (gen-st (pv a l-1) (pv b l-0))
  (facts (neq b a) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((4 1) (3 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l) l-0))
    (exp (gen) (mul l (rec l-0))) (5 0))
  (strand-map 0 1 2 3 4 5 6)
  (traces
    ((load priv-stor (cat pt (pv a l-1)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y l (rec l-0)))
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-1))
              (exp (gen) (mul x l))
              (exp (gen) (mul y x l (rec l-0))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x l (rec l-0)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-1))
              (exp (gen) (mul x l))
              (exp (gen) (mul y x l (rec l-0))))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul l (rec l-0))) l-1))
      (send (cat (exp (gen) (mul l (rec l-0))) l-1)))
    ((load priv-stor (cat pt (pv a l-1)))
      (stor priv-stor (cat pt-5 "nil")) (send l-1))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0))))
  (label 63)
  (parent 30)
  (unrealized (0 3) (3 2) (7 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-1) (x x) (beta l) (eta (mul y l (rec l-0))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-0) (y y) (alpha (mul l (rec l-0) l-1))
    (chi (mul x l (rec l-0))))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul l (rec l-0))) l-1))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-1))
  (deflistener (cat (exp (gen) (rec l-0)) l))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (7 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x l (rec l-0))) (y (mul l (rec l-0) l-1)) (y l-0)
    (x l) (x l-1))
  (gen-st (pv a l-1) (pv b l-0))
  (facts (neq b a) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((4 1) (3 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) (rec l-0)) l))
    (exp (gen) (mul l (rec l-0))) (5 0))
  (strand-map 0 1 2 3 4 5 6)
  (traces
    ((load priv-stor (cat pt (pv a l-1)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y l (rec l-0)))
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-1))
              (exp (gen) (mul x l))
              (exp (gen) (mul y x l (rec l-0))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x l (rec l-0)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-1))
              (exp (gen) (mul x l))
              (exp (gen) (mul y x l (rec l-0))))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul l (rec l-0))) l-1))
      (send (cat (exp (gen) (mul l (rec l-0))) l-1)))
    ((load priv-stor (cat pt (pv a l-1)))
      (stor priv-stor (cat pt-5 "nil")) (send l-1))
    ((recv (cat (exp (gen) (rec l-0)) l))
      (send (cat (exp (gen) (rec l-0)) l))))
  (label 64)
  (parent 30)
  (unrealized (0 3) (3 2) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (a b a-0 name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x l rndx)
    (alpha chi expt) (y l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta (mul y (rec l-0))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) y) (exp (gen) (mul x l))
      (exp (gen) (mul x y (rec l-0)))))
  (deflistener
    (cat (exp (gen) y) (exp (gen) (mul x l))
      (exp (gen) (mul x y (rec l-0)))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b a)
    (priv-stor priv-stor) (l l-0) (y y) (alpha alpha) (chi chi))
  (deflistener (cat (exp (gen) x) l))
  (precedes ((0 2) (6 0)) ((1 1) (0 0)) ((1 1) (5 0)) ((2 2) (0 1))
    ((3 1) (0 3)) ((4 1) (3 0)) ((5 3) (4 0)) ((6 1) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb-0 l l-0)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y alpha) (y chi) (y l-0))
  (gen-st (pv a l-0))
  (facts (neq a a-0) (neq a-0 a) (neq b a) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((1 1) (5 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) x) l))
    (exp (gen) (mul x l)) (4 0))
  (strand-map 0 1 2 3 4 5)
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l-0)))
          (enc na nb a b
            (hash (exp (gen) y) (exp (gen) (mul x l))
              (exp (gen) (mul x y (rec l-0))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) y) (exp (gen) (mul x l))
         (exp (gen) (mul x y (rec l-0)))))
      (send
        (hash (exp (gen) y) (exp (gen) (mul x l))
          (exp (gen) (mul x y (rec l-0))))))
    ((recv
       (cat (exp (gen) y) (exp (gen) (mul x l))
         (exp (gen) (mul x y (rec l-0)))))
      (send
        (cat (exp (gen) y) (exp (gen) (mul x l))
          (exp (gen) (mul x y (rec l-0))))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 a (exp (gen) chi)))
      (send
        (cat (exp (gen) y)
          (enc na-0 nb-0 a-0 a
            (hash (exp (gen) (mul alpha y)) (exp (gen) (mul chi l-0))
              (exp (gen) (mul chi y)))))))
    ((recv (cat (exp (gen) x) l)) (send (cat (exp (gen) x) l))))
  (label 65)
  (parent 31)
  (unrealized (0 3) (4 0) (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (a b a-0 name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x l rndx)
    (alpha chi expt) (y l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta (mul y (rec l-0))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) y) (exp (gen) (mul x l))
      (exp (gen) (mul x y (rec l-0)))))
  (deflistener
    (cat (exp (gen) y) (exp (gen) (mul x l))
      (exp (gen) (mul x y (rec l-0)))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b a)
    (priv-stor priv-stor) (l l-0) (y y) (alpha alpha) (chi chi))
  (deflistener (cat (exp (gen) l) x))
  (precedes ((0 2) (6 0)) ((1 1) (0 0)) ((1 1) (5 0)) ((2 2) (0 1))
    ((3 1) (0 3)) ((4 1) (3 0)) ((5 3) (4 0)) ((6 1) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb-0 l l-0)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y alpha) (y chi) (y l-0))
  (gen-st (pv a l-0))
  (facts (neq a a-0) (neq a-0 a) (neq b a) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((1 1) (5 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l) x))
    (exp (gen) (mul x l)) (4 0))
  (strand-map 0 1 2 3 4 5)
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l-0)))
          (enc na nb a b
            (hash (exp (gen) y) (exp (gen) (mul x l))
              (exp (gen) (mul x y (rec l-0))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) y) (exp (gen) (mul x l))
         (exp (gen) (mul x y (rec l-0)))))
      (send
        (hash (exp (gen) y) (exp (gen) (mul x l))
          (exp (gen) (mul x y (rec l-0))))))
    ((recv
       (cat (exp (gen) y) (exp (gen) (mul x l))
         (exp (gen) (mul x y (rec l-0)))))
      (send
        (cat (exp (gen) y) (exp (gen) (mul x l))
          (exp (gen) (mul x y (rec l-0))))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 a (exp (gen) chi)))
      (send
        (cat (exp (gen) y)
          (enc na-0 nb-0 a-0 a
            (hash (exp (gen) (mul alpha y)) (exp (gen) (mul chi l-0))
              (exp (gen) (mul chi y)))))))
    ((recv (cat (exp (gen) l) x)) (send (cat (exp (gen) l) x))))
  (label 66)
  (parent 31)
  (unrealized (4 0) (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (a b a-0 name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (alpha chi expt) (l y l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul (rec l) y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) y) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) y))))
  (deflistener
    (cat (exp (gen) y) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) y))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b)
    (priv-stor priv-stor-0) (l l-0) (y y) (alpha alpha) (chi chi))
  (deflistener (cat (exp (gen) x) l-0))
  (precedes ((0 2) (6 0)) ((1 1) (0 0)) ((2 1) (5 0)) ((2 2) (0 1))
    ((3 1) (0 3)) ((4 1) (3 0)) ((5 3) (4 0)) ((6 1) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb-0 l l-0)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y alpha) (y chi) (y l-0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq b a-0) (neq a-0 b) (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((2 1) (5 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) x) l-0))
    (exp (gen) (mul x l-0)) (4 0))
  (strand-map 0 1 2 3 4 5)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l) y))
          (enc na nb a b
            (hash (exp (gen) y) (exp (gen) (mul x l-0))
              (exp (gen) (mul x (rec l) y)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) y) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) y))))
      (send
        (hash (exp (gen) y) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) y)))))
    ((recv
       (cat (exp (gen) y) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) y))))
      (send
        (cat (exp (gen) y) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) y)))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b (exp (gen) chi)))
      (send
        (cat (exp (gen) y)
          (enc na-0 nb-0 a-0 b
            (hash (exp (gen) (mul alpha y)) (exp (gen) (mul chi l-0))
              (exp (gen) (mul chi y)))))))
    ((recv (cat (exp (gen) x) l-0)) (send (cat (exp (gen) x) l-0))))
  (label 67)
  (parent 32)
  (unrealized (0 3) (4 0) (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (a b a-0 name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (alpha chi expt) (l y l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul (rec l) y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) y) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) y))))
  (deflistener
    (cat (exp (gen) y) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) y))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b)
    (priv-stor priv-stor-0) (l l-0) (y y) (alpha alpha) (chi chi))
  (deflistener (cat (exp (gen) l-0) x))
  (precedes ((0 2) (6 0)) ((1 1) (0 0)) ((2 1) (5 0)) ((2 2) (0 1))
    ((3 1) (0 3)) ((4 1) (3 0)) ((5 3) (4 0)) ((6 1) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb-0 l l-0)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y alpha) (y chi) (y l-0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq b a-0) (neq a-0 b) (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((2 1) (5 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l-0) x))
    (exp (gen) (mul x l-0)) (4 0))
  (strand-map 0 1 2 3 4 5)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l) y))
          (enc na nb a b
            (hash (exp (gen) y) (exp (gen) (mul x l-0))
              (exp (gen) (mul x (rec l) y)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) y) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) y))))
      (send
        (hash (exp (gen) y) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) y)))))
    ((recv
       (cat (exp (gen) y) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) y))))
      (send
        (cat (exp (gen) y) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) y)))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b (exp (gen) chi)))
      (send
        (cat (exp (gen) y)
          (enc na-0 nb-0 a-0 b
            (hash (exp (gen) (mul alpha y)) (exp (gen) (mul chi l-0))
              (exp (gen) (mul chi y)))))))
    ((recv (cat (exp (gen) l-0) x)) (send (cat (exp (gen) l-0) x))))
  (label 68)
  (parent 32)
  (unrealized (4 0) (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x l rndx) (alpha chi expt)
    (l-0 y l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta (mul (rec l-0) y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) y) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) y))))
  (deflistener
    (cat (exp (gen) y) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) y))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b-0)
    (priv-stor priv-stor-1) (l l-1) (y y) (alpha alpha) (chi chi))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b-0)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) x) l))
  (precedes ((0 2) (7 0)) ((1 1) (0 0)) ((2 2) (0 1)) ((3 1) (0 3))
    ((4 1) (3 0)) ((5 3) (4 0)) ((6 1) (5 0)) ((7 1) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb-0 l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y alpha) (y chi) (y l-1))
  (gen-st (pv a l-0) (pv b-0 l-1))
  (facts (neq b-0 a-0) (neq a-0 b-0) (neq b a) (neq a b)
    (undisclosed l))
  (leads-to ((1 1) (0 0)) ((6 1) (5 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) x) l))
    (exp (gen) (mul x l)) (4 0))
  (strand-map 0 1 2 3 4 5 6)
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l-0) y))
          (enc na nb a b
            (hash (exp (gen) y) (exp (gen) (mul x l))
              (exp (gen) (mul x (rec l-0) y)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) y) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) y))))
      (send
        (hash (exp (gen) y) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) y)))))
    ((recv
       (cat (exp (gen) y) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) y))))
      (send
        (cat (exp (gen) y) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) y)))))
    ((load priv-stor-1 (cat pt-3 (pv b-0 l-1)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b-0 (exp (gen) chi)))
      (send
        (cat (exp (gen) y)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul alpha y)) (exp (gen) (mul chi l-1))
              (exp (gen) (mul chi y)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b-0 l-1))))
    ((recv (cat (exp (gen) x) l)) (send (cat (exp (gen) x) l))))
  (label 69)
  (parent 33)
  (unrealized (0 3) (4 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x l rndx) (alpha chi expt)
    (l-0 y l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta (mul (rec l-0) y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) y) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) y))))
  (deflistener
    (cat (exp (gen) y) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) y))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b-0)
    (priv-stor priv-stor-1) (l l-1) (y y) (alpha alpha) (chi chi))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b-0)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) l) x))
  (precedes ((0 2) (7 0)) ((1 1) (0 0)) ((2 2) (0 1)) ((3 1) (0 3))
    ((4 1) (3 0)) ((5 3) (4 0)) ((6 1) (5 0)) ((7 1) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb-0 l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y alpha) (y chi) (y l-1))
  (gen-st (pv a l-0) (pv b-0 l-1))
  (facts (neq b-0 a-0) (neq a-0 b-0) (neq b a) (neq a b)
    (undisclosed l))
  (leads-to ((1 1) (0 0)) ((6 1) (5 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l) x))
    (exp (gen) (mul x l)) (4 0))
  (strand-map 0 1 2 3 4 5 6)
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l-0) y))
          (enc na nb a b
            (hash (exp (gen) y) (exp (gen) (mul x l))
              (exp (gen) (mul x (rec l-0) y)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) y) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) y))))
      (send
        (hash (exp (gen) y) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) y)))))
    ((recv
       (cat (exp (gen) y) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) y))))
      (send
        (cat (exp (gen) y) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) y)))))
    ((load priv-stor-1 (cat pt-3 (pv b-0 l-1)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b-0 (exp (gen) chi)))
      (send
        (cat (exp (gen) y)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul alpha y)) (exp (gen) (mul chi l-1))
              (exp (gen) (mul chi y)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b-0 l-1))))
    ((recv (cat (exp (gen) l) x)) (send (cat (exp (gen) l) x))))
  (label 70)
  (parent 33)
  (unrealized (4 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x l rndx)
    (beta expt) (x-0 l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta (mul x-0 (rec l-0))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) x-0) (exp (gen) (mul x l))
      (exp (gen) (mul x x-0 (rec l-0)))))
  (deflistener
    (cat (exp (gen) x-0) (exp (gen) (mul x l))
      (exp (gen) (mul x x-0 (rec l-0)))))
  (defstrand init 3 (na na-0) (a a) (b b-0) (priv-stor priv-stor)
    (l l-0) (x x-0) (beta beta))
  (deflistener (cat (exp (gen) x) l))
  (precedes ((0 2) (6 0)) ((1 1) (0 0)) ((1 1) (5 0)) ((2 2) (0 1))
    ((3 1) (0 3)) ((4 1) (3 0)) ((5 2) (4 0)) ((6 1) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na na-0 l l-0)
  (uniq-gen x x-0)
  (absent (x l) (x l-0) (x-0 beta) (x-0 l-0))
  (gen-st (pv a l-0))
  (facts (neq a b-0) (neq b-0 a) (neq b a) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((1 1) (5 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) x) l))
    (exp (gen) (mul x l)) (4 0))
  (strand-map 0 1 2 3 4 5)
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul x-0 (rec l-0)))
          (enc na nb a b
            (hash (exp (gen) x-0) (exp (gen) (mul x l))
              (exp (gen) (mul x x-0 (rec l-0))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) x-0) (exp (gen) (mul x l))
         (exp (gen) (mul x x-0 (rec l-0)))))
      (send
        (hash (exp (gen) x-0) (exp (gen) (mul x l))
          (exp (gen) (mul x x-0 (rec l-0))))))
    ((recv
       (cat (exp (gen) x-0) (exp (gen) (mul x l))
         (exp (gen) (mul x x-0 (rec l-0)))))
      (send
        (cat (exp (gen) x-0) (exp (gen) (mul x l))
          (exp (gen) (mul x x-0 (rec l-0))))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a b-0 (exp (gen) x-0))))
    ((recv (cat (exp (gen) x) l)) (send (cat (exp (gen) x) l))))
  (label 71)
  (parent 34)
  (unrealized (0 3) (4 0) (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x l rndx)
    (beta expt) (x-0 l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta (mul x-0 (rec l-0))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) x-0) (exp (gen) (mul x l))
      (exp (gen) (mul x x-0 (rec l-0)))))
  (deflistener
    (cat (exp (gen) x-0) (exp (gen) (mul x l))
      (exp (gen) (mul x x-0 (rec l-0)))))
  (defstrand init 3 (na na-0) (a a) (b b-0) (priv-stor priv-stor)
    (l l-0) (x x-0) (beta beta))
  (deflistener (cat (exp (gen) l) x))
  (precedes ((0 2) (6 0)) ((1 1) (0 0)) ((1 1) (5 0)) ((2 2) (0 1))
    ((3 1) (0 3)) ((4 1) (3 0)) ((5 2) (4 0)) ((6 1) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na na-0 l l-0)
  (uniq-gen x x-0)
  (absent (x l) (x l-0) (x-0 beta) (x-0 l-0))
  (gen-st (pv a l-0))
  (facts (neq a b-0) (neq b-0 a) (neq b a) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((1 1) (5 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l) x))
    (exp (gen) (mul x l)) (4 0))
  (strand-map 0 1 2 3 4 5)
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul x-0 (rec l-0)))
          (enc na nb a b
            (hash (exp (gen) x-0) (exp (gen) (mul x l))
              (exp (gen) (mul x x-0 (rec l-0))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) x-0) (exp (gen) (mul x l))
         (exp (gen) (mul x x-0 (rec l-0)))))
      (send
        (hash (exp (gen) x-0) (exp (gen) (mul x l))
          (exp (gen) (mul x x-0 (rec l-0))))))
    ((recv
       (cat (exp (gen) x-0) (exp (gen) (mul x l))
         (exp (gen) (mul x x-0 (rec l-0)))))
      (send
        (cat (exp (gen) x-0) (exp (gen) (mul x l))
          (exp (gen) (mul x x-0 (rec l-0))))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a b-0 (exp (gen) x-0))))
    ((recv (cat (exp (gen) l) x)) (send (cat (exp (gen) l) x))))
  (label 72)
  (parent 34)
  (unrealized (4 0) (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (beta expt) (l x-0 l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul (rec l) x-0)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) x-0) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) x-0))))
  (deflistener
    (cat (exp (gen) x-0) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) x-0))))
  (defstrand init 3 (na na-0) (a b) (b b-0) (priv-stor priv-stor-0)
    (l l-0) (x x-0) (beta beta))
  (deflistener (cat (exp (gen) x) l-0))
  (precedes ((0 2) (6 0)) ((1 1) (0 0)) ((2 1) (5 0)) ((2 2) (0 1))
    ((3 1) (0 3)) ((4 1) (3 0)) ((5 2) (4 0)) ((6 1) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na na-0 l l-0)
  (uniq-gen x x-0)
  (absent (x l) (x l-0) (x-0 beta) (x-0 l-0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq b b-0) (neq b-0 b) (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((2 1) (5 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) x) l-0))
    (exp (gen) (mul x l-0)) (4 0))
  (strand-map 0 1 2 3 4 5)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l) x-0))
          (enc na nb a b
            (hash (exp (gen) x-0) (exp (gen) (mul x l-0))
              (exp (gen) (mul x (rec l) x-0)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) x-0) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) x-0))))
      (send
        (hash (exp (gen) x-0) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) x-0)))))
    ((recv
       (cat (exp (gen) x-0) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) x-0))))
      (send
        (cat (exp (gen) x-0) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) x-0)))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 b b-0 (exp (gen) x-0))))
    ((recv (cat (exp (gen) x) l-0)) (send (cat (exp (gen) x) l-0))))
  (label 73)
  (parent 35)
  (unrealized (0 3) (4 0) (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (beta expt) (l x-0 l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul (rec l) x-0)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) x-0) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) x-0))))
  (deflistener
    (cat (exp (gen) x-0) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) x-0))))
  (defstrand init 3 (na na-0) (a b) (b b-0) (priv-stor priv-stor-0)
    (l l-0) (x x-0) (beta beta))
  (deflistener (cat (exp (gen) l-0) x))
  (precedes ((0 2) (6 0)) ((1 1) (0 0)) ((2 1) (5 0)) ((2 2) (0 1))
    ((3 1) (0 3)) ((4 1) (3 0)) ((5 2) (4 0)) ((6 1) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na na-0 l l-0)
  (uniq-gen x x-0)
  (absent (x l) (x l-0) (x-0 beta) (x-0 l-0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq b b-0) (neq b-0 b) (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((2 1) (5 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l-0) x))
    (exp (gen) (mul x l-0)) (4 0))
  (strand-map 0 1 2 3 4 5)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l) x-0))
          (enc na nb a b
            (hash (exp (gen) x-0) (exp (gen) (mul x l-0))
              (exp (gen) (mul x (rec l) x-0)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) x-0) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) x-0))))
      (send
        (hash (exp (gen) x-0) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) x-0)))))
    ((recv
       (cat (exp (gen) x-0) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) x-0))))
      (send
        (cat (exp (gen) x-0) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) x-0)))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 b b-0 (exp (gen) x-0))))
    ((recv (cat (exp (gen) l-0) x)) (send (cat (exp (gen) l-0) x))))
  (label 74)
  (parent 35)
  (unrealized (4 0) (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (a b a-0 b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x l rndx) (beta expt)
    (l-0 x-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta (mul (rec l-0) x-0)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) x-0) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) x-0))))
  (deflistener
    (cat (exp (gen) x-0) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) x-0))))
  (defstrand init 3 (na na-0) (a a-0) (b b-0) (priv-stor priv-stor-1)
    (l l-1) (x x-0) (beta beta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self a-0)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) x) l))
  (precedes ((0 2) (7 0)) ((1 1) (0 0)) ((2 2) (0 1)) ((3 1) (0 3))
    ((4 1) (3 0)) ((5 2) (4 0)) ((6 1) (5 0)) ((7 1) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na na-0 l l-0 l-1)
  (uniq-gen x x-0)
  (absent (x l) (x l-0) (x-0 beta) (x-0 l-1))
  (gen-st (pv a l-0) (pv a-0 l-1))
  (facts (neq a-0 b-0) (neq b-0 a-0) (neq b a) (neq a b)
    (undisclosed l))
  (leads-to ((1 1) (0 0)) ((6 1) (5 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) x) l))
    (exp (gen) (mul x l)) (4 0))
  (strand-map 0 1 2 3 4 5 6)
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l-0) x-0))
          (enc na nb a b
            (hash (exp (gen) x-0) (exp (gen) (mul x l))
              (exp (gen) (mul x (rec l-0) x-0)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) x-0) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) x-0))))
      (send
        (hash (exp (gen) x-0) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) x-0)))))
    ((recv
       (cat (exp (gen) x-0) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) x-0))))
      (send
        (cat (exp (gen) x-0) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) x-0)))))
    ((load priv-stor-1 (cat pt-3 (pv a-0 l-1)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a-0 b-0 (exp (gen) x-0))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv a-0 l-1))))
    ((recv (cat (exp (gen) x) l)) (send (cat (exp (gen) x) l))))
  (label 75)
  (parent 36)
  (unrealized (0 3) (4 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (a b a-0 b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x l rndx) (beta expt)
    (l-0 x-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta (mul (rec l-0) x-0)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) x-0) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) x-0))))
  (deflistener
    (cat (exp (gen) x-0) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) x-0))))
  (defstrand init 3 (na na-0) (a a-0) (b b-0) (priv-stor priv-stor-1)
    (l l-1) (x x-0) (beta beta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self a-0)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) l) x))
  (precedes ((0 2) (7 0)) ((1 1) (0 0)) ((2 2) (0 1)) ((3 1) (0 3))
    ((4 1) (3 0)) ((5 2) (4 0)) ((6 1) (5 0)) ((7 1) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na na-0 l l-0 l-1)
  (uniq-gen x x-0)
  (absent (x l) (x l-0) (x-0 beta) (x-0 l-1))
  (gen-st (pv a l-0) (pv a-0 l-1))
  (facts (neq a-0 b-0) (neq b-0 a-0) (neq b a) (neq a b)
    (undisclosed l))
  (leads-to ((1 1) (0 0)) ((6 1) (5 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l) x))
    (exp (gen) (mul x l)) (4 0))
  (strand-map 0 1 2 3 4 5 6)
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l-0) x-0))
          (enc na nb a b
            (hash (exp (gen) x-0) (exp (gen) (mul x l))
              (exp (gen) (mul x (rec l-0) x-0)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) x-0) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) x-0))))
      (send
        (hash (exp (gen) x-0) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) x-0)))))
    ((recv
       (cat (exp (gen) x-0) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) x-0))))
      (send
        (cat (exp (gen) x-0) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) x-0)))))
    ((load priv-stor-1 (cat pt-3 (pv a-0 l-1)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a-0 b-0 (exp (gen) x-0))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv a-0 l-1))))
    ((recv (cat (exp (gen) l) x)) (send (cat (exp (gen) l) x))))
  (label 76)
  (parent 36)
  (unrealized (4 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x l rndx)
    (beta w expt) (x-0 l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta (mul w x-0 (rec l-0))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
      (exp (gen) (mul x w x-0 (rec l-0)))))
  (deflistener
    (cat (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
      (exp (gen) (mul x w x-0 (rec l-0)))))
  (deflistener (cat (exp (gen) x-0) w))
  (defstrand init 3 (na na-0) (a a) (b b-0) (priv-stor priv-stor)
    (l l-0) (x x-0) (beta beta))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0)) ((6 2) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na na-0 l l-0)
  (uniq-gen x x-0)
  (absent (x l) (x l-0) (x-0 beta) (x-0 l-0))
  (precur (5 0))
  (gen-st (pv a l-0))
  (facts (neq a b-0) (neq b-0 a) (neq b a) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 7 1 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv a-0 l-1))) (6 0))
  (strand-map 0 1 2 3 4 5 6)
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w x-0 (rec l-0)))
          (enc na nb a b
            (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
              (exp (gen) (mul x w x-0 (rec l-0))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
         (exp (gen) (mul x w x-0 (rec l-0)))))
      (send
        (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
          (exp (gen) (mul x w x-0 (rec l-0))))))
    ((recv
       (cat (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
         (exp (gen) (mul x w x-0 (rec l-0)))))
      (send
        (cat (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
          (exp (gen) (mul x w x-0 (rec l-0))))))
    ((recv (cat (exp (gen) x-0) w)) (send (cat (exp (gen) x-0) w)))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a b-0 (exp (gen) x-0)))))
  (label 77)
  (parent 47)
  (unrealized (0 3) (4 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (beta expt) (l rndx) (w expt) (x-0 l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul (rec l) w x-0)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) w x-0))))
  (deflistener
    (cat (exp (gen) (mul w x-0)) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) w x-0))))
  (deflistener (cat (exp (gen) x-0) w))
  (defstrand init 3 (na na-0) (a b) (b b-0) (priv-stor priv-stor-0)
    (l l-0) (x x-0) (beta beta))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((2 1) (6 0)) ((2 2) (0 1))
    ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0)) ((6 2) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na na-0 l l-0)
  (uniq-gen x x-0)
  (absent (x l) (x l-0) (x-0 beta) (x-0 l-0))
  (precur (5 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq b b-0) (neq b-0 b) (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 7 2 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv a-0 l-1))) (6 0))
  (strand-map 0 1 2 3 4 5 6)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l) w x-0))
          (enc na nb a b
            (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l-0))
              (exp (gen) (mul x (rec l) w x-0)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) w x-0))))
      (send
        (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) w x-0)))))
    ((recv
       (cat (exp (gen) (mul w x-0)) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) w x-0))))
      (send
        (cat (exp (gen) (mul w x-0)) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) w x-0)))))
    ((recv (cat (exp (gen) x-0) w)) (send (cat (exp (gen) x-0) w)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 b b-0 (exp (gen) x-0)))))
  (label 78)
  (parent 47)
  (unrealized (0 3) (4 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (a b a-0 b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x l rndx) (beta expt)
    (l-0 rndx) (w expt) (x-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta (mul (rec l-0) w x-0)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) w x-0))))
  (deflistener
    (cat (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) w x-0))))
  (deflistener (cat (exp (gen) x-0) w))
  (defstrand init 3 (na na-0) (a a-0) (b b-0) (priv-stor priv-stor-1)
    (l l-1) (x x-0) (beta beta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self a-0)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((2 2) (0 1)) ((3 1) (0 3))
    ((4 1) (3 0)) ((5 1) (4 0)) ((6 2) (5 0)) ((7 1) (6 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na na-0 l l-0 l-1)
  (uniq-gen x x-0)
  (absent (x l) (x l-0) (x-0 beta) (x-0 l-1))
  (precur (5 0))
  (gen-st (pv a l-0) (pv a-0 l-1))
  (facts (neq a-0 b-0) (neq b-0 a-0) (neq b a) (neq a b)
    (undisclosed l))
  (leads-to ((1 1) (0 0)) ((7 1) (6 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv a-0 l-1))) (6 0))
  (strand-map 0 1 2 3 4 5 6)
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l-0) w x-0))
          (enc na nb a b
            (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
              (exp (gen) (mul x (rec l-0) w x-0)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) w x-0))))
      (send
        (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) w x-0)))))
    ((recv
       (cat (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) w x-0))))
      (send
        (cat (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) w x-0)))))
    ((recv (cat (exp (gen) x-0) w)) (send (cat (exp (gen) x-0) w)))
    ((load priv-stor-1 (cat pt-3 (pv a-0 l-1)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a-0 b-0 (exp (gen) x-0))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv a-0 l-1)))))
  (label 79)
  (parent 47)
  (unrealized (0 3) (4 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (w expt)
    (l l-0 x rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul w (rec l) x)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) (mul w x)) (exp (gen) (mul l-0 x))
      (exp (gen) (mul w (rec l) x x))))
  (deflistener
    (cat (exp (gen) (mul w x)) (exp (gen) (mul l-0 x))
      (exp (gen) (mul w (rec l) x x))))
  (deflistener (cat (exp (gen) x) w))
  (deflistener (cat (exp (gen) l-0) x))
  (precedes ((0 2) (5 0)) ((0 2) (6 0)) ((1 1) (0 0)) ((2 2) (0 1))
    ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0)) ((6 1) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (5 0))
  (gen-st (pv a l))
  (facts (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l-0) x))
    (exp (gen) (mul l-0 x)) (4 0))
  (strand-map 0 1 2 3 4 5)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w (rec l) x))
          (enc na nb a b
            (hash (exp (gen) (mul w x)) (exp (gen) (mul l-0 x))
              (exp (gen) (mul w (rec l) x x)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) (mul w x)) (exp (gen) (mul l-0 x))
         (exp (gen) (mul w (rec l) x x))))
      (send
        (hash (exp (gen) (mul w x)) (exp (gen) (mul l-0 x))
          (exp (gen) (mul w (rec l) x x)))))
    ((recv
       (cat (exp (gen) (mul w x)) (exp (gen) (mul l-0 x))
         (exp (gen) (mul w (rec l) x x))))
      (send
        (cat (exp (gen) (mul w x)) (exp (gen) (mul l-0 x))
          (exp (gen) (mul w (rec l) x x)))))
    ((recv (cat (exp (gen) x) w)) (send (cat (exp (gen) x) w)))
    ((recv (cat (exp (gen) l-0) x)) (send (cat (exp (gen) l-0) x))))
  (label 80)
  (parent 48)
  (unrealized (4 0) (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (w expt)
    (l l-0 x rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul w (rec l) x)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) (mul w x)) (exp (gen) (mul l-0 x))
      (exp (gen) (mul w (rec l) x x))))
  (deflistener
    (cat (exp (gen) (mul w x)) (exp (gen) (mul l-0 x))
      (exp (gen) (mul w (rec l) x x))))
  (deflistener (cat (exp (gen) x) w))
  (deflistener (cat (exp (gen) x) l-0))
  (precedes ((0 2) (5 0)) ((0 2) (6 0)) ((1 1) (0 0)) ((2 2) (0 1))
    ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0)) ((6 1) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (5 0))
  (gen-st (pv a l))
  (facts (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) x) l-0))
    (exp (gen) (mul l-0 x)) (4 0))
  (strand-map 0 1 2 3 4 5)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w (rec l) x))
          (enc na nb a b
            (hash (exp (gen) (mul w x)) (exp (gen) (mul l-0 x))
              (exp (gen) (mul w (rec l) x x)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) (mul w x)) (exp (gen) (mul l-0 x))
         (exp (gen) (mul w (rec l) x x))))
      (send
        (hash (exp (gen) (mul w x)) (exp (gen) (mul l-0 x))
          (exp (gen) (mul w (rec l) x x)))))
    ((recv
       (cat (exp (gen) (mul w x)) (exp (gen) (mul l-0 x))
         (exp (gen) (mul w (rec l) x x))))
      (send
        (cat (exp (gen) (mul w x)) (exp (gen) (mul l-0 x))
          (exp (gen) (mul w (rec l) x x)))))
    ((recv (cat (exp (gen) x) w)) (send (cat (exp (gen) x) w)))
    ((recv (cat (exp (gen) x) l-0)) (send (cat (exp (gen) x) l-0))))
  (label 81)
  (parent 48)
  (unrealized (0 3) (4 0) (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x l l-0 rndx)
    (w expt))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta (mul (rec l-0) w)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) w) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) w))))
  (deflistener
    (cat (exp (gen) w) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) w))))
  (deflistener (cat (gen) w))
  (deflistener (cat (exp (gen) x) l))
  (precedes ((0 2) (6 0)) ((1 1) (0 0)) ((2 2) (0 1)) ((3 1) (0 3))
    ((4 1) (3 0)) ((5 1) (4 0)) ((6 1) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (5 0))
  (gen-st (pv a l-0))
  (facts (neq b a) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) x) l))
    (exp (gen) (mul x l)) (4 0))
  (strand-map 0 1 2 3 4 5)
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l-0) w))
          (enc na nb a b
            (hash (exp (gen) w) (exp (gen) (mul x l))
              (exp (gen) (mul x (rec l-0) w)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) w) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) w))))
      (send
        (hash (exp (gen) w) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) w)))))
    ((recv
       (cat (exp (gen) w) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) w))))
      (send
        (cat (exp (gen) w) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) w)))))
    ((recv (cat (gen) w)) (send (cat (gen) w)))
    ((recv (cat (exp (gen) x) l)) (send (cat (exp (gen) x) l))))
  (label 82)
  (parent 49)
  (unrealized (0 3) (4 0) (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x l l-0 rndx)
    (w expt))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta (mul (rec l-0) w)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) w) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) w))))
  (deflistener
    (cat (exp (gen) w) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) w))))
  (deflistener (cat (gen) w))
  (deflistener (cat (exp (gen) l) x))
  (precedes ((0 2) (6 0)) ((1 1) (0 0)) ((2 2) (0 1)) ((3 1) (0 3))
    ((4 1) (3 0)) ((5 1) (4 0)) ((6 1) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (5 0))
  (gen-st (pv a l-0))
  (facts (neq b a) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l) x))
    (exp (gen) (mul x l)) (4 0))
  (strand-map 0 1 2 3 4 5)
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l-0) w))
          (enc na nb a b
            (hash (exp (gen) w) (exp (gen) (mul x l))
              (exp (gen) (mul x (rec l-0) w)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) w) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) w))))
      (send
        (hash (exp (gen) w) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) w)))))
    ((recv
       (cat (exp (gen) w) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) w))))
      (send
        (cat (exp (gen) w) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) w)))))
    ((recv (cat (gen) w)) (send (cat (gen) w)))
    ((recv (cat (exp (gen) l) x)) (send (cat (exp (gen) l) x))))
  (label 83)
  (parent 49)
  (unrealized (4 0) (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x l rndx)
    (w expt) (l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (l l-0) (x x) (beta l) (eta w))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (deflistener
    (hash (exp (gen) (mul w l-0)) (exp (gen) (mul x l))
      (exp (gen) (mul x w))))
  (deflistener
    (cat (exp (gen) (mul w l-0)) (exp (gen) (mul x l))
      (exp (gen) (mul x w))))
  (deflistener (cat (exp (gen) l-0) w))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) x) l))
  (precedes ((0 2) (6 0)) ((1 2) (0 1)) ((2 1) (0 3)) ((3 1) (2 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((5 2) (4 0)) ((6 1) (3 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (4 0))
  (gen-st (pv self l-0))
  (facts (neq b self) (neq self b) (undisclosed l))
  (leads-to ((5 1) (0 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) x) l))
    (exp (gen) (mul x l)) (3 0))
  (strand-map 0 1 2 3 4 5)
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) w)
          (enc na nb self b
            (hash (exp (gen) (mul w l-0)) (exp (gen) (mul x l))
              (exp (gen) (mul x w)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) (mul w l-0)) (exp (gen) (mul x l))
         (exp (gen) (mul x w))))
      (send
        (hash (exp (gen) (mul w l-0)) (exp (gen) (mul x l))
          (exp (gen) (mul x w)))))
    ((recv
       (cat (exp (gen) (mul w l-0)) (exp (gen) (mul x l))
         (exp (gen) (mul x w))))
      (send
        (cat (exp (gen) (mul w l-0)) (exp (gen) (mul x l))
          (exp (gen) (mul x w)))))
    ((recv (cat (exp (gen) l-0) w)) (send (cat (exp (gen) l-0) w)))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) x) l)) (send (cat (exp (gen) x) l))))
  (label 84)
  (parent 50)
  (unrealized (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x l rndx)
    (w expt) (l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (l l-0) (x x) (beta l) (eta w))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (deflistener
    (hash (exp (gen) (mul w l-0)) (exp (gen) (mul x l))
      (exp (gen) (mul x w))))
  (deflistener
    (cat (exp (gen) (mul w l-0)) (exp (gen) (mul x l))
      (exp (gen) (mul x w))))
  (deflistener (cat (exp (gen) l-0) w))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l) x))
  (precedes ((0 2) (6 0)) ((1 2) (0 1)) ((2 1) (0 3)) ((3 1) (2 0))
    ((4 1) (3 0)) ((5 1) (0 0)) ((5 2) (4 0)) ((6 1) (3 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (4 0))
  (gen-st (pv self l-0))
  (facts (neq b self) (neq self b) (undisclosed l))
  (leads-to ((5 1) (0 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l) x))
    (exp (gen) (mul x l)) (3 0))
  (strand-map 0 1 2 3 4 5)
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) w)
          (enc na nb self b
            (hash (exp (gen) (mul w l-0)) (exp (gen) (mul x l))
              (exp (gen) (mul x w)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) (mul w l-0)) (exp (gen) (mul x l))
         (exp (gen) (mul x w))))
      (send
        (hash (exp (gen) (mul w l-0)) (exp (gen) (mul x l))
          (exp (gen) (mul x w)))))
    ((recv
       (cat (exp (gen) (mul w l-0)) (exp (gen) (mul x l))
         (exp (gen) (mul x w))))
      (send
        (cat (exp (gen) (mul w l-0)) (exp (gen) (mul x l))
          (exp (gen) (mul x w)))))
    ((recv (cat (exp (gen) l-0) w)) (send (cat (exp (gen) l-0) w)))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) x)) (send (cat (exp (gen) l) x))))
  (label 85)
  (parent 50)
  (unrealized (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (a b a-0 name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x l rndx)
    (alpha chi w expt) (y l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta (mul w y (rec l-0))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) (mul w y)) (exp (gen) (mul x l))
      (exp (gen) (mul x w y (rec l-0)))))
  (deflistener
    (cat (exp (gen) (mul w y)) (exp (gen) (mul x l))
      (exp (gen) (mul x w y (rec l-0)))))
  (deflistener (cat (exp (gen) y) w))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b a)
    (priv-stor priv-stor) (l l-0) (y y) (alpha alpha) (chi chi))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0)) ((6 3) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb-0 l l-0)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y alpha) (y chi) (y l-0))
  (precur (5 0))
  (gen-st (pv a l-0))
  (facts (neq a a-0) (neq a-0 a) (neq b a) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 7 1 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv b-0 l-1))) (6 0))
  (strand-map 0 1 2 3 4 5 6)
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y (rec l-0)))
          (enc na nb a b
            (hash (exp (gen) (mul w y)) (exp (gen) (mul x l))
              (exp (gen) (mul x w y (rec l-0))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) (mul w y)) (exp (gen) (mul x l))
         (exp (gen) (mul x w y (rec l-0)))))
      (send
        (hash (exp (gen) (mul w y)) (exp (gen) (mul x l))
          (exp (gen) (mul x w y (rec l-0))))))
    ((recv
       (cat (exp (gen) (mul w y)) (exp (gen) (mul x l))
         (exp (gen) (mul x w y (rec l-0)))))
      (send
        (cat (exp (gen) (mul w y)) (exp (gen) (mul x l))
          (exp (gen) (mul x w y (rec l-0))))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w)))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 a (exp (gen) chi)))
      (send
        (cat (exp (gen) y)
          (enc na-0 nb-0 a-0 a
            (hash (exp (gen) (mul alpha y)) (exp (gen) (mul chi l-0))
              (exp (gen) (mul chi y))))))))
  (label 86)
  (parent 51)
  (unrealized (0 3) (4 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (a b a-0 name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (alpha chi expt) (l rndx) (w expt) (y l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul (rec l) w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) (mul w y)) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) w y))))
  (deflistener
    (cat (exp (gen) (mul w y)) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) w y))))
  (deflistener (cat (exp (gen) y) w))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b)
    (priv-stor priv-stor-0) (l l-0) (y y) (alpha alpha) (chi chi))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((2 1) (6 0)) ((2 2) (0 1))
    ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0)) ((6 3) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb-0 l l-0)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y alpha) (y chi) (y l-0))
  (precur (5 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq b a-0) (neq a-0 b) (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 7 2 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv b-0 l-1))) (6 0))
  (strand-map 0 1 2 3 4 5 6)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l) w y))
          (enc na nb a b
            (hash (exp (gen) (mul w y)) (exp (gen) (mul x l-0))
              (exp (gen) (mul x (rec l) w y)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) (mul w y)) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) w y))))
      (send
        (hash (exp (gen) (mul w y)) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) w y)))))
    ((recv
       (cat (exp (gen) (mul w y)) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) w y))))
      (send
        (cat (exp (gen) (mul w y)) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) w y)))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b (exp (gen) chi)))
      (send
        (cat (exp (gen) y)
          (enc na-0 nb-0 a-0 b
            (hash (exp (gen) (mul alpha y)) (exp (gen) (mul chi l-0))
              (exp (gen) (mul chi y))))))))
  (label 87)
  (parent 51)
  (unrealized (0 3) (4 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x l rndx) (alpha chi expt)
    (l-0 rndx) (w expt) (y l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta (mul (rec l-0) w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) (mul w y)) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) w y))))
  (deflistener
    (cat (exp (gen) (mul w y)) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) w y))))
  (deflistener (cat (exp (gen) y) w))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b-0)
    (priv-stor priv-stor-1) (l l-1) (y y) (alpha alpha) (chi chi))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b-0)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((2 2) (0 1)) ((3 1) (0 3))
    ((4 1) (3 0)) ((5 1) (4 0)) ((6 3) (5 0)) ((7 1) (6 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb-0 l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y alpha) (y chi) (y l-1))
  (precur (5 0))
  (gen-st (pv a l-0) (pv b-0 l-1))
  (facts (neq b-0 a-0) (neq a-0 b-0) (neq b a) (neq a b)
    (undisclosed l))
  (leads-to ((1 1) (0 0)) ((7 1) (6 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv b-0 l-1))) (6 0))
  (strand-map 0 1 2 3 4 5 6)
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l-0) w y))
          (enc na nb a b
            (hash (exp (gen) (mul w y)) (exp (gen) (mul x l))
              (exp (gen) (mul x (rec l-0) w y)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) (mul w y)) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) w y))))
      (send
        (hash (exp (gen) (mul w y)) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) w y)))))
    ((recv
       (cat (exp (gen) (mul w y)) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) w y))))
      (send
        (cat (exp (gen) (mul w y)) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) w y)))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w)))
    ((load priv-stor-1 (cat pt-3 (pv b-0 l-1)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b-0 (exp (gen) chi)))
      (send
        (cat (exp (gen) y)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul alpha y)) (exp (gen) (mul chi l-1))
              (exp (gen) (mul chi y)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b-0 l-1)))))
  (label 88)
  (parent 51)
  (unrealized (0 3) (4 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x l rndx)
    (w expt) (l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul (rec l) w l-0)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) (mul w l-0)) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) w l-0))))
  (deflistener
    (cat (exp (gen) (mul w l-0)) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) w l-0))))
  (deflistener (cat (exp (gen) l-0) w))
  (deflistener (cat (exp (gen) x) l-0))
  (precedes ((0 2) (6 0)) ((1 1) (0 0)) ((2 2) (0 1)) ((2 2) (5 0))
    ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0)) ((6 1) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (5 0))
  (gen-st (pv a l))
  (facts (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) x) l-0))
    (exp (gen) (mul x l-0)) (4 0))
  (strand-map 0 1 2 3 4 5)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l) w l-0))
          (enc na nb a b
            (hash (exp (gen) (mul w l-0)) (exp (gen) (mul x l-0))
              (exp (gen) (mul x (rec l) w l-0)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) (mul w l-0)) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) w l-0))))
      (send
        (hash (exp (gen) (mul w l-0)) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) w l-0)))))
    ((recv
       (cat (exp (gen) (mul w l-0)) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) w l-0))))
      (send
        (cat (exp (gen) (mul w l-0)) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) w l-0)))))
    ((recv (cat (exp (gen) l-0) w)) (send (cat (exp (gen) l-0) w)))
    ((recv (cat (exp (gen) x) l-0)) (send (cat (exp (gen) x) l-0))))
  (label 89)
  (parent 52)
  (unrealized (0 3) (4 0) (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x l rndx)
    (w expt) (l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul (rec l) w l-0)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) (mul w l-0)) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) w l-0))))
  (deflistener
    (cat (exp (gen) (mul w l-0)) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) w l-0))))
  (deflistener (cat (exp (gen) l-0) w))
  (deflistener (cat (exp (gen) l-0) x))
  (precedes ((0 2) (6 0)) ((1 1) (0 0)) ((2 2) (0 1)) ((2 2) (5 0))
    ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0)) ((6 1) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (5 0))
  (gen-st (pv a l))
  (facts (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l-0) x))
    (exp (gen) (mul x l-0)) (4 0))
  (strand-map 0 1 2 3 4 5)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l) w l-0))
          (enc na nb a b
            (hash (exp (gen) (mul w l-0)) (exp (gen) (mul x l-0))
              (exp (gen) (mul x (rec l) w l-0)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) (mul w l-0)) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) w l-0))))
      (send
        (hash (exp (gen) (mul w l-0)) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) w l-0)))))
    ((recv
       (cat (exp (gen) (mul w l-0)) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) w l-0))))
      (send
        (cat (exp (gen) (mul w l-0)) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) w l-0)))))
    ((recv (cat (exp (gen) l-0) w)) (send (cat (exp (gen) l-0) w)))
    ((recv (cat (exp (gen) l-0) x)) (send (cat (exp (gen) l-0) x))))
  (label 90)
  (parent 52)
  (unrealized (4 0) (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x l l-0 rndx) (w expt)
    (l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta (mul (rec l-0) w l-1)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) (mul w l-1)) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) w l-1))))
  (deflistener
    (cat (exp (gen) (mul w l-1)) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) w l-1))))
  (deflistener (cat (exp (gen) l-1) w))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) x) l))
  (precedes ((0 2) (7 0)) ((1 1) (0 0)) ((2 2) (0 1)) ((3 1) (0 3))
    ((4 1) (3 0)) ((5 1) (4 0)) ((6 2) (5 0)) ((7 1) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0 l-1)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (5 0))
  (gen-st (pv a l-0))
  (facts (neq b a) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) x) l))
    (exp (gen) (mul x l)) (4 0))
  (strand-map 0 1 2 3 4 5 6)
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l-0) w l-1))
          (enc na nb a b
            (hash (exp (gen) (mul w l-1)) (exp (gen) (mul x l))
              (exp (gen) (mul x (rec l-0) w l-1)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) (mul w l-1)) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) w l-1))))
      (send
        (hash (exp (gen) (mul w l-1)) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) w l-1)))))
    ((recv
       (cat (exp (gen) (mul w l-1)) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) w l-1))))
      (send
        (cat (exp (gen) (mul w l-1)) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) w l-1)))))
    ((recv (cat (exp (gen) l-1) w)) (send (cat (exp (gen) l-1) w)))
    ((load priv-stor-1 (cat pt-3 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) x) l)) (send (cat (exp (gen) x) l))))
  (label 91)
  (parent 53)
  (unrealized (0 3) (4 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x l l-0 rndx) (w expt)
    (l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta (mul (rec l-0) w l-1)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) (mul w l-1)) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) w l-1))))
  (deflistener
    (cat (exp (gen) (mul w l-1)) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) w l-1))))
  (deflistener (cat (exp (gen) l-1) w))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) l) x))
  (precedes ((0 2) (7 0)) ((1 1) (0 0)) ((2 2) (0 1)) ((3 1) (0 3))
    ((4 1) (3 0)) ((5 1) (4 0)) ((6 2) (5 0)) ((7 1) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0 l-1)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (5 0))
  (gen-st (pv a l-0))
  (facts (neq b a) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l) x))
    (exp (gen) (mul x l)) (4 0))
  (strand-map 0 1 2 3 4 5 6)
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l-0) w l-1))
          (enc na nb a b
            (hash (exp (gen) (mul w l-1)) (exp (gen) (mul x l))
              (exp (gen) (mul x (rec l-0) w l-1)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) (mul w l-1)) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) w l-1))))
      (send
        (hash (exp (gen) (mul w l-1)) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) w l-1)))))
    ((recv
       (cat (exp (gen) (mul w l-1)) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) w l-1))))
      (send
        (cat (exp (gen) (mul w l-1)) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) w l-1)))))
    ((recv (cat (exp (gen) l-1) w)) (send (cat (exp (gen) l-1) w)))
    ((load priv-stor-1 (cat pt-3 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) x)) (send (cat (exp (gen) l) x))))
  (label 92)
  (parent 53)
  (unrealized (4 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn)
    (y x l l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (l l) (y y) (alpha l-0) (chi x))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (4 0)) ((2 1) (3 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 2) (3 1)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen y x)
  (absent (y x) (y l) (y l-0) (x l) (x l-0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq b a) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((1 1) (4 0)) ((2 1) (3 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (strand-map 0 1 2 3 5)
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
              (exp (gen) (mul y x)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
              (exp (gen) (mul y x)))))))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-3 "nil")) (send l-0)))
  (label 93)
  (parent 57)
  (realized)
  (shape)
  (satisfies yes)
  (maps
    ((0)
      ((na na) (nb nb) (a a) (b b) (l l-0) (l-peer l) (x x) (eta y)
        (priv-stor priv-stor))))
  (origs (pt-3 (4 1)) (l (2 1)) (pt-2 (2 1)) (nb (3 3)) (l-0 (1 1))
    (pt (1 1)) (na (0 2)))
  (ugens (y (3 3)) (x (0 2))))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-1) (x x) (beta l) (eta (mul y l (rec l-0))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-0) (y y) (alpha (mul l (rec l-0) l-1))
    (chi (mul x l (rec l-0))))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul l l-1)) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) l) l-1))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x l (rec l-0))) (y (mul l (rec l-0) l-1)) (y l-0)
    (x l) (x l-1))
  (gen-st (pv a l-1) (pv b l-0))
  (facts (neq b a) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-disclose 3) l-1 (7 0)
    (ch-msg priv-stor (cat pt (pv a l-1))))
  (strand-map 0 1 2 3 4 5 6 7)
  (traces
    ((load priv-stor (cat pt (pv a l-1)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y l (rec l-0)))
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-1))
              (exp (gen) (mul x l))
              (exp (gen) (mul y x l (rec l-0))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x l (rec l-0)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-1))
              (exp (gen) (mul x l))
              (exp (gen) (mul y x l (rec l-0))))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul l l-1)) l-0))
      (send (cat (exp (gen) (mul l l-1)) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l-0))
    ((recv (cat (exp (gen) l) l-1)) (send (cat (exp (gen) l) l-1)))
    ((load priv-stor (cat pt (pv a l-1)))
      (stor priv-stor (cat pt-6 "nil")) (send l-1)))
  (label 94)
  (parent 62)
  (unrealized (0 3) (3 2) (7 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta (mul y l (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-1) (y y) (alpha (mul l l-0 (rec l-1)))
    (chi (mul x l (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l (rec l-1))) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) l) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x l (rec l-1))) (y (mul l l-0 (rec l-1))) (y l-1)
    (x l) (x l-0))
  (gen-st (pv a l-0) (pv b l-1))
  (facts (neq b a) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-disclose 3) l-1 (7 0)
    (ch-msg priv-stor-1 (cat pt-3 (pv b l-1))))
  (strand-map 0 1 2 3 4 5 6 7)
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y l (rec l-1)))
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l))
              (exp (gen) (mul y x l (rec l-1))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x l (rec l-1)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l))
              (exp (gen) (mul y x l (rec l-1))))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l (rec l-1))) l-0))
      (send (cat (exp (gen) (mul l (rec l-1))) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-5 "nil")) (send l-0))
    ((recv (cat (exp (gen) l) l-1)) (send (cat (exp (gen) l) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-1)))
  (label 95)
  (parent 63)
  (unrealized (0 3) (3 2) (7 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x l rndx)
    (beta w expt) (x-0 l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta (mul w x-0 (rec l-0))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
      (exp (gen) (mul x w x-0 (rec l-0)))))
  (deflistener
    (cat (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
      (exp (gen) (mul x w x-0 (rec l-0)))))
  (deflistener (cat (exp (gen) x-0) w))
  (defstrand init 3 (na na-0) (a a) (b b-0) (priv-stor priv-stor)
    (l l-0) (x x-0) (beta beta))
  (deflistener (cat (exp (gen) x) l))
  (precedes ((0 2) (7 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0)) ((6 2) (5 0))
    ((7 1) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na na-0 l l-0)
  (uniq-gen x x-0)
  (absent (x l) (x l-0) (x-0 beta) (x-0 l-0))
  (precur (5 0))
  (gen-st (pv a l-0))
  (facts (neq a b-0) (neq b-0 a) (neq b a) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) x) l))
    (exp (gen) (mul x l)) (4 0))
  (strand-map 0 1 2 3 4 5 6)
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w x-0 (rec l-0)))
          (enc na nb a b
            (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
              (exp (gen) (mul x w x-0 (rec l-0))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
         (exp (gen) (mul x w x-0 (rec l-0)))))
      (send
        (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
          (exp (gen) (mul x w x-0 (rec l-0))))))
    ((recv
       (cat (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
         (exp (gen) (mul x w x-0 (rec l-0)))))
      (send
        (cat (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
          (exp (gen) (mul x w x-0 (rec l-0))))))
    ((recv (cat (exp (gen) x-0) w)) (send (cat (exp (gen) x-0) w)))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a b-0 (exp (gen) x-0))))
    ((recv (cat (exp (gen) x) l)) (send (cat (exp (gen) x) l))))
  (label 96)
  (parent 77)
  (unrealized (0 3) (4 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x l rndx)
    (beta w expt) (x-0 l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta (mul w x-0 (rec l-0))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
      (exp (gen) (mul x w x-0 (rec l-0)))))
  (deflistener
    (cat (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
      (exp (gen) (mul x w x-0 (rec l-0)))))
  (deflistener (cat (exp (gen) x-0) w))
  (defstrand init 3 (na na-0) (a a) (b b-0) (priv-stor priv-stor)
    (l l-0) (x x-0) (beta beta))
  (deflistener (cat (exp (gen) l) x))
  (precedes ((0 2) (7 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0)) ((6 2) (5 0))
    ((7 1) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na na-0 l l-0)
  (uniq-gen x x-0)
  (absent (x l) (x l-0) (x-0 beta) (x-0 l-0))
  (precur (5 0))
  (gen-st (pv a l-0))
  (facts (neq a b-0) (neq b-0 a) (neq b a) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l) x))
    (exp (gen) (mul x l)) (4 0))
  (strand-map 0 1 2 3 4 5 6)
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w x-0 (rec l-0)))
          (enc na nb a b
            (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
              (exp (gen) (mul x w x-0 (rec l-0))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
         (exp (gen) (mul x w x-0 (rec l-0)))))
      (send
        (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
          (exp (gen) (mul x w x-0 (rec l-0))))))
    ((recv
       (cat (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
         (exp (gen) (mul x w x-0 (rec l-0)))))
      (send
        (cat (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
          (exp (gen) (mul x w x-0 (rec l-0))))))
    ((recv (cat (exp (gen) x-0) w)) (send (cat (exp (gen) x-0) w)))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a b-0 (exp (gen) x-0))))
    ((recv (cat (exp (gen) l) x)) (send (cat (exp (gen) l) x))))
  (label 97)
  (parent 77)
  (unrealized (4 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (beta expt) (l rndx) (w expt) (x-0 l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul (rec l) w x-0)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) w x-0))))
  (deflistener
    (cat (exp (gen) (mul w x-0)) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) w x-0))))
  (deflistener (cat (exp (gen) x-0) w))
  (defstrand init 3 (na na-0) (a b) (b b-0) (priv-stor priv-stor-0)
    (l l-0) (x x-0) (beta beta))
  (deflistener (cat (exp (gen) x) l-0))
  (precedes ((0 2) (7 0)) ((1 1) (0 0)) ((2 1) (6 0)) ((2 2) (0 1))
    ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0)) ((6 2) (5 0))
    ((7 1) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na na-0 l l-0)
  (uniq-gen x x-0)
  (absent (x l) (x l-0) (x-0 beta) (x-0 l-0))
  (precur (5 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq b b-0) (neq b-0 b) (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) x) l-0))
    (exp (gen) (mul x l-0)) (4 0))
  (strand-map 0 1 2 3 4 5 6)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l) w x-0))
          (enc na nb a b
            (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l-0))
              (exp (gen) (mul x (rec l) w x-0)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) w x-0))))
      (send
        (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) w x-0)))))
    ((recv
       (cat (exp (gen) (mul w x-0)) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) w x-0))))
      (send
        (cat (exp (gen) (mul w x-0)) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) w x-0)))))
    ((recv (cat (exp (gen) x-0) w)) (send (cat (exp (gen) x-0) w)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 b b-0 (exp (gen) x-0))))
    ((recv (cat (exp (gen) x) l-0)) (send (cat (exp (gen) x) l-0))))
  (label 98)
  (parent 78)
  (unrealized (0 3) (4 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (beta expt) (l rndx) (w expt) (x-0 l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul (rec l) w x-0)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) w x-0))))
  (deflistener
    (cat (exp (gen) (mul w x-0)) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) w x-0))))
  (deflistener (cat (exp (gen) x-0) w))
  (defstrand init 3 (na na-0) (a b) (b b-0) (priv-stor priv-stor-0)
    (l l-0) (x x-0) (beta beta))
  (deflistener (cat (exp (gen) l-0) x))
  (precedes ((0 2) (7 0)) ((1 1) (0 0)) ((2 1) (6 0)) ((2 2) (0 1))
    ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0)) ((6 2) (5 0))
    ((7 1) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na na-0 l l-0)
  (uniq-gen x x-0)
  (absent (x l) (x l-0) (x-0 beta) (x-0 l-0))
  (precur (5 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq b b-0) (neq b-0 b) (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l-0) x))
    (exp (gen) (mul x l-0)) (4 0))
  (strand-map 0 1 2 3 4 5 6)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l) w x-0))
          (enc na nb a b
            (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l-0))
              (exp (gen) (mul x (rec l) w x-0)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) w x-0))))
      (send
        (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) w x-0)))))
    ((recv
       (cat (exp (gen) (mul w x-0)) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) w x-0))))
      (send
        (cat (exp (gen) (mul w x-0)) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) w x-0)))))
    ((recv (cat (exp (gen) x-0) w)) (send (cat (exp (gen) x-0) w)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 b b-0 (exp (gen) x-0))))
    ((recv (cat (exp (gen) l-0) x)) (send (cat (exp (gen) l-0) x))))
  (label 99)
  (parent 78)
  (unrealized (4 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (a b a-0 b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x l rndx) (beta expt)
    (l-0 rndx) (w expt) (x-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta (mul (rec l-0) w x-0)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) w x-0))))
  (deflistener
    (cat (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) w x-0))))
  (deflistener (cat (exp (gen) x-0) w))
  (defstrand init 3 (na na-0) (a a-0) (b b-0) (priv-stor priv-stor-1)
    (l l-1) (x x-0) (beta beta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self a-0)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) x) l))
  (precedes ((0 2) (8 0)) ((1 1) (0 0)) ((2 2) (0 1)) ((3 1) (0 3))
    ((4 1) (3 0)) ((5 1) (4 0)) ((6 2) (5 0)) ((7 1) (6 0))
    ((8 1) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na na-0 l l-0 l-1)
  (uniq-gen x x-0)
  (absent (x l) (x l-0) (x-0 beta) (x-0 l-1))
  (precur (5 0))
  (gen-st (pv a l-0) (pv a-0 l-1))
  (facts (neq a-0 b-0) (neq b-0 a-0) (neq b a) (neq a b)
    (undisclosed l))
  (leads-to ((1 1) (0 0)) ((7 1) (6 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) x) l))
    (exp (gen) (mul x l)) (4 0))
  (strand-map 0 1 2 3 4 5 6 7)
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l-0) w x-0))
          (enc na nb a b
            (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
              (exp (gen) (mul x (rec l-0) w x-0)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) w x-0))))
      (send
        (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) w x-0)))))
    ((recv
       (cat (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) w x-0))))
      (send
        (cat (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) w x-0)))))
    ((recv (cat (exp (gen) x-0) w)) (send (cat (exp (gen) x-0) w)))
    ((load priv-stor-1 (cat pt-3 (pv a-0 l-1)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a-0 b-0 (exp (gen) x-0))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv a-0 l-1))))
    ((recv (cat (exp (gen) x) l)) (send (cat (exp (gen) x) l))))
  (label 100)
  (parent 79)
  (unrealized (0 3) (4 0) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (a b a-0 b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x l rndx) (beta expt)
    (l-0 rndx) (w expt) (x-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta (mul (rec l-0) w x-0)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) w x-0))))
  (deflistener
    (cat (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) w x-0))))
  (deflistener (cat (exp (gen) x-0) w))
  (defstrand init 3 (na na-0) (a a-0) (b b-0) (priv-stor priv-stor-1)
    (l l-1) (x x-0) (beta beta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self a-0)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) l) x))
  (precedes ((0 2) (8 0)) ((1 1) (0 0)) ((2 2) (0 1)) ((3 1) (0 3))
    ((4 1) (3 0)) ((5 1) (4 0)) ((6 2) (5 0)) ((7 1) (6 0))
    ((8 1) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na na-0 l l-0 l-1)
  (uniq-gen x x-0)
  (absent (x l) (x l-0) (x-0 beta) (x-0 l-1))
  (precur (5 0))
  (gen-st (pv a l-0) (pv a-0 l-1))
  (facts (neq a-0 b-0) (neq b-0 a-0) (neq b a) (neq a b)
    (undisclosed l))
  (leads-to ((1 1) (0 0)) ((7 1) (6 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l) x))
    (exp (gen) (mul x l)) (4 0))
  (strand-map 0 1 2 3 4 5 6 7)
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l-0) w x-0))
          (enc na nb a b
            (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
              (exp (gen) (mul x (rec l-0) w x-0)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) w x-0))))
      (send
        (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) w x-0)))))
    ((recv
       (cat (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) w x-0))))
      (send
        (cat (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) w x-0)))))
    ((recv (cat (exp (gen) x-0) w)) (send (cat (exp (gen) x-0) w)))
    ((load priv-stor-1 (cat pt-3 (pv a-0 l-1)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a-0 b-0 (exp (gen) x-0))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv a-0 l-1))))
    ((recv (cat (exp (gen) l) x)) (send (cat (exp (gen) l) x))))
  (label 101)
  (parent 79)
  (unrealized (4 0) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (a b a-0 name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x l rndx)
    (alpha chi w expt) (y l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta (mul w y (rec l-0))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) (mul w y)) (exp (gen) (mul x l))
      (exp (gen) (mul x w y (rec l-0)))))
  (deflistener
    (cat (exp (gen) (mul w y)) (exp (gen) (mul x l))
      (exp (gen) (mul x w y (rec l-0)))))
  (deflistener (cat (exp (gen) y) w))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b a)
    (priv-stor priv-stor) (l l-0) (y y) (alpha alpha) (chi chi))
  (deflistener (cat (exp (gen) x) l))
  (precedes ((0 2) (7 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0)) ((6 3) (5 0))
    ((7 1) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb-0 l l-0)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y alpha) (y chi) (y l-0))
  (precur (5 0))
  (gen-st (pv a l-0))
  (facts (neq a a-0) (neq a-0 a) (neq b a) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) x) l))
    (exp (gen) (mul x l)) (4 0))
  (strand-map 0 1 2 3 4 5 6)
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y (rec l-0)))
          (enc na nb a b
            (hash (exp (gen) (mul w y)) (exp (gen) (mul x l))
              (exp (gen) (mul x w y (rec l-0))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) (mul w y)) (exp (gen) (mul x l))
         (exp (gen) (mul x w y (rec l-0)))))
      (send
        (hash (exp (gen) (mul w y)) (exp (gen) (mul x l))
          (exp (gen) (mul x w y (rec l-0))))))
    ((recv
       (cat (exp (gen) (mul w y)) (exp (gen) (mul x l))
         (exp (gen) (mul x w y (rec l-0)))))
      (send
        (cat (exp (gen) (mul w y)) (exp (gen) (mul x l))
          (exp (gen) (mul x w y (rec l-0))))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w)))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 a (exp (gen) chi)))
      (send
        (cat (exp (gen) y)
          (enc na-0 nb-0 a-0 a
            (hash (exp (gen) (mul alpha y)) (exp (gen) (mul chi l-0))
              (exp (gen) (mul chi y)))))))
    ((recv (cat (exp (gen) x) l)) (send (cat (exp (gen) x) l))))
  (label 102)
  (parent 86)
  (unrealized (0 3) (4 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (a b a-0 name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x l rndx)
    (alpha chi w expt) (y l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta (mul w y (rec l-0))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) (mul w y)) (exp (gen) (mul x l))
      (exp (gen) (mul x w y (rec l-0)))))
  (deflistener
    (cat (exp (gen) (mul w y)) (exp (gen) (mul x l))
      (exp (gen) (mul x w y (rec l-0)))))
  (deflistener (cat (exp (gen) y) w))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b a)
    (priv-stor priv-stor) (l l-0) (y y) (alpha alpha) (chi chi))
  (deflistener (cat (exp (gen) l) x))
  (precedes ((0 2) (7 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0)) ((6 3) (5 0))
    ((7 1) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb-0 l l-0)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y alpha) (y chi) (y l-0))
  (precur (5 0))
  (gen-st (pv a l-0))
  (facts (neq a a-0) (neq a-0 a) (neq b a) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l) x))
    (exp (gen) (mul x l)) (4 0))
  (strand-map 0 1 2 3 4 5 6)
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y (rec l-0)))
          (enc na nb a b
            (hash (exp (gen) (mul w y)) (exp (gen) (mul x l))
              (exp (gen) (mul x w y (rec l-0))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) (mul w y)) (exp (gen) (mul x l))
         (exp (gen) (mul x w y (rec l-0)))))
      (send
        (hash (exp (gen) (mul w y)) (exp (gen) (mul x l))
          (exp (gen) (mul x w y (rec l-0))))))
    ((recv
       (cat (exp (gen) (mul w y)) (exp (gen) (mul x l))
         (exp (gen) (mul x w y (rec l-0)))))
      (send
        (cat (exp (gen) (mul w y)) (exp (gen) (mul x l))
          (exp (gen) (mul x w y (rec l-0))))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w)))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 a (exp (gen) chi)))
      (send
        (cat (exp (gen) y)
          (enc na-0 nb-0 a-0 a
            (hash (exp (gen) (mul alpha y)) (exp (gen) (mul chi l-0))
              (exp (gen) (mul chi y)))))))
    ((recv (cat (exp (gen) l) x)) (send (cat (exp (gen) l) x))))
  (label 103)
  (parent 86)
  (unrealized (4 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (a b a-0 name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (alpha chi expt) (l rndx) (w expt) (y l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul (rec l) w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) (mul w y)) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) w y))))
  (deflistener
    (cat (exp (gen) (mul w y)) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) w y))))
  (deflistener (cat (exp (gen) y) w))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b)
    (priv-stor priv-stor-0) (l l-0) (y y) (alpha alpha) (chi chi))
  (deflistener (cat (exp (gen) x) l-0))
  (precedes ((0 2) (7 0)) ((1 1) (0 0)) ((2 1) (6 0)) ((2 2) (0 1))
    ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0)) ((6 3) (5 0))
    ((7 1) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb-0 l l-0)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y alpha) (y chi) (y l-0))
  (precur (5 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq b a-0) (neq a-0 b) (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) x) l-0))
    (exp (gen) (mul x l-0)) (4 0))
  (strand-map 0 1 2 3 4 5 6)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l) w y))
          (enc na nb a b
            (hash (exp (gen) (mul w y)) (exp (gen) (mul x l-0))
              (exp (gen) (mul x (rec l) w y)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) (mul w y)) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) w y))))
      (send
        (hash (exp (gen) (mul w y)) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) w y)))))
    ((recv
       (cat (exp (gen) (mul w y)) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) w y))))
      (send
        (cat (exp (gen) (mul w y)) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) w y)))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b (exp (gen) chi)))
      (send
        (cat (exp (gen) y)
          (enc na-0 nb-0 a-0 b
            (hash (exp (gen) (mul alpha y)) (exp (gen) (mul chi l-0))
              (exp (gen) (mul chi y)))))))
    ((recv (cat (exp (gen) x) l-0)) (send (cat (exp (gen) x) l-0))))
  (label 104)
  (parent 87)
  (unrealized (0 3) (4 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (a b a-0 name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (alpha chi expt) (l rndx) (w expt) (y l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul (rec l) w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) (mul w y)) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) w y))))
  (deflistener
    (cat (exp (gen) (mul w y)) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) w y))))
  (deflistener (cat (exp (gen) y) w))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b)
    (priv-stor priv-stor-0) (l l-0) (y y) (alpha alpha) (chi chi))
  (deflistener (cat (exp (gen) l-0) x))
  (precedes ((0 2) (7 0)) ((1 1) (0 0)) ((2 1) (6 0)) ((2 2) (0 1))
    ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0)) ((6 3) (5 0))
    ((7 1) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb-0 l l-0)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y alpha) (y chi) (y l-0))
  (precur (5 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq b a-0) (neq a-0 b) (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l-0) x))
    (exp (gen) (mul x l-0)) (4 0))
  (strand-map 0 1 2 3 4 5 6)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l) w y))
          (enc na nb a b
            (hash (exp (gen) (mul w y)) (exp (gen) (mul x l-0))
              (exp (gen) (mul x (rec l) w y)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) (mul w y)) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) w y))))
      (send
        (hash (exp (gen) (mul w y)) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) w y)))))
    ((recv
       (cat (exp (gen) (mul w y)) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) w y))))
      (send
        (cat (exp (gen) (mul w y)) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) w y)))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b (exp (gen) chi)))
      (send
        (cat (exp (gen) y)
          (enc na-0 nb-0 a-0 b
            (hash (exp (gen) (mul alpha y)) (exp (gen) (mul chi l-0))
              (exp (gen) (mul chi y)))))))
    ((recv (cat (exp (gen) l-0) x)) (send (cat (exp (gen) l-0) x))))
  (label 105)
  (parent 87)
  (unrealized (4 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x l rndx) (alpha chi expt)
    (l-0 rndx) (w expt) (y l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta (mul (rec l-0) w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) (mul w y)) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) w y))))
  (deflistener
    (cat (exp (gen) (mul w y)) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) w y))))
  (deflistener (cat (exp (gen) y) w))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b-0)
    (priv-stor priv-stor-1) (l l-1) (y y) (alpha alpha) (chi chi))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b-0)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) x) l))
  (precedes ((0 2) (8 0)) ((1 1) (0 0)) ((2 2) (0 1)) ((3 1) (0 3))
    ((4 1) (3 0)) ((5 1) (4 0)) ((6 3) (5 0)) ((7 1) (6 0))
    ((8 1) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb-0 l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y alpha) (y chi) (y l-1))
  (precur (5 0))
  (gen-st (pv a l-0) (pv b-0 l-1))
  (facts (neq b-0 a-0) (neq a-0 b-0) (neq b a) (neq a b)
    (undisclosed l))
  (leads-to ((1 1) (0 0)) ((7 1) (6 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) x) l))
    (exp (gen) (mul x l)) (4 0))
  (strand-map 0 1 2 3 4 5 6 7)
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l-0) w y))
          (enc na nb a b
            (hash (exp (gen) (mul w y)) (exp (gen) (mul x l))
              (exp (gen) (mul x (rec l-0) w y)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) (mul w y)) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) w y))))
      (send
        (hash (exp (gen) (mul w y)) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) w y)))))
    ((recv
       (cat (exp (gen) (mul w y)) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) w y))))
      (send
        (cat (exp (gen) (mul w y)) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) w y)))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w)))
    ((load priv-stor-1 (cat pt-3 (pv b-0 l-1)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b-0 (exp (gen) chi)))
      (send
        (cat (exp (gen) y)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul alpha y)) (exp (gen) (mul chi l-1))
              (exp (gen) (mul chi y)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b-0 l-1))))
    ((recv (cat (exp (gen) x) l)) (send (cat (exp (gen) x) l))))
  (label 106)
  (parent 88)
  (unrealized (0 3) (4 0) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x l rndx) (alpha chi expt)
    (l-0 rndx) (w expt) (y l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta (mul (rec l-0) w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) (mul w y)) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) w y))))
  (deflistener
    (cat (exp (gen) (mul w y)) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) w y))))
  (deflistener (cat (exp (gen) y) w))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b-0)
    (priv-stor priv-stor-1) (l l-1) (y y) (alpha alpha) (chi chi))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b-0)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) l) x))
  (precedes ((0 2) (8 0)) ((1 1) (0 0)) ((2 2) (0 1)) ((3 1) (0 3))
    ((4 1) (3 0)) ((5 1) (4 0)) ((6 3) (5 0)) ((7 1) (6 0))
    ((8 1) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb-0 l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y alpha) (y chi) (y l-1))
  (precur (5 0))
  (gen-st (pv a l-0) (pv b-0 l-1))
  (facts (neq b-0 a-0) (neq a-0 b-0) (neq b a) (neq a b)
    (undisclosed l))
  (leads-to ((1 1) (0 0)) ((7 1) (6 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l) x))
    (exp (gen) (mul x l)) (4 0))
  (strand-map 0 1 2 3 4 5 6 7)
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l-0) w y))
          (enc na nb a b
            (hash (exp (gen) (mul w y)) (exp (gen) (mul x l))
              (exp (gen) (mul x (rec l-0) w y)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) (mul w y)) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) w y))))
      (send
        (hash (exp (gen) (mul w y)) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) w y)))))
    ((recv
       (cat (exp (gen) (mul w y)) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) w y))))
      (send
        (cat (exp (gen) (mul w y)) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) w y)))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w)))
    ((load priv-stor-1 (cat pt-3 (pv b-0 l-1)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b-0 (exp (gen) chi)))
      (send
        (cat (exp (gen) y)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul alpha y)) (exp (gen) (mul chi l-1))
              (exp (gen) (mul chi y)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b-0 l-1))))
    ((recv (cat (exp (gen) l) x)) (send (cat (exp (gen) l) x))))
  (label 107)
  (parent 88)
  (unrealized (4 0) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l-1) (eta (mul y (rec l) l-1)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l) (y y) (alpha (mul (rec l) l-0 l-1)) (chi (mul x (rec l) l-1)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 2) (0 1))
    ((2 2) (7 0)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x (rec l) l-1)) (y (mul (rec l) l-0 l-1)) (y l)
    (x l-0) (x l-1))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq b a) (neq a b) (undisclosed l-1))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 9 2 ltx-gen 3) (exp (gen) l-1) (7 0))
  (strand-map 0 1 2 3 4 5 6 7 8)
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l) l-1))
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l) l-1)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x (rec l) l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l) l-1)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0)))
  (label 108)
  (parent 94)
  (unrealized (0 3) (3 2))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx)
    (w expt))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-1) (x x) (beta l) (eta (mul y l (rec l-0))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-0) (y y) (alpha (mul l (rec l-0) l-1))
    (chi (mul x l (rec l-0))))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul l l-1)) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) l) l-1))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-1))
  (deflistener (cat (exp (gen) (mul l (rec w))) w))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x l (rec l-0))) (y (mul l (rec l-0) l-1)) (y l-0)
    (x l) (x l-1))
  (precur (9 0))
  (gen-st (pv a l-1) (pv b l-0))
  (facts (neq b a) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul l (rec w))) w)) (exp (gen) l)
    (7 0))
  (strand-map 0 1 2 3 4 5 6 7 8)
  (traces
    ((load priv-stor (cat pt (pv a l-1)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y l (rec l-0)))
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-1))
              (exp (gen) (mul x l))
              (exp (gen) (mul y x l (rec l-0))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x l (rec l-0)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-1))
              (exp (gen) (mul x l))
              (exp (gen) (mul y x l (rec l-0))))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul l l-1)) l-0))
      (send (cat (exp (gen) (mul l l-1)) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l-0))
    ((recv (cat (exp (gen) l) l-1)) (send (cat (exp (gen) l) l-1)))
    ((load priv-stor (cat pt (pv a l-1)))
      (stor priv-stor (cat pt-6 "nil")) (send l-1))
    ((recv (cat (exp (gen) (mul l (rec w))) w))
      (send (cat (exp (gen) (mul l (rec w))) w))))
  (label 109)
  (parent 94)
  (unrealized (0 3) (3 2) (9 0))
  (comment "8 in cohort - 8 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-1) (eta (mul y (rec l-0) l-1)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-0) (y y) (alpha (mul l (rec l-0) l-1))
    (chi (mul x (rec l-0) l-1)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((2 2) (7 0)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x (rec l-0) l-1)) (y (mul l (rec l-0) l-1)) (y l-0)
    (x l) (x l-1))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq b a) (neq a b) (undisclosed l-1))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 9 2 ltx-gen 3) (exp (gen) l-1) (7 0))
  (strand-map 0 1 2 3 4 5 6 7 8)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l-0) l-1))
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l-0) l-1)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x (rec l-0) l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l-0) l-1)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-0)))
  (label 110)
  (parent 95)
  (unrealized (0 3) (3 2))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx)
    (w expt))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta (mul y l (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-1) (y y) (alpha (mul l l-0 (rec l-1)))
    (chi (mul x l (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l (rec l-1))) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) l) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l (rec w))) w))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x l (rec l-1))) (y (mul l l-0 (rec l-1))) (y l-1)
    (x l) (x l-0))
  (precur (9 0))
  (gen-st (pv a l-0) (pv b l-1))
  (facts (neq b a) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul l (rec w))) w)) (exp (gen) l)
    (7 0))
  (strand-map 0 1 2 3 4 5 6 7 8)
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y l (rec l-1)))
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l))
              (exp (gen) (mul y x l (rec l-1))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x l (rec l-1)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l))
              (exp (gen) (mul y x l (rec l-1))))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l (rec l-1))) l-0))
      (send (cat (exp (gen) (mul l (rec l-1))) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-5 "nil")) (send l-0))
    ((recv (cat (exp (gen) l) l-1)) (send (cat (exp (gen) l) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-1))
    ((recv (cat (exp (gen) (mul l (rec w))) w))
      (send (cat (exp (gen) (mul l (rec w))) w))))
  (label 111)
  (parent 95)
  (unrealized (0 3) (3 2) (9 0))
  (comment "8 in cohort - 8 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l-1) (eta (mul y (rec l) l-1)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l) (y y) (alpha (mul (rec l) l-0 l-1)) (chi (mul x (rec l) l-1)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) (mul x (rec l))) l-1))
  (precedes ((0 2) (9 0)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 2) (0 1))
    ((2 2) (7 0)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (3 2)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x (rec l) l-1)) (y (mul (rec l) l-0 l-1)) (y l)
    (x l-0) (x l-1))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq b a) (neq a b) (undisclosed l-1))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul x (rec l))) l-1))
    (exp (gen) (mul x (rec l) l-1)) (3 2))
  (strand-map 0 1 2 3 4 5 6 7 8)
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l) l-1))
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l) l-1)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x (rec l) l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l) l-1)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul x (rec l))) l-1))
      (send (cat (exp (gen) (mul x (rec l))) l-1))))
  (label 112)
  (parent 108)
  (unrealized (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l-1) (eta (mul y (rec l) l-1)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l) (y y) (alpha (mul (rec l) l-0 l-1)) (chi (mul x (rec l) l-1)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) (mul x l-1)) l))
  (precedes ((0 2) (9 0)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 2) (0 1))
    ((2 2) (7 0)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0))
    ((4 1) (9 0)) ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0))
    ((8 2) (7 0)) ((9 1) (3 2)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x (rec l) l-1)) (y (mul (rec l) l-0 l-1)) (y l)
    (x l-0) (x l-1))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq b a) (neq a b) (undisclosed l-1))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) (mul x l-1)) l))
    (exp (gen) (mul x (rec l) l-1)) (3 2))
  (strand-map 0 1 2 3 4 5 6 7 8)
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l) l-1))
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l) l-1)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x (rec l) l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l) l-1)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul x l-1)) l))
      (send (cat (exp (gen) (mul x l-1)) l))))
  (label 113)
  (parent 108)
  (seen 134)
  (seen-ops
    (134
      (operation nonce-test (added-strand ltx-disclose 3) l-1 (9 0)
        (ch-msg priv-stor-1 (cat pt-3 (pv b l-1))))
      (strand-map 0 1 2 3 4 5 6 7 8 9)))
  (unrealized (0 3) (9 0))
  (comment "2 in cohort - 1 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l-1) (eta (mul y (rec l) l-1)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l) (y y) (alpha (mul (rec l) l-0 l-1)) (chi (mul x (rec l) l-1)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l) l-1)) x))
  (precedes ((0 2) (9 0)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 2) (0 1))
    ((2 2) (7 0)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (3 2)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x (rec l) l-1)) (y (mul (rec l) l-0 l-1)) (y l)
    (x l-0) (x l-1))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq b a) (neq a b) (undisclosed l-1))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec l) l-1)) x))
    (exp (gen) (mul x (rec l) l-1)) (3 2))
  (strand-map 0 1 2 3 4 5 6 7 8)
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l) l-1))
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l) l-1)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x (rec l) l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l) l-1)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul (rec l) l-1)) x))
      (send (cat (exp (gen) (mul (rec l) l-1)) x))))
  (label 114)
  (parent 108)
  (unrealized (0 3) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn)
    (y x l l-0 l-1 rndx) (alpha chi expt) (l-2 y-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l-2) (eta (mul y (rec l) l-2)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-2))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l) (y y) (alpha (mul (rec l) l-0 l-2)) (chi (mul x (rec l) l-2)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-2)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-2) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) y-0) (mul l-2 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b-0)
    (priv-stor priv-stor-2) (l l-1) (y y-0) (alpha alpha) (chi chi))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0))
    ((10 3) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-2)
  (uniq-gen y x y-0)
  (absent (y (mul x (rec l) l-2)) (y (mul (rec l) l-0 l-2)) (y l)
    (x l-0) (x l-2) (y-0 l-1) (y-0 alpha) (y-0 chi))
  (precur (9 0))
  (gen-st (pv a l-0) (pv b l) (pv b-0 l-1))
  (facts (neq b-0 a-0) (neq a-0 b-0) (neq b a) (neq a b)
    (undisclosed l-2))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule fact-init-neq0 fact-resp-neq0 gen-st-ltx-disclose-0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand resp 4) (exp (gen) y-0) (9 0))
  (strand-map 0 1 2 3 4 5 6 7 8 9)
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b (exp (gen) l-2) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l) l-2))
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-2))
              (exp (gen) (mul x l-2))
              (exp (gen) (mul y x (rec l) l-2)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-2)))
      (send
        (sig (body b (exp (gen) l-2) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-2)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x (rec l) l-2))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-2))
              (exp (gen) (mul x l-2))
              (exp (gen) (mul y x (rec l) l-2)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-2)) l))
      (send (cat (exp (gen) (mul l-0 l-2)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-2) l-0)) (send (cat (exp (gen) l-2) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) y-0) (mul l-2 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-2 (rec y-0)))))
    ((load priv-stor-2 (cat pt-7 (pv b-0 l-1)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b-0 (exp (gen) chi)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul alpha y-0)) (exp (gen) (mul l-1 chi))
              (exp (gen) (mul chi y-0))))))))
  (label 115)
  (parent 109)
  (unrealized (0 3) (3 2) (7 0) (9 0) (10 0))
  (comment "4 in cohort - 4 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (a b a-0 b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn)
    (y x l l-0 l-1 rndx) (beta expt) (l-2 x-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l-2) (eta (mul y (rec l) l-2)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-2))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l) (y y) (alpha (mul (rec l) l-0 l-2)) (chi (mul x (rec l) l-2)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-2)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-2) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) x-0) (mul l-2 (rec x-0))))
  (defstrand init 3 (na na-0) (a a-0) (b b-0) (priv-stor priv-stor-2)
    (l l-1) (x x-0) (beta beta))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0))
    ((10 2) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-2)
  (uniq-gen y x x-0)
  (absent (y (mul x (rec l) l-2)) (y (mul (rec l) l-0 l-2)) (y l)
    (x l-0) (x l-2) (x-0 l-1) (x-0 beta))
  (precur (9 0))
  (gen-st (pv a l-0) (pv b l) (pv a-0 l-1))
  (facts (neq a-0 b-0) (neq b-0 a-0) (neq b a) (neq a b)
    (undisclosed l-2))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule fact-init-neq0 fact-resp-neq0 gen-st-ltx-disclose-0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand init 3) (exp (gen) x-0) (9 0))
  (strand-map 0 1 2 3 4 5 6 7 8 9)
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b (exp (gen) l-2) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l) l-2))
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-2))
              (exp (gen) (mul x l-2))
              (exp (gen) (mul y x (rec l) l-2)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-2)))
      (send
        (sig (body b (exp (gen) l-2) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-2)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x (rec l) l-2))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-2))
              (exp (gen) (mul x l-2))
              (exp (gen) (mul y x (rec l) l-2)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-2)) l))
      (send (cat (exp (gen) (mul l-0 l-2)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-2) l-0)) (send (cat (exp (gen) l-2) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) x-0) (mul l-2 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-2 (rec x-0)))))
    ((load priv-stor-2 (cat pt-7 (pv a-0 l-1)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0)))
      (send (cat na-0 a-0 b-0 (exp (gen) x-0)))))
  (label 116)
  (parent 109)
  (unrealized (0 3) (3 2) (7 0) (9 0) (10 0))
  (comment "4 in cohort - 4 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l-1) (eta (mul y (rec l) l-1)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l) (y y) (alpha (mul (rec l) l-0 l-1)) (chi (mul x (rec l) l-1)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (gen) l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (9 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x (rec l) l-1)) (y (mul (rec l) l-0 l-1)) (y l)
    (x l-0) (x l-1))
  (precur (9 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq b a) (neq a b) (undisclosed l-1))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (contracted (l-2 l-1) (w l-1)) (gen) (9 0))
  (strand-map 0 1 2 3 4 5 6 7 8 9)
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l) l-1))
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l) l-1)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x (rec l) l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l) l-1)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0))
    ((recv (cat (gen) l-1)) (send (cat (gen) l-1))))
  (label 117)
  (parent 109)
  (unrealized (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y l l-0 l-1 x rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l-1) (eta (mul y (rec l) l-1)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l) (y y) (alpha (mul (rec l) l-0 l-1)) (chi (mul (rec l) l-1 x)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) x) (mul l-1 (rec x))))
  (precedes ((0 2) (9 0)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul (rec l) l-0 l-1)) (y (mul (rec l) l-1 x)) (y l)
    (x l-0) (x l-1))
  (precur (9 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq b a) (neq a b) (undisclosed l-1))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 10 0 init 3) (exp (gen) x-0) (9 0))
  (strand-map 0 1 2 3 4 5 6 7 8 9)
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l) l-1))
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul l-1 x))
              (exp (gen) (mul y (rec l) l-1 x)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul (rec l) l-1 x))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul l-1 x))
              (exp (gen) (mul y (rec l) l-1 x)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) x) (mul l-1 (rec x))))
      (send (cat (exp (gen) x) (mul l-1 (rec x))))))
  (label 118)
  (parent 109)
  (unrealized (0 3) (3 2) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l-1) (eta (mul y (rec l) l-1)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l) (y y) (alpha (mul (rec l) l-0 l-1)) (chi (mul x (rec l) l-1)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) l-1) (one)))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 2) (0 1))
    ((2 2) (9 0)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x (rec l) l-1)) (y (mul (rec l) l-0 l-1)) (y l)
    (x l-0) (x l-1))
  (precur (9 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq b a) (neq a b) (undisclosed l-1))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 10 2 ltx-gen 3) (exp (gen) l-2)
    (9 0))
  (strand-map 0 1 2 3 4 5 6 7 8 9)
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l) l-1))
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l) l-1)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x (rec l) l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l) l-1)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) l-1) (one)))
      (send (cat (exp (gen) l-1) (one)))))
  (label 119)
  (parent 109)
  (unrealized (0 3) (3 2))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (l l-1) (x x) (beta l-0)
    (eta (mul y (rec l) l-0)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (l l) (y y) (alpha (mul (rec l) l-0 l-1))
    (chi (mul x (rec l) l-0)))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-0) l-1))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (2 2)) ((1 2) (0 1)) ((2 3) (0 3)) ((3 1) (2 0))
    ((3 1) (5 0)) ((4 1) (2 1)) ((5 2) (4 0)) ((6 1) (4 0))
    ((7 2) (6 0)) ((8 1) (6 0)) ((9 1) (0 0)) ((9 1) (7 0))
    ((9 2) (8 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x (rec l) l-0)) (y (mul (rec l) l-0 l-1)) (y l)
    (x l-0) (x l-1))
  (precur (8 0))
  (gen-st (pv b l) (pv self l-1))
  (facts (neq b self) (neq self b) (undisclosed l-0))
  (leads-to ((3 1) (2 0)) ((3 1) (5 0)) ((9 1) (0 0)) ((9 1) (7 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 1 10 ltx-gen 3) (exp (gen) l-2)
    (9 0))
  (strand-map 0 9 1 2 3 4 5 6 7 8)
  (traces
    ((load priv-stor-1 (cat pt-6 (pv self l-1)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l) l-0))
          (enc na nb self b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x (rec l) l-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-1 (pv b l)))
      (recv
        (sig
          (body self (exp (gen) (mul (rec l) l-0 l-1))
            (pubk "sig" self)) (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul x (rec l) l-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x (rec l) l-0)))))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-0 (cat pt-1 (pv b l)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) l-1)) (send (cat (exp (gen) l-0) l-1)))
    ((load priv-stor-1 (cat pt-6 (pv self l-1)))
      (stor priv-stor-1 (cat pt-4 "nil")) (send l-1))
    ((recv (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
      (send (cat (exp (gen) l-1) (mul l-0 (rec l-1)))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))))
  (label 120)
  (parent 109)
  (unrealized (0 3) (2 2) (6 0) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b self) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul y l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b self)
    (priv-stor priv-stor-1) (l l-1) (y y) (alpha (mul l l-0 (rec l-1)))
    (chi (mul x l-0 (rec l-1))))
  (deflistener (cat (exp (gen) (mul l l-0)) l-1))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (7 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 1)) ((5 2) (4 0)) ((6 1) (4 0))
    ((7 2) (6 0)) ((8 1) (6 0)) ((9 1) (3 0)) ((9 1) (5 0))
    ((9 2) (8 0)))
  (non-orig (privk "sig" self))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x l-0 (rec l-1))) (y (mul l l-0 (rec l-1))) (y l-1)
    (x l) (x l-0))
  (precur (8 0))
  (gen-st (pv a l) (pv self l-1))
  (facts (neq self a) (neq a self) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (7 0)) ((9 1) (3 0)) ((9 1) (5 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 4 10 ltx-gen 3) (exp (gen) l-2)
    (9 0))
  (strand-map 0 1 2 3 9 4 5 6 7 8)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (send (cat na a self (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y l-0 (rec l-1)))
          (enc na nb a self
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-1 (cat pt-6 (pv self l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a self (exp (gen) (mul x l-0 (rec l-1)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a self
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((recv (cat (exp (gen) (mul l l-0)) l-1))
      (send (cat (exp (gen) (mul l l-0)) l-1)))
    ((load priv-stor-1 (cat pt-6 (pv self l-1)))
      (stor priv-stor-1 (cat pt-3 "nil")) (send l-1))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-4 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
      (send (cat (exp (gen) l-1) (mul l-0 (rec l-1)))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))))
  (label 121)
  (parent 109)
  (unrealized (0 3) (3 2) (6 0) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 ignore-2 mesg) (na nb data)
    (a b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pt-8 pval)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn)
    (y x l l-0 l-1 l-2 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l-1) (eta (mul y (rec l) l-1)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l) (y y) (alpha (mul (rec l) l-0 l-1)) (chi (mul x (rec l) l-1)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) l-2) (mul l-1 (rec l-2))))
  (defstrand ltx-gen 3 (ignore ignore-2) (self self)
    (priv-stor priv-stor-2) (l l-2))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0))
    ((10 2) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1 l-2)
  (uniq-gen y x)
  (absent (y (mul x (rec l) l-1)) (y (mul (rec l) l-0 l-1)) (y l)
    (x l-0) (x l-1))
  (precur (9 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq b a) (neq a b) (undisclosed l-1))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 3) (exp (gen) l-2) (9 0))
  (strand-map 0 1 2 3 4 5 6 7 8 9)
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l) l-1))
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l) l-1)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x (rec l) l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l) l-1)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) l-2) (mul l-1 (rec l-2))))
      (send (cat (exp (gen) l-2) (mul l-1 (rec l-2)))))
    ((load priv-stor-2 (cat pt-7 ignore-2))
      (stor priv-stor-2 (cat pt-8 (pv self l-2)))
      (send
        (sig (body self (exp (gen) l-2) (pubk "sig" self))
          (privk "sig" self)))))
  (label 122)
  (parent 109)
  (unrealized (0 3) (3 2) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-1) (eta (mul y (rec l-0) l-1)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-0) (y y) (alpha (mul l (rec l-0) l-1))
    (chi (mul x (rec l-0) l-1)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul x (rec l-0))) l-1))
  (precedes ((0 2) (9 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((2 2) (7 0)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (3 2)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x (rec l-0) l-1)) (y (mul l (rec l-0) l-1)) (y l-0)
    (x l) (x l-1))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq b a) (neq a b) (undisclosed l-1))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul x (rec l-0))) l-1))
    (exp (gen) (mul x (rec l-0) l-1)) (3 2))
  (strand-map 0 1 2 3 4 5 6 7 8)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l-0) l-1))
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l-0) l-1)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x (rec l-0) l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l-0) l-1)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul x (rec l-0))) l-1))
      (send (cat (exp (gen) (mul x (rec l-0))) l-1))))
  (label 123)
  (parent 110)
  (unrealized (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-1) (eta (mul y (rec l-0) l-1)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-0) (y y) (alpha (mul l (rec l-0) l-1))
    (chi (mul x (rec l-0) l-1)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul x l-1)) l-0))
  (precedes ((0 2) (9 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((2 2) (7 0)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0))
    ((4 1) (9 0)) ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0))
    ((8 2) (7 0)) ((9 1) (3 2)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x (rec l-0) l-1)) (y (mul l (rec l-0) l-1)) (y l-0)
    (x l) (x l-1))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq b a) (neq a b) (undisclosed l-1))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul x l-1)) l-0))
    (exp (gen) (mul x (rec l-0) l-1)) (3 2))
  (strand-map 0 1 2 3 4 5 6 7 8)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l-0) l-1))
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l-0) l-1)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x (rec l-0) l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l-0) l-1)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul x l-1)) l-0))
      (send (cat (exp (gen) (mul x l-1)) l-0))))
  (label 124)
  (parent 110)
  (seen 146)
  (seen-ops
    (146
      (operation nonce-test (added-strand ltx-disclose 3) l-1 (9 0)
        (ch-msg priv-stor-1 (cat pt-3 (pv b l-1))))
      (strand-map 0 1 2 3 4 5 6 7 8 9)))
  (unrealized (0 3) (9 0))
  (comment "2 in cohort - 1 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-1) (eta (mul y (rec l-0) l-1)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-0) (y y) (alpha (mul l (rec l-0) l-1))
    (chi (mul x (rec l-0) l-1)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) x))
  (precedes ((0 2) (9 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((2 2) (7 0)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (3 2)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x (rec l-0) l-1)) (y (mul l (rec l-0) l-1)) (y l-0)
    (x l) (x l-1))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq b a) (neq a b) (undisclosed l-1))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec l-0) l-1)) x))
    (exp (gen) (mul x (rec l-0) l-1)) (3 2))
  (strand-map 0 1 2 3 4 5 6 7 8)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l-0) l-1))
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l-0) l-1)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x (rec l-0) l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l-0) l-1)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) x))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) x))))
  (label 125)
  (parent 110)
  (unrealized (0 3) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn)
    (y x l l-0 l-1 rndx) (alpha chi expt) (l-2 y-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-2) (eta (mul y (rec l-0) l-2)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-2))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-0) (y y) (alpha (mul l (rec l-0) l-2))
    (chi (mul x (rec l-0) l-2)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-2)) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-2) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) y-0) (mul l-2 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b-0)
    (priv-stor priv-stor-2) (l l-1) (y y-0) (alpha alpha) (chi chi))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0))
    ((10 3) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-2)
  (uniq-gen y x y-0)
  (absent (y (mul x (rec l-0) l-2)) (y (mul l (rec l-0) l-2)) (y l-0)
    (x l) (x l-2) (y-0 l-1) (y-0 alpha) (y-0 chi))
  (precur (9 0))
  (gen-st (pv a l) (pv b l-0) (pv b-0 l-1))
  (facts (neq b-0 a-0) (neq a-0 b-0) (neq b a) (neq a b)
    (undisclosed l-2))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0)))
  (rule fact-init-neq0 fact-resp-neq0 gen-st-ltx-disclose-0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand resp 4) (exp (gen) y-0) (9 0))
  (strand-map 0 1 2 3 4 5 6 7 8 9)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-2) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l-0) l-2))
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-2))
              (exp (gen) (mul x l-2))
              (exp (gen) (mul y x (rec l-0) l-2)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-2)))
      (send
        (sig (body b (exp (gen) l-2) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-2)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x (rec l-0) l-2))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-2))
              (exp (gen) (mul x l-2))
              (exp (gen) (mul y x (rec l-0) l-2)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-2)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-2)) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-2) l-0)) (send (cat (exp (gen) l-2) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) y-0) (mul l-2 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-2 (rec y-0)))))
    ((load priv-stor-2 (cat pt-7 (pv b-0 l-1)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b-0 (exp (gen) chi)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul alpha y-0)) (exp (gen) (mul l-1 chi))
              (exp (gen) (mul chi y-0))))))))
  (label 126)
  (parent 111)
  (unrealized (0 3) (3 2) (7 0) (9 0) (10 0))
  (comment "4 in cohort - 4 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (a b a-0 b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn)
    (y x l l-0 l-1 rndx) (beta expt) (l-2 x-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-2) (eta (mul y (rec l-0) l-2)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-2))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-0) (y y) (alpha (mul l (rec l-0) l-2))
    (chi (mul x (rec l-0) l-2)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-2)) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-2) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) x-0) (mul l-2 (rec x-0))))
  (defstrand init 3 (na na-0) (a a-0) (b b-0) (priv-stor priv-stor-2)
    (l l-1) (x x-0) (beta beta))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0))
    ((10 2) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-2)
  (uniq-gen y x x-0)
  (absent (y (mul x (rec l-0) l-2)) (y (mul l (rec l-0) l-2)) (y l-0)
    (x l) (x l-2) (x-0 l-1) (x-0 beta))
  (precur (9 0))
  (gen-st (pv a l) (pv b l-0) (pv a-0 l-1))
  (facts (neq a-0 b-0) (neq b-0 a-0) (neq b a) (neq a b)
    (undisclosed l-2))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0)))
  (rule fact-init-neq0 fact-resp-neq0 gen-st-ltx-disclose-0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand init 3) (exp (gen) x-0) (9 0))
  (strand-map 0 1 2 3 4 5 6 7 8 9)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-2) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l-0) l-2))
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-2))
              (exp (gen) (mul x l-2))
              (exp (gen) (mul y x (rec l-0) l-2)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-2)))
      (send
        (sig (body b (exp (gen) l-2) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-2)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x (rec l-0) l-2))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-2))
              (exp (gen) (mul x l-2))
              (exp (gen) (mul y x (rec l-0) l-2)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-2)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-2)) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-2) l-0)) (send (cat (exp (gen) l-2) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) x-0) (mul l-2 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-2 (rec x-0)))))
    ((load priv-stor-2 (cat pt-7 (pv a-0 l-1)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0)))
      (send (cat na-0 a-0 b-0 (exp (gen) x-0)))))
  (label 127)
  (parent 111)
  (unrealized (0 3) (3 2) (7 0) (9 0) (10 0))
  (comment "4 in cohort - 4 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-1) (eta (mul y (rec l-0) l-1)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-0) (y y) (alpha (mul l (rec l-0) l-1))
    (chi (mul x (rec l-0) l-1)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (gen) l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (9 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x (rec l-0) l-1)) (y (mul l (rec l-0) l-1)) (y l-0)
    (x l) (x l-1))
  (precur (9 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq b a) (neq a b) (undisclosed l-1))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (contracted (l-2 l-1) (w l-1)) (gen) (9 0))
  (strand-map 0 1 2 3 4 5 6 7 8 9)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l-0) l-1))
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l-0) l-1)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x (rec l-0) l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l-0) l-1)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (gen) l-1)) (send (cat (gen) l-1))))
  (label 128)
  (parent 111)
  (unrealized (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y l l-0 l-1 x rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l-1) (eta (mul y (rec l) l-1)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l) (y y) (alpha (mul (rec l) l-0 l-1)) (chi (mul (rec l) l-1 x)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul (rec l) l-1)) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) l-1) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) x) (mul l-1 (rec x))))
  (precedes ((0 2) (9 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul (rec l) l-0 l-1)) (y (mul (rec l) l-1 x)) (y l)
    (x l-0) (x l-1))
  (precur (9 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq b a) (neq a b) (undisclosed l-1))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 10 0 init 3) (exp (gen) x-0) (9 0))
  (strand-map 0 1 2 3 4 5 6 7 8 9)
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l) l-1))
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul l-1 x))
              (exp (gen) (mul y (rec l) l-1 x)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul (rec l) l-1 x))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul l-1 x))
              (exp (gen) (mul y (rec l) l-1 x)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul (rec l) l-1)) l-0))
      (send (cat (exp (gen) (mul (rec l) l-1)) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-5 "nil")) (send l-0))
    ((recv (cat (exp (gen) l-1) l)) (send (cat (exp (gen) l-1) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l))
    ((recv (cat (exp (gen) x) (mul l-1 (rec x))))
      (send (cat (exp (gen) x) (mul l-1 (rec x))))))
  (label 129)
  (parent 111)
  (unrealized (0 3) (3 2) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-1) (eta (mul y (rec l-0) l-1)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-0) (y y) (alpha (mul l (rec l-0) l-1))
    (chi (mul x (rec l-0) l-1)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) l-1) (one)))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((2 2) (9 0)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x (rec l-0) l-1)) (y (mul l (rec l-0) l-1)) (y l-0)
    (x l) (x l-1))
  (precur (9 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq b a) (neq a b) (undisclosed l-1))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 10 2 ltx-gen 3) (exp (gen) l-2)
    (9 0))
  (strand-map 0 1 2 3 4 5 6 7 8 9)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l-0) l-1))
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l-0) l-1)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x (rec l-0) l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l-0) l-1)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) l-1) (one)))
      (send (cat (exp (gen) l-1) (one)))))
  (label 130)
  (parent 111)
  (unrealized (0 3) (3 2))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (l l-1) (x x) (beta l-0)
    (eta (mul y (rec l) l-0)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (l l) (y y) (alpha (mul (rec l) l-0 l-1))
    (chi (mul x (rec l) l-0)))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul (rec l) l-0)) l-1))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (2 2)) ((1 2) (0 1)) ((2 3) (0 3)) ((3 1) (2 0))
    ((3 1) (7 0)) ((4 1) (2 1)) ((5 2) (4 0)) ((6 1) (4 0))
    ((7 2) (6 0)) ((8 1) (6 0)) ((9 1) (0 0)) ((9 1) (5 0))
    ((9 2) (8 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x (rec l) l-0)) (y (mul (rec l) l-0 l-1)) (y l)
    (x l-0) (x l-1))
  (precur (8 0))
  (gen-st (pv b l) (pv self l-1))
  (facts (neq b self) (neq self b) (undisclosed l-0))
  (leads-to ((3 1) (2 0)) ((3 1) (7 0)) ((9 1) (0 0)) ((9 1) (5 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 1 10 ltx-gen 3) (exp (gen) l-2)
    (9 0))
  (strand-map 0 9 1 2 3 4 5 6 7 8)
  (traces
    ((load priv-stor-1 (cat pt-6 (pv self l-1)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l) l-0))
          (enc na nb self b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x (rec l) l-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-1 (pv b l)))
      (recv
        (sig
          (body self (exp (gen) (mul (rec l) l-0 l-1))
            (pubk "sig" self)) (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul x (rec l) l-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x (rec l) l-0)))))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b l))))
    ((recv (cat (exp (gen) (mul (rec l) l-0)) l-1))
      (send (cat (exp (gen) (mul (rec l) l-0)) l-1)))
    ((load priv-stor-1 (cat pt-6 (pv self l-1)))
      (stor priv-stor-1 (cat pt-3 "nil")) (send l-1))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-1 (pv b l)))
      (stor priv-stor-0 (cat pt-4 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
      (send (cat (exp (gen) l-1) (mul l-0 (rec l-1)))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))))
  (label 131)
  (parent 111)
  (unrealized (0 3) (2 2) (6 0) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b self) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul y l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b self)
    (priv-stor priv-stor-1) (l l-1) (y y) (alpha (mul l l-0 (rec l-1)))
    (chi (mul x l-0 (rec l-1))))
  (deflistener (cat (exp (gen) (mul l-0 (rec l-1))) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) l-1))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (5 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 1)) ((5 2) (4 0)) ((6 1) (4 0))
    ((7 2) (6 0)) ((8 1) (6 0)) ((9 1) (3 0)) ((9 1) (7 0))
    ((9 2) (8 0)))
  (non-orig (privk "sig" self))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x l-0 (rec l-1))) (y (mul l l-0 (rec l-1))) (y l-1)
    (x l) (x l-0))
  (precur (8 0))
  (gen-st (pv a l) (pv self l-1))
  (facts (neq self a) (neq a self) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (5 0)) ((9 1) (3 0)) ((9 1) (7 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 4 10 ltx-gen 3) (exp (gen) l-2)
    (9 0))
  (strand-map 0 1 2 3 9 4 5 6 7 8)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (send (cat na a self (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y l-0 (rec l-1)))
          (enc na nb a self
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-1 (cat pt-6 (pv self l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a self (exp (gen) (mul x l-0 (rec l-1)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a self
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((recv (cat (exp (gen) (mul l-0 (rec l-1))) l))
      (send (cat (exp (gen) (mul l-0 (rec l-1))) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) l-1)) (send (cat (exp (gen) l-0) l-1)))
    ((load priv-stor-1 (cat pt-6 (pv self l-1)))
      (stor priv-stor-1 (cat pt-4 "nil")) (send l-1))
    ((recv (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
      (send (cat (exp (gen) l-1) (mul l-0 (rec l-1)))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))))
  (label 132)
  (parent 111)
  (unrealized (0 3) (3 2) (6 0) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 ignore-2 mesg) (na nb data)
    (a b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pt-8 pval)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn)
    (y x l l-0 l-1 l-2 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-1) (eta (mul y (rec l-0) l-1)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-0) (y y) (alpha (mul l (rec l-0) l-1))
    (chi (mul x (rec l-0) l-1)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) l-2) (mul l-1 (rec l-2))))
  (defstrand ltx-gen 3 (ignore ignore-2) (self self)
    (priv-stor priv-stor-2) (l l-2))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0))
    ((10 2) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1 l-2)
  (uniq-gen y x)
  (absent (y (mul x (rec l-0) l-1)) (y (mul l (rec l-0) l-1)) (y l-0)
    (x l) (x l-1))
  (precur (9 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq b a) (neq a b) (undisclosed l-1))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 3) (exp (gen) l-2) (9 0))
  (strand-map 0 1 2 3 4 5 6 7 8 9)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l-0) l-1))
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l-0) l-1)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x (rec l-0) l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l-0) l-1)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) l-2) (mul l-1 (rec l-2))))
      (send (cat (exp (gen) l-2) (mul l-1 (rec l-2)))))
    ((load priv-stor-2 (cat pt-7 ignore-2))
      (stor priv-stor-2 (cat pt-8 (pv self l-2)))
      (send
        (sig (body self (exp (gen) l-2) (pubk "sig" self))
          (privk "sig" self)))))
  (label 133)
  (parent 111)
  (unrealized (0 3) (3 2) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul y l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-1) (y y) (alpha (mul l l-0 (rec l-1)))
    (chi (mul x l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l l-0)) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul x l-0)) l-1))
  (precedes ((0 2) (9 0)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 2) (0 1))
    ((2 2) (7 0)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((6 2) (9 0)) ((7 1) (5 0))
    ((8 2) (7 0)) ((9 1) (3 2)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x l-0 (rec l-1))) (y (mul l l-0 (rec l-1))) (y l-1)
    (x l) (x l-0))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 10 6 ltx-disclose 3) l-1 (9 0)
    (ch-msg priv-stor-1 (cat pt-3 (pv b l-1))))
  (strand-map 0 1 2 3 4 5 6 7 8 9)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y l-0 (rec l-1)))
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x l-0 (rec l-1)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l l-0)) l-1))
      (send (cat (exp (gen) (mul l l-0)) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l-1))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-6 "nil")) (send l))
    ((recv (cat (exp (gen) (mul x l-0)) l-1))
      (send (cat (exp (gen) (mul x l-0)) l-1))))
  (label 134)
  (parent 113)
  (unrealized (0 3) (9 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 rndx)
    (alpha chi expt) (y-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l-1) (eta (mul y (rec l) l-1)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l) (y y) (alpha (mul (rec l) l-0 l-1)) (chi (mul x (rec l) l-1)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) y-0) (mul (rec y-0) l-1)))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b)
    (priv-stor priv-stor-0) (l l-1) (y y-0) (alpha alpha) (chi chi))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (10 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 3) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen y x y-0)
  (absent (y (mul x (rec l) l-1)) (y (mul (rec l) l-0 l-1)) (y l)
    (x l-0) (x l-1) (y-0 alpha) (y-0 chi) (y-0 l-1))
  (precur (9 0))
  (gen-st (pv a l-0) (pv b l) (pv b l-1))
  (facts (neq b a-0) (neq a-0 b) (neq b a) (neq a b) (undisclosed l-1))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (10 0)) ((4 1) (3 0))
    ((4 1) (6 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 2 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv b-0 l-2))) (10 0))
  (strand-map 0 1 2 3 4 5 6 7 8 9 10)
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l) l-1))
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l) l-1)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x (rec l) l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l) l-1)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) y-0) (mul (rec y-0) l-1)))
      (send (cat (exp (gen) y-0) (mul (rec y-0) l-1))))
    ((load priv-stor-0 (cat pt-2 (pv b l-1)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b (exp (gen) chi)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b
            (hash (exp (gen) (mul alpha y-0)) (exp (gen) (mul chi l-1))
              (exp (gen) (mul chi y-0))))))))
  (label 135)
  (parent 115)
  (unrealized (0 3) (3 2) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l rndx)
    (alpha chi expt) (l-0 y-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-1) (x x) (beta l-0) (eta (mul y (rec l) l-0)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l) (y y) (alpha (mul (rec l) l-0 l-1)) (chi (mul x (rec l) l-0)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-0) l-1))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-1))
  (deflistener (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b a)
    (priv-stor priv-stor) (l l-1) (y y-0) (alpha alpha) (chi chi))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((1 1) (10 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 3) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen y x y-0)
  (absent (y (mul x (rec l) l-0)) (y (mul (rec l) l-0 l-1)) (y l)
    (x l-0) (x l-1) (y-0 alpha) (y-0 chi) (y-0 l-1))
  (precur (9 0))
  (gen-st (pv a l-1) (pv b l))
  (facts (neq a a-0) (neq a-0 a) (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((1 1) (10 0)) ((4 1) (3 0))
    ((4 1) (6 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 1 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv b-0 l-2))) (10 0))
  (strand-map 0 1 2 3 4 5 6 7 8 9 10)
  (traces
    ((load priv-stor (cat pt (pv a l-1)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l) l-0))
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x (rec l) l-0)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x (rec l) l-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x (rec l) l-0)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) l-1)) (send (cat (exp (gen) l-0) l-1)))
    ((load priv-stor (cat pt (pv a l-1)))
      (stor priv-stor (cat pt-6 "nil")) (send l-1))
    ((recv (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-0 (rec y-0)))))
    ((load priv-stor (cat pt (pv a l-1)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 a (exp (gen) chi)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 a
            (hash (exp (gen) (mul alpha y-0)) (exp (gen) (mul chi l-1))
              (exp (gen) (mul chi y-0))))))))
  (label 136)
  (parent 115)
  (unrealized (0 3) (3 2) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l rndx)
    (alpha chi expt) (l-0 y-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul y l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-1) (y y) (alpha (mul l l-0 (rec l-1)))
    (chi (mul x l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l l-0)) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b)
    (priv-stor priv-stor-1) (l l-1) (y y-0) (alpha alpha) (chi chi))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0)) ((4 1) (10 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 3) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen y x y-0)
  (absent (y (mul x l-0 (rec l-1))) (y (mul l l-0 (rec l-1))) (y l-1)
    (x l) (x l-0) (y-0 alpha) (y-0 chi) (y-0 l-1))
  (precur (9 0))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq b a-0) (neq a-0 b) (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0))
    ((4 1) (10 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 4 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv b-0 l-2))) (10 0))
  (strand-map 0 1 2 3 4 5 6 7 8 9 10)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y l-0 (rec l-1)))
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x l-0 (rec l-1)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l l-0)) l-1))
      (send (cat (exp (gen) (mul l l-0)) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l-1))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-6 "nil")) (send l))
    ((recv (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-0 (rec y-0)))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b (exp (gen) chi)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b
            (hash (exp (gen) (mul alpha y-0)) (exp (gen) (mul chi l-1))
              (exp (gen) (mul chi y-0))))))))
  (label 137)
  (parent 115)
  (unrealized (0 3) (3 2) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 ignore-2 mesg) (na nb na-0 nb-0 data)
    (a b a-0 b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pt-8 pval)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn)
    (y x l l-0 rndx) (alpha chi expt) (l-1 y-0 l-2 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l-1) (eta (mul y (rec l) l-1)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l) (y y) (alpha (mul (rec l) l-0 l-1)) (chi (mul x (rec l) l-1)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) y-0) (mul l-1 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b-0)
    (priv-stor priv-stor-2) (l l-2) (y y-0) (alpha alpha) (chi chi))
  (defstrand ltx-gen 2 (ignore ignore-2) (self b-0)
    (priv-stor priv-stor-2) (l l-2))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0))
    ((10 3) (9 0)) ((11 1) (10 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1 l-2)
  (uniq-gen y x y-0)
  (absent (y (mul x (rec l) l-1)) (y (mul (rec l) l-0 l-1)) (y l)
    (x l-0) (x l-1) (y-0 alpha) (y-0 chi) (y-0 l-2))
  (precur (9 0))
  (gen-st (pv a l-0) (pv b l) (pv b-0 l-2))
  (facts (neq b-0 a-0) (neq a-0 b-0) (neq b a) (neq a b)
    (undisclosed l-1))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0))
    ((11 1) (10 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv b-0 l-2))) (10 0))
  (strand-map 0 1 2 3 4 5 6 7 8 9 10)
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l) l-1))
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l) l-1)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x (rec l) l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l) l-1)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) y-0) (mul l-1 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-1 (rec y-0)))))
    ((load priv-stor-2 (cat pt-7 (pv b-0 l-2)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b-0 (exp (gen) chi)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul alpha y-0)) (exp (gen) (mul chi l-2))
              (exp (gen) (mul chi y-0)))))))
    ((load priv-stor-2 (cat pt-8 ignore-2))
      (stor priv-stor-2 (cat pt-7 (pv b-0 l-2)))))
  (label 138)
  (parent 115)
  (unrealized (0 3) (3 2) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 rndx)
    (beta expt) (x-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l-1) (eta (mul y (rec l) l-1)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l) (y y) (alpha (mul (rec l) l-0 l-1)) (chi (mul x (rec l) l-1)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) x-0) (mul (rec x-0) l-1)))
  (defstrand init 3 (na na-0) (a b) (b b-0) (priv-stor priv-stor-0)
    (l l-1) (x x-0) (beta beta))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (10 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 2) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen y x x-0)
  (absent (y (mul x (rec l) l-1)) (y (mul (rec l) l-0 l-1)) (y l)
    (x l-0) (x l-1) (x-0 beta) (x-0 l-1))
  (precur (9 0))
  (gen-st (pv a l-0) (pv b l) (pv b l-1))
  (facts (neq b b-0) (neq b-0 b) (neq b a) (neq a b) (undisclosed l-1))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (10 0)) ((4 1) (3 0))
    ((4 1) (6 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 2 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv a-0 l-2))) (10 0))
  (strand-map 0 1 2 3 4 5 6 7 8 9 10)
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l) l-1))
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l) l-1)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x (rec l) l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l) l-1)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) x-0) (mul (rec x-0) l-1)))
      (send (cat (exp (gen) x-0) (mul (rec x-0) l-1))))
    ((load priv-stor-0 (cat pt-2 (pv b l-1)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 b b-0 (exp (gen) x-0)))))
  (label 139)
  (parent 116)
  (unrealized (0 3) (3 2) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l rndx) (beta expt)
    (l-0 x-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-1) (x x) (beta l-0) (eta (mul y (rec l) l-0)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l) (y y) (alpha (mul (rec l) l-0 l-1)) (chi (mul x (rec l) l-0)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-0) l-1))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-1))
  (deflistener (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
  (defstrand init 3 (na na-0) (a a) (b b-0) (priv-stor priv-stor)
    (l l-1) (x x-0) (beta beta))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((1 1) (10 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 2) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen y x x-0)
  (absent (y (mul x (rec l) l-0)) (y (mul (rec l) l-0 l-1)) (y l)
    (x l-0) (x l-1) (x-0 beta) (x-0 l-1))
  (precur (9 0))
  (gen-st (pv a l-1) (pv b l))
  (facts (neq a b-0) (neq b-0 a) (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((1 1) (10 0)) ((4 1) (3 0))
    ((4 1) (6 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 1 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv a-0 l-2))) (10 0))
  (strand-map 0 1 2 3 4 5 6 7 8 9 10)
  (traces
    ((load priv-stor (cat pt (pv a l-1)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l) l-0))
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x (rec l) l-0)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x (rec l) l-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x (rec l) l-0)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) l-1)) (send (cat (exp (gen) l-0) l-1)))
    ((load priv-stor (cat pt (pv a l-1)))
      (stor priv-stor (cat pt-6 "nil")) (send l-1))
    ((recv (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-0 (rec x-0)))))
    ((load priv-stor (cat pt (pv a l-1)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a b-0 (exp (gen) x-0)))))
  (label 140)
  (parent 116)
  (unrealized (0 3) (3 2) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l rndx) (beta expt)
    (l-0 x-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul y l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-1) (y y) (alpha (mul l l-0 (rec l-1)))
    (chi (mul x l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l l-0)) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
  (defstrand init 3 (na na-0) (a b) (b b-0) (priv-stor priv-stor-1)
    (l l-1) (x x-0) (beta beta))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0)) ((4 1) (10 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 2) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen y x x-0)
  (absent (y (mul x l-0 (rec l-1))) (y (mul l l-0 (rec l-1))) (y l-1)
    (x l) (x l-0) (x-0 beta) (x-0 l-1))
  (precur (9 0))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq b b-0) (neq b-0 b) (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0))
    ((4 1) (10 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 4 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv a-0 l-2))) (10 0))
  (strand-map 0 1 2 3 4 5 6 7 8 9 10)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y l-0 (rec l-1)))
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x l-0 (rec l-1)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l l-0)) l-1))
      (send (cat (exp (gen) (mul l l-0)) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l-1))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-6 "nil")) (send l))
    ((recv (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-0 (rec x-0)))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 b b-0 (exp (gen) x-0)))))
  (label 141)
  (parent 116)
  (unrealized (0 3) (3 2) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 ignore-2 mesg) (na nb na-0 data)
    (a b a-0 b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pt-8 pval)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn)
    (y x l l-0 rndx) (beta expt) (l-1 x-0 l-2 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l-1) (eta (mul y (rec l) l-1)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l) (y y) (alpha (mul (rec l) l-0 l-1)) (chi (mul x (rec l) l-1)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
  (defstrand init 3 (na na-0) (a a-0) (b b-0) (priv-stor priv-stor-2)
    (l l-2) (x x-0) (beta beta))
  (defstrand ltx-gen 2 (ignore ignore-2) (self a-0)
    (priv-stor priv-stor-2) (l l-2))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0))
    ((10 2) (9 0)) ((11 1) (10 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1 l-2)
  (uniq-gen y x x-0)
  (absent (y (mul x (rec l) l-1)) (y (mul (rec l) l-0 l-1)) (y l)
    (x l-0) (x l-1) (x-0 beta) (x-0 l-2))
  (precur (9 0))
  (gen-st (pv a l-0) (pv b l) (pv a-0 l-2))
  (facts (neq a-0 b-0) (neq b-0 a-0) (neq b a) (neq a b)
    (undisclosed l-1))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0))
    ((11 1) (10 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv a-0 l-2))) (10 0))
  (strand-map 0 1 2 3 4 5 6 7 8 9 10)
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l) l-1))
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l) l-1)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x (rec l) l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l) l-1)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-1 (rec x-0)))))
    ((load priv-stor-2 (cat pt-7 (pv a-0 l-2)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a-0 b-0 (exp (gen) x-0))))
    ((load priv-stor-2 (cat pt-8 ignore-2))
      (stor priv-stor-2 (cat pt-7 (pv a-0 l-2)))))
  (label 142)
  (parent 116)
  (unrealized (0 3) (3 2) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l-1) (eta (mul y (rec l) l-1)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l) (y y) (alpha (mul (rec l) l-0 l-1)) (chi (mul x (rec l) l-1)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) l-1) (one)))
  (deflistener (cat (exp (gen) (mul x (rec l))) l-1))
  (precedes ((0 2) (10 0)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 2) (0 1))
    ((2 2) (9 0)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 1) (3 2)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x (rec l) l-1)) (y (mul (rec l) l-0 l-1)) (y l)
    (x l-0) (x l-1))
  (precur (9 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq b a) (neq a b) (undisclosed l-1))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul x (rec l))) l-1))
    (exp (gen) (mul x (rec l) l-1)) (3 2))
  (strand-map 0 1 2 3 4 5 6 7 8 9)
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l) l-1))
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l) l-1)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x (rec l) l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l) l-1)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) l-1) (one)))
      (send (cat (exp (gen) l-1) (one))))
    ((recv (cat (exp (gen) (mul x (rec l))) l-1))
      (send (cat (exp (gen) (mul x (rec l))) l-1))))
  (label 143)
  (parent 119)
  (unrealized (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l-1) (eta (mul y (rec l) l-1)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l) (y y) (alpha (mul (rec l) l-0 l-1)) (chi (mul x (rec l) l-1)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) l-1) (one)))
  (deflistener (cat (exp (gen) (mul x l-1)) l))
  (precedes ((0 2) (10 0)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 2) (0 1))
    ((2 2) (9 0)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0))
    ((4 1) (10 0)) ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0))
    ((8 2) (7 0)) ((9 1) (7 0)) ((10 1) (3 2)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x (rec l) l-1)) (y (mul (rec l) l-0 l-1)) (y l)
    (x l-0) (x l-1))
  (precur (9 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq b a) (neq a b) (undisclosed l-1))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) (mul x l-1)) l))
    (exp (gen) (mul x (rec l) l-1)) (3 2))
  (strand-map 0 1 2 3 4 5 6 7 8 9)
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l) l-1))
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l) l-1)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x (rec l) l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l) l-1)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) l-1) (one)))
      (send (cat (exp (gen) l-1) (one))))
    ((recv (cat (exp (gen) (mul x l-1)) l))
      (send (cat (exp (gen) (mul x l-1)) l))))
  (label 144)
  (parent 119)
  (seen 160)
  (seen-ops
    (160
      (operation nonce-test (added-strand ltx-disclose 3) l-1 (10 0)
        (ch-msg priv-stor-1 (cat pt-3 (pv b l-1))))
      (strand-map 0 1 2 3 4 5 6 7 8 9 10)))
  (unrealized (0 3) (10 0))
  (comment "2 in cohort - 1 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l-1) (eta (mul y (rec l) l-1)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l) (y y) (alpha (mul (rec l) l-0 l-1)) (chi (mul x (rec l) l-1)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) l-1) (one)))
  (deflistener (cat (exp (gen) (mul (rec l) l-1)) x))
  (precedes ((0 2) (10 0)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 2) (0 1))
    ((2 2) (9 0)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 1) (3 2)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x (rec l) l-1)) (y (mul (rec l) l-0 l-1)) (y l)
    (x l-0) (x l-1))
  (precur (9 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq b a) (neq a b) (undisclosed l-1))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec l) l-1)) x))
    (exp (gen) (mul x (rec l) l-1)) (3 2))
  (strand-map 0 1 2 3 4 5 6 7 8 9)
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l) l-1))
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l) l-1)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x (rec l) l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l) l-1)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) l-1) (one)))
      (send (cat (exp (gen) l-1) (one))))
    ((recv (cat (exp (gen) (mul (rec l) l-1)) x))
      (send (cat (exp (gen) (mul (rec l) l-1)) x))))
  (label 145)
  (parent 119)
  (unrealized (0 3) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul y l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-1) (y y) (alpha (mul l l-0 (rec l-1)))
    (chi (mul x l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l-0 (rec l-1))) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul x l-0)) l-1))
  (precedes ((0 2) (9 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((2 2) (7 0)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((8 2) (9 0)) ((9 1) (3 2)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x l-0 (rec l-1))) (y (mul l l-0 (rec l-1))) (y l-1)
    (x l) (x l-0))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 10 8 ltx-disclose 3) l-1 (9 0)
    (ch-msg priv-stor-1 (cat pt-3 (pv b l-1))))
  (strand-map 0 1 2 3 4 5 6 7 8 9)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y l-0 (rec l-1)))
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x l-0 (rec l-1)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l-0 (rec l-1))) l))
      (send (cat (exp (gen) (mul l-0 (rec l-1))) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) l-1)) (send (cat (exp (gen) l-0) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-1))
    ((recv (cat (exp (gen) (mul x l-0)) l-1))
      (send (cat (exp (gen) (mul x l-0)) l-1))))
  (label 146)
  (parent 124)
  (unrealized (0 3) (9 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 rndx)
    (alpha chi expt) (y-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-1) (eta (mul y (rec l-0) l-1)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-0) (y y) (alpha (mul l (rec l-0) l-1))
    (chi (mul x (rec l-0) l-1)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) y-0) (mul (rec y-0) l-1)))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b)
    (priv-stor priv-stor-0) (l l-1) (y y-0) (alpha alpha) (chi chi))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (10 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 3) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen y x y-0)
  (absent (y (mul x (rec l-0) l-1)) (y (mul l (rec l-0) l-1)) (y l-0)
    (x l) (x l-1) (y-0 alpha) (y-0 chi) (y-0 l-1))
  (precur (9 0))
  (gen-st (pv a l) (pv b l-0) (pv b l-1))
  (facts (neq b a-0) (neq a-0 b) (neq b a) (neq a b) (undisclosed l-1))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (10 0)) ((4 1) (3 0))
    ((4 1) (8 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 2 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv b-0 l-2))) (10 0))
  (strand-map 0 1 2 3 4 5 6 7 8 9 10)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l-0) l-1))
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l-0) l-1)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x (rec l-0) l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l-0) l-1)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) y-0) (mul (rec y-0) l-1)))
      (send (cat (exp (gen) y-0) (mul (rec y-0) l-1))))
    ((load priv-stor-0 (cat pt-2 (pv b l-1)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b (exp (gen) chi)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b
            (hash (exp (gen) (mul alpha y-0)) (exp (gen) (mul chi l-1))
              (exp (gen) (mul chi y-0))))))))
  (label 147)
  (parent 126)
  (unrealized (0 3) (3 2) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l rndx)
    (alpha chi expt) (l-0 y-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-1) (x x) (beta l-0) (eta (mul y (rec l) l-0)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l) (y y) (alpha (mul (rec l) l-0 l-1)) (chi (mul x (rec l) l-0)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul (rec l) l-0)) l-1))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-1))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b a)
    (priv-stor priv-stor) (l l-1) (y y-0) (alpha alpha) (chi chi))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((1 1) (10 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 3) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen y x y-0)
  (absent (y (mul x (rec l) l-0)) (y (mul (rec l) l-0 l-1)) (y l)
    (x l-0) (x l-1) (y-0 alpha) (y-0 chi) (y-0 l-1))
  (precur (9 0))
  (gen-st (pv a l-1) (pv b l))
  (facts (neq a a-0) (neq a-0 a) (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((1 1) (10 0)) ((4 1) (3 0))
    ((4 1) (8 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 1 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv b-0 l-2))) (10 0))
  (strand-map 0 1 2 3 4 5 6 7 8 9 10)
  (traces
    ((load priv-stor (cat pt (pv a l-1)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l) l-0))
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x (rec l) l-0)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x (rec l) l-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x (rec l) l-0)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul (rec l) l-0)) l-1))
      (send (cat (exp (gen) (mul (rec l) l-0)) l-1)))
    ((load priv-stor (cat pt (pv a l-1)))
      (stor priv-stor (cat pt-5 "nil")) (send l-1))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l))
    ((recv (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-0 (rec y-0)))))
    ((load priv-stor (cat pt (pv a l-1)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 a (exp (gen) chi)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 a
            (hash (exp (gen) (mul alpha y-0)) (exp (gen) (mul chi l-1))
              (exp (gen) (mul chi y-0))))))))
  (label 148)
  (parent 126)
  (unrealized (0 3) (3 2) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l rndx)
    (alpha chi expt) (l-0 y-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul y l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-1) (y y) (alpha (mul l l-0 (rec l-1)))
    (chi (mul x l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l-0 (rec l-1))) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b)
    (priv-stor priv-stor-1) (l l-1) (y y-0) (alpha alpha) (chi chi))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0)) ((4 1) (10 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 3) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen y x y-0)
  (absent (y (mul x l-0 (rec l-1))) (y (mul l l-0 (rec l-1))) (y l-1)
    (x l) (x l-0) (y-0 alpha) (y-0 chi) (y-0 l-1))
  (precur (9 0))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq b a-0) (neq a-0 b) (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0))
    ((4 1) (10 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 4 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv b-0 l-2))) (10 0))
  (strand-map 0 1 2 3 4 5 6 7 8 9 10)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y l-0 (rec l-1)))
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x l-0 (rec l-1)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l-0 (rec l-1))) l))
      (send (cat (exp (gen) (mul l-0 (rec l-1))) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) l-1)) (send (cat (exp (gen) l-0) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-1))
    ((recv (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-0 (rec y-0)))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b (exp (gen) chi)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b
            (hash (exp (gen) (mul alpha y-0)) (exp (gen) (mul chi l-1))
              (exp (gen) (mul chi y-0))))))))
  (label 149)
  (parent 126)
  (unrealized (0 3) (3 2) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 ignore-2 mesg) (na nb na-0 nb-0 data)
    (a b a-0 b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pt-8 pval)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn)
    (y x l l-0 rndx) (alpha chi expt) (l-1 y-0 l-2 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-1) (eta (mul y (rec l-0) l-1)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-0) (y y) (alpha (mul l (rec l-0) l-1))
    (chi (mul x (rec l-0) l-1)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) y-0) (mul l-1 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b-0)
    (priv-stor priv-stor-2) (l l-2) (y y-0) (alpha alpha) (chi chi))
  (defstrand ltx-gen 2 (ignore ignore-2) (self b-0)
    (priv-stor priv-stor-2) (l l-2))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0))
    ((10 3) (9 0)) ((11 1) (10 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1 l-2)
  (uniq-gen y x y-0)
  (absent (y (mul x (rec l-0) l-1)) (y (mul l (rec l-0) l-1)) (y l-0)
    (x l) (x l-1) (y-0 alpha) (y-0 chi) (y-0 l-2))
  (precur (9 0))
  (gen-st (pv a l) (pv b l-0) (pv b-0 l-2))
  (facts (neq b-0 a-0) (neq a-0 b-0) (neq b a) (neq a b)
    (undisclosed l-1))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0))
    ((11 1) (10 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv b-0 l-2))) (10 0))
  (strand-map 0 1 2 3 4 5 6 7 8 9 10)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l-0) l-1))
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l-0) l-1)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x (rec l-0) l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l-0) l-1)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) y-0) (mul l-1 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-1 (rec y-0)))))
    ((load priv-stor-2 (cat pt-7 (pv b-0 l-2)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b-0 (exp (gen) chi)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul alpha y-0)) (exp (gen) (mul chi l-2))
              (exp (gen) (mul chi y-0)))))))
    ((load priv-stor-2 (cat pt-8 ignore-2))
      (stor priv-stor-2 (cat pt-7 (pv b-0 l-2)))))
  (label 150)
  (parent 126)
  (unrealized (0 3) (3 2) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 rndx)
    (beta expt) (x-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-1) (eta (mul y (rec l-0) l-1)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-0) (y y) (alpha (mul l (rec l-0) l-1))
    (chi (mul x (rec l-0) l-1)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) x-0) (mul (rec x-0) l-1)))
  (defstrand init 3 (na na-0) (a b) (b b-0) (priv-stor priv-stor-0)
    (l l-1) (x x-0) (beta beta))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (10 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 2) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen y x x-0)
  (absent (y (mul x (rec l-0) l-1)) (y (mul l (rec l-0) l-1)) (y l-0)
    (x l) (x l-1) (x-0 beta) (x-0 l-1))
  (precur (9 0))
  (gen-st (pv a l) (pv b l-0) (pv b l-1))
  (facts (neq b b-0) (neq b-0 b) (neq b a) (neq a b) (undisclosed l-1))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (10 0)) ((4 1) (3 0))
    ((4 1) (8 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 2 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv a-0 l-2))) (10 0))
  (strand-map 0 1 2 3 4 5 6 7 8 9 10)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l-0) l-1))
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l-0) l-1)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x (rec l-0) l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l-0) l-1)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) x-0) (mul (rec x-0) l-1)))
      (send (cat (exp (gen) x-0) (mul (rec x-0) l-1))))
    ((load priv-stor-0 (cat pt-2 (pv b l-1)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 b b-0 (exp (gen) x-0)))))
  (label 151)
  (parent 127)
  (unrealized (0 3) (3 2) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l rndx) (beta expt)
    (l-0 x-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-1) (x x) (beta l-0) (eta (mul y (rec l) l-0)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l) (y y) (alpha (mul (rec l) l-0 l-1)) (chi (mul x (rec l) l-0)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul (rec l) l-0)) l-1))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-1))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
  (defstrand init 3 (na na-0) (a a) (b b-0) (priv-stor priv-stor)
    (l l-1) (x x-0) (beta beta))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((1 1) (10 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 2) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen y x x-0)
  (absent (y (mul x (rec l) l-0)) (y (mul (rec l) l-0 l-1)) (y l)
    (x l-0) (x l-1) (x-0 beta) (x-0 l-1))
  (precur (9 0))
  (gen-st (pv a l-1) (pv b l))
  (facts (neq a b-0) (neq b-0 a) (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((1 1) (10 0)) ((4 1) (3 0))
    ((4 1) (8 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 1 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv a-0 l-2))) (10 0))
  (strand-map 0 1 2 3 4 5 6 7 8 9 10)
  (traces
    ((load priv-stor (cat pt (pv a l-1)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l) l-0))
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x (rec l) l-0)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x (rec l) l-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x (rec l) l-0)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul (rec l) l-0)) l-1))
      (send (cat (exp (gen) (mul (rec l) l-0)) l-1)))
    ((load priv-stor (cat pt (pv a l-1)))
      (stor priv-stor (cat pt-5 "nil")) (send l-1))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l))
    ((recv (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-0 (rec x-0)))))
    ((load priv-stor (cat pt (pv a l-1)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a b-0 (exp (gen) x-0)))))
  (label 152)
  (parent 127)
  (unrealized (0 3) (3 2) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l rndx) (beta expt)
    (l-0 x-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul y l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-1) (y y) (alpha (mul l l-0 (rec l-1)))
    (chi (mul x l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l-0 (rec l-1))) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
  (defstrand init 3 (na na-0) (a b) (b b-0) (priv-stor priv-stor-1)
    (l l-1) (x x-0) (beta beta))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0)) ((4 1) (10 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 2) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen y x x-0)
  (absent (y (mul x l-0 (rec l-1))) (y (mul l l-0 (rec l-1))) (y l-1)
    (x l) (x l-0) (x-0 beta) (x-0 l-1))
  (precur (9 0))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq b b-0) (neq b-0 b) (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0))
    ((4 1) (10 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 4 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv a-0 l-2))) (10 0))
  (strand-map 0 1 2 3 4 5 6 7 8 9 10)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y l-0 (rec l-1)))
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x l-0 (rec l-1)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l-0 (rec l-1))) l))
      (send (cat (exp (gen) (mul l-0 (rec l-1))) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) l-1)) (send (cat (exp (gen) l-0) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-1))
    ((recv (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-0 (rec x-0)))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 b b-0 (exp (gen) x-0)))))
  (label 153)
  (parent 127)
  (unrealized (0 3) (3 2) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 ignore-2 mesg) (na nb na-0 data)
    (a b a-0 b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pt-8 pval)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn)
    (y x l l-0 rndx) (beta expt) (l-1 x-0 l-2 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-1) (eta (mul y (rec l-0) l-1)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-0) (y y) (alpha (mul l (rec l-0) l-1))
    (chi (mul x (rec l-0) l-1)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
  (defstrand init 3 (na na-0) (a a-0) (b b-0) (priv-stor priv-stor-2)
    (l l-2) (x x-0) (beta beta))
  (defstrand ltx-gen 2 (ignore ignore-2) (self a-0)
    (priv-stor priv-stor-2) (l l-2))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0))
    ((10 2) (9 0)) ((11 1) (10 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1 l-2)
  (uniq-gen y x x-0)
  (absent (y (mul x (rec l-0) l-1)) (y (mul l (rec l-0) l-1)) (y l-0)
    (x l) (x l-1) (x-0 beta) (x-0 l-2))
  (precur (9 0))
  (gen-st (pv a l) (pv b l-0) (pv a-0 l-2))
  (facts (neq a-0 b-0) (neq b-0 a-0) (neq b a) (neq a b)
    (undisclosed l-1))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0))
    ((11 1) (10 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv a-0 l-2))) (10 0))
  (strand-map 0 1 2 3 4 5 6 7 8 9 10)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l-0) l-1))
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l-0) l-1)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x (rec l-0) l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l-0) l-1)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-1 (rec x-0)))))
    ((load priv-stor-2 (cat pt-7 (pv a-0 l-2)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a-0 b-0 (exp (gen) x-0))))
    ((load priv-stor-2 (cat pt-8 ignore-2))
      (stor priv-stor-2 (cat pt-7 (pv a-0 l-2)))))
  (label 154)
  (parent 127)
  (unrealized (0 3) (3 2) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-1) (eta (mul y (rec l-0) l-1)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-0) (y y) (alpha (mul l (rec l-0) l-1))
    (chi (mul x (rec l-0) l-1)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) l-1) (one)))
  (deflistener (cat (exp (gen) (mul x (rec l-0))) l-1))
  (precedes ((0 2) (10 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((2 2) (9 0)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 1) (3 2)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x (rec l-0) l-1)) (y (mul l (rec l-0) l-1)) (y l-0)
    (x l) (x l-1))
  (precur (9 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq b a) (neq a b) (undisclosed l-1))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul x (rec l-0))) l-1))
    (exp (gen) (mul x (rec l-0) l-1)) (3 2))
  (strand-map 0 1 2 3 4 5 6 7 8 9)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l-0) l-1))
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l-0) l-1)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x (rec l-0) l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l-0) l-1)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) l-1) (one)))
      (send (cat (exp (gen) l-1) (one))))
    ((recv (cat (exp (gen) (mul x (rec l-0))) l-1))
      (send (cat (exp (gen) (mul x (rec l-0))) l-1))))
  (label 155)
  (parent 130)
  (unrealized (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-1) (eta (mul y (rec l-0) l-1)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-0) (y y) (alpha (mul l (rec l-0) l-1))
    (chi (mul x (rec l-0) l-1)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) l-1) (one)))
  (deflistener (cat (exp (gen) (mul x l-1)) l-0))
  (precedes ((0 2) (10 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((2 2) (9 0)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0))
    ((4 1) (10 0)) ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0))
    ((8 2) (7 0)) ((9 1) (7 0)) ((10 1) (3 2)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x (rec l-0) l-1)) (y (mul l (rec l-0) l-1)) (y l-0)
    (x l) (x l-1))
  (precur (9 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq b a) (neq a b) (undisclosed l-1))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul x l-1)) l-0))
    (exp (gen) (mul x (rec l-0) l-1)) (3 2))
  (strand-map 0 1 2 3 4 5 6 7 8 9)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l-0) l-1))
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l-0) l-1)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x (rec l-0) l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l-0) l-1)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) l-1) (one)))
      (send (cat (exp (gen) l-1) (one))))
    ((recv (cat (exp (gen) (mul x l-1)) l-0))
      (send (cat (exp (gen) (mul x l-1)) l-0))))
  (label 156)
  (parent 130)
  (seen 163)
  (seen-ops
    (163
      (operation nonce-test (added-strand ltx-disclose 3) l-1 (10 0)
        (ch-msg priv-stor-1 (cat pt-3 (pv b l-1))))
      (strand-map 0 1 2 3 4 5 6 7 8 9 10)))
  (unrealized (0 3) (10 0))
  (comment "2 in cohort - 1 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-1) (eta (mul y (rec l-0) l-1)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-0) (y y) (alpha (mul l (rec l-0) l-1))
    (chi (mul x (rec l-0) l-1)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) l-1) (one)))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) x))
  (precedes ((0 2) (10 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((2 2) (9 0)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 1) (3 2)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x (rec l-0) l-1)) (y (mul l (rec l-0) l-1)) (y l-0)
    (x l) (x l-1))
  (precur (9 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq b a) (neq a b) (undisclosed l-1))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec l-0) l-1)) x))
    (exp (gen) (mul x (rec l-0) l-1)) (3 2))
  (strand-map 0 1 2 3 4 5 6 7 8 9)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l-0) l-1))
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l-0) l-1)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x (rec l-0) l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l-0) l-1)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) l-1) (one)))
      (send (cat (exp (gen) l-1) (one))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) x))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) x))))
  (label 157)
  (parent 130)
  (unrealized (0 3) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul y l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-1) (y y) (alpha (mul l l-0 (rec l-1)))
    (chi (mul x l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l l-0)) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul x l-0)) l-1))
  (deflistener (cat (exp (gen) x) l-0))
  (precedes ((0 2) (10 0)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 2) (0 1))
    ((2 2) (7 0)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((6 2) (9 0)) ((7 1) (5 0))
    ((8 2) (7 0)) ((9 1) (3 2)) ((10 1) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x l-0 (rec l-1))) (y (mul l l-0 (rec l-1))) (y l-1)
    (x l) (x l-0))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) x) l-0))
    (exp (gen) (mul x l-0)) (9 0))
  (strand-map 0 1 2 3 4 5 6 7 8 9)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y l-0 (rec l-1)))
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x l-0 (rec l-1)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l l-0)) l-1))
      (send (cat (exp (gen) (mul l l-0)) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l-1))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-6 "nil")) (send l))
    ((recv (cat (exp (gen) (mul x l-0)) l-1))
      (send (cat (exp (gen) (mul x l-0)) l-1)))
    ((recv (cat (exp (gen) x) l-0)) (send (cat (exp (gen) x) l-0))))
  (label 158)
  (parent 134)
  (unrealized (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul y l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-1) (y y) (alpha (mul l l-0 (rec l-1)))
    (chi (mul x l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l l-0)) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul x l-0)) l-1))
  (deflistener (cat (exp (gen) l-0) x))
  (precedes ((0 2) (10 0)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 2) (0 1))
    ((2 2) (7 0)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((6 2) (9 0)) ((7 1) (5 0))
    ((8 2) (7 0)) ((9 1) (3 2)) ((10 1) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x l-0 (rec l-1))) (y (mul l l-0 (rec l-1))) (y l-1)
    (x l) (x l-0))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l-0) x))
    (exp (gen) (mul x l-0)) (9 0))
  (strand-map 0 1 2 3 4 5 6 7 8 9)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y l-0 (rec l-1)))
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x l-0 (rec l-1)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l l-0)) l-1))
      (send (cat (exp (gen) (mul l l-0)) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l-1))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-6 "nil")) (send l))
    ((recv (cat (exp (gen) (mul x l-0)) l-1))
      (send (cat (exp (gen) (mul x l-0)) l-1)))
    ((recv (cat (exp (gen) l-0) x)) (send (cat (exp (gen) l-0) x))))
  (label 159)
  (parent 134)
  (unrealized (0 3) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul y l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-1) (y y) (alpha (mul l l-0 (rec l-1)))
    (chi (mul x l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l l-0)) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (deflistener (cat (exp (gen) (mul x l-0)) l-1))
  (precedes ((0 2) (10 0)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 2) (0 1))
    ((2 2) (9 0)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((6 2) (10 0)) ((7 1) (5 0))
    ((8 2) (7 0)) ((9 1) (7 0)) ((10 1) (3 2)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x l-0 (rec l-1))) (y (mul l l-0 (rec l-1))) (y l-1)
    (x l) (x l-0))
  (precur (9 0))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 11 6 ltx-disclose 3) l-1 (10 0)
    (ch-msg priv-stor-1 (cat pt-3 (pv b l-1))))
  (strand-map 0 1 2 3 4 5 6 7 8 9 10)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y l-0 (rec l-1)))
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x l-0 (rec l-1)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l l-0)) l-1))
      (send (cat (exp (gen) (mul l l-0)) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l-1))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-6 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((recv (cat (exp (gen) (mul x l-0)) l-1))
      (send (cat (exp (gen) (mul x l-0)) l-1))))
  (label 160)
  (parent 144)
  (unrealized (0 3) (10 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul y l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-1) (y y) (alpha (mul l l-0 (rec l-1)))
    (chi (mul x l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l-0 (rec l-1))) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul x l-0)) l-1))
  (deflistener (cat (exp (gen) x) l-0))
  (precedes ((0 2) (10 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((2 2) (7 0)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((8 2) (9 0)) ((9 1) (3 2)) ((10 1) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x l-0 (rec l-1))) (y (mul l l-0 (rec l-1))) (y l-1)
    (x l) (x l-0))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) x) l-0))
    (exp (gen) (mul x l-0)) (9 0))
  (strand-map 0 1 2 3 4 5 6 7 8 9)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y l-0 (rec l-1)))
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x l-0 (rec l-1)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l-0 (rec l-1))) l))
      (send (cat (exp (gen) (mul l-0 (rec l-1))) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) l-1)) (send (cat (exp (gen) l-0) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-1))
    ((recv (cat (exp (gen) (mul x l-0)) l-1))
      (send (cat (exp (gen) (mul x l-0)) l-1)))
    ((recv (cat (exp (gen) x) l-0)) (send (cat (exp (gen) x) l-0))))
  (label 161)
  (parent 146)
  (unrealized (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul y l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-1) (y y) (alpha (mul l l-0 (rec l-1)))
    (chi (mul x l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l-0 (rec l-1))) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul x l-0)) l-1))
  (deflistener (cat (exp (gen) l-0) x))
  (precedes ((0 2) (10 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((2 2) (7 0)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((8 2) (9 0)) ((9 1) (3 2)) ((10 1) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x l-0 (rec l-1))) (y (mul l l-0 (rec l-1))) (y l-1)
    (x l) (x l-0))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l-0) x))
    (exp (gen) (mul x l-0)) (9 0))
  (strand-map 0 1 2 3 4 5 6 7 8 9)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y l-0 (rec l-1)))
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x l-0 (rec l-1)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l-0 (rec l-1))) l))
      (send (cat (exp (gen) (mul l-0 (rec l-1))) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) l-1)) (send (cat (exp (gen) l-0) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-1))
    ((recv (cat (exp (gen) (mul x l-0)) l-1))
      (send (cat (exp (gen) (mul x l-0)) l-1)))
    ((recv (cat (exp (gen) l-0) x)) (send (cat (exp (gen) l-0) x))))
  (label 162)
  (parent 146)
  (unrealized (0 3) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul y l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-1) (y y) (alpha (mul l l-0 (rec l-1)))
    (chi (mul x l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l-0 (rec l-1))) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) l-0) (one)))
  (deflistener (cat (exp (gen) (mul x l-0)) l-1))
  (precedes ((0 2) (10 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((2 2) (9 0)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((8 2) (10 0)) ((9 1) (7 0)) ((10 1) (3 2)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x l-0 (rec l-1))) (y (mul l l-0 (rec l-1))) (y l-1)
    (x l) (x l-0))
  (precur (9 0))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 11 8 ltx-disclose 3) l-1 (10 0)
    (ch-msg priv-stor-1 (cat pt-3 (pv b l-1))))
  (strand-map 0 1 2 3 4 5 6 7 8 9 10)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y l-0 (rec l-1)))
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x l-0 (rec l-1)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l-0 (rec l-1))) l))
      (send (cat (exp (gen) (mul l-0 (rec l-1))) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) l-1)) (send (cat (exp (gen) l-0) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-1))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((recv (cat (exp (gen) (mul x l-0)) l-1))
      (send (cat (exp (gen) (mul x l-0)) l-1))))
  (label 163)
  (parent 156)
  (unrealized (0 3) (10 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul y l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-1) (y y) (alpha (mul l l-0 (rec l-1)))
    (chi (mul x l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l l-0)) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (deflistener (cat (exp (gen) (mul x l-0)) l-1))
  (deflistener (cat (exp (gen) x) l-0))
  (precedes ((0 2) (11 0)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 2) (0 1))
    ((2 2) (9 0)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((6 2) (10 0)) ((7 1) (5 0))
    ((8 2) (7 0)) ((9 1) (7 0)) ((10 1) (3 2)) ((11 1) (10 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x l-0 (rec l-1))) (y (mul l l-0 (rec l-1))) (y l-1)
    (x l) (x l-0))
  (precur (9 0))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) x) l-0))
    (exp (gen) (mul x l-0)) (10 0))
  (strand-map 0 1 2 3 4 5 6 7 8 9 10)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y l-0 (rec l-1)))
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x l-0 (rec l-1)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l l-0)) l-1))
      (send (cat (exp (gen) (mul l l-0)) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l-1))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-6 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((recv (cat (exp (gen) (mul x l-0)) l-1))
      (send (cat (exp (gen) (mul x l-0)) l-1)))
    ((recv (cat (exp (gen) x) l-0)) (send (cat (exp (gen) x) l-0))))
  (label 164)
  (parent 160)
  (unrealized (11 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul y l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-1) (y y) (alpha (mul l l-0 (rec l-1)))
    (chi (mul x l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l l-0)) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (deflistener (cat (exp (gen) (mul x l-0)) l-1))
  (deflistener (cat (exp (gen) l-0) x))
  (precedes ((0 2) (11 0)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 2) (0 1))
    ((2 2) (9 0)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((6 2) (10 0)) ((7 1) (5 0))
    ((8 2) (7 0)) ((9 1) (7 0)) ((10 1) (3 2)) ((11 1) (10 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x l-0 (rec l-1))) (y (mul l l-0 (rec l-1))) (y l-1)
    (x l) (x l-0))
  (precur (9 0))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l-0) x))
    (exp (gen) (mul x l-0)) (10 0))
  (strand-map 0 1 2 3 4 5 6 7 8 9 10)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y l-0 (rec l-1)))
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x l-0 (rec l-1)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l l-0)) l-1))
      (send (cat (exp (gen) (mul l l-0)) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l-1))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-6 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((recv (cat (exp (gen) (mul x l-0)) l-1))
      (send (cat (exp (gen) (mul x l-0)) l-1)))
    ((recv (cat (exp (gen) l-0) x)) (send (cat (exp (gen) l-0) x))))
  (label 165)
  (parent 160)
  (unrealized (0 3) (11 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul y l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-1) (y y) (alpha (mul l l-0 (rec l-1)))
    (chi (mul x l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l-0 (rec l-1))) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) l-0) (one)))
  (deflistener (cat (exp (gen) (mul x l-0)) l-1))
  (deflistener (cat (exp (gen) x) l-0))
  (precedes ((0 2) (11 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((2 2) (9 0)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((8 2) (10 0)) ((9 1) (7 0)) ((10 1) (3 2)) ((11 1) (10 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x l-0 (rec l-1))) (y (mul l l-0 (rec l-1))) (y l-1)
    (x l) (x l-0))
  (precur (9 0))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) x) l-0))
    (exp (gen) (mul x l-0)) (10 0))
  (strand-map 0 1 2 3 4 5 6 7 8 9 10)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y l-0 (rec l-1)))
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x l-0 (rec l-1)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l-0 (rec l-1))) l))
      (send (cat (exp (gen) (mul l-0 (rec l-1))) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) l-1)) (send (cat (exp (gen) l-0) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-1))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((recv (cat (exp (gen) (mul x l-0)) l-1))
      (send (cat (exp (gen) (mul x l-0)) l-1)))
    ((recv (cat (exp (gen) x) l-0)) (send (cat (exp (gen) x) l-0))))
  (label 166)
  (parent 163)
  (unrealized (11 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul y l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-1) (y y) (alpha (mul l l-0 (rec l-1)))
    (chi (mul x l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l-0 (rec l-1))) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) l-0) (one)))
  (deflistener (cat (exp (gen) (mul x l-0)) l-1))
  (deflistener (cat (exp (gen) l-0) x))
  (precedes ((0 2) (11 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((2 2) (9 0)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((8 2) (10 0)) ((9 1) (7 0)) ((10 1) (3 2)) ((11 1) (10 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x l-0 (rec l-1))) (y (mul l l-0 (rec l-1))) (y l-1)
    (x l) (x l-0))
  (precur (9 0))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l-0) x))
    (exp (gen) (mul x l-0)) (10 0))
  (strand-map 0 1 2 3 4 5 6 7 8 9 10)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y l-0 (rec l-1)))
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x l-0 (rec l-1)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l-0 (rec l-1))) l))
      (send (cat (exp (gen) (mul l-0 (rec l-1))) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) l-1)) (send (cat (exp (gen) l-0) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-1))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((recv (cat (exp (gen) (mul x l-0)) l-1))
      (send (cat (exp (gen) (mul x l-0)) l-1)))
    ((recv (cat (exp (gen) l-0) x)) (send (cat (exp (gen) l-0) x))))
  (label 167)
  (parent 163)
  (unrealized (0 3) (11 0))
  (dead)
  (comment "empty cohort"))

(comment "Nothing left to do")

(defprotocol dhcr-um3 diffie-hellman
  (defrole init
    (vars (l x rndx) (beta eta expt) (a b name) (na nb data)
      (priv-stor locn))
    (trace (load priv-stor (pv a l))
      (recv
        (sig (body b (exp (gen) beta) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) eta)
          (enc na nb a b
            (hash (exp (gen) (mul l eta)) (exp (gen) (mul x beta))
              (exp (gen) (mul x eta)))))) (send nb))
    (uniq-orig na)
    (uniq-gen x)
    (absent (x l) (x beta))
    (facts (neq a b))
    (gen-st (pv a l)))
  (defrole resp
    (vars (l y rndx) (alpha chi expt) (a b name) (na nb data)
      (priv-stor locn))
    (trace (load priv-stor (pv b l))
      (recv
        (sig (body a (exp (gen) alpha) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) chi)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y alpha)) (exp (gen) (mul l chi))
              (exp (gen) (mul y chi)))))) (recv nb) (send "done"))
    (uniq-orig nb)
    (uniq-gen y)
    (absent (y l) (y alpha) (y chi))
    (facts (neq a b))
    (gen-st (pv b l)))
  (defrole ltx-gen
    (vars (self name) (l rndx) (priv-stor locn) (ignore mesg))
    (trace (load priv-stor ignore) (stor priv-stor (pv self l))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    (uniq-orig l))
  (defrole ltx-disclose
    (vars (self name) (l rndx) (priv-stor locn))
    (trace (load priv-stor (pv self l)) (stor priv-stor "nil") (send l))
    (gen-st (pv self l)))
  (defrule undisclosed-not-disclosed
    (forall ((z strd) (l rndx))
      (implies
        (and (fact undisclosed l) (p "ltx-disclose" z (idx 2))
          (p "ltx-disclose" "l" z l))
        (false))))
  (defrule ltx-gen-once-inference
    (forall ((z1 z2 strd) (self name))
      (implies
        (and (fact ltx-gen-once self) (p "ltx-gen" z1 (idx 2))
          (p "ltx-gen" "self" z1 self) (p "ltx-gen" z2 (idx 2))
          (p "ltx-gen" "self" z2 self))
        (= z1 z2))))
  (defrule eq-means-=
    (forall ((v1 v2 mesg)) (implies (fact eq v1 v2) (= v1 v2))))
  (defgenrule neqRl_indx
    (forall ((x indx)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_strd
    (forall ((x strd)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_mesg
    (forall ((x mesg)) (implies (fact neq x x) (false))))
  (defgenrule scissorsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (trans z2 i2)
          (leads-to z0 i0 z1 i1) (leads-to z0 i0 z2 i2))
        (and (= z1 z2) (= i1 i2)))))
  (defgenrule cakeRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (leads-to z0 i0 z1 i1)
          (leads-to z0 i0 z2 i2) (prec z1 i1 z2 i2)) (false))))
  (defgenrule no-interruption
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (leads-to z0 i0 z2 i2) (trans z1 i1)
          (same-locn z0 i0 z1 i1) (prec z0 i0 z1 i1) (prec z1 i1 z2 i2))
        (false))))
  (defgenrule shearsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (trans z2 i2)
          (leads-to z0 i0 z1 i1) (same-locn z0 i0 z2 i2)
          (prec z0 i0 z2 i2))
        (or (and (= z1 z2) (= i1 i2)) (prec z1 i1 z2 i2)))))
  (defgenrule invShearsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (same-locn z0 i0 z1 i1)
          (leads-to z1 i1 z2 i2) (prec z0 i0 z2 i2))
        (or (and (= z0 z1) (= i0 i1)) (prec z0 i0 z1 i1)))))
  (defgenrule fact-init-neq0
    (forall ((z strd) (b a name))
      (implies
        (and (p "init" z (idx 2)) (p "init" "a" z a) (p "init" "b" z b))
        (fact neq a b))))
  (defgenrule fact-resp-neq0
    (forall ((z strd) (b a name))
      (implies
        (and (p "resp" z (idx 2)) (p "resp" "a" z a) (p "resp" "b" z b))
        (fact neq a b))))
  (defgenrule trRl_ltx-gen-at-1
    (forall ((z strd))
      (implies (p "ltx-gen" z (idx 2)) (trans z (idx 1)))))
  (defgenrule trRl_ltx-gen-at-0
    (forall ((z strd))
      (implies (p "ltx-gen" z (idx 2)) (trans z (idx 0)))))
  (defgenrule trRl_ltx-disclose-at-1
    (forall ((z strd))
      (implies (p "ltx-disclose" z (idx 2)) (trans z (idx 1)))))
  (defgenrule trRl_ltx-disclose-at-0
    (forall ((z strd))
      (implies (p "ltx-disclose" z (idx 2)) (trans z (idx 0)))))
  (defgenrule gen-st-init-0
    (forall ((z strd) (a name) (l rndx))
      (implies
        (and (p "init" z (idx 1)) (p "init" "l" z l) (p "init" "a" z a))
        (gen-st (pv a l)))))
  (defgenrule gen-st-resp-0
    (forall ((z strd) (b name) (l rndx))
      (implies
        (and (p "resp" z (idx 1)) (p "resp" "l" z l) (p "resp" "b" z b))
        (gen-st (pv b l)))))
  (defgenrule gen-st-ltx-disclose-0
    (forall ((z strd) (self name) (l rndx))
      (implies
        (and (p "ltx-disclose" z (idx 1)) (p "ltx-disclose" "l" z l)
          (p "ltx-disclose" "self" z self)) (gen-st (pv self l)))))
  (lang (sig sign) (body (tuple 3)) (pv (tuple 2))))

(defskeleton dhcr-um3
  (vars (na nb data) (a b name) (pt pval) (priv-stor locn) (l x rndx)
    (eta beta expt))
  (deflistener
    (hash (exp (gen) (mul l eta)) (exp (gen) (mul x beta))
      (exp (gen) (mul x eta))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta beta) (eta eta))
  (non-orig (privk "sig" b))
  (uniq-orig na)
  (uniq-gen x)
  (absent (x l) (x beta))
  (facts (neq a b) (undisclosed beta))
  (goals
    (forall
      ((z zl strd) (na nb data) (a b name) (l x rndx) (eta beta expt))
      (implies
        (and (p "init" z 4) (p "init" "na" z na) (p "init" "nb" z nb)
          (p "init" "a" z a) (p "init" "b" z b) (p "init" "l" z l)
          (p "init" "x" z x) (p "init" "beta" z beta)
          (p "init" "eta" z eta) (non (privk "sig" b)) (ugen x)
          (uniq-at na z 2) (fact neq a b) (fact undisclosed beta)
          (p "" zl 2)
          (p "" "x" zl
            (hash (exp (exp (gen) eta) l) (exp (exp (gen) beta) x)
              (exp (exp (gen) eta) x)))) (false))))
  (traces
    ((recv
       (hash (exp (gen) (mul l eta)) (exp (gen) (mul x beta))
         (exp (gen) (mul x eta))))
      (send
        (hash (exp (gen) (mul l eta)) (exp (gen) (mul x beta))
          (exp (gen) (mul x eta)))))
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) beta) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) eta)
          (enc na nb a b
            (hash (exp (gen) (mul l eta)) (exp (gen) (mul x beta))
              (exp (gen) (mul x eta))))))))
  (label 168)
  (unrealized (0 0) (1 1))
  (preskeleton)
  (origs (na (1 2)))
  (ugens (x (1 2)))
  (comment "Not a skeleton"))

(defskeleton dhcr-um3
  (vars (na nb data) (a b name) (pt pval) (priv-stor locn) (l x rndx)
    (eta beta expt))
  (deflistener
    (hash (exp (gen) (mul l eta)) (exp (gen) (mul x beta))
      (exp (gen) (mul x eta))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta beta) (eta eta))
  (precedes ((1 2) (0 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na)
  (uniq-gen x)
  (absent (x l) (x beta))
  (facts (neq a b) (undisclosed beta))
  (traces
    ((recv
       (hash (exp (gen) (mul l eta)) (exp (gen) (mul x beta))
         (exp (gen) (mul x eta))))
      (send
        (hash (exp (gen) (mul l eta)) (exp (gen) (mul x beta))
          (exp (gen) (mul x eta)))))
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) beta) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) eta)
          (enc na nb a b
            (hash (exp (gen) (mul l eta)) (exp (gen) (mul x beta))
              (exp (gen) (mul x eta))))))))
  (label 169)
  (parent 168)
  (unrealized (1 1))
  (origs (na (1 2)))
  (ugens (x (1 2)))
  (comment "Not closed under rules"))

(defskeleton dhcr-um3
  (vars (na nb data) (a b name) (pt pval) (priv-stor locn) (l x rndx)
    (eta beta expt))
  (deflistener
    (hash (exp (gen) (mul l eta)) (exp (gen) (mul x beta))
      (exp (gen) (mul x eta))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta beta) (eta eta))
  (precedes ((1 2) (0 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na)
  (uniq-gen x)
  (absent (x l) (x beta))
  (gen-st (pv a l))
  (facts (neq b a) (neq a b) (undisclosed beta))
  (rule fact-resp-neq0 gen-st-ltx-disclose-0)
  (traces
    ((recv
       (hash (exp (gen) (mul l eta)) (exp (gen) (mul x beta))
         (exp (gen) (mul x eta))))
      (send
        (hash (exp (gen) (mul l eta)) (exp (gen) (mul x beta))
          (exp (gen) (mul x eta)))))
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) beta) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) eta)
          (enc na nb a b
            (hash (exp (gen) (mul l eta)) (exp (gen) (mul x beta))
              (exp (gen) (mul x eta))))))))
  (label 170)
  (parent 169)
  (unrealized (1 0) (1 1))
  (origs (na (1 2)))
  (ugens (x (1 2)))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore mesg) (na nb data) (a b name) (pt pt-0 pval)
    (priv-stor locn) (x rndx) (eta beta expt) (l rndx))
  (deflistener
    (hash (exp (gen) (mul eta l)) (exp (gen) (mul x beta))
      (exp (gen) (mul x eta))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta beta) (eta eta))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (precedes ((1 2) (0 0)) ((2 1) (1 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l)
  (uniq-gen x)
  (absent (x beta) (x l))
  (gen-st (pv a l))
  (facts (neq b a) (neq a b) (undisclosed beta))
  (leads-to ((2 1) (1 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor (cat pt (pv a l))) (1 0))
  (strand-map 0 1)
  (traces
    ((recv
       (hash (exp (gen) (mul eta l)) (exp (gen) (mul x beta))
         (exp (gen) (mul x eta))))
      (send
        (hash (exp (gen) (mul eta l)) (exp (gen) (mul x beta))
          (exp (gen) (mul x eta)))))
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) beta) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) eta)
          (enc na nb a b
            (hash (exp (gen) (mul eta l)) (exp (gen) (mul x beta))
              (exp (gen) (mul x eta)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l)))))
  (label 171)
  (parent 170)
  (unrealized (0 0) (1 1) (1 3))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (eta expt) (l l-0 rndx))
  (deflistener
    (hash (exp (gen) (mul eta l)) (exp (gen) (mul x l-0))
      (exp (gen) (mul x eta))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta eta))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((1 2) (0 0)) ((2 1) (1 0)) ((3 2) (1 1)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l))
  (facts (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((2 1) (1 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation encryption-test (added-strand ltx-gen 3)
    (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)) (1 1))
  (strand-map 0 1 2)
  (traces
    ((recv
       (hash (exp (gen) (mul eta l)) (exp (gen) (mul x l-0))
         (exp (gen) (mul x eta))))
      (send
        (hash (exp (gen) (mul eta l)) (exp (gen) (mul x l-0))
          (exp (gen) (mul x eta)))))
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) eta)
          (enc na nb a b
            (hash (exp (gen) (mul eta l)) (exp (gen) (mul x l-0))
              (exp (gen) (mul x eta)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))))
  (label 172)
  (parent 171)
  (unrealized (0 0) (1 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (deflistener
    (hash (exp (gen) (mul y l l-0 (rec l-1))) (exp (gen) (mul x l-0))
      (exp (gen) (mul y x l-0 (rec l-1)))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul y l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-1) (y y) (alpha (mul l l-0 (rec l-1)))
    (chi (mul x l-0 (rec l-1))))
  (precedes ((1 2) (4 2)) ((2 1) (1 0)) ((3 2) (1 1)) ((4 3) (0 0))
    ((4 3) (1 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen y x)
  (absent (y (mul x l-0 (rec l-1))) (y (mul l l-0 (rec l-1))) (y l-1)
    (x l) (x l-0))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((2 1) (1 0)))
  (rule fact-resp-neq0 gen-st-ltx-disclose-0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation encryption-test (added-strand resp 4)
    (enc na nb a b
      (hash (exp (gen) (mul y l l-0 (rec l-1))) (exp (gen) (mul x l-0))
        (exp (gen) (mul y x l-0 (rec l-1))))) (1 3))
  (strand-map 0 1 2 3)
  (traces
    ((recv
       (hash (exp (gen) (mul y l l-0 (rec l-1))) (exp (gen) (mul x l-0))
         (exp (gen) (mul y x l-0 (rec l-1)))))
      (send
        (hash (exp (gen) (mul y l l-0 (rec l-1)))
          (exp (gen) (mul x l-0)) (exp (gen) (mul y x l-0 (rec l-1))))))
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y l-0 (rec l-1)))
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x l-0 (rec l-1)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1)))))))))
  (label 173)
  (parent 172)
  (unrealized (0 0) (1 3) (4 0) (4 1) (4 2))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (eta expt) (l l-0 rndx))
  (deflistener
    (hash (exp (gen) (mul eta l)) (exp (gen) (mul x l-0))
      (exp (gen) (mul x eta))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta eta))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) (mul eta l)) (exp (gen) (mul x l-0))
      (exp (gen) (mul x eta))))
  (precedes ((1 2) (0 0)) ((1 2) (4 0)) ((2 1) (1 0)) ((3 2) (1 1))
    ((4 1) (1 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l))
  (facts (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((2 1) (1 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation encryption-test
    (added-listener
      (hash (exp (gen) (mul eta l)) (exp (gen) (mul x l-0))
        (exp (gen) (mul x eta))))
    (enc na nb a b
      (hash (exp (gen) (mul eta l)) (exp (gen) (mul x l-0))
        (exp (gen) (mul x eta)))) (1 3))
  (strand-map 0 1 2 3)
  (traces
    ((recv
       (hash (exp (gen) (mul eta l)) (exp (gen) (mul x l-0))
         (exp (gen) (mul x eta))))
      (send
        (hash (exp (gen) (mul eta l)) (exp (gen) (mul x l-0))
          (exp (gen) (mul x eta)))))
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) eta)
          (enc na nb a b
            (hash (exp (gen) (mul eta l)) (exp (gen) (mul x l-0))
              (exp (gen) (mul x eta)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) (mul eta l)) (exp (gen) (mul x l-0))
         (exp (gen) (mul x eta))))
      (send
        (hash (exp (gen) (mul eta l)) (exp (gen) (mul x l-0))
          (exp (gen) (mul x eta))))))
  (label 174)
  (parent 172)
  (unrealized (0 0) (4 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (y x l l-0 rndx))
  (deflistener
    (hash (exp (gen) (mul y l)) (exp (gen) (mul x l-0))
      (exp (gen) (mul y x))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (l l-0) (y y) (alpha l) (chi x))
  (precedes ((1 2) (4 2)) ((2 1) (1 0)) ((3 1) (4 0)) ((3 2) (1 1))
    ((4 3) (0 0)) ((4 3) (1 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen y x)
  (absent (y x) (y l) (y l-0) (x l) (x l-0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((2 1) (1 0)) ((3 1) (4 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 5 3 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv b l-1))) (4 0))
  (strand-map 0 1 2 3 4)
  (traces
    ((recv
       (hash (exp (gen) (mul y l)) (exp (gen) (mul x l-0))
         (exp (gen) (mul y x))))
      (send
        (hash (exp (gen) (mul y l)) (exp (gen) (mul x l-0))
          (exp (gen) (mul y x)))))
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l)) (exp (gen) (mul x l-0))
              (exp (gen) (mul y x)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l)) (exp (gen) (mul x l-0))
              (exp (gen) (mul y x))))))))
  (label 175)
  (parent 173)
  (unrealized (0 0) (4 1))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (deflistener
    (hash (exp (gen) (mul y l l-0 (rec l-1))) (exp (gen) (mul x l-0))
      (exp (gen) (mul y x l-0 (rec l-1)))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul y l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-1) (y y) (alpha (mul l l-0 (rec l-1)))
    (chi (mul x l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((1 2) (4 2)) ((2 1) (1 0)) ((3 2) (1 1)) ((4 3) (0 0))
    ((4 3) (1 3)) ((5 1) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x l-0 (rec l-1))) (y (mul l l-0 (rec l-1))) (y l-1)
    (x l) (x l-0))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((2 1) (1 0)) ((5 1) (4 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv b l-1))) (4 0))
  (strand-map 0 1 2 3 4)
  (traces
    ((recv
       (hash (exp (gen) (mul y l l-0 (rec l-1))) (exp (gen) (mul x l-0))
         (exp (gen) (mul y x l-0 (rec l-1)))))
      (send
        (hash (exp (gen) (mul y l l-0 (rec l-1)))
          (exp (gen) (mul x l-0)) (exp (gen) (mul y x l-0 (rec l-1))))))
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y l-0 (rec l-1)))
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x l-0 (rec l-1)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1)))))
  (label 176)
  (parent 173)
  (unrealized (0 0) (1 3) (4 1) (4 2))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (eta expt) (l l-0 rndx))
  (deflistener
    (hash (exp (gen) (mul eta l)) (exp (gen) (mul x l-0))
      (exp (gen) (mul x eta))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta eta))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) (mul eta l)) (exp (gen) (mul x l-0))
      (exp (gen) (mul x eta))))
  (deflistener
    (cat (exp (gen) (mul eta l)) (exp (gen) (mul x l-0))
      (exp (gen) (mul x eta))))
  (precedes ((1 2) (0 0)) ((1 2) (5 0)) ((2 1) (1 0)) ((3 2) (1 1))
    ((4 1) (1 3)) ((5 1) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l))
  (facts (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((2 1) (1 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation encryption-test
    (added-listener
      (cat (exp (gen) (mul eta l)) (exp (gen) (mul x l-0))
        (exp (gen) (mul x eta))))
    (hash (exp (gen) (mul eta l)) (exp (gen) (mul x l-0))
      (exp (gen) (mul x eta))) (4 0))
  (strand-map 0 1 2 3 4)
  (traces
    ((recv
       (hash (exp (gen) (mul eta l)) (exp (gen) (mul x l-0))
         (exp (gen) (mul x eta))))
      (send
        (hash (exp (gen) (mul eta l)) (exp (gen) (mul x l-0))
          (exp (gen) (mul x eta)))))
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) eta)
          (enc na nb a b
            (hash (exp (gen) (mul eta l)) (exp (gen) (mul x l-0))
              (exp (gen) (mul x eta)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) (mul eta l)) (exp (gen) (mul x l-0))
         (exp (gen) (mul x eta))))
      (send
        (hash (exp (gen) (mul eta l)) (exp (gen) (mul x l-0))
          (exp (gen) (mul x eta)))))
    ((recv
       (cat (exp (gen) (mul eta l)) (exp (gen) (mul x l-0))
         (exp (gen) (mul x eta))))
      (send
        (cat (exp (gen) (mul eta l)) (exp (gen) (mul x l-0))
          (exp (gen) (mul x eta))))))
  (label 177)
  (parent 174)
  (unrealized (0 0) (5 0))
  (comment "8 in cohort - 8 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (y x l l-0 rndx))
  (deflistener
    (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
      (exp (gen) (mul y x))))
  (defstrand init 4 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (l l-0) (x x) (beta l) (eta y))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (priv-stor priv-stor)
    (l l) (y y) (alpha l-0) (chi x))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((1 2) (3 2)) ((2 1) (3 0)) ((2 2) (1 1)) ((3 3) (0 0))
    ((3 3) (1 3)) ((4 1) (1 0)) ((4 2) (3 1)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen y x)
  (absent (y x) (y l) (y l-0) (x l) (x l-0))
  (gen-st (pv b l) (pv self l-0))
  (facts (neq b self) (neq self b) (undisclosed l))
  (leads-to ((2 1) (3 0)) ((4 1) (1 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 2 5 ltx-gen 3) (exp (gen) l-0) (4 1))
  (strand-map 0 1 4 2 3)
  (traces
    ((recv
       (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
         (exp (gen) (mul y x))))
      (send
        (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
          (exp (gen) (mul y x)))))
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
              (exp (gen) (mul y x)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
              (exp (gen) (mul y x)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 178)
  (parent 175)
  (unrealized (0 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (y x l l-0 rndx) (w expt))
  (deflistener
    (hash (exp (gen) (mul y l)) (exp (gen) (mul x l-0))
      (exp (gen) (mul y x))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (l l-0) (y y) (alpha l) (chi x))
  (deflistener (cat (exp (gen) (mul l (rec w))) w))
  (precedes ((1 2) (4 2)) ((2 1) (1 0)) ((3 1) (4 0)) ((3 2) (1 1))
    ((4 3) (0 0)) ((4 3) (1 3)) ((5 1) (4 1)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen y x)
  (absent (y x) (y l) (y l-0) (x l) (x l-0))
  (precur (5 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((2 1) (1 0)) ((3 1) (4 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul l (rec w))) w)) (exp (gen) l)
    (4 1))
  (strand-map 0 1 2 3 4)
  (traces
    ((recv
       (hash (exp (gen) (mul y l)) (exp (gen) (mul x l-0))
         (exp (gen) (mul y x))))
      (send
        (hash (exp (gen) (mul y l)) (exp (gen) (mul x l-0))
          (exp (gen) (mul y x)))))
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l)) (exp (gen) (mul x l-0))
              (exp (gen) (mul y x)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l)) (exp (gen) (mul x l-0))
              (exp (gen) (mul y x)))))))
    ((recv (cat (exp (gen) (mul l (rec w))) w))
      (send (cat (exp (gen) (mul l (rec w))) w))))
  (label 179)
  (parent 175)
  (unrealized (0 0) (5 0))
  (comment "7 in cohort - 7 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (deflistener
    (hash (exp (gen) (mul y l l-0 (rec l-1))) (exp (gen) (mul x l-0))
      (exp (gen) (mul y x l-0 (rec l-1)))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul y l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-1) (y y) (alpha (mul l l-0 (rec l-1)))
    (chi (mul x l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l l-0)) l-1))
  (precedes ((1 2) (4 2)) ((2 1) (1 0)) ((3 2) (1 1)) ((4 3) (0 0))
    ((4 3) (1 3)) ((5 1) (4 0)) ((5 1) (6 0)) ((6 1) (4 1)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x l-0 (rec l-1))) (y (mul l l-0 (rec l-1))) (y l-1)
    (x l) (x l-0))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((2 1) (1 0)) ((5 1) (4 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul l l-0)) l-1))
    (exp (gen) (mul l l-0 (rec l-1))) (4 1))
  (strand-map 0 1 2 3 4 5)
  (traces
    ((recv
       (hash (exp (gen) (mul y l l-0 (rec l-1))) (exp (gen) (mul x l-0))
         (exp (gen) (mul y x l-0 (rec l-1)))))
      (send
        (hash (exp (gen) (mul y l l-0 (rec l-1)))
          (exp (gen) (mul x l-0)) (exp (gen) (mul y x l-0 (rec l-1))))))
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y l-0 (rec l-1)))
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x l-0 (rec l-1)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l l-0)) l-1))
      (send (cat (exp (gen) (mul l l-0)) l-1))))
  (label 180)
  (parent 176)
  (unrealized (0 0) (1 3) (4 2) (6 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (deflistener
    (hash (exp (gen) (mul y l l-0 (rec l-1))) (exp (gen) (mul x l-0))
      (exp (gen) (mul y x l-0 (rec l-1)))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul y l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-1) (y y) (alpha (mul l l-0 (rec l-1)))
    (chi (mul x l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l (rec l-1))) l-0))
  (precedes ((1 2) (4 2)) ((2 1) (1 0)) ((3 1) (6 0)) ((3 2) (1 1))
    ((4 3) (0 0)) ((4 3) (1 3)) ((5 1) (4 0)) ((6 1) (4 1)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x l-0 (rec l-1))) (y (mul l l-0 (rec l-1))) (y l-1)
    (x l) (x l-0))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((2 1) (1 0)) ((5 1) (4 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul l (rec l-1))) l-0))
    (exp (gen) (mul l l-0 (rec l-1))) (4 1))
  (strand-map 0 1 2 3 4 5)
  (traces
    ((recv
       (hash (exp (gen) (mul y l l-0 (rec l-1))) (exp (gen) (mul x l-0))
         (exp (gen) (mul y x l-0 (rec l-1)))))
      (send
        (hash (exp (gen) (mul y l l-0 (rec l-1)))
          (exp (gen) (mul x l-0)) (exp (gen) (mul y x l-0 (rec l-1))))))
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y l-0 (rec l-1)))
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x l-0 (rec l-1)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l (rec l-1))) l-0))
      (send (cat (exp (gen) (mul l (rec l-1))) l-0))))
  (label 181)
  (parent 176)
  (unrealized (0 0) (1 3) (4 2) (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (deflistener
    (hash (exp (gen) (mul y l l-0 (rec l-1))) (exp (gen) (mul x l-0))
      (exp (gen) (mul y x l-0 (rec l-1)))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul y l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-1) (y y) (alpha (mul l l-0 (rec l-1)))
    (chi (mul x l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l-0 (rec l-1))) l))
  (precedes ((1 2) (4 2)) ((2 1) (1 0)) ((2 1) (6 0)) ((3 2) (1 1))
    ((4 3) (0 0)) ((4 3) (1 3)) ((5 1) (4 0)) ((6 1) (4 1)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x l-0 (rec l-1))) (y (mul l l-0 (rec l-1))) (y l-1)
    (x l) (x l-0))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((2 1) (1 0)) ((5 1) (4 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul l-0 (rec l-1))) l))
    (exp (gen) (mul l l-0 (rec l-1))) (4 1))
  (strand-map 0 1 2 3 4 5)
  (traces
    ((recv
       (hash (exp (gen) (mul y l l-0 (rec l-1))) (exp (gen) (mul x l-0))
         (exp (gen) (mul y x l-0 (rec l-1)))))
      (send
        (hash (exp (gen) (mul y l l-0 (rec l-1)))
          (exp (gen) (mul x l-0)) (exp (gen) (mul y x l-0 (rec l-1))))))
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y l-0 (rec l-1)))
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x l-0 (rec l-1)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l-0 (rec l-1))) l))
      (send (cat (exp (gen) (mul l-0 (rec l-1))) l))))
  (label 182)
  (parent 176)
  (unrealized (0 0) (1 3) (4 2) (6 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (a b a-0 b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x l l-0 rndx)
    (alpha chi expt) (l-1 y rndx))
  (deflistener
    (hash (exp (gen) y) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-1) y))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-1) (x x) (beta l) (eta (mul (rec l-1) y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) y) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-1) y))))
  (deflistener
    (cat (exp (gen) y) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-1) y))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b-0)
    (priv-stor priv-stor-1) (l l-0) (y y) (alpha alpha) (chi chi))
  (precedes ((1 2) (0 0)) ((1 2) (5 0)) ((2 1) (1 0)) ((3 2) (1 1))
    ((4 1) (1 3)) ((5 1) (4 0)) ((6 3) (0 0)) ((6 3) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb-0 l l-1)
  (uniq-gen x y)
  (absent (x l) (x l-1) (y l-0) (y alpha) (y chi))
  (gen-st (pv a l-1) (pv b-0 l-0))
  (facts (neq b-0 a-0) (neq a-0 b-0) (neq b a) (neq a b)
    (undisclosed l))
  (leads-to ((2 1) (1 0)))
  (rule fact-init-neq0 fact-resp-neq0 gen-st-ltx-disclose-0
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand resp 4) (exp (gen) y) (5 0))
  (strand-map 0 1 2 3 4 5)
  (traces
    ((recv
       (hash (exp (gen) y) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-1) y))))
      (send
        (hash (exp (gen) y) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-1) y)))))
    ((load priv-stor (cat pt (pv a l-1)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l-1) y))
          (enc na nb a b
            (hash (exp (gen) y) (exp (gen) (mul x l))
              (exp (gen) (mul x (rec l-1) y)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) y) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-1) y))))
      (send
        (hash (exp (gen) y) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-1) y)))))
    ((recv
       (cat (exp (gen) y) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-1) y))))
      (send
        (cat (exp (gen) y) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-1) y)))))
    ((load priv-stor-1 (cat pt-3 (pv b-0 l-0)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b-0 (exp (gen) chi)))
      (send
        (cat (exp (gen) y)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul alpha y)) (exp (gen) (mul l-0 chi))
              (exp (gen) (mul chi y))))))))
  (label 183)
  (parent 177)
  (unrealized (0 0) (1 3) (5 0) (6 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (a b a-0 b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x l l-0 rndx) (beta expt)
    (l-1 x-0 rndx))
  (deflistener
    (hash (exp (gen) x-0) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-1) x-0))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-1) (x x) (beta l) (eta (mul (rec l-1) x-0)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) x-0) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-1) x-0))))
  (deflistener
    (cat (exp (gen) x-0) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-1) x-0))))
  (defstrand init 3 (na na-0) (a a-0) (b b-0) (priv-stor priv-stor-1)
    (l l-0) (x x-0) (beta beta))
  (precedes ((1 2) (0 0)) ((1 2) (5 0)) ((2 1) (1 0)) ((3 2) (1 1))
    ((4 1) (1 3)) ((5 1) (4 0)) ((6 2) (0 0)) ((6 2) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na na-0 l l-1)
  (uniq-gen x x-0)
  (absent (x l) (x l-1) (x-0 l-0) (x-0 beta))
  (gen-st (pv a l-1) (pv a-0 l-0))
  (facts (neq a-0 b-0) (neq b-0 a-0) (neq b a) (neq a b)
    (undisclosed l))
  (leads-to ((2 1) (1 0)))
  (rule fact-init-neq0 fact-resp-neq0 gen-st-ltx-disclose-0
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand init 3) (exp (gen) x-0) (5 0))
  (strand-map 0 1 2 3 4 5)
  (traces
    ((recv
       (hash (exp (gen) x-0) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-1) x-0))))
      (send
        (hash (exp (gen) x-0) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-1) x-0)))))
    ((load priv-stor (cat pt (pv a l-1)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l-1) x-0))
          (enc na nb a b
            (hash (exp (gen) x-0) (exp (gen) (mul x l))
              (exp (gen) (mul x (rec l-1) x-0)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) x-0) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-1) x-0))))
      (send
        (hash (exp (gen) x-0) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-1) x-0)))))
    ((recv
       (cat (exp (gen) x-0) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-1) x-0))))
      (send
        (cat (exp (gen) x-0) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-1) x-0)))))
    ((load priv-stor-1 (cat pt-3 (pv a-0 l-0)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0)))
      (send (cat na-0 a-0 b-0 (exp (gen) x-0)))))
  (label 184)
  (parent 177)
  (unrealized (0 0) (1 3) (5 0) (6 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (x l l-0 rndx))
  (deflistener
    (hash (gen) (exp (gen) (mul x l)) (exp (gen) (mul x (rec l-0)))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta (rec l-0)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (gen) (exp (gen) (mul x l)) (exp (gen) (mul x (rec l-0)))))
  (deflistener
    (cat (gen) (exp (gen) (mul x l)) (exp (gen) (mul x (rec l-0)))))
  (precedes ((1 2) (0 0)) ((1 2) (5 0)) ((2 1) (1 0)) ((3 2) (1 1))
    ((4 1) (1 3)) ((5 1) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l-0))
  (facts (neq b a) (neq a b) (undisclosed l))
  (leads-to ((2 1) (1 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (contracted (eta (rec l-0)) (l-1 l-0)) (gen)
    (5 0))
  (strand-map 0 1 2 3 4 5)
  (traces
    ((recv
       (hash (gen) (exp (gen) (mul x l)) (exp (gen) (mul x (rec l-0)))))
      (send
        (hash (gen) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0))))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (rec l-0))
          (enc na nb a b
            (hash (gen) (exp (gen) (mul x l))
              (exp (gen) (mul x (rec l-0))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (gen) (exp (gen) (mul x l)) (exp (gen) (mul x (rec l-0)))))
      (send
        (hash (gen) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0))))))
    ((recv
       (cat (gen) (exp (gen) (mul x l)) (exp (gen) (mul x (rec l-0)))))
      (send
        (cat (gen) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0)))))))
  (label 185)
  (parent 177)
  (unrealized (0 0) (1 3) (5 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (l l-0 x rndx))
  (deflistener
    (hash (exp (gen) x) (exp (gen) (mul l-0 x))
      (exp (gen) (mul (rec l) x x))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul (rec l) x)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) x) (exp (gen) (mul l-0 x))
      (exp (gen) (mul (rec l) x x))))
  (deflistener
    (cat (exp (gen) x) (exp (gen) (mul l-0 x))
      (exp (gen) (mul (rec l) x x))))
  (precedes ((1 2) (0 0)) ((1 2) (5 0)) ((2 1) (1 0)) ((3 2) (1 1))
    ((4 1) (1 3)) ((5 1) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l))
  (facts (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((2 1) (1 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 6 1 init 3) (exp (gen) x-0) (5 0))
  (strand-map 0 1 2 3 4 5)
  (traces
    ((recv
       (hash (exp (gen) x) (exp (gen) (mul l-0 x))
         (exp (gen) (mul (rec l) x x))))
      (send
        (hash (exp (gen) x) (exp (gen) (mul l-0 x))
          (exp (gen) (mul (rec l) x x)))))
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l) x))
          (enc na nb a b
            (hash (exp (gen) x) (exp (gen) (mul l-0 x))
              (exp (gen) (mul (rec l) x x)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) x) (exp (gen) (mul l-0 x))
         (exp (gen) (mul (rec l) x x))))
      (send
        (hash (exp (gen) x) (exp (gen) (mul l-0 x))
          (exp (gen) (mul (rec l) x x)))))
    ((recv
       (cat (exp (gen) x) (exp (gen) (mul l-0 x))
         (exp (gen) (mul (rec l) x x))))
      (send
        (cat (exp (gen) x) (exp (gen) (mul l-0 x))
          (exp (gen) (mul (rec l) x x))))))
  (label 186)
  (parent 177)
  (unrealized (0 0) (1 3) (5 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (x l l-0 rndx))
  (deflistener
    (hash (exp (gen) l-0) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) l-0))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul (rec l) l-0)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) l-0) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) l-0))))
  (deflistener
    (cat (exp (gen) l-0) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) l-0))))
  (precedes ((1 2) (0 0)) ((1 2) (5 0)) ((2 1) (1 0)) ((3 2) (1 1))
    ((4 1) (1 3)) ((5 1) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l))
  (facts (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((2 1) (1 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 6 3 ltx-gen 3) (exp (gen) l-1) (5 0))
  (strand-map 0 1 2 3 4 5)
  (traces
    ((recv
       (hash (exp (gen) l-0) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) l-0))))
      (send
        (hash (exp (gen) l-0) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) l-0)))))
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l) l-0))
          (enc na nb a b
            (hash (exp (gen) l-0) (exp (gen) (mul x l-0))
              (exp (gen) (mul x (rec l) l-0)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) l-0) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) l-0))))
      (send
        (hash (exp (gen) l-0) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) l-0)))))
    ((recv
       (cat (exp (gen) l-0) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) l-0))))
      (send
        (cat (exp (gen) l-0) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) l-0))))))
  (label 187)
  (parent 177)
  (unrealized (0 0) (1 3) (5 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (x l l-0 rndx))
  (deflistener
    (hash (exp (gen) l-0) (exp (gen) (mul x l)) (exp (gen) x)))
  (defstrand init 4 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (l l-0) (x x) (beta l) (eta (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (deflistener
    (hash (exp (gen) l-0) (exp (gen) (mul x l)) (exp (gen) x)))
  (deflistener
    (cat (exp (gen) l-0) (exp (gen) (mul x l)) (exp (gen) x)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((1 2) (0 0)) ((1 2) (4 0)) ((2 2) (1 1)) ((3 1) (1 3))
    ((4 1) (3 0)) ((5 1) (1 0)) ((5 2) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv self l-0))
  (facts (neq b self) (neq self b) (undisclosed l))
  (leads-to ((5 1) (1 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 2 6 ltx-gen 3) (exp (gen) l-1) (5 0))
  (strand-map 0 1 5 2 3 4)
  (traces
    ((recv (hash (exp (gen) l-0) (exp (gen) (mul x l)) (exp (gen) x)))
      (send (hash (exp (gen) l-0) (exp (gen) (mul x l)) (exp (gen) x))))
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (gen)
          (enc na nb self b
            (hash (exp (gen) l-0) (exp (gen) (mul x l))
              (exp (gen) x))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) l-0) (exp (gen) (mul x l)) (exp (gen) x)))
      (send (hash (exp (gen) l-0) (exp (gen) (mul x l)) (exp (gen) x))))
    ((recv (cat (exp (gen) l-0) (exp (gen) (mul x l)) (exp (gen) x)))
      (send (cat (exp (gen) l-0) (exp (gen) (mul x l)) (exp (gen) x))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 188)
  (parent 177)
  (unrealized (0 0) (4 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x l l-0 l-1 rndx))
  (deflistener
    (hash (exp (gen) l-1) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) l-1))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta (mul (rec l-0) l-1)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) l-1) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) l-1))))
  (deflistener
    (cat (exp (gen) l-1) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) l-1))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((1 2) (0 0)) ((1 2) (5 0)) ((2 1) (1 0)) ((3 2) (1 1))
    ((4 1) (1 3)) ((5 1) (4 0)) ((6 2) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0 l-1)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l-0))
  (facts (neq b a) (neq a b) (undisclosed l))
  (leads-to ((2 1) (1 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 3) (exp (gen) l-1) (5 0))
  (strand-map 0 1 2 3 4 5)
  (traces
    ((recv
       (hash (exp (gen) l-1) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) l-1))))
      (send
        (hash (exp (gen) l-1) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) l-1)))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l-0) l-1))
          (enc na nb a b
            (hash (exp (gen) l-1) (exp (gen) (mul x l))
              (exp (gen) (mul x (rec l-0) l-1)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) l-1) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) l-1))))
      (send
        (hash (exp (gen) l-1) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) l-1)))))
    ((recv
       (cat (exp (gen) l-1) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) l-1))))
      (send
        (cat (exp (gen) l-1) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) l-1)))))
    ((load priv-stor-1 (cat pt-3 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))))
  (label 189)
  (parent 177)
  (unrealized (0 0) (1 3) (5 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (eta expt) (l l-0 rndx) (w expt))
  (deflistener
    (hash (exp (gen) (mul eta l)) (exp (gen) (mul x l-0))
      (exp (gen) (mul x eta))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta eta))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) (mul eta l)) (exp (gen) (mul x l-0))
      (exp (gen) (mul x eta))))
  (deflistener
    (cat (exp (gen) (mul eta l)) (exp (gen) (mul x l-0))
      (exp (gen) (mul x eta))))
  (deflistener (cat (exp (gen) (mul eta l (rec w))) w))
  (precedes ((1 2) (0 0)) ((1 2) (5 0)) ((2 1) (1 0)) ((3 2) (1 1))
    ((4 1) (1 3)) ((5 1) (4 0)) ((6 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (6 0))
  (gen-st (pv a l))
  (facts (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((2 1) (1 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul eta l (rec w))) w))
    (exp (gen) (mul eta l)) (5 0))
  (strand-map 0 1 2 3 4 5)
  (traces
    ((recv
       (hash (exp (gen) (mul eta l)) (exp (gen) (mul x l-0))
         (exp (gen) (mul x eta))))
      (send
        (hash (exp (gen) (mul eta l)) (exp (gen) (mul x l-0))
          (exp (gen) (mul x eta)))))
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) eta)
          (enc na nb a b
            (hash (exp (gen) (mul eta l)) (exp (gen) (mul x l-0))
              (exp (gen) (mul x eta)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) (mul eta l)) (exp (gen) (mul x l-0))
         (exp (gen) (mul x eta))))
      (send
        (hash (exp (gen) (mul eta l)) (exp (gen) (mul x l-0))
          (exp (gen) (mul x eta)))))
    ((recv
       (cat (exp (gen) (mul eta l)) (exp (gen) (mul x l-0))
         (exp (gen) (mul x eta))))
      (send
        (cat (exp (gen) (mul eta l)) (exp (gen) (mul x l-0))
          (exp (gen) (mul x eta)))))
    ((recv (cat (exp (gen) (mul eta l (rec w))) w))
      (send (cat (exp (gen) (mul eta l (rec w))) w))))
  (label 190)
  (parent 177)
  (unrealized (0 0) (5 0) (6 0))
  (comment "7 in cohort - 7 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (y x l l-0 rndx))
  (deflistener
    (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
      (exp (gen) (mul y x))))
  (defstrand init 4 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (l l-0) (x x) (beta l) (eta y))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (priv-stor priv-stor)
    (l l) (y y) (alpha l-0) (chi x))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (cat (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
      (exp (gen) (mul y x))))
  (precedes ((1 2) (3 2)) ((2 1) (3 0)) ((2 2) (1 1)) ((3 3) (1 3))
    ((3 3) (5 0)) ((4 1) (1 0)) ((4 2) (3 1)) ((5 1) (0 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen y x)
  (absent (y x) (y l) (y l-0) (x l) (x l-0))
  (gen-st (pv b l) (pv self l-0))
  (facts (neq b self) (neq self b) (undisclosed l))
  (leads-to ((2 1) (3 0)) ((4 1) (1 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation encryption-test
    (added-listener
      (cat (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
        (exp (gen) (mul y x))))
    (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
      (exp (gen) (mul y x))) (0 0))
  (strand-map 0 1 2 3 4)
  (traces
    ((recv
       (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
         (exp (gen) (mul y x))))
      (send
        (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
          (exp (gen) (mul y x)))))
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
              (exp (gen) (mul y x)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
              (exp (gen) (mul y x)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv
       (cat (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
         (exp (gen) (mul y x))))
      (send
        (cat (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
          (exp (gen) (mul y x))))))
  (label 191)
  (parent 178)
  (unrealized (5 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (a b a-0 b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 rndx)
    (beta expt) (l-1 x-0 rndx))
  (deflistener
    (hash (exp (gen) (mul y l-1)) (exp (gen) (mul x l))
      (exp (gen) (mul y x))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-1) (x x) (beta l) (eta y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (l l) (y y) (alpha l-1) (chi x))
  (deflistener (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
  (defstrand init 3 (na na-0) (a a-0) (b b-0) (priv-stor priv-stor-1)
    (l l-0) (x x-0) (beta beta))
  (precedes ((1 2) (4 2)) ((2 1) (1 0)) ((3 1) (4 0)) ((3 2) (1 1))
    ((4 3) (0 0)) ((4 3) (1 3)) ((5 1) (4 1)) ((6 2) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-1)
  (uniq-gen y x x-0)
  (absent (y x) (y l) (y l-1) (x l) (x l-1) (x-0 l-0) (x-0 beta))
  (precur (5 0))
  (gen-st (pv a l-1) (pv b l) (pv a-0 l-0))
  (facts (neq a-0 b-0) (neq b-0 a-0) (neq b a) (neq a b)
    (undisclosed l))
  (leads-to ((2 1) (1 0)) ((3 1) (4 0)))
  (rule fact-init-neq0 fact-resp-neq0 gen-st-ltx-disclose-0
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand init 3) (exp (gen) x-0) (5 0))
  (strand-map 0 1 2 3 4 5)
  (traces
    ((recv
       (hash (exp (gen) (mul y l-1)) (exp (gen) (mul x l))
         (exp (gen) (mul y x))))
      (send
        (hash (exp (gen) (mul y l-1)) (exp (gen) (mul x l))
          (exp (gen) (mul y x)))))
    ((load priv-stor (cat pt (pv a l-1)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l-1)) (exp (gen) (mul x l))
              (exp (gen) (mul y x)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (recv
        (sig (body a (exp (gen) l-1) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l-1)) (exp (gen) (mul x l))
              (exp (gen) (mul y x)))))))
    ((recv (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-1 (rec x-0)))))
    ((load priv-stor-1 (cat pt-3 (pv a-0 l-0)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0)))
      (send (cat na-0 a-0 b-0 (exp (gen) x-0)))))
  (label 192)
  (parent 179)
  (unrealized (0 0) (4 1) (5 0) (6 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (y l l-0 x rndx))
  (deflistener
    (hash (exp (gen) (mul y l)) (exp (gen) (mul l-0 x))
      (exp (gen) (mul y x))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (l l-0) (y y) (alpha l) (chi x))
  (deflistener (cat (exp (gen) x) (mul l (rec x))))
  (precedes ((1 2) (5 0)) ((2 1) (1 0)) ((3 1) (4 0)) ((3 2) (1 1))
    ((4 3) (0 0)) ((4 3) (1 3)) ((5 1) (4 1)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen y x)
  (absent (y l) (y l-0) (y x) (x l) (x l-0))
  (precur (5 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((2 1) (1 0)) ((3 1) (4 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 6 1 init 3) (exp (gen) x-0) (5 0))
  (strand-map 0 1 2 3 4 5)
  (traces
    ((recv
       (hash (exp (gen) (mul y l)) (exp (gen) (mul l-0 x))
         (exp (gen) (mul y x))))
      (send
        (hash (exp (gen) (mul y l)) (exp (gen) (mul l-0 x))
          (exp (gen) (mul y x)))))
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l)) (exp (gen) (mul l-0 x))
              (exp (gen) (mul y x)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l)) (exp (gen) (mul l-0 x))
              (exp (gen) (mul y x)))))))
    ((recv (cat (exp (gen) x) (mul l (rec x))))
      (send (cat (exp (gen) x) (mul l (rec x))))))
  (label 193)
  (parent 179)
  (unrealized (0 0) (4 1) (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (y x l l-0 rndx))
  (deflistener
    (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
      (exp (gen) (mul y x))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (l l) (y y) (alpha l-0) (chi x))
  (deflistener (cat (gen) l-0))
  (precedes ((1 2) (4 2)) ((2 1) (1 0)) ((2 1) (5 0)) ((3 1) (4 0))
    ((3 2) (1 1)) ((4 3) (0 0)) ((4 3) (1 3)) ((5 1) (4 1)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen y x)
  (absent (y x) (y l) (y l-0) (x l) (x l-0))
  (precur (5 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq b a) (neq a b) (undisclosed l))
  (leads-to ((2 1) (1 0)) ((3 1) (4 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (contracted (l-1 l-0) (w l-0)) (gen) (5 0))
  (strand-map 0 1 2 3 4 5)
  (traces
    ((recv
       (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
         (exp (gen) (mul y x))))
      (send
        (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
          (exp (gen) (mul y x)))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
              (exp (gen) (mul y x)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
              (exp (gen) (mul y x)))))))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0))))
  (label 194)
  (parent 179)
  (unrealized (0 0) (5 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (y x l l-0 rndx))
  (deflistener
    (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
      (exp (gen) (mul y x))))
  (defstrand init 4 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (l l-0) (x x) (beta l) (eta y))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (priv-stor priv-stor)
    (l l) (y y) (alpha l-0) (chi x))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((1 2) (3 2)) ((2 1) (3 0)) ((2 2) (1 1)) ((3 3) (0 0))
    ((3 3) (1 3)) ((4 1) (3 1)) ((5 1) (1 0)) ((5 2) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen y x)
  (absent (y x) (y l) (y l-0) (x l) (x l-0))
  (precur (4 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (neq b self) (neq self b) (undisclosed l))
  (leads-to ((2 1) (3 0)) ((5 1) (1 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 2 6 ltx-gen 3) (exp (gen) l-1) (5 0))
  (strand-map 0 1 5 2 3 4)
  (traces
    ((recv
       (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
         (exp (gen) (mul y x))))
      (send
        (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
          (exp (gen) (mul y x)))))
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
              (exp (gen) (mul y x)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
              (exp (gen) (mul y x)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 195)
  (parent 179)
  (unrealized (0 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (a b a-0 b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 rndx)
    (alpha chi expt) (l-1 y-0 rndx))
  (deflistener
    (hash (exp (gen) (mul y l-1)) (exp (gen) (mul x l))
      (exp (gen) (mul y x))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-1) (x x) (beta l) (eta y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (l l) (y y) (alpha l-1) (chi x))
  (deflistener (cat (exp (gen) y-0) (mul l-1 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b-0)
    (priv-stor priv-stor-1) (l l-0) (y y-0) (alpha alpha) (chi chi))
  (precedes ((1 2) (4 2)) ((2 1) (1 0)) ((3 1) (4 0)) ((3 2) (1 1))
    ((4 3) (0 0)) ((4 3) (1 3)) ((5 1) (4 1)) ((6 3) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-1)
  (uniq-gen y x y-0)
  (absent (y x) (y l) (y l-1) (x l) (x l-1) (y-0 l-0) (y-0 alpha)
    (y-0 chi))
  (precur (5 0))
  (gen-st (pv a l-1) (pv b l) (pv b-0 l-0))
  (facts (neq b-0 a-0) (neq a-0 b-0) (neq b a) (neq a b)
    (undisclosed l))
  (leads-to ((2 1) (1 0)) ((3 1) (4 0)))
  (rule fact-init-neq0 fact-resp-neq0 gen-st-ltx-disclose-0
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand resp 4) (exp (gen) y-0) (5 0))
  (strand-map 0 1 2 3 4 5)
  (traces
    ((recv
       (hash (exp (gen) (mul y l-1)) (exp (gen) (mul x l))
         (exp (gen) (mul y x))))
      (send
        (hash (exp (gen) (mul y l-1)) (exp (gen) (mul x l))
          (exp (gen) (mul y x)))))
    ((load priv-stor (cat pt (pv a l-1)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l-1)) (exp (gen) (mul x l))
              (exp (gen) (mul y x)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (recv
        (sig (body a (exp (gen) l-1) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l-1)) (exp (gen) (mul x l))
              (exp (gen) (mul y x)))))))
    ((recv (cat (exp (gen) y-0) (mul l-1 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-1 (rec y-0)))))
    ((load priv-stor-1 (cat pt-3 (pv b-0 l-0)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b-0 (exp (gen) chi)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul alpha y-0)) (exp (gen) (mul l-0 chi))
              (exp (gen) (mul chi y-0))))))))
  (label 196)
  (parent 179)
  (unrealized (0 0) (4 1) (5 0) (6 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (y x l l-0 rndx))
  (deflistener
    (hash (exp (gen) (mul y l)) (exp (gen) (mul x l-0))
      (exp (gen) (mul y x))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (l l-0) (y y) (alpha l) (chi x))
  (deflistener (cat (exp (gen) l-0) (mul l (rec l-0))))
  (precedes ((1 2) (4 2)) ((2 1) (1 0)) ((3 1) (4 0)) ((3 2) (1 1))
    ((3 2) (5 0)) ((4 3) (0 0)) ((4 3) (1 3)) ((5 1) (4 1)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen y x)
  (absent (y x) (y l) (y l-0) (x l) (x l-0))
  (precur (5 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((2 1) (1 0)) ((3 1) (4 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 6 3 ltx-gen 3) (exp (gen) l-1) (5 0))
  (strand-map 0 1 2 3 4 5)
  (traces
    ((recv
       (hash (exp (gen) (mul y l)) (exp (gen) (mul x l-0))
         (exp (gen) (mul y x))))
      (send
        (hash (exp (gen) (mul y l)) (exp (gen) (mul x l-0))
          (exp (gen) (mul y x)))))
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l)) (exp (gen) (mul x l-0))
              (exp (gen) (mul y x)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l)) (exp (gen) (mul x l-0))
              (exp (gen) (mul y x)))))))
    ((recv (cat (exp (gen) l-0) (mul l (rec l-0))))
      (send (cat (exp (gen) l-0) (mul l (rec l-0))))))
  (label 197)
  (parent 179)
  (unrealized (0 0) (4 1) (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (deflistener
    (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
      (exp (gen) (mul y x))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (l l) (y y) (alpha l-0) (chi x))
  (deflistener (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((1 2) (4 2)) ((2 1) (1 0)) ((3 1) (4 0)) ((3 2) (1 1))
    ((4 3) (0 0)) ((4 3) (1 3)) ((5 1) (4 1)) ((6 2) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y x) (y l) (y l-0) (x l) (x l-0))
  (precur (5 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq b a) (neq a b) (undisclosed l))
  (leads-to ((2 1) (1 0)) ((3 1) (4 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 3) (exp (gen) l-1) (5 0))
  (strand-map 0 1 2 3 4 5)
  (traces
    ((recv
       (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
         (exp (gen) (mul y x))))
      (send
        (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
          (exp (gen) (mul y x)))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
              (exp (gen) (mul y x)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
              (exp (gen) (mul y x)))))))
    ((recv (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
      (send (cat (exp (gen) l-1) (mul l-0 (rec l-1)))))
    ((load priv-stor-1 (cat pt-3 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))))
  (label 198)
  (parent 179)
  (unrealized (0 0) (4 1) (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (deflistener
    (hash (exp (gen) (mul y l l-0 (rec l-1))) (exp (gen) (mul x l-0))
      (exp (gen) (mul y x l-0 (rec l-1)))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul y l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-1) (y y) (alpha (mul l l-0 (rec l-1)))
    (chi (mul x l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l l-0)) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (precedes ((1 2) (4 2)) ((2 1) (1 0)) ((3 2) (1 1)) ((4 3) (0 0))
    ((4 3) (1 3)) ((5 1) (4 0)) ((5 1) (7 0)) ((6 1) (4 1))
    ((7 2) (6 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x l-0 (rec l-1))) (y (mul l l-0 (rec l-1))) (y l-1)
    (x l) (x l-0))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((2 1) (1 0)) ((5 1) (4 0)) ((5 1) (7 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-disclose 3) l-1 (6 0)
    (ch-msg priv-stor-1 (cat pt-3 (pv b l-1))))
  (strand-map 0 1 2 3 4 5 6)
  (traces
    ((recv
       (hash (exp (gen) (mul y l l-0 (rec l-1))) (exp (gen) (mul x l-0))
         (exp (gen) (mul y x l-0 (rec l-1)))))
      (send
        (hash (exp (gen) (mul y l l-0 (rec l-1)))
          (exp (gen) (mul x l-0)) (exp (gen) (mul y x l-0 (rec l-1))))))
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y l-0 (rec l-1)))
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x l-0 (rec l-1)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l l-0)) l-1))
      (send (cat (exp (gen) (mul l l-0)) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l-1)))
  (label 199)
  (parent 180)
  (unrealized (0 0) (1 3) (4 2) (6 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (deflistener
    (hash (exp (gen) (mul y l (rec l-0) l-1)) (exp (gen) (mul x l))
      (exp (gen) (mul y x l (rec l-0)))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-1) (x x) (beta l) (eta (mul y l (rec l-0))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-0) (y y) (alpha (mul l (rec l-0) l-1))
    (chi (mul x l (rec l-0))))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul l (rec l-0))) l-1))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-1))
  (precedes ((1 2) (4 2)) ((2 1) (1 0)) ((2 1) (7 0)) ((3 2) (1 1))
    ((4 3) (0 0)) ((4 3) (1 3)) ((5 1) (4 0)) ((6 1) (4 1))
    ((7 2) (6 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x l (rec l-0))) (y (mul l (rec l-0) l-1)) (y l-0)
    (x l) (x l-1))
  (gen-st (pv a l-1) (pv b l-0))
  (facts (neq b a) (neq a b) (undisclosed l))
  (leads-to ((2 1) (1 0)) ((2 1) (7 0)) ((5 1) (4 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-disclose 3) l-1 (6 0)
    (ch-msg priv-stor (cat pt (pv a l-1))))
  (strand-map 0 1 2 3 4 5 6)
  (traces
    ((recv
       (hash (exp (gen) (mul y l (rec l-0) l-1)) (exp (gen) (mul x l))
         (exp (gen) (mul y x l (rec l-0)))))
      (send
        (hash (exp (gen) (mul y l (rec l-0) l-1)) (exp (gen) (mul x l))
          (exp (gen) (mul y x l (rec l-0))))))
    ((load priv-stor (cat pt (pv a l-1)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y l (rec l-0)))
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-1))
              (exp (gen) (mul x l))
              (exp (gen) (mul y x l (rec l-0))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x l (rec l-0)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-1))
              (exp (gen) (mul x l))
              (exp (gen) (mul y x l (rec l-0))))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul l (rec l-0))) l-1))
      (send (cat (exp (gen) (mul l (rec l-0))) l-1)))
    ((load priv-stor (cat pt (pv a l-1)))
      (stor priv-stor (cat pt-5 "nil")) (send l-1)))
  (label 200)
  (parent 182)
  (unrealized (0 0) (1 3) (4 2) (6 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (a b a-0 name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x l rndx)
    (alpha chi expt) (y l-0 rndx))
  (deflistener
    (hash (exp (gen) y) (exp (gen) (mul x l))
      (exp (gen) (mul x y (rec l-0)))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta (mul y (rec l-0))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) y) (exp (gen) (mul x l))
      (exp (gen) (mul x y (rec l-0)))))
  (deflistener
    (cat (exp (gen) y) (exp (gen) (mul x l))
      (exp (gen) (mul x y (rec l-0)))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b a)
    (priv-stor priv-stor) (l l-0) (y y) (alpha alpha) (chi chi))
  (precedes ((1 2) (0 0)) ((1 2) (5 0)) ((2 1) (1 0)) ((2 1) (6 0))
    ((3 2) (1 1)) ((4 1) (1 3)) ((5 1) (4 0)) ((6 3) (0 0))
    ((6 3) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb-0 l l-0)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y alpha) (y chi) (y l-0))
  (gen-st (pv a l-0))
  (facts (neq a a-0) (neq a-0 a) (neq b a) (neq a b) (undisclosed l))
  (leads-to ((2 1) (1 0)) ((2 1) (6 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 7 2 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv b-0 l-1))) (6 0))
  (strand-map 0 1 2 3 4 5 6)
  (traces
    ((recv
       (hash (exp (gen) y) (exp (gen) (mul x l))
         (exp (gen) (mul x y (rec l-0)))))
      (send
        (hash (exp (gen) y) (exp (gen) (mul x l))
          (exp (gen) (mul x y (rec l-0))))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l-0)))
          (enc na nb a b
            (hash (exp (gen) y) (exp (gen) (mul x l))
              (exp (gen) (mul x y (rec l-0))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) y) (exp (gen) (mul x l))
         (exp (gen) (mul x y (rec l-0)))))
      (send
        (hash (exp (gen) y) (exp (gen) (mul x l))
          (exp (gen) (mul x y (rec l-0))))))
    ((recv
       (cat (exp (gen) y) (exp (gen) (mul x l))
         (exp (gen) (mul x y (rec l-0)))))
      (send
        (cat (exp (gen) y) (exp (gen) (mul x l))
          (exp (gen) (mul x y (rec l-0))))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 a (exp (gen) chi)))
      (send
        (cat (exp (gen) y)
          (enc na-0 nb-0 a-0 a
            (hash (exp (gen) (mul alpha y)) (exp (gen) (mul chi l-0))
              (exp (gen) (mul chi y))))))))
  (label 201)
  (parent 183)
  (unrealized (0 0) (1 3) (5 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (a b a-0 name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (alpha chi expt) (l y l-0 rndx))
  (deflistener
    (hash (exp (gen) y) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) y))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul (rec l) y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) y) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) y))))
  (deflistener
    (cat (exp (gen) y) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) y))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b)
    (priv-stor priv-stor-0) (l l-0) (y y) (alpha alpha) (chi chi))
  (precedes ((1 2) (0 0)) ((1 2) (5 0)) ((2 1) (1 0)) ((3 1) (6 0))
    ((3 2) (1 1)) ((4 1) (1 3)) ((5 1) (4 0)) ((6 3) (0 0))
    ((6 3) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb-0 l l-0)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y alpha) (y chi) (y l-0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq b a-0) (neq a-0 b) (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((2 1) (1 0)) ((3 1) (6 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 7 3 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv b-0 l-1))) (6 0))
  (strand-map 0 1 2 3 4 5 6)
  (traces
    ((recv
       (hash (exp (gen) y) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) y))))
      (send
        (hash (exp (gen) y) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) y)))))
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l) y))
          (enc na nb a b
            (hash (exp (gen) y) (exp (gen) (mul x l-0))
              (exp (gen) (mul x (rec l) y)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) y) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) y))))
      (send
        (hash (exp (gen) y) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) y)))))
    ((recv
       (cat (exp (gen) y) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) y))))
      (send
        (cat (exp (gen) y) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) y)))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b (exp (gen) chi)))
      (send
        (cat (exp (gen) y)
          (enc na-0 nb-0 a-0 b
            (hash (exp (gen) (mul alpha y)) (exp (gen) (mul chi l-0))
              (exp (gen) (mul chi y))))))))
  (label 202)
  (parent 183)
  (unrealized (0 0) (1 3) (5 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x l rndx) (alpha chi expt)
    (l-0 y l-1 rndx))
  (deflistener
    (hash (exp (gen) y) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) y))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta (mul (rec l-0) y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) y) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) y))))
  (deflistener
    (cat (exp (gen) y) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) y))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b-0)
    (priv-stor priv-stor-1) (l l-1) (y y) (alpha alpha) (chi chi))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b-0)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((1 2) (0 0)) ((1 2) (5 0)) ((2 1) (1 0)) ((3 2) (1 1))
    ((4 1) (1 3)) ((5 1) (4 0)) ((6 3) (0 0)) ((6 3) (5 0))
    ((7 1) (6 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb-0 l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y alpha) (y chi) (y l-1))
  (gen-st (pv a l-0) (pv b-0 l-1))
  (facts (neq b-0 a-0) (neq a-0 b-0) (neq b a) (neq a b)
    (undisclosed l))
  (leads-to ((2 1) (1 0)) ((7 1) (6 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv b-0 l-1))) (6 0))
  (strand-map 0 1 2 3 4 5 6)
  (traces
    ((recv
       (hash (exp (gen) y) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) y))))
      (send
        (hash (exp (gen) y) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) y)))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l-0) y))
          (enc na nb a b
            (hash (exp (gen) y) (exp (gen) (mul x l))
              (exp (gen) (mul x (rec l-0) y)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) y) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) y))))
      (send
        (hash (exp (gen) y) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) y)))))
    ((recv
       (cat (exp (gen) y) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) y))))
      (send
        (cat (exp (gen) y) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) y)))))
    ((load priv-stor-1 (cat pt-3 (pv b-0 l-1)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b-0 (exp (gen) chi)))
      (send
        (cat (exp (gen) y)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul alpha y)) (exp (gen) (mul chi l-1))
              (exp (gen) (mul chi y)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b-0 l-1)))))
  (label 203)
  (parent 183)
  (unrealized (0 0) (1 3) (5 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x l rndx)
    (beta expt) (x-0 l-0 rndx))
  (deflistener
    (hash (exp (gen) x-0) (exp (gen) (mul x l))
      (exp (gen) (mul x x-0 (rec l-0)))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta (mul x-0 (rec l-0))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) x-0) (exp (gen) (mul x l))
      (exp (gen) (mul x x-0 (rec l-0)))))
  (deflistener
    (cat (exp (gen) x-0) (exp (gen) (mul x l))
      (exp (gen) (mul x x-0 (rec l-0)))))
  (defstrand init 3 (na na-0) (a a) (b b-0) (priv-stor priv-stor)
    (l l-0) (x x-0) (beta beta))
  (precedes ((1 2) (0 0)) ((1 2) (5 0)) ((2 1) (1 0)) ((2 1) (6 0))
    ((3 2) (1 1)) ((4 1) (1 3)) ((5 1) (4 0)) ((6 2) (0 0))
    ((6 2) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na na-0 l l-0)
  (uniq-gen x x-0)
  (absent (x l) (x l-0) (x-0 beta) (x-0 l-0))
  (gen-st (pv a l-0))
  (facts (neq a b-0) (neq b-0 a) (neq b a) (neq a b) (undisclosed l))
  (leads-to ((2 1) (1 0)) ((2 1) (6 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 7 2 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv a-0 l-1))) (6 0))
  (strand-map 0 1 2 3 4 5 6)
  (traces
    ((recv
       (hash (exp (gen) x-0) (exp (gen) (mul x l))
         (exp (gen) (mul x x-0 (rec l-0)))))
      (send
        (hash (exp (gen) x-0) (exp (gen) (mul x l))
          (exp (gen) (mul x x-0 (rec l-0))))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul x-0 (rec l-0)))
          (enc na nb a b
            (hash (exp (gen) x-0) (exp (gen) (mul x l))
              (exp (gen) (mul x x-0 (rec l-0))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) x-0) (exp (gen) (mul x l))
         (exp (gen) (mul x x-0 (rec l-0)))))
      (send
        (hash (exp (gen) x-0) (exp (gen) (mul x l))
          (exp (gen) (mul x x-0 (rec l-0))))))
    ((recv
       (cat (exp (gen) x-0) (exp (gen) (mul x l))
         (exp (gen) (mul x x-0 (rec l-0)))))
      (send
        (cat (exp (gen) x-0) (exp (gen) (mul x l))
          (exp (gen) (mul x x-0 (rec l-0))))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a b-0 (exp (gen) x-0)))))
  (label 204)
  (parent 184)
  (unrealized (0 0) (1 3) (5 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (beta expt) (l x-0 l-0 rndx))
  (deflistener
    (hash (exp (gen) x-0) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) x-0))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul (rec l) x-0)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) x-0) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) x-0))))
  (deflistener
    (cat (exp (gen) x-0) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) x-0))))
  (defstrand init 3 (na na-0) (a b) (b b-0) (priv-stor priv-stor-0)
    (l l-0) (x x-0) (beta beta))
  (precedes ((1 2) (0 0)) ((1 2) (5 0)) ((2 1) (1 0)) ((3 1) (6 0))
    ((3 2) (1 1)) ((4 1) (1 3)) ((5 1) (4 0)) ((6 2) (0 0))
    ((6 2) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na na-0 l l-0)
  (uniq-gen x x-0)
  (absent (x l) (x l-0) (x-0 beta) (x-0 l-0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq b b-0) (neq b-0 b) (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((2 1) (1 0)) ((3 1) (6 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 7 3 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv a-0 l-1))) (6 0))
  (strand-map 0 1 2 3 4 5 6)
  (traces
    ((recv
       (hash (exp (gen) x-0) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) x-0))))
      (send
        (hash (exp (gen) x-0) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) x-0)))))
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l) x-0))
          (enc na nb a b
            (hash (exp (gen) x-0) (exp (gen) (mul x l-0))
              (exp (gen) (mul x (rec l) x-0)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) x-0) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) x-0))))
      (send
        (hash (exp (gen) x-0) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) x-0)))))
    ((recv
       (cat (exp (gen) x-0) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) x-0))))
      (send
        (cat (exp (gen) x-0) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) x-0)))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 b b-0 (exp (gen) x-0)))))
  (label 205)
  (parent 184)
  (unrealized (0 0) (1 3) (5 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (a b a-0 b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x l rndx) (beta expt)
    (l-0 x-0 l-1 rndx))
  (deflistener
    (hash (exp (gen) x-0) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) x-0))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta (mul (rec l-0) x-0)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) x-0) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) x-0))))
  (deflistener
    (cat (exp (gen) x-0) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) x-0))))
  (defstrand init 3 (na na-0) (a a-0) (b b-0) (priv-stor priv-stor-1)
    (l l-1) (x x-0) (beta beta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self a-0)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((1 2) (0 0)) ((1 2) (5 0)) ((2 1) (1 0)) ((3 2) (1 1))
    ((4 1) (1 3)) ((5 1) (4 0)) ((6 2) (0 0)) ((6 2) (5 0))
    ((7 1) (6 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na na-0 l l-0 l-1)
  (uniq-gen x x-0)
  (absent (x l) (x l-0) (x-0 beta) (x-0 l-1))
  (gen-st (pv a l-0) (pv a-0 l-1))
  (facts (neq a-0 b-0) (neq b-0 a-0) (neq b a) (neq a b)
    (undisclosed l))
  (leads-to ((2 1) (1 0)) ((7 1) (6 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv a-0 l-1))) (6 0))
  (strand-map 0 1 2 3 4 5 6)
  (traces
    ((recv
       (hash (exp (gen) x-0) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) x-0))))
      (send
        (hash (exp (gen) x-0) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) x-0)))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l-0) x-0))
          (enc na nb a b
            (hash (exp (gen) x-0) (exp (gen) (mul x l))
              (exp (gen) (mul x (rec l-0) x-0)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) x-0) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) x-0))))
      (send
        (hash (exp (gen) x-0) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) x-0)))))
    ((recv
       (cat (exp (gen) x-0) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) x-0))))
      (send
        (cat (exp (gen) x-0) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) x-0)))))
    ((load priv-stor-1 (cat pt-3 (pv a-0 l-1)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a-0 b-0 (exp (gen) x-0))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv a-0 l-1)))))
  (label 206)
  (parent 184)
  (unrealized (0 0) (1 3) (5 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (x l l-0 rndx))
  (deflistener
    (hash (gen) (exp (gen) (mul x l)) (exp (gen) (mul x (rec l-0)))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta (rec l-0)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (gen) (exp (gen) (mul x l)) (exp (gen) (mul x (rec l-0)))))
  (deflistener
    (cat (gen) (exp (gen) (mul x l)) (exp (gen) (mul x (rec l-0)))))
  (deflistener (cat (exp (gen) x) l))
  (precedes ((1 2) (0 0)) ((1 2) (6 0)) ((2 1) (1 0)) ((3 2) (1 1))
    ((4 1) (1 3)) ((5 1) (4 0)) ((6 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l-0))
  (facts (neq b a) (neq a b) (undisclosed l))
  (leads-to ((2 1) (1 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) x) l))
    (exp (gen) (mul x l)) (5 0))
  (strand-map 0 1 2 3 4 5)
  (traces
    ((recv
       (hash (gen) (exp (gen) (mul x l)) (exp (gen) (mul x (rec l-0)))))
      (send
        (hash (gen) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0))))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (rec l-0))
          (enc na nb a b
            (hash (gen) (exp (gen) (mul x l))
              (exp (gen) (mul x (rec l-0))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (gen) (exp (gen) (mul x l)) (exp (gen) (mul x (rec l-0)))))
      (send
        (hash (gen) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0))))))
    ((recv
       (cat (gen) (exp (gen) (mul x l)) (exp (gen) (mul x (rec l-0)))))
      (send
        (cat (gen) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0))))))
    ((recv (cat (exp (gen) x) l)) (send (cat (exp (gen) x) l))))
  (label 207)
  (parent 185)
  (unrealized (0 0) (1 3) (5 0) (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (x l l-0 rndx))
  (deflistener
    (hash (gen) (exp (gen) (mul x l)) (exp (gen) (mul x (rec l-0)))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta (rec l-0)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (gen) (exp (gen) (mul x l)) (exp (gen) (mul x (rec l-0)))))
  (deflistener
    (cat (gen) (exp (gen) (mul x l)) (exp (gen) (mul x (rec l-0)))))
  (deflistener (cat (exp (gen) l) x))
  (precedes ((1 2) (0 0)) ((1 2) (6 0)) ((2 1) (1 0)) ((3 2) (1 1))
    ((4 1) (1 3)) ((5 1) (4 0)) ((6 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l-0))
  (facts (neq b a) (neq a b) (undisclosed l))
  (leads-to ((2 1) (1 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l) x))
    (exp (gen) (mul x l)) (5 0))
  (strand-map 0 1 2 3 4 5)
  (traces
    ((recv
       (hash (gen) (exp (gen) (mul x l)) (exp (gen) (mul x (rec l-0)))))
      (send
        (hash (gen) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0))))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (rec l-0))
          (enc na nb a b
            (hash (gen) (exp (gen) (mul x l))
              (exp (gen) (mul x (rec l-0))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (gen) (exp (gen) (mul x l)) (exp (gen) (mul x (rec l-0)))))
      (send
        (hash (gen) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0))))))
    ((recv
       (cat (gen) (exp (gen) (mul x l)) (exp (gen) (mul x (rec l-0)))))
      (send
        (cat (gen) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0))))))
    ((recv (cat (exp (gen) l) x)) (send (cat (exp (gen) l) x))))
  (label 208)
  (parent 185)
  (unrealized (0 0) (5 0) (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (l l-0 x rndx))
  (deflistener
    (hash (exp (gen) x) (exp (gen) (mul l-0 x))
      (exp (gen) (mul (rec l) x x))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul (rec l) x)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) x) (exp (gen) (mul l-0 x))
      (exp (gen) (mul (rec l) x x))))
  (deflistener
    (cat (exp (gen) x) (exp (gen) (mul l-0 x))
      (exp (gen) (mul (rec l) x x))))
  (deflistener (cat (exp (gen) l-0) x))
  (precedes ((1 2) (0 0)) ((1 2) (6 0)) ((2 1) (1 0)) ((3 2) (1 1))
    ((4 1) (1 3)) ((5 1) (4 0)) ((6 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l))
  (facts (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((2 1) (1 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l-0) x))
    (exp (gen) (mul l-0 x)) (5 0))
  (strand-map 0 1 2 3 4 5)
  (traces
    ((recv
       (hash (exp (gen) x) (exp (gen) (mul l-0 x))
         (exp (gen) (mul (rec l) x x))))
      (send
        (hash (exp (gen) x) (exp (gen) (mul l-0 x))
          (exp (gen) (mul (rec l) x x)))))
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l) x))
          (enc na nb a b
            (hash (exp (gen) x) (exp (gen) (mul l-0 x))
              (exp (gen) (mul (rec l) x x)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) x) (exp (gen) (mul l-0 x))
         (exp (gen) (mul (rec l) x x))))
      (send
        (hash (exp (gen) x) (exp (gen) (mul l-0 x))
          (exp (gen) (mul (rec l) x x)))))
    ((recv
       (cat (exp (gen) x) (exp (gen) (mul l-0 x))
         (exp (gen) (mul (rec l) x x))))
      (send
        (cat (exp (gen) x) (exp (gen) (mul l-0 x))
          (exp (gen) (mul (rec l) x x)))))
    ((recv (cat (exp (gen) l-0) x)) (send (cat (exp (gen) l-0) x))))
  (label 209)
  (parent 186)
  (unrealized (0 0) (5 0) (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (l l-0 x rndx))
  (deflistener
    (hash (exp (gen) x) (exp (gen) (mul l-0 x))
      (exp (gen) (mul (rec l) x x))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul (rec l) x)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) x) (exp (gen) (mul l-0 x))
      (exp (gen) (mul (rec l) x x))))
  (deflistener
    (cat (exp (gen) x) (exp (gen) (mul l-0 x))
      (exp (gen) (mul (rec l) x x))))
  (deflistener (cat (exp (gen) x) l-0))
  (precedes ((1 2) (0 0)) ((1 2) (6 0)) ((2 1) (1 0)) ((3 2) (1 1))
    ((4 1) (1 3)) ((5 1) (4 0)) ((6 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l))
  (facts (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((2 1) (1 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) x) l-0))
    (exp (gen) (mul l-0 x)) (5 0))
  (strand-map 0 1 2 3 4 5)
  (traces
    ((recv
       (hash (exp (gen) x) (exp (gen) (mul l-0 x))
         (exp (gen) (mul (rec l) x x))))
      (send
        (hash (exp (gen) x) (exp (gen) (mul l-0 x))
          (exp (gen) (mul (rec l) x x)))))
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l) x))
          (enc na nb a b
            (hash (exp (gen) x) (exp (gen) (mul l-0 x))
              (exp (gen) (mul (rec l) x x)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) x) (exp (gen) (mul l-0 x))
         (exp (gen) (mul (rec l) x x))))
      (send
        (hash (exp (gen) x) (exp (gen) (mul l-0 x))
          (exp (gen) (mul (rec l) x x)))))
    ((recv
       (cat (exp (gen) x) (exp (gen) (mul l-0 x))
         (exp (gen) (mul (rec l) x x))))
      (send
        (cat (exp (gen) x) (exp (gen) (mul l-0 x))
          (exp (gen) (mul (rec l) x x)))))
    ((recv (cat (exp (gen) x) l-0)) (send (cat (exp (gen) x) l-0))))
  (label 210)
  (parent 186)
  (unrealized (0 0) (1 3) (5 0) (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (x l l-0 rndx))
  (deflistener
    (hash (exp (gen) l-0) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) l-0))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul (rec l) l-0)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) l-0) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) l-0))))
  (deflistener
    (cat (exp (gen) l-0) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) l-0))))
  (deflistener (cat (exp (gen) x) l-0))
  (precedes ((1 2) (0 0)) ((1 2) (6 0)) ((2 1) (1 0)) ((3 2) (1 1))
    ((4 1) (1 3)) ((5 1) (4 0)) ((6 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l))
  (facts (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((2 1) (1 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) x) l-0))
    (exp (gen) (mul x l-0)) (5 0))
  (strand-map 0 1 2 3 4 5)
  (traces
    ((recv
       (hash (exp (gen) l-0) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) l-0))))
      (send
        (hash (exp (gen) l-0) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) l-0)))))
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l) l-0))
          (enc na nb a b
            (hash (exp (gen) l-0) (exp (gen) (mul x l-0))
              (exp (gen) (mul x (rec l) l-0)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) l-0) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) l-0))))
      (send
        (hash (exp (gen) l-0) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) l-0)))))
    ((recv
       (cat (exp (gen) l-0) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) l-0))))
      (send
        (cat (exp (gen) l-0) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) l-0)))))
    ((recv (cat (exp (gen) x) l-0)) (send (cat (exp (gen) x) l-0))))
  (label 211)
  (parent 187)
  (unrealized (0 0) (1 3) (5 0) (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (x l l-0 rndx))
  (deflistener
    (hash (exp (gen) l-0) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) l-0))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul (rec l) l-0)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) l-0) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) l-0))))
  (deflistener
    (cat (exp (gen) l-0) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) l-0))))
  (deflistener (cat (exp (gen) l-0) x))
  (precedes ((1 2) (0 0)) ((1 2) (6 0)) ((2 1) (1 0)) ((3 2) (1 1))
    ((4 1) (1 3)) ((5 1) (4 0)) ((6 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l))
  (facts (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((2 1) (1 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l-0) x))
    (exp (gen) (mul x l-0)) (5 0))
  (strand-map 0 1 2 3 4 5)
  (traces
    ((recv
       (hash (exp (gen) l-0) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) l-0))))
      (send
        (hash (exp (gen) l-0) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) l-0)))))
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l) l-0))
          (enc na nb a b
            (hash (exp (gen) l-0) (exp (gen) (mul x l-0))
              (exp (gen) (mul x (rec l) l-0)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) l-0) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) l-0))))
      (send
        (hash (exp (gen) l-0) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) l-0)))))
    ((recv
       (cat (exp (gen) l-0) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) l-0))))
      (send
        (cat (exp (gen) l-0) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) l-0)))))
    ((recv (cat (exp (gen) l-0) x)) (send (cat (exp (gen) l-0) x))))
  (label 212)
  (parent 187)
  (unrealized (0 0) (5 0) (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (x l l-0 rndx))
  (deflistener
    (hash (exp (gen) l-0) (exp (gen) (mul x l)) (exp (gen) x)))
  (defstrand init 4 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (l l-0) (x x) (beta l) (eta (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (deflistener
    (hash (exp (gen) l-0) (exp (gen) (mul x l)) (exp (gen) x)))
  (deflistener
    (cat (exp (gen) l-0) (exp (gen) (mul x l)) (exp (gen) x)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) x) l))
  (precedes ((1 2) (0 0)) ((1 2) (6 0)) ((2 2) (1 1)) ((3 1) (1 3))
    ((4 1) (3 0)) ((5 1) (1 0)) ((5 2) (4 0)) ((6 1) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv self l-0))
  (facts (neq b self) (neq self b) (undisclosed l))
  (leads-to ((5 1) (1 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) x) l))
    (exp (gen) (mul x l)) (4 0))
  (strand-map 0 1 2 3 4 5)
  (traces
    ((recv (hash (exp (gen) l-0) (exp (gen) (mul x l)) (exp (gen) x)))
      (send (hash (exp (gen) l-0) (exp (gen) (mul x l)) (exp (gen) x))))
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (gen)
          (enc na nb self b
            (hash (exp (gen) l-0) (exp (gen) (mul x l))
              (exp (gen) x))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) l-0) (exp (gen) (mul x l)) (exp (gen) x)))
      (send (hash (exp (gen) l-0) (exp (gen) (mul x l)) (exp (gen) x))))
    ((recv (cat (exp (gen) l-0) (exp (gen) (mul x l)) (exp (gen) x)))
      (send (cat (exp (gen) l-0) (exp (gen) (mul x l)) (exp (gen) x))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) x) l)) (send (cat (exp (gen) x) l))))
  (label 213)
  (parent 188)
  (unrealized (0 0) (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (x l l-0 rndx))
  (deflistener
    (hash (exp (gen) l-0) (exp (gen) (mul x l)) (exp (gen) x)))
  (defstrand init 4 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (l l-0) (x x) (beta l) (eta (one)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (deflistener
    (hash (exp (gen) l-0) (exp (gen) (mul x l)) (exp (gen) x)))
  (deflistener
    (cat (exp (gen) l-0) (exp (gen) (mul x l)) (exp (gen) x)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l) x))
  (precedes ((1 2) (0 0)) ((1 2) (6 0)) ((2 2) (1 1)) ((3 1) (1 3))
    ((4 1) (3 0)) ((5 1) (1 0)) ((5 2) (4 0)) ((6 1) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv self l-0))
  (facts (neq b self) (neq self b) (undisclosed l))
  (leads-to ((5 1) (1 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l) x))
    (exp (gen) (mul x l)) (4 0))
  (strand-map 0 1 2 3 4 5)
  (traces
    ((recv (hash (exp (gen) l-0) (exp (gen) (mul x l)) (exp (gen) x)))
      (send (hash (exp (gen) l-0) (exp (gen) (mul x l)) (exp (gen) x))))
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (gen)
          (enc na nb self b
            (hash (exp (gen) l-0) (exp (gen) (mul x l))
              (exp (gen) x))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) l-0) (exp (gen) (mul x l)) (exp (gen) x)))
      (send (hash (exp (gen) l-0) (exp (gen) (mul x l)) (exp (gen) x))))
    ((recv (cat (exp (gen) l-0) (exp (gen) (mul x l)) (exp (gen) x)))
      (send (cat (exp (gen) l-0) (exp (gen) (mul x l)) (exp (gen) x))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) x)) (send (cat (exp (gen) l) x))))
  (label 214)
  (parent 188)
  (unrealized (0 0) (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x l l-0 l-1 rndx))
  (deflistener
    (hash (exp (gen) l-1) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) l-1))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta (mul (rec l-0) l-1)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) l-1) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) l-1))))
  (deflistener
    (cat (exp (gen) l-1) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) l-1))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) x) l))
  (precedes ((1 2) (0 0)) ((1 2) (7 0)) ((2 1) (1 0)) ((3 2) (1 1))
    ((4 1) (1 3)) ((5 1) (4 0)) ((6 2) (5 0)) ((7 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0 l-1)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l-0))
  (facts (neq b a) (neq a b) (undisclosed l))
  (leads-to ((2 1) (1 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) x) l))
    (exp (gen) (mul x l)) (5 0))
  (strand-map 0 1 2 3 4 5 6)
  (traces
    ((recv
       (hash (exp (gen) l-1) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) l-1))))
      (send
        (hash (exp (gen) l-1) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) l-1)))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l-0) l-1))
          (enc na nb a b
            (hash (exp (gen) l-1) (exp (gen) (mul x l))
              (exp (gen) (mul x (rec l-0) l-1)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) l-1) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) l-1))))
      (send
        (hash (exp (gen) l-1) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) l-1)))))
    ((recv
       (cat (exp (gen) l-1) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) l-1))))
      (send
        (cat (exp (gen) l-1) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) l-1)))))
    ((load priv-stor-1 (cat pt-3 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) x) l)) (send (cat (exp (gen) x) l))))
  (label 215)
  (parent 189)
  (unrealized (0 0) (1 3) (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x l l-0 l-1 rndx))
  (deflistener
    (hash (exp (gen) l-1) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) l-1))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta (mul (rec l-0) l-1)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) l-1) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) l-1))))
  (deflistener
    (cat (exp (gen) l-1) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) l-1))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) l) x))
  (precedes ((1 2) (0 0)) ((1 2) (7 0)) ((2 1) (1 0)) ((3 2) (1 1))
    ((4 1) (1 3)) ((5 1) (4 0)) ((6 2) (5 0)) ((7 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0 l-1)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l-0))
  (facts (neq b a) (neq a b) (undisclosed l))
  (leads-to ((2 1) (1 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l) x))
    (exp (gen) (mul x l)) (5 0))
  (strand-map 0 1 2 3 4 5 6)
  (traces
    ((recv
       (hash (exp (gen) l-1) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) l-1))))
      (send
        (hash (exp (gen) l-1) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) l-1)))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l-0) l-1))
          (enc na nb a b
            (hash (exp (gen) l-1) (exp (gen) (mul x l))
              (exp (gen) (mul x (rec l-0) l-1)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) l-1) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) l-1))))
      (send
        (hash (exp (gen) l-1) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) l-1)))))
    ((recv
       (cat (exp (gen) l-1) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) l-1))))
      (send
        (cat (exp (gen) l-1) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) l-1)))))
    ((load priv-stor-1 (cat pt-3 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) x)) (send (cat (exp (gen) l) x))))
  (label 216)
  (parent 189)
  (unrealized (0 0) (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (a b a-0 b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x l l-0 rndx) (beta expt)
    (l-1 rndx) (w expt) (x-0 rndx))
  (deflistener
    (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-1) w x-0))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-1) (x x) (beta l) (eta (mul (rec l-1) w x-0)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-1) w x-0))))
  (deflistener
    (cat (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-1) w x-0))))
  (deflistener (cat (exp (gen) x-0) w))
  (defstrand init 3 (na na-0) (a a-0) (b b-0) (priv-stor priv-stor-1)
    (l l-0) (x x-0) (beta beta))
  (precedes ((1 2) (0 0)) ((1 2) (5 0)) ((2 1) (1 0)) ((3 2) (1 1))
    ((4 1) (1 3)) ((5 1) (4 0)) ((6 1) (5 0)) ((7 2) (0 0))
    ((7 2) (6 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na na-0 l l-1)
  (uniq-gen x x-0)
  (absent (x l) (x l-1) (x-0 l-0) (x-0 beta))
  (precur (6 0))
  (gen-st (pv a l-1) (pv a-0 l-0))
  (facts (neq a-0 b-0) (neq b-0 a-0) (neq b a) (neq a b)
    (undisclosed l))
  (leads-to ((2 1) (1 0)))
  (rule fact-init-neq0 fact-resp-neq0 gen-st-ltx-disclose-0
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand init 3) (exp (gen) x-0) (6 0))
  (strand-map 0 1 2 3 4 5 6)
  (traces
    ((recv
       (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-1) w x-0))))
      (send
        (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-1) w x-0)))))
    ((load priv-stor (cat pt (pv a l-1)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l-1) w x-0))
          (enc na nb a b
            (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
              (exp (gen) (mul x (rec l-1) w x-0)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-1) w x-0))))
      (send
        (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-1) w x-0)))))
    ((recv
       (cat (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-1) w x-0))))
      (send
        (cat (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-1) w x-0)))))
    ((recv (cat (exp (gen) x-0) w)) (send (cat (exp (gen) x-0) w)))
    ((load priv-stor-1 (cat pt-3 (pv a-0 l-0)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0)))
      (send (cat na-0 a-0 b-0 (exp (gen) x-0)))))
  (label 217)
  (parent 190)
  (unrealized (0 0) (1 3) (5 0) (7 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (w expt)
    (l l-0 x rndx))
  (deflistener
    (hash (exp (gen) (mul w x)) (exp (gen) (mul l-0 x))
      (exp (gen) (mul w (rec l) x x))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul w (rec l) x)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) (mul w x)) (exp (gen) (mul l-0 x))
      (exp (gen) (mul w (rec l) x x))))
  (deflistener
    (cat (exp (gen) (mul w x)) (exp (gen) (mul l-0 x))
      (exp (gen) (mul w (rec l) x x))))
  (deflistener (cat (exp (gen) x) w))
  (precedes ((1 2) (0 0)) ((1 2) (6 0)) ((2 1) (1 0)) ((3 2) (1 1))
    ((4 1) (1 3)) ((5 1) (4 0)) ((6 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (6 0))
  (gen-st (pv a l))
  (facts (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((2 1) (1 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 7 1 init 3) (exp (gen) x-0) (6 0))
  (strand-map 0 1 2 3 4 5 6)
  (traces
    ((recv
       (hash (exp (gen) (mul w x)) (exp (gen) (mul l-0 x))
         (exp (gen) (mul w (rec l) x x))))
      (send
        (hash (exp (gen) (mul w x)) (exp (gen) (mul l-0 x))
          (exp (gen) (mul w (rec l) x x)))))
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w (rec l) x))
          (enc na nb a b
            (hash (exp (gen) (mul w x)) (exp (gen) (mul l-0 x))
              (exp (gen) (mul w (rec l) x x)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) (mul w x)) (exp (gen) (mul l-0 x))
         (exp (gen) (mul w (rec l) x x))))
      (send
        (hash (exp (gen) (mul w x)) (exp (gen) (mul l-0 x))
          (exp (gen) (mul w (rec l) x x)))))
    ((recv
       (cat (exp (gen) (mul w x)) (exp (gen) (mul l-0 x))
         (exp (gen) (mul w (rec l) x x))))
      (send
        (cat (exp (gen) (mul w x)) (exp (gen) (mul l-0 x))
          (exp (gen) (mul w (rec l) x x)))))
    ((recv (cat (exp (gen) x) w)) (send (cat (exp (gen) x) w))))
  (label 218)
  (parent 190)
  (unrealized (0 0) (1 3) (5 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x l l-0 rndx)
    (w expt))
  (deflistener
    (hash (exp (gen) w) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) w))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta (mul (rec l-0) w)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) w) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) w))))
  (deflistener
    (cat (exp (gen) w) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) w))))
  (deflistener (cat (gen) w))
  (precedes ((1 2) (0 0)) ((1 2) (5 0)) ((2 1) (1 0)) ((3 2) (1 1))
    ((4 1) (1 3)) ((5 1) (4 0)) ((6 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (6 0))
  (gen-st (pv a l-0))
  (facts (neq b a) (neq a b) (undisclosed l))
  (leads-to ((2 1) (1 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (contracted (eta (mul (rec l-0) w)) (l-1 l-0) (w-0 w)) (gen) (6 0))
  (strand-map 0 1 2 3 4 5 6)
  (traces
    ((recv
       (hash (exp (gen) w) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) w))))
      (send
        (hash (exp (gen) w) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) w)))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l-0) w))
          (enc na nb a b
            (hash (exp (gen) w) (exp (gen) (mul x l))
              (exp (gen) (mul x (rec l-0) w)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) w) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) w))))
      (send
        (hash (exp (gen) w) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) w)))))
    ((recv
       (cat (exp (gen) w) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) w))))
      (send
        (cat (exp (gen) w) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) w)))))
    ((recv (cat (gen) w)) (send (cat (gen) w))))
  (label 219)
  (parent 190)
  (unrealized (0 0) (1 3) (5 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x l rndx)
    (w expt) (l-0 rndx))
  (deflistener
    (hash (exp (gen) (mul w l-0)) (exp (gen) (mul x l))
      (exp (gen) (mul x w))))
  (defstrand init 4 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (l l-0) (x x) (beta l) (eta w))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (deflistener
    (hash (exp (gen) (mul w l-0)) (exp (gen) (mul x l))
      (exp (gen) (mul x w))))
  (deflistener
    (cat (exp (gen) (mul w l-0)) (exp (gen) (mul x l))
      (exp (gen) (mul x w))))
  (deflistener (cat (exp (gen) l-0) w))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((1 2) (0 0)) ((1 2) (4 0)) ((2 2) (1 1)) ((3 1) (1 3))
    ((4 1) (3 0)) ((5 1) (4 0)) ((6 1) (1 0)) ((6 2) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (5 0))
  (gen-st (pv self l-0))
  (facts (neq b self) (neq self b) (undisclosed l))
  (leads-to ((6 1) (1 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 2 7 ltx-gen 3) (exp (gen) l-1) (6 0))
  (strand-map 0 1 6 2 3 4 5)
  (traces
    ((recv
       (hash (exp (gen) (mul w l-0)) (exp (gen) (mul x l))
         (exp (gen) (mul x w))))
      (send
        (hash (exp (gen) (mul w l-0)) (exp (gen) (mul x l))
          (exp (gen) (mul x w)))))
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) w)
          (enc na nb self b
            (hash (exp (gen) (mul w l-0)) (exp (gen) (mul x l))
              (exp (gen) (mul x w)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) (mul w l-0)) (exp (gen) (mul x l))
         (exp (gen) (mul x w))))
      (send
        (hash (exp (gen) (mul w l-0)) (exp (gen) (mul x l))
          (exp (gen) (mul x w)))))
    ((recv
       (cat (exp (gen) (mul w l-0)) (exp (gen) (mul x l))
         (exp (gen) (mul x w))))
      (send
        (cat (exp (gen) (mul w l-0)) (exp (gen) (mul x l))
          (exp (gen) (mul x w)))))
    ((recv (cat (exp (gen) l-0) w)) (send (cat (exp (gen) l-0) w)))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 220)
  (parent 190)
  (unrealized (0 0) (4 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (a b a-0 b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x l l-0 rndx)
    (alpha chi expt) (l-1 rndx) (w expt) (y rndx))
  (deflistener
    (hash (exp (gen) (mul w y)) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-1) w y))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-1) (x x) (beta l) (eta (mul (rec l-1) w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) (mul w y)) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-1) w y))))
  (deflistener
    (cat (exp (gen) (mul w y)) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-1) w y))))
  (deflistener (cat (exp (gen) y) w))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b-0)
    (priv-stor priv-stor-1) (l l-0) (y y) (alpha alpha) (chi chi))
  (precedes ((1 2) (0 0)) ((1 2) (5 0)) ((2 1) (1 0)) ((3 2) (1 1))
    ((4 1) (1 3)) ((5 1) (4 0)) ((6 1) (5 0)) ((7 3) (0 0))
    ((7 3) (6 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb-0 l l-1)
  (uniq-gen x y)
  (absent (x l) (x l-1) (y l-0) (y alpha) (y chi))
  (precur (6 0))
  (gen-st (pv a l-1) (pv b-0 l-0))
  (facts (neq b-0 a-0) (neq a-0 b-0) (neq b a) (neq a b)
    (undisclosed l))
  (leads-to ((2 1) (1 0)))
  (rule fact-init-neq0 fact-resp-neq0 gen-st-ltx-disclose-0
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand resp 4) (exp (gen) y) (6 0))
  (strand-map 0 1 2 3 4 5 6)
  (traces
    ((recv
       (hash (exp (gen) (mul w y)) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-1) w y))))
      (send
        (hash (exp (gen) (mul w y)) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-1) w y)))))
    ((load priv-stor (cat pt (pv a l-1)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l-1) w y))
          (enc na nb a b
            (hash (exp (gen) (mul w y)) (exp (gen) (mul x l))
              (exp (gen) (mul x (rec l-1) w y)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) (mul w y)) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-1) w y))))
      (send
        (hash (exp (gen) (mul w y)) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-1) w y)))))
    ((recv
       (cat (exp (gen) (mul w y)) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-1) w y))))
      (send
        (cat (exp (gen) (mul w y)) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-1) w y)))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w)))
    ((load priv-stor-1 (cat pt-3 (pv b-0 l-0)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b-0 (exp (gen) chi)))
      (send
        (cat (exp (gen) y)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul alpha y)) (exp (gen) (mul l-0 chi))
              (exp (gen) (mul chi y))))))))
  (label 221)
  (parent 190)
  (unrealized (0 0) (1 3) (5 0) (7 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x l rndx)
    (w expt) (l-0 rndx))
  (deflistener
    (hash (exp (gen) (mul w l-0)) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) w l-0))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul (rec l) w l-0)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) (mul w l-0)) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) w l-0))))
  (deflistener
    (cat (exp (gen) (mul w l-0)) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) w l-0))))
  (deflistener (cat (exp (gen) l-0) w))
  (precedes ((1 2) (0 0)) ((1 2) (5 0)) ((2 1) (1 0)) ((3 2) (1 1))
    ((3 2) (6 0)) ((4 1) (1 3)) ((5 1) (4 0)) ((6 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (6 0))
  (gen-st (pv a l))
  (facts (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((2 1) (1 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 7 3 ltx-gen 3) (exp (gen) l-1) (6 0))
  (strand-map 0 1 2 3 4 5 6)
  (traces
    ((recv
       (hash (exp (gen) (mul w l-0)) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) w l-0))))
      (send
        (hash (exp (gen) (mul w l-0)) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) w l-0)))))
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l) w l-0))
          (enc na nb a b
            (hash (exp (gen) (mul w l-0)) (exp (gen) (mul x l-0))
              (exp (gen) (mul x (rec l) w l-0)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) (mul w l-0)) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) w l-0))))
      (send
        (hash (exp (gen) (mul w l-0)) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) w l-0)))))
    ((recv
       (cat (exp (gen) (mul w l-0)) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) w l-0))))
      (send
        (cat (exp (gen) (mul w l-0)) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) w l-0)))))
    ((recv (cat (exp (gen) l-0) w)) (send (cat (exp (gen) l-0) w))))
  (label 222)
  (parent 190)
  (unrealized (0 0) (1 3) (5 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x l l-0 rndx) (w expt)
    (l-1 rndx))
  (deflistener
    (hash (exp (gen) (mul w l-1)) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) w l-1))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta (mul (rec l-0) w l-1)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) (mul w l-1)) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) w l-1))))
  (deflistener
    (cat (exp (gen) (mul w l-1)) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) w l-1))))
  (deflistener (cat (exp (gen) l-1) w))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((1 2) (0 0)) ((1 2) (5 0)) ((2 1) (1 0)) ((3 2) (1 1))
    ((4 1) (1 3)) ((5 1) (4 0)) ((6 1) (5 0)) ((7 2) (6 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0 l-1)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (6 0))
  (gen-st (pv a l-0))
  (facts (neq b a) (neq a b) (undisclosed l))
  (leads-to ((2 1) (1 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 3) (exp (gen) l-1) (6 0))
  (strand-map 0 1 2 3 4 5 6)
  (traces
    ((recv
       (hash (exp (gen) (mul w l-1)) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) w l-1))))
      (send
        (hash (exp (gen) (mul w l-1)) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) w l-1)))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l-0) w l-1))
          (enc na nb a b
            (hash (exp (gen) (mul w l-1)) (exp (gen) (mul x l))
              (exp (gen) (mul x (rec l-0) w l-1)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) (mul w l-1)) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) w l-1))))
      (send
        (hash (exp (gen) (mul w l-1)) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) w l-1)))))
    ((recv
       (cat (exp (gen) (mul w l-1)) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) w l-1))))
      (send
        (cat (exp (gen) (mul w l-1)) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) w l-1)))))
    ((recv (cat (exp (gen) l-1) w)) (send (cat (exp (gen) l-1) w)))
    ((load priv-stor-1 (cat pt-3 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))))
  (label 223)
  (parent 190)
  (unrealized (0 0) (1 3) (5 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (y x l l-0 rndx))
  (deflistener
    (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
      (exp (gen) (mul y x))))
  (defstrand init 4 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (l l-0) (x x) (beta l) (eta y))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (priv-stor priv-stor)
    (l l) (y y) (alpha l-0) (chi x))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (cat (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
      (exp (gen) (mul y x))))
  (deflistener (cat (exp (gen) y) l-0))
  (precedes ((1 2) (3 2)) ((2 1) (3 0)) ((2 2) (1 1)) ((3 3) (1 3))
    ((3 3) (6 0)) ((4 1) (1 0)) ((4 2) (3 1)) ((5 1) (0 0))
    ((6 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen y x)
  (absent (y x) (y l) (y l-0) (x l) (x l-0))
  (gen-st (pv b l) (pv self l-0))
  (facts (neq b self) (neq self b) (undisclosed l))
  (leads-to ((2 1) (3 0)) ((4 1) (1 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) y) l-0))
    (exp (gen) (mul y l-0)) (5 0))
  (strand-map 0 1 2 3 4 5)
  (traces
    ((recv
       (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
         (exp (gen) (mul y x))))
      (send
        (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
          (exp (gen) (mul y x)))))
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
              (exp (gen) (mul y x)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
              (exp (gen) (mul y x)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv
       (cat (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
         (exp (gen) (mul y x))))
      (send
        (cat (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
          (exp (gen) (mul y x)))))
    ((recv (cat (exp (gen) y) l-0)) (send (cat (exp (gen) y) l-0))))
  (label 224)
  (parent 191)
  (unrealized (5 0) (6 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (y x l l-0 rndx))
  (deflistener
    (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
      (exp (gen) (mul y x))))
  (defstrand init 4 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (l l-0) (x x) (beta l) (eta y))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (priv-stor priv-stor)
    (l l) (y y) (alpha l-0) (chi x))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (cat (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
      (exp (gen) (mul y x))))
  (deflistener (cat (exp (gen) l-0) y))
  (precedes ((1 2) (3 2)) ((2 1) (3 0)) ((2 2) (1 1)) ((3 3) (1 3))
    ((3 3) (6 0)) ((4 1) (1 0)) ((4 2) (3 1)) ((5 1) (0 0))
    ((6 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen y x)
  (absent (y x) (y l) (y l-0) (x l) (x l-0))
  (gen-st (pv b l) (pv self l-0))
  (facts (neq b self) (neq self b) (undisclosed l))
  (leads-to ((2 1) (3 0)) ((4 1) (1 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l-0) y))
    (exp (gen) (mul y l-0)) (5 0))
  (strand-map 0 1 2 3 4 5)
  (traces
    ((recv
       (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
         (exp (gen) (mul y x))))
      (send
        (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
          (exp (gen) (mul y x)))))
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
              (exp (gen) (mul y x)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
              (exp (gen) (mul y x)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv
       (cat (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
         (exp (gen) (mul y x))))
      (send
        (cat (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
          (exp (gen) (mul y x)))))
    ((recv (cat (exp (gen) l-0) y)) (send (cat (exp (gen) l-0) y))))
  (label 225)
  (parent 191)
  (unrealized (5 0) (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (y x l rndx)
    (beta expt) (x-0 l-0 rndx))
  (deflistener
    (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
      (exp (gen) (mul y x))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (l l) (y y) (alpha l-0) (chi x))
  (deflistener (cat (exp (gen) x-0) (mul (rec x-0) l-0)))
  (defstrand init 3 (na na-0) (a a) (b b-0) (priv-stor priv-stor)
    (l l-0) (x x-0) (beta beta))
  (precedes ((1 2) (4 2)) ((2 1) (1 0)) ((2 1) (6 0)) ((3 1) (4 0))
    ((3 2) (1 1)) ((4 3) (0 0)) ((4 3) (1 3)) ((5 1) (4 1))
    ((6 2) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen y x x-0)
  (absent (y x) (y l) (y l-0) (x l) (x l-0) (x-0 beta) (x-0 l-0))
  (precur (5 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq a b-0) (neq b-0 a) (neq b a) (neq a b) (undisclosed l))
  (leads-to ((2 1) (1 0)) ((2 1) (6 0)) ((3 1) (4 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 7 2 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv a-0 l-1))) (6 0))
  (strand-map 0 1 2 3 4 5 6)
  (traces
    ((recv
       (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
         (exp (gen) (mul y x))))
      (send
        (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
          (exp (gen) (mul y x)))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
              (exp (gen) (mul y x)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
              (exp (gen) (mul y x)))))))
    ((recv (cat (exp (gen) x-0) (mul (rec x-0) l-0)))
      (send (cat (exp (gen) x-0) (mul (rec x-0) l-0))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a b-0 (exp (gen) x-0)))))
  (label 226)
  (parent 192)
  (unrealized (0 0) (4 1) (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (y x rndx)
    (beta expt) (l x-0 l-0 rndx))
  (deflistener
    (hash (exp (gen) (mul y l)) (exp (gen) (mul x l-0))
      (exp (gen) (mul y x))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (l l-0) (y y) (alpha l) (chi x))
  (deflistener (cat (exp (gen) x-0) (mul l (rec x-0))))
  (defstrand init 3 (na na-0) (a b) (b b-0) (priv-stor priv-stor-0)
    (l l-0) (x x-0) (beta beta))
  (precedes ((1 2) (4 2)) ((2 1) (1 0)) ((3 1) (4 0)) ((3 1) (6 0))
    ((3 2) (1 1)) ((4 3) (0 0)) ((4 3) (1 3)) ((5 1) (4 1))
    ((6 2) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen y x x-0)
  (absent (y x) (y l) (y l-0) (x l) (x l-0) (x-0 beta) (x-0 l-0))
  (precur (5 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq b b-0) (neq b-0 b) (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((2 1) (1 0)) ((3 1) (4 0)) ((3 1) (6 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 7 3 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv a-0 l-1))) (6 0))
  (strand-map 0 1 2 3 4 5 6)
  (traces
    ((recv
       (hash (exp (gen) (mul y l)) (exp (gen) (mul x l-0))
         (exp (gen) (mul y x))))
      (send
        (hash (exp (gen) (mul y l)) (exp (gen) (mul x l-0))
          (exp (gen) (mul y x)))))
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l)) (exp (gen) (mul x l-0))
              (exp (gen) (mul y x)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l)) (exp (gen) (mul x l-0))
              (exp (gen) (mul y x)))))))
    ((recv (cat (exp (gen) x-0) (mul l (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l (rec x-0)))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 b b-0 (exp (gen) x-0)))))
  (label 227)
  (parent 192)
  (unrealized (0 0) (4 1) (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (a b a-0 b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l rndx) (beta expt)
    (l-0 x-0 l-1 rndx))
  (deflistener
    (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
      (exp (gen) (mul y x))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (l l) (y y) (alpha l-0) (chi x))
  (deflistener (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
  (defstrand init 3 (na na-0) (a a-0) (b b-0) (priv-stor priv-stor-1)
    (l l-1) (x x-0) (beta beta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self a-0)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((1 2) (4 2)) ((2 1) (1 0)) ((3 1) (4 0)) ((3 2) (1 1))
    ((4 3) (0 0)) ((4 3) (1 3)) ((5 1) (4 1)) ((6 2) (5 0))
    ((7 1) (6 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen y x x-0)
  (absent (y x) (y l) (y l-0) (x l) (x l-0) (x-0 beta) (x-0 l-1))
  (precur (5 0))
  (gen-st (pv a l-0) (pv b l) (pv a-0 l-1))
  (facts (neq a-0 b-0) (neq b-0 a-0) (neq b a) (neq a b)
    (undisclosed l))
  (leads-to ((2 1) (1 0)) ((3 1) (4 0)) ((7 1) (6 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv a-0 l-1))) (6 0))
  (strand-map 0 1 2 3 4 5 6)
  (traces
    ((recv
       (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
         (exp (gen) (mul y x))))
      (send
        (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
          (exp (gen) (mul y x)))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
              (exp (gen) (mul y x)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
              (exp (gen) (mul y x)))))))
    ((recv (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-0 (rec x-0)))))
    ((load priv-stor-1 (cat pt-3 (pv a-0 l-1)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a-0 b-0 (exp (gen) x-0))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv a-0 l-1)))))
  (label 228)
  (parent 192)
  (unrealized (0 0) (4 1) (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn)
    (y x l l-0 rndx))
  (deflistener
    (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
      (exp (gen) (mul y x))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (l l) (y y) (alpha l-0) (chi x))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (precedes ((1 2) (4 2)) ((2 1) (1 0)) ((2 1) (6 0)) ((3 1) (4 0))
    ((3 2) (1 1)) ((4 3) (0 0)) ((4 3) (1 3)) ((5 1) (4 1))
    ((6 2) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen y x)
  (absent (y x) (y l) (y l-0) (x l) (x l-0))
  (precur (5 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq b a) (neq a b) (undisclosed l))
  (leads-to ((2 1) (1 0)) ((2 1) (6 0)) ((3 1) (4 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-disclose 3) l-0 (5 0)
    (ch-msg priv-stor (cat pt (pv a l-0))))
  (strand-map 0 1 2 3 4 5)
  (traces
    ((recv
       (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
         (exp (gen) (mul y x))))
      (send
        (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
          (exp (gen) (mul y x)))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
              (exp (gen) (mul y x)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
              (exp (gen) (mul y x)))))))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-3 "nil")) (send l-0)))
  (label 229)
  (parent 194)
  (unrealized (0 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (y x l l-0 rndx))
  (deflistener
    (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
      (exp (gen) (mul y x))))
  (defstrand init 4 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (l l-0) (x x) (beta l) (eta y))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (priv-stor priv-stor)
    (l l) (y y) (alpha l-0) (chi x))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (cat (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
      (exp (gen) (mul y x))))
  (precedes ((1 2) (3 2)) ((2 1) (3 0)) ((2 2) (1 1)) ((3 3) (1 3))
    ((3 3) (6 0)) ((4 1) (3 1)) ((5 1) (1 0)) ((5 2) (4 0))
    ((6 1) (0 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen y x)
  (absent (y x) (y l) (y l-0) (x l) (x l-0))
  (precur (4 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (neq b self) (neq self b) (undisclosed l))
  (leads-to ((2 1) (3 0)) ((5 1) (1 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation encryption-test
    (added-listener
      (cat (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
        (exp (gen) (mul y x))))
    (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
      (exp (gen) (mul y x))) (0 0))
  (strand-map 0 1 2 3 4 5)
  (traces
    ((recv
       (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
         (exp (gen) (mul y x))))
      (send
        (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
          (exp (gen) (mul y x)))))
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
              (exp (gen) (mul y x)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
              (exp (gen) (mul y x)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv
       (cat (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
         (exp (gen) (mul y x))))
      (send
        (cat (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
          (exp (gen) (mul y x))))))
  (label 230)
  (parent 195)
  (unrealized (6 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (a b a-0 name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (y x l rndx)
    (alpha chi expt) (y-0 l-0 rndx))
  (deflistener
    (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
      (exp (gen) (mul y x))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (l l) (y y) (alpha l-0) (chi x))
  (deflistener (cat (exp (gen) y-0) (mul (rec y-0) l-0)))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b a)
    (priv-stor priv-stor) (l l-0) (y y-0) (alpha alpha) (chi chi))
  (precedes ((1 2) (4 2)) ((2 1) (1 0)) ((2 1) (6 0)) ((3 1) (4 0))
    ((3 2) (1 1)) ((4 3) (0 0)) ((4 3) (1 3)) ((5 1) (4 1))
    ((6 3) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen y x y-0)
  (absent (y x) (y l) (y l-0) (x l) (x l-0) (y-0 alpha) (y-0 chi)
    (y-0 l-0))
  (precur (5 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq a a-0) (neq a-0 a) (neq b a) (neq a b) (undisclosed l))
  (leads-to ((2 1) (1 0)) ((2 1) (6 0)) ((3 1) (4 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 7 2 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv b-0 l-1))) (6 0))
  (strand-map 0 1 2 3 4 5 6)
  (traces
    ((recv
       (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
         (exp (gen) (mul y x))))
      (send
        (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
          (exp (gen) (mul y x)))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
              (exp (gen) (mul y x)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
              (exp (gen) (mul y x)))))))
    ((recv (cat (exp (gen) y-0) (mul (rec y-0) l-0)))
      (send (cat (exp (gen) y-0) (mul (rec y-0) l-0))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 a (exp (gen) chi)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 a
            (hash (exp (gen) (mul alpha y-0)) (exp (gen) (mul chi l-0))
              (exp (gen) (mul chi y-0))))))))
  (label 231)
  (parent 196)
  (unrealized (0 0) (4 1) (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (a b a-0 name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (y x rndx)
    (alpha chi expt) (l y-0 l-0 rndx))
  (deflistener
    (hash (exp (gen) (mul y l)) (exp (gen) (mul x l-0))
      (exp (gen) (mul y x))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (l l-0) (y y) (alpha l) (chi x))
  (deflistener (cat (exp (gen) y-0) (mul l (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b)
    (priv-stor priv-stor-0) (l l-0) (y y-0) (alpha alpha) (chi chi))
  (precedes ((1 2) (4 2)) ((2 1) (1 0)) ((3 1) (4 0)) ((3 1) (6 0))
    ((3 2) (1 1)) ((4 3) (0 0)) ((4 3) (1 3)) ((5 1) (4 1))
    ((6 3) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen y x y-0)
  (absent (y x) (y l) (y l-0) (x l) (x l-0) (y-0 alpha) (y-0 chi)
    (y-0 l-0))
  (precur (5 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq b a-0) (neq a-0 b) (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((2 1) (1 0)) ((3 1) (4 0)) ((3 1) (6 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 7 3 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv b-0 l-1))) (6 0))
  (strand-map 0 1 2 3 4 5 6)
  (traces
    ((recv
       (hash (exp (gen) (mul y l)) (exp (gen) (mul x l-0))
         (exp (gen) (mul y x))))
      (send
        (hash (exp (gen) (mul y l)) (exp (gen) (mul x l-0))
          (exp (gen) (mul y x)))))
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l)) (exp (gen) (mul x l-0))
              (exp (gen) (mul y x)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l)) (exp (gen) (mul x l-0))
              (exp (gen) (mul y x)))))))
    ((recv (cat (exp (gen) y-0) (mul l (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l (rec y-0)))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b (exp (gen) chi)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b
            (hash (exp (gen) (mul alpha y-0)) (exp (gen) (mul chi l-0))
              (exp (gen) (mul chi y-0))))))))
  (label 232)
  (parent 196)
  (unrealized (0 0) (4 1) (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l rndx)
    (alpha chi expt) (l-0 y-0 l-1 rndx))
  (deflistener
    (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
      (exp (gen) (mul y x))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (l l) (y y) (alpha l-0) (chi x))
  (deflistener (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b-0)
    (priv-stor priv-stor-1) (l l-1) (y y-0) (alpha alpha) (chi chi))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b-0)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((1 2) (4 2)) ((2 1) (1 0)) ((3 1) (4 0)) ((3 2) (1 1))
    ((4 3) (0 0)) ((4 3) (1 3)) ((5 1) (4 1)) ((6 3) (5 0))
    ((7 1) (6 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen y x y-0)
  (absent (y x) (y l) (y l-0) (x l) (x l-0) (y-0 alpha) (y-0 chi)
    (y-0 l-1))
  (precur (5 0))
  (gen-st (pv a l-0) (pv b l) (pv b-0 l-1))
  (facts (neq b-0 a-0) (neq a-0 b-0) (neq b a) (neq a b)
    (undisclosed l))
  (leads-to ((2 1) (1 0)) ((3 1) (4 0)) ((7 1) (6 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv b-0 l-1))) (6 0))
  (strand-map 0 1 2 3 4 5 6)
  (traces
    ((recv
       (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
         (exp (gen) (mul y x))))
      (send
        (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
          (exp (gen) (mul y x)))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
              (exp (gen) (mul y x)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
              (exp (gen) (mul y x)))))))
    ((recv (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-0 (rec y-0)))))
    ((load priv-stor-1 (cat pt-3 (pv b-0 l-1)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b-0 (exp (gen) chi)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul alpha y-0)) (exp (gen) (mul chi l-1))
              (exp (gen) (mul chi y-0)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b-0 l-1)))))
  (label 233)
  (parent 196)
  (unrealized (0 0) (4 1) (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (deflistener
    (hash (exp (gen) (mul y l l-0 (rec l-1))) (exp (gen) (mul x l-0))
      (exp (gen) (mul y x l-0 (rec l-1)))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul y l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-1) (y y) (alpha (mul l l-0 (rec l-1)))
    (chi (mul x l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l l-0)) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) l) l-0))
  (precedes ((1 2) (4 2)) ((2 1) (1 0)) ((3 1) (8 0)) ((3 2) (1 1))
    ((4 3) (0 0)) ((4 3) (1 3)) ((5 1) (4 0)) ((5 1) (7 0))
    ((6 1) (4 1)) ((7 2) (6 0)) ((8 1) (6 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x l-0 (rec l-1))) (y (mul l l-0 (rec l-1))) (y l-1)
    (x l) (x l-0))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((2 1) (1 0)) ((5 1) (4 0)) ((5 1) (7 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l) l-0))
    (exp (gen) (mul l l-0)) (6 0))
  (strand-map 0 1 2 3 4 5 6 7)
  (traces
    ((recv
       (hash (exp (gen) (mul y l l-0 (rec l-1))) (exp (gen) (mul x l-0))
         (exp (gen) (mul y x l-0 (rec l-1)))))
      (send
        (hash (exp (gen) (mul y l l-0 (rec l-1)))
          (exp (gen) (mul x l-0)) (exp (gen) (mul y x l-0 (rec l-1))))))
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y l-0 (rec l-1)))
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x l-0 (rec l-1)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l l-0)) l-1))
      (send (cat (exp (gen) (mul l l-0)) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l-1))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0))))
  (label 234)
  (parent 199)
  (unrealized (0 0) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (deflistener
    (hash (exp (gen) (mul y l l-0 (rec l-1))) (exp (gen) (mul x l-0))
      (exp (gen) (mul y x l-0 (rec l-1)))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul y l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-1) (y y) (alpha (mul l l-0 (rec l-1)))
    (chi (mul x l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l l-0)) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) l-0) l))
  (precedes ((1 2) (4 2)) ((2 1) (1 0)) ((2 1) (8 0)) ((3 2) (1 1))
    ((4 3) (0 0)) ((4 3) (1 3)) ((5 1) (4 0)) ((5 1) (7 0))
    ((6 1) (4 1)) ((7 2) (6 0)) ((8 1) (6 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x l-0 (rec l-1))) (y (mul l l-0 (rec l-1))) (y l-1)
    (x l) (x l-0))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((2 1) (1 0)) ((5 1) (4 0)) ((5 1) (7 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l-0) l))
    (exp (gen) (mul l l-0)) (6 0))
  (strand-map 0 1 2 3 4 5 6 7)
  (traces
    ((recv
       (hash (exp (gen) (mul y l l-0 (rec l-1))) (exp (gen) (mul x l-0))
         (exp (gen) (mul y x l-0 (rec l-1)))))
      (send
        (hash (exp (gen) (mul y l l-0 (rec l-1)))
          (exp (gen) (mul x l-0)) (exp (gen) (mul y x l-0 (rec l-1))))))
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y l-0 (rec l-1)))
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x l-0 (rec l-1)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l l-0)) l-1))
      (send (cat (exp (gen) (mul l l-0)) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l-1))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l))))
  (label 235)
  (parent 199)
  (unrealized (0 0) (1 3) (4 2) (8 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (deflistener
    (hash (exp (gen) (mul y l (rec l-0) l-1)) (exp (gen) (mul x l))
      (exp (gen) (mul y x l (rec l-0)))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-1) (x x) (beta l) (eta (mul y l (rec l-0))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-0) (y y) (alpha (mul l (rec l-0) l-1))
    (chi (mul x l (rec l-0))))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul l (rec l-0))) l-1))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-1))
  (deflistener (cat (exp (gen) l) l-0))
  (precedes ((1 2) (4 2)) ((2 1) (1 0)) ((2 1) (7 0)) ((3 2) (1 1))
    ((4 3) (0 0)) ((4 3) (1 3)) ((5 1) (4 0)) ((5 1) (8 0))
    ((6 1) (4 1)) ((7 2) (6 0)) ((8 1) (6 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x l (rec l-0))) (y (mul l (rec l-0) l-1)) (y l-0)
    (x l) (x l-1))
  (gen-st (pv a l-1) (pv b l-0))
  (facts (neq b a) (neq a b) (undisclosed l))
  (leads-to ((2 1) (1 0)) ((2 1) (7 0)) ((5 1) (4 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l) l-0))
    (exp (gen) (mul l (rec l-0))) (6 0))
  (strand-map 0 1 2 3 4 5 6 7)
  (traces
    ((recv
       (hash (exp (gen) (mul y l (rec l-0) l-1)) (exp (gen) (mul x l))
         (exp (gen) (mul y x l (rec l-0)))))
      (send
        (hash (exp (gen) (mul y l (rec l-0) l-1)) (exp (gen) (mul x l))
          (exp (gen) (mul y x l (rec l-0))))))
    ((load priv-stor (cat pt (pv a l-1)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y l (rec l-0)))
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-1))
              (exp (gen) (mul x l))
              (exp (gen) (mul y x l (rec l-0))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x l (rec l-0)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-1))
              (exp (gen) (mul x l))
              (exp (gen) (mul y x l (rec l-0))))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul l (rec l-0))) l-1))
      (send (cat (exp (gen) (mul l (rec l-0))) l-1)))
    ((load priv-stor (cat pt (pv a l-1)))
      (stor priv-stor (cat pt-5 "nil")) (send l-1))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0))))
  (label 236)
  (parent 200)
  (unrealized (0 0) (1 3) (4 2) (8 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (deflistener
    (hash (exp (gen) (mul y l (rec l-0) l-1)) (exp (gen) (mul x l))
      (exp (gen) (mul y x l (rec l-0)))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-1) (x x) (beta l) (eta (mul y l (rec l-0))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-0) (y y) (alpha (mul l (rec l-0) l-1))
    (chi (mul x l (rec l-0))))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul l (rec l-0))) l-1))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-1))
  (deflistener (cat (exp (gen) (rec l-0)) l))
  (precedes ((1 2) (4 2)) ((2 1) (1 0)) ((2 1) (7 0)) ((3 1) (8 0))
    ((3 2) (1 1)) ((4 3) (0 0)) ((4 3) (1 3)) ((5 1) (4 0))
    ((6 1) (4 1)) ((7 2) (6 0)) ((8 1) (6 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x l (rec l-0))) (y (mul l (rec l-0) l-1)) (y l-0)
    (x l) (x l-1))
  (gen-st (pv a l-1) (pv b l-0))
  (facts (neq b a) (neq a b) (undisclosed l))
  (leads-to ((2 1) (1 0)) ((2 1) (7 0)) ((5 1) (4 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) (rec l-0)) l))
    (exp (gen) (mul l (rec l-0))) (6 0))
  (strand-map 0 1 2 3 4 5 6 7)
  (traces
    ((recv
       (hash (exp (gen) (mul y l (rec l-0) l-1)) (exp (gen) (mul x l))
         (exp (gen) (mul y x l (rec l-0)))))
      (send
        (hash (exp (gen) (mul y l (rec l-0) l-1)) (exp (gen) (mul x l))
          (exp (gen) (mul y x l (rec l-0))))))
    ((load priv-stor (cat pt (pv a l-1)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y l (rec l-0)))
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-1))
              (exp (gen) (mul x l))
              (exp (gen) (mul y x l (rec l-0))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x l (rec l-0)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-1))
              (exp (gen) (mul x l))
              (exp (gen) (mul y x l (rec l-0))))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul l (rec l-0))) l-1))
      (send (cat (exp (gen) (mul l (rec l-0))) l-1)))
    ((load priv-stor (cat pt (pv a l-1)))
      (stor priv-stor (cat pt-5 "nil")) (send l-1))
    ((recv (cat (exp (gen) (rec l-0)) l))
      (send (cat (exp (gen) (rec l-0)) l))))
  (label 237)
  (parent 200)
  (unrealized (0 0) (1 3) (4 2) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (a b a-0 name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x l rndx)
    (alpha chi expt) (y l-0 rndx))
  (deflistener
    (hash (exp (gen) y) (exp (gen) (mul x l))
      (exp (gen) (mul x y (rec l-0)))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta (mul y (rec l-0))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) y) (exp (gen) (mul x l))
      (exp (gen) (mul x y (rec l-0)))))
  (deflistener
    (cat (exp (gen) y) (exp (gen) (mul x l))
      (exp (gen) (mul x y (rec l-0)))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b a)
    (priv-stor priv-stor) (l l-0) (y y) (alpha alpha) (chi chi))
  (deflistener (cat (exp (gen) x) l))
  (precedes ((1 2) (0 0)) ((1 2) (7 0)) ((2 1) (1 0)) ((2 1) (6 0))
    ((3 2) (1 1)) ((4 1) (1 3)) ((5 1) (4 0)) ((6 3) (0 0))
    ((6 3) (5 0)) ((7 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb-0 l l-0)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y alpha) (y chi) (y l-0))
  (gen-st (pv a l-0))
  (facts (neq a a-0) (neq a-0 a) (neq b a) (neq a b) (undisclosed l))
  (leads-to ((2 1) (1 0)) ((2 1) (6 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) x) l))
    (exp (gen) (mul x l)) (5 0))
  (strand-map 0 1 2 3 4 5 6)
  (traces
    ((recv
       (hash (exp (gen) y) (exp (gen) (mul x l))
         (exp (gen) (mul x y (rec l-0)))))
      (send
        (hash (exp (gen) y) (exp (gen) (mul x l))
          (exp (gen) (mul x y (rec l-0))))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l-0)))
          (enc na nb a b
            (hash (exp (gen) y) (exp (gen) (mul x l))
              (exp (gen) (mul x y (rec l-0))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) y) (exp (gen) (mul x l))
         (exp (gen) (mul x y (rec l-0)))))
      (send
        (hash (exp (gen) y) (exp (gen) (mul x l))
          (exp (gen) (mul x y (rec l-0))))))
    ((recv
       (cat (exp (gen) y) (exp (gen) (mul x l))
         (exp (gen) (mul x y (rec l-0)))))
      (send
        (cat (exp (gen) y) (exp (gen) (mul x l))
          (exp (gen) (mul x y (rec l-0))))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 a (exp (gen) chi)))
      (send
        (cat (exp (gen) y)
          (enc na-0 nb-0 a-0 a
            (hash (exp (gen) (mul alpha y)) (exp (gen) (mul chi l-0))
              (exp (gen) (mul chi y)))))))
    ((recv (cat (exp (gen) x) l)) (send (cat (exp (gen) x) l))))
  (label 238)
  (parent 201)
  (unrealized (0 0) (1 3) (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (a b a-0 name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x l rndx)
    (alpha chi expt) (y l-0 rndx))
  (deflistener
    (hash (exp (gen) y) (exp (gen) (mul x l))
      (exp (gen) (mul x y (rec l-0)))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta (mul y (rec l-0))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) y) (exp (gen) (mul x l))
      (exp (gen) (mul x y (rec l-0)))))
  (deflistener
    (cat (exp (gen) y) (exp (gen) (mul x l))
      (exp (gen) (mul x y (rec l-0)))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b a)
    (priv-stor priv-stor) (l l-0) (y y) (alpha alpha) (chi chi))
  (deflistener (cat (exp (gen) l) x))
  (precedes ((1 2) (0 0)) ((1 2) (7 0)) ((2 1) (1 0)) ((2 1) (6 0))
    ((3 2) (1 1)) ((4 1) (1 3)) ((5 1) (4 0)) ((6 3) (0 0))
    ((6 3) (5 0)) ((7 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb-0 l l-0)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y alpha) (y chi) (y l-0))
  (gen-st (pv a l-0))
  (facts (neq a a-0) (neq a-0 a) (neq b a) (neq a b) (undisclosed l))
  (leads-to ((2 1) (1 0)) ((2 1) (6 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l) x))
    (exp (gen) (mul x l)) (5 0))
  (strand-map 0 1 2 3 4 5 6)
  (traces
    ((recv
       (hash (exp (gen) y) (exp (gen) (mul x l))
         (exp (gen) (mul x y (rec l-0)))))
      (send
        (hash (exp (gen) y) (exp (gen) (mul x l))
          (exp (gen) (mul x y (rec l-0))))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l-0)))
          (enc na nb a b
            (hash (exp (gen) y) (exp (gen) (mul x l))
              (exp (gen) (mul x y (rec l-0))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) y) (exp (gen) (mul x l))
         (exp (gen) (mul x y (rec l-0)))))
      (send
        (hash (exp (gen) y) (exp (gen) (mul x l))
          (exp (gen) (mul x y (rec l-0))))))
    ((recv
       (cat (exp (gen) y) (exp (gen) (mul x l))
         (exp (gen) (mul x y (rec l-0)))))
      (send
        (cat (exp (gen) y) (exp (gen) (mul x l))
          (exp (gen) (mul x y (rec l-0))))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 a (exp (gen) chi)))
      (send
        (cat (exp (gen) y)
          (enc na-0 nb-0 a-0 a
            (hash (exp (gen) (mul alpha y)) (exp (gen) (mul chi l-0))
              (exp (gen) (mul chi y)))))))
    ((recv (cat (exp (gen) l) x)) (send (cat (exp (gen) l) x))))
  (label 239)
  (parent 201)
  (unrealized (0 0) (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (a b a-0 name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (alpha chi expt) (l y l-0 rndx))
  (deflistener
    (hash (exp (gen) y) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) y))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul (rec l) y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) y) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) y))))
  (deflistener
    (cat (exp (gen) y) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) y))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b)
    (priv-stor priv-stor-0) (l l-0) (y y) (alpha alpha) (chi chi))
  (deflistener (cat (exp (gen) x) l-0))
  (precedes ((1 2) (0 0)) ((1 2) (7 0)) ((2 1) (1 0)) ((3 1) (6 0))
    ((3 2) (1 1)) ((4 1) (1 3)) ((5 1) (4 0)) ((6 3) (0 0))
    ((6 3) (5 0)) ((7 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb-0 l l-0)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y alpha) (y chi) (y l-0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq b a-0) (neq a-0 b) (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((2 1) (1 0)) ((3 1) (6 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) x) l-0))
    (exp (gen) (mul x l-0)) (5 0))
  (strand-map 0 1 2 3 4 5 6)
  (traces
    ((recv
       (hash (exp (gen) y) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) y))))
      (send
        (hash (exp (gen) y) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) y)))))
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l) y))
          (enc na nb a b
            (hash (exp (gen) y) (exp (gen) (mul x l-0))
              (exp (gen) (mul x (rec l) y)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) y) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) y))))
      (send
        (hash (exp (gen) y) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) y)))))
    ((recv
       (cat (exp (gen) y) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) y))))
      (send
        (cat (exp (gen) y) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) y)))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b (exp (gen) chi)))
      (send
        (cat (exp (gen) y)
          (enc na-0 nb-0 a-0 b
            (hash (exp (gen) (mul alpha y)) (exp (gen) (mul chi l-0))
              (exp (gen) (mul chi y)))))))
    ((recv (cat (exp (gen) x) l-0)) (send (cat (exp (gen) x) l-0))))
  (label 240)
  (parent 202)
  (unrealized (0 0) (1 3) (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (a b a-0 name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (alpha chi expt) (l y l-0 rndx))
  (deflistener
    (hash (exp (gen) y) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) y))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul (rec l) y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) y) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) y))))
  (deflistener
    (cat (exp (gen) y) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) y))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b)
    (priv-stor priv-stor-0) (l l-0) (y y) (alpha alpha) (chi chi))
  (deflistener (cat (exp (gen) l-0) x))
  (precedes ((1 2) (0 0)) ((1 2) (7 0)) ((2 1) (1 0)) ((3 1) (6 0))
    ((3 2) (1 1)) ((4 1) (1 3)) ((5 1) (4 0)) ((6 3) (0 0))
    ((6 3) (5 0)) ((7 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb-0 l l-0)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y alpha) (y chi) (y l-0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq b a-0) (neq a-0 b) (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((2 1) (1 0)) ((3 1) (6 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l-0) x))
    (exp (gen) (mul x l-0)) (5 0))
  (strand-map 0 1 2 3 4 5 6)
  (traces
    ((recv
       (hash (exp (gen) y) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) y))))
      (send
        (hash (exp (gen) y) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) y)))))
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l) y))
          (enc na nb a b
            (hash (exp (gen) y) (exp (gen) (mul x l-0))
              (exp (gen) (mul x (rec l) y)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) y) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) y))))
      (send
        (hash (exp (gen) y) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) y)))))
    ((recv
       (cat (exp (gen) y) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) y))))
      (send
        (cat (exp (gen) y) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) y)))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b (exp (gen) chi)))
      (send
        (cat (exp (gen) y)
          (enc na-0 nb-0 a-0 b
            (hash (exp (gen) (mul alpha y)) (exp (gen) (mul chi l-0))
              (exp (gen) (mul chi y)))))))
    ((recv (cat (exp (gen) l-0) x)) (send (cat (exp (gen) l-0) x))))
  (label 241)
  (parent 202)
  (unrealized (0 0) (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x l rndx) (alpha chi expt)
    (l-0 y l-1 rndx))
  (deflistener
    (hash (exp (gen) y) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) y))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta (mul (rec l-0) y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) y) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) y))))
  (deflistener
    (cat (exp (gen) y) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) y))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b-0)
    (priv-stor priv-stor-1) (l l-1) (y y) (alpha alpha) (chi chi))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b-0)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) x) l))
  (precedes ((1 2) (0 0)) ((1 2) (8 0)) ((2 1) (1 0)) ((3 2) (1 1))
    ((4 1) (1 3)) ((5 1) (4 0)) ((6 3) (0 0)) ((6 3) (5 0))
    ((7 1) (6 0)) ((8 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb-0 l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y alpha) (y chi) (y l-1))
  (gen-st (pv a l-0) (pv b-0 l-1))
  (facts (neq b-0 a-0) (neq a-0 b-0) (neq b a) (neq a b)
    (undisclosed l))
  (leads-to ((2 1) (1 0)) ((7 1) (6 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) x) l))
    (exp (gen) (mul x l)) (5 0))
  (strand-map 0 1 2 3 4 5 6 7)
  (traces
    ((recv
       (hash (exp (gen) y) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) y))))
      (send
        (hash (exp (gen) y) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) y)))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l-0) y))
          (enc na nb a b
            (hash (exp (gen) y) (exp (gen) (mul x l))
              (exp (gen) (mul x (rec l-0) y)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) y) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) y))))
      (send
        (hash (exp (gen) y) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) y)))))
    ((recv
       (cat (exp (gen) y) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) y))))
      (send
        (cat (exp (gen) y) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) y)))))
    ((load priv-stor-1 (cat pt-3 (pv b-0 l-1)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b-0 (exp (gen) chi)))
      (send
        (cat (exp (gen) y)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul alpha y)) (exp (gen) (mul chi l-1))
              (exp (gen) (mul chi y)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b-0 l-1))))
    ((recv (cat (exp (gen) x) l)) (send (cat (exp (gen) x) l))))
  (label 242)
  (parent 203)
  (unrealized (0 0) (1 3) (5 0) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x l rndx) (alpha chi expt)
    (l-0 y l-1 rndx))
  (deflistener
    (hash (exp (gen) y) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) y))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta (mul (rec l-0) y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) y) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) y))))
  (deflistener
    (cat (exp (gen) y) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) y))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b-0)
    (priv-stor priv-stor-1) (l l-1) (y y) (alpha alpha) (chi chi))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b-0)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) l) x))
  (precedes ((1 2) (0 0)) ((1 2) (8 0)) ((2 1) (1 0)) ((3 2) (1 1))
    ((4 1) (1 3)) ((5 1) (4 0)) ((6 3) (0 0)) ((6 3) (5 0))
    ((7 1) (6 0)) ((8 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb-0 l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y alpha) (y chi) (y l-1))
  (gen-st (pv a l-0) (pv b-0 l-1))
  (facts (neq b-0 a-0) (neq a-0 b-0) (neq b a) (neq a b)
    (undisclosed l))
  (leads-to ((2 1) (1 0)) ((7 1) (6 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l) x))
    (exp (gen) (mul x l)) (5 0))
  (strand-map 0 1 2 3 4 5 6 7)
  (traces
    ((recv
       (hash (exp (gen) y) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) y))))
      (send
        (hash (exp (gen) y) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) y)))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l-0) y))
          (enc na nb a b
            (hash (exp (gen) y) (exp (gen) (mul x l))
              (exp (gen) (mul x (rec l-0) y)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) y) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) y))))
      (send
        (hash (exp (gen) y) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) y)))))
    ((recv
       (cat (exp (gen) y) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) y))))
      (send
        (cat (exp (gen) y) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) y)))))
    ((load priv-stor-1 (cat pt-3 (pv b-0 l-1)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b-0 (exp (gen) chi)))
      (send
        (cat (exp (gen) y)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul alpha y)) (exp (gen) (mul chi l-1))
              (exp (gen) (mul chi y)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b-0 l-1))))
    ((recv (cat (exp (gen) l) x)) (send (cat (exp (gen) l) x))))
  (label 243)
  (parent 203)
  (unrealized (0 0) (5 0) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x l rndx)
    (beta expt) (x-0 l-0 rndx))
  (deflistener
    (hash (exp (gen) x-0) (exp (gen) (mul x l))
      (exp (gen) (mul x x-0 (rec l-0)))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta (mul x-0 (rec l-0))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) x-0) (exp (gen) (mul x l))
      (exp (gen) (mul x x-0 (rec l-0)))))
  (deflistener
    (cat (exp (gen) x-0) (exp (gen) (mul x l))
      (exp (gen) (mul x x-0 (rec l-0)))))
  (defstrand init 3 (na na-0) (a a) (b b-0) (priv-stor priv-stor)
    (l l-0) (x x-0) (beta beta))
  (deflistener (cat (exp (gen) x) l))
  (precedes ((1 2) (0 0)) ((1 2) (7 0)) ((2 1) (1 0)) ((2 1) (6 0))
    ((3 2) (1 1)) ((4 1) (1 3)) ((5 1) (4 0)) ((6 2) (0 0))
    ((6 2) (5 0)) ((7 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na na-0 l l-0)
  (uniq-gen x x-0)
  (absent (x l) (x l-0) (x-0 beta) (x-0 l-0))
  (gen-st (pv a l-0))
  (facts (neq a b-0) (neq b-0 a) (neq b a) (neq a b) (undisclosed l))
  (leads-to ((2 1) (1 0)) ((2 1) (6 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) x) l))
    (exp (gen) (mul x l)) (5 0))
  (strand-map 0 1 2 3 4 5 6)
  (traces
    ((recv
       (hash (exp (gen) x-0) (exp (gen) (mul x l))
         (exp (gen) (mul x x-0 (rec l-0)))))
      (send
        (hash (exp (gen) x-0) (exp (gen) (mul x l))
          (exp (gen) (mul x x-0 (rec l-0))))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul x-0 (rec l-0)))
          (enc na nb a b
            (hash (exp (gen) x-0) (exp (gen) (mul x l))
              (exp (gen) (mul x x-0 (rec l-0))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) x-0) (exp (gen) (mul x l))
         (exp (gen) (mul x x-0 (rec l-0)))))
      (send
        (hash (exp (gen) x-0) (exp (gen) (mul x l))
          (exp (gen) (mul x x-0 (rec l-0))))))
    ((recv
       (cat (exp (gen) x-0) (exp (gen) (mul x l))
         (exp (gen) (mul x x-0 (rec l-0)))))
      (send
        (cat (exp (gen) x-0) (exp (gen) (mul x l))
          (exp (gen) (mul x x-0 (rec l-0))))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a b-0 (exp (gen) x-0))))
    ((recv (cat (exp (gen) x) l)) (send (cat (exp (gen) x) l))))
  (label 244)
  (parent 204)
  (unrealized (0 0) (1 3) (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x l rndx)
    (beta expt) (x-0 l-0 rndx))
  (deflistener
    (hash (exp (gen) x-0) (exp (gen) (mul x l))
      (exp (gen) (mul x x-0 (rec l-0)))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta (mul x-0 (rec l-0))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) x-0) (exp (gen) (mul x l))
      (exp (gen) (mul x x-0 (rec l-0)))))
  (deflistener
    (cat (exp (gen) x-0) (exp (gen) (mul x l))
      (exp (gen) (mul x x-0 (rec l-0)))))
  (defstrand init 3 (na na-0) (a a) (b b-0) (priv-stor priv-stor)
    (l l-0) (x x-0) (beta beta))
  (deflistener (cat (exp (gen) l) x))
  (precedes ((1 2) (0 0)) ((1 2) (7 0)) ((2 1) (1 0)) ((2 1) (6 0))
    ((3 2) (1 1)) ((4 1) (1 3)) ((5 1) (4 0)) ((6 2) (0 0))
    ((6 2) (5 0)) ((7 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na na-0 l l-0)
  (uniq-gen x x-0)
  (absent (x l) (x l-0) (x-0 beta) (x-0 l-0))
  (gen-st (pv a l-0))
  (facts (neq a b-0) (neq b-0 a) (neq b a) (neq a b) (undisclosed l))
  (leads-to ((2 1) (1 0)) ((2 1) (6 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l) x))
    (exp (gen) (mul x l)) (5 0))
  (strand-map 0 1 2 3 4 5 6)
  (traces
    ((recv
       (hash (exp (gen) x-0) (exp (gen) (mul x l))
         (exp (gen) (mul x x-0 (rec l-0)))))
      (send
        (hash (exp (gen) x-0) (exp (gen) (mul x l))
          (exp (gen) (mul x x-0 (rec l-0))))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul x-0 (rec l-0)))
          (enc na nb a b
            (hash (exp (gen) x-0) (exp (gen) (mul x l))
              (exp (gen) (mul x x-0 (rec l-0))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) x-0) (exp (gen) (mul x l))
         (exp (gen) (mul x x-0 (rec l-0)))))
      (send
        (hash (exp (gen) x-0) (exp (gen) (mul x l))
          (exp (gen) (mul x x-0 (rec l-0))))))
    ((recv
       (cat (exp (gen) x-0) (exp (gen) (mul x l))
         (exp (gen) (mul x x-0 (rec l-0)))))
      (send
        (cat (exp (gen) x-0) (exp (gen) (mul x l))
          (exp (gen) (mul x x-0 (rec l-0))))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a b-0 (exp (gen) x-0))))
    ((recv (cat (exp (gen) l) x)) (send (cat (exp (gen) l) x))))
  (label 245)
  (parent 204)
  (unrealized (0 0) (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (beta expt) (l x-0 l-0 rndx))
  (deflistener
    (hash (exp (gen) x-0) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) x-0))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul (rec l) x-0)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) x-0) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) x-0))))
  (deflistener
    (cat (exp (gen) x-0) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) x-0))))
  (defstrand init 3 (na na-0) (a b) (b b-0) (priv-stor priv-stor-0)
    (l l-0) (x x-0) (beta beta))
  (deflistener (cat (exp (gen) x) l-0))
  (precedes ((1 2) (0 0)) ((1 2) (7 0)) ((2 1) (1 0)) ((3 1) (6 0))
    ((3 2) (1 1)) ((4 1) (1 3)) ((5 1) (4 0)) ((6 2) (0 0))
    ((6 2) (5 0)) ((7 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na na-0 l l-0)
  (uniq-gen x x-0)
  (absent (x l) (x l-0) (x-0 beta) (x-0 l-0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq b b-0) (neq b-0 b) (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((2 1) (1 0)) ((3 1) (6 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) x) l-0))
    (exp (gen) (mul x l-0)) (5 0))
  (strand-map 0 1 2 3 4 5 6)
  (traces
    ((recv
       (hash (exp (gen) x-0) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) x-0))))
      (send
        (hash (exp (gen) x-0) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) x-0)))))
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l) x-0))
          (enc na nb a b
            (hash (exp (gen) x-0) (exp (gen) (mul x l-0))
              (exp (gen) (mul x (rec l) x-0)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) x-0) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) x-0))))
      (send
        (hash (exp (gen) x-0) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) x-0)))))
    ((recv
       (cat (exp (gen) x-0) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) x-0))))
      (send
        (cat (exp (gen) x-0) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) x-0)))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 b b-0 (exp (gen) x-0))))
    ((recv (cat (exp (gen) x) l-0)) (send (cat (exp (gen) x) l-0))))
  (label 246)
  (parent 205)
  (unrealized (0 0) (1 3) (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (beta expt) (l x-0 l-0 rndx))
  (deflistener
    (hash (exp (gen) x-0) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) x-0))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul (rec l) x-0)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) x-0) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) x-0))))
  (deflistener
    (cat (exp (gen) x-0) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) x-0))))
  (defstrand init 3 (na na-0) (a b) (b b-0) (priv-stor priv-stor-0)
    (l l-0) (x x-0) (beta beta))
  (deflistener (cat (exp (gen) l-0) x))
  (precedes ((1 2) (0 0)) ((1 2) (7 0)) ((2 1) (1 0)) ((3 1) (6 0))
    ((3 2) (1 1)) ((4 1) (1 3)) ((5 1) (4 0)) ((6 2) (0 0))
    ((6 2) (5 0)) ((7 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na na-0 l l-0)
  (uniq-gen x x-0)
  (absent (x l) (x l-0) (x-0 beta) (x-0 l-0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq b b-0) (neq b-0 b) (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((2 1) (1 0)) ((3 1) (6 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l-0) x))
    (exp (gen) (mul x l-0)) (5 0))
  (strand-map 0 1 2 3 4 5 6)
  (traces
    ((recv
       (hash (exp (gen) x-0) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) x-0))))
      (send
        (hash (exp (gen) x-0) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) x-0)))))
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l) x-0))
          (enc na nb a b
            (hash (exp (gen) x-0) (exp (gen) (mul x l-0))
              (exp (gen) (mul x (rec l) x-0)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) x-0) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) x-0))))
      (send
        (hash (exp (gen) x-0) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) x-0)))))
    ((recv
       (cat (exp (gen) x-0) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) x-0))))
      (send
        (cat (exp (gen) x-0) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) x-0)))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 b b-0 (exp (gen) x-0))))
    ((recv (cat (exp (gen) l-0) x)) (send (cat (exp (gen) l-0) x))))
  (label 247)
  (parent 205)
  (unrealized (0 0) (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (a b a-0 b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x l rndx) (beta expt)
    (l-0 x-0 l-1 rndx))
  (deflistener
    (hash (exp (gen) x-0) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) x-0))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta (mul (rec l-0) x-0)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) x-0) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) x-0))))
  (deflistener
    (cat (exp (gen) x-0) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) x-0))))
  (defstrand init 3 (na na-0) (a a-0) (b b-0) (priv-stor priv-stor-1)
    (l l-1) (x x-0) (beta beta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self a-0)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) x) l))
  (precedes ((1 2) (0 0)) ((1 2) (8 0)) ((2 1) (1 0)) ((3 2) (1 1))
    ((4 1) (1 3)) ((5 1) (4 0)) ((6 2) (0 0)) ((6 2) (5 0))
    ((7 1) (6 0)) ((8 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na na-0 l l-0 l-1)
  (uniq-gen x x-0)
  (absent (x l) (x l-0) (x-0 beta) (x-0 l-1))
  (gen-st (pv a l-0) (pv a-0 l-1))
  (facts (neq a-0 b-0) (neq b-0 a-0) (neq b a) (neq a b)
    (undisclosed l))
  (leads-to ((2 1) (1 0)) ((7 1) (6 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) x) l))
    (exp (gen) (mul x l)) (5 0))
  (strand-map 0 1 2 3 4 5 6 7)
  (traces
    ((recv
       (hash (exp (gen) x-0) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) x-0))))
      (send
        (hash (exp (gen) x-0) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) x-0)))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l-0) x-0))
          (enc na nb a b
            (hash (exp (gen) x-0) (exp (gen) (mul x l))
              (exp (gen) (mul x (rec l-0) x-0)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) x-0) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) x-0))))
      (send
        (hash (exp (gen) x-0) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) x-0)))))
    ((recv
       (cat (exp (gen) x-0) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) x-0))))
      (send
        (cat (exp (gen) x-0) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) x-0)))))
    ((load priv-stor-1 (cat pt-3 (pv a-0 l-1)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a-0 b-0 (exp (gen) x-0))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv a-0 l-1))))
    ((recv (cat (exp (gen) x) l)) (send (cat (exp (gen) x) l))))
  (label 248)
  (parent 206)
  (unrealized (0 0) (1 3) (5 0) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (a b a-0 b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x l rndx) (beta expt)
    (l-0 x-0 l-1 rndx))
  (deflistener
    (hash (exp (gen) x-0) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) x-0))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta (mul (rec l-0) x-0)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) x-0) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) x-0))))
  (deflistener
    (cat (exp (gen) x-0) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) x-0))))
  (defstrand init 3 (na na-0) (a a-0) (b b-0) (priv-stor priv-stor-1)
    (l l-1) (x x-0) (beta beta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self a-0)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) l) x))
  (precedes ((1 2) (0 0)) ((1 2) (8 0)) ((2 1) (1 0)) ((3 2) (1 1))
    ((4 1) (1 3)) ((5 1) (4 0)) ((6 2) (0 0)) ((6 2) (5 0))
    ((7 1) (6 0)) ((8 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na na-0 l l-0 l-1)
  (uniq-gen x x-0)
  (absent (x l) (x l-0) (x-0 beta) (x-0 l-1))
  (gen-st (pv a l-0) (pv a-0 l-1))
  (facts (neq a-0 b-0) (neq b-0 a-0) (neq b a) (neq a b)
    (undisclosed l))
  (leads-to ((2 1) (1 0)) ((7 1) (6 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l) x))
    (exp (gen) (mul x l)) (5 0))
  (strand-map 0 1 2 3 4 5 6 7)
  (traces
    ((recv
       (hash (exp (gen) x-0) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) x-0))))
      (send
        (hash (exp (gen) x-0) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) x-0)))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l-0) x-0))
          (enc na nb a b
            (hash (exp (gen) x-0) (exp (gen) (mul x l))
              (exp (gen) (mul x (rec l-0) x-0)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) x-0) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) x-0))))
      (send
        (hash (exp (gen) x-0) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) x-0)))))
    ((recv
       (cat (exp (gen) x-0) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) x-0))))
      (send
        (cat (exp (gen) x-0) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) x-0)))))
    ((load priv-stor-1 (cat pt-3 (pv a-0 l-1)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a-0 b-0 (exp (gen) x-0))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv a-0 l-1))))
    ((recv (cat (exp (gen) l) x)) (send (cat (exp (gen) l) x))))
  (label 249)
  (parent 206)
  (unrealized (0 0) (5 0) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x l rndx)
    (beta w expt) (x-0 l-0 rndx))
  (deflistener
    (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
      (exp (gen) (mul x w x-0 (rec l-0)))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta (mul w x-0 (rec l-0))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
      (exp (gen) (mul x w x-0 (rec l-0)))))
  (deflistener
    (cat (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
      (exp (gen) (mul x w x-0 (rec l-0)))))
  (deflistener (cat (exp (gen) x-0) w))
  (defstrand init 3 (na na-0) (a a) (b b-0) (priv-stor priv-stor)
    (l l-0) (x x-0) (beta beta))
  (precedes ((1 2) (0 0)) ((1 2) (5 0)) ((2 1) (1 0)) ((2 1) (7 0))
    ((3 2) (1 1)) ((4 1) (1 3)) ((5 1) (4 0)) ((6 1) (5 0))
    ((7 2) (0 0)) ((7 2) (6 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na na-0 l l-0)
  (uniq-gen x x-0)
  (absent (x l) (x l-0) (x-0 beta) (x-0 l-0))
  (precur (6 0))
  (gen-st (pv a l-0))
  (facts (neq a b-0) (neq b-0 a) (neq b a) (neq a b) (undisclosed l))
  (leads-to ((2 1) (1 0)) ((2 1) (7 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 8 2 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv a-0 l-1))) (7 0))
  (strand-map 0 1 2 3 4 5 6 7)
  (traces
    ((recv
       (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
         (exp (gen) (mul x w x-0 (rec l-0)))))
      (send
        (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
          (exp (gen) (mul x w x-0 (rec l-0))))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w x-0 (rec l-0)))
          (enc na nb a b
            (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
              (exp (gen) (mul x w x-0 (rec l-0))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
         (exp (gen) (mul x w x-0 (rec l-0)))))
      (send
        (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
          (exp (gen) (mul x w x-0 (rec l-0))))))
    ((recv
       (cat (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
         (exp (gen) (mul x w x-0 (rec l-0)))))
      (send
        (cat (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
          (exp (gen) (mul x w x-0 (rec l-0))))))
    ((recv (cat (exp (gen) x-0) w)) (send (cat (exp (gen) x-0) w)))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a b-0 (exp (gen) x-0)))))
  (label 250)
  (parent 217)
  (unrealized (0 0) (1 3) (5 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (beta expt) (l rndx) (w expt) (x-0 l-0 rndx))
  (deflistener
    (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) w x-0))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul (rec l) w x-0)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) w x-0))))
  (deflistener
    (cat (exp (gen) (mul w x-0)) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) w x-0))))
  (deflistener (cat (exp (gen) x-0) w))
  (defstrand init 3 (na na-0) (a b) (b b-0) (priv-stor priv-stor-0)
    (l l-0) (x x-0) (beta beta))
  (precedes ((1 2) (0 0)) ((1 2) (5 0)) ((2 1) (1 0)) ((3 1) (7 0))
    ((3 2) (1 1)) ((4 1) (1 3)) ((5 1) (4 0)) ((6 1) (5 0))
    ((7 2) (0 0)) ((7 2) (6 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na na-0 l l-0)
  (uniq-gen x x-0)
  (absent (x l) (x l-0) (x-0 beta) (x-0 l-0))
  (precur (6 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq b b-0) (neq b-0 b) (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((2 1) (1 0)) ((3 1) (7 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 8 3 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv a-0 l-1))) (7 0))
  (strand-map 0 1 2 3 4 5 6 7)
  (traces
    ((recv
       (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) w x-0))))
      (send
        (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) w x-0)))))
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l) w x-0))
          (enc na nb a b
            (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l-0))
              (exp (gen) (mul x (rec l) w x-0)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) w x-0))))
      (send
        (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) w x-0)))))
    ((recv
       (cat (exp (gen) (mul w x-0)) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) w x-0))))
      (send
        (cat (exp (gen) (mul w x-0)) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) w x-0)))))
    ((recv (cat (exp (gen) x-0) w)) (send (cat (exp (gen) x-0) w)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 b b-0 (exp (gen) x-0)))))
  (label 251)
  (parent 217)
  (unrealized (0 0) (1 3) (5 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (a b a-0 b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x l rndx) (beta expt)
    (l-0 rndx) (w expt) (x-0 l-1 rndx))
  (deflistener
    (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) w x-0))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta (mul (rec l-0) w x-0)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) w x-0))))
  (deflistener
    (cat (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) w x-0))))
  (deflistener (cat (exp (gen) x-0) w))
  (defstrand init 3 (na na-0) (a a-0) (b b-0) (priv-stor priv-stor-1)
    (l l-1) (x x-0) (beta beta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self a-0)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((1 2) (0 0)) ((1 2) (5 0)) ((2 1) (1 0)) ((3 2) (1 1))
    ((4 1) (1 3)) ((5 1) (4 0)) ((6 1) (5 0)) ((7 2) (0 0))
    ((7 2) (6 0)) ((8 1) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na na-0 l l-0 l-1)
  (uniq-gen x x-0)
  (absent (x l) (x l-0) (x-0 beta) (x-0 l-1))
  (precur (6 0))
  (gen-st (pv a l-0) (pv a-0 l-1))
  (facts (neq a-0 b-0) (neq b-0 a-0) (neq b a) (neq a b)
    (undisclosed l))
  (leads-to ((2 1) (1 0)) ((8 1) (7 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv a-0 l-1))) (7 0))
  (strand-map 0 1 2 3 4 5 6 7)
  (traces
    ((recv
       (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) w x-0))))
      (send
        (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) w x-0)))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l-0) w x-0))
          (enc na nb a b
            (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
              (exp (gen) (mul x (rec l-0) w x-0)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) w x-0))))
      (send
        (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) w x-0)))))
    ((recv
       (cat (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) w x-0))))
      (send
        (cat (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) w x-0)))))
    ((recv (cat (exp (gen) x-0) w)) (send (cat (exp (gen) x-0) w)))
    ((load priv-stor-1 (cat pt-3 (pv a-0 l-1)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a-0 b-0 (exp (gen) x-0))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv a-0 l-1)))))
  (label 252)
  (parent 217)
  (unrealized (0 0) (1 3) (5 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (w expt)
    (l l-0 x rndx))
  (deflistener
    (hash (exp (gen) (mul w x)) (exp (gen) (mul l-0 x))
      (exp (gen) (mul w (rec l) x x))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul w (rec l) x)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) (mul w x)) (exp (gen) (mul l-0 x))
      (exp (gen) (mul w (rec l) x x))))
  (deflistener
    (cat (exp (gen) (mul w x)) (exp (gen) (mul l-0 x))
      (exp (gen) (mul w (rec l) x x))))
  (deflistener (cat (exp (gen) x) w))
  (deflistener (cat (exp (gen) l-0) x))
  (precedes ((1 2) (0 0)) ((1 2) (6 0)) ((1 2) (7 0)) ((2 1) (1 0))
    ((3 2) (1 1)) ((4 1) (1 3)) ((5 1) (4 0)) ((6 1) (5 0))
    ((7 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (6 0))
  (gen-st (pv a l))
  (facts (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((2 1) (1 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l-0) x))
    (exp (gen) (mul l-0 x)) (5 0))
  (strand-map 0 1 2 3 4 5 6)
  (traces
    ((recv
       (hash (exp (gen) (mul w x)) (exp (gen) (mul l-0 x))
         (exp (gen) (mul w (rec l) x x))))
      (send
        (hash (exp (gen) (mul w x)) (exp (gen) (mul l-0 x))
          (exp (gen) (mul w (rec l) x x)))))
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w (rec l) x))
          (enc na nb a b
            (hash (exp (gen) (mul w x)) (exp (gen) (mul l-0 x))
              (exp (gen) (mul w (rec l) x x)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) (mul w x)) (exp (gen) (mul l-0 x))
         (exp (gen) (mul w (rec l) x x))))
      (send
        (hash (exp (gen) (mul w x)) (exp (gen) (mul l-0 x))
          (exp (gen) (mul w (rec l) x x)))))
    ((recv
       (cat (exp (gen) (mul w x)) (exp (gen) (mul l-0 x))
         (exp (gen) (mul w (rec l) x x))))
      (send
        (cat (exp (gen) (mul w x)) (exp (gen) (mul l-0 x))
          (exp (gen) (mul w (rec l) x x)))))
    ((recv (cat (exp (gen) x) w)) (send (cat (exp (gen) x) w)))
    ((recv (cat (exp (gen) l-0) x)) (send (cat (exp (gen) l-0) x))))
  (label 253)
  (parent 218)
  (unrealized (0 0) (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (w expt)
    (l l-0 x rndx))
  (deflistener
    (hash (exp (gen) (mul w x)) (exp (gen) (mul l-0 x))
      (exp (gen) (mul w (rec l) x x))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul w (rec l) x)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) (mul w x)) (exp (gen) (mul l-0 x))
      (exp (gen) (mul w (rec l) x x))))
  (deflistener
    (cat (exp (gen) (mul w x)) (exp (gen) (mul l-0 x))
      (exp (gen) (mul w (rec l) x x))))
  (deflistener (cat (exp (gen) x) w))
  (deflistener (cat (exp (gen) x) l-0))
  (precedes ((1 2) (0 0)) ((1 2) (6 0)) ((1 2) (7 0)) ((2 1) (1 0))
    ((3 2) (1 1)) ((4 1) (1 3)) ((5 1) (4 0)) ((6 1) (5 0))
    ((7 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (6 0))
  (gen-st (pv a l))
  (facts (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((2 1) (1 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) x) l-0))
    (exp (gen) (mul l-0 x)) (5 0))
  (strand-map 0 1 2 3 4 5 6)
  (traces
    ((recv
       (hash (exp (gen) (mul w x)) (exp (gen) (mul l-0 x))
         (exp (gen) (mul w (rec l) x x))))
      (send
        (hash (exp (gen) (mul w x)) (exp (gen) (mul l-0 x))
          (exp (gen) (mul w (rec l) x x)))))
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w (rec l) x))
          (enc na nb a b
            (hash (exp (gen) (mul w x)) (exp (gen) (mul l-0 x))
              (exp (gen) (mul w (rec l) x x)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) (mul w x)) (exp (gen) (mul l-0 x))
         (exp (gen) (mul w (rec l) x x))))
      (send
        (hash (exp (gen) (mul w x)) (exp (gen) (mul l-0 x))
          (exp (gen) (mul w (rec l) x x)))))
    ((recv
       (cat (exp (gen) (mul w x)) (exp (gen) (mul l-0 x))
         (exp (gen) (mul w (rec l) x x))))
      (send
        (cat (exp (gen) (mul w x)) (exp (gen) (mul l-0 x))
          (exp (gen) (mul w (rec l) x x)))))
    ((recv (cat (exp (gen) x) w)) (send (cat (exp (gen) x) w)))
    ((recv (cat (exp (gen) x) l-0)) (send (cat (exp (gen) x) l-0))))
  (label 254)
  (parent 218)
  (unrealized (0 0) (1 3) (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x l l-0 rndx)
    (w expt))
  (deflistener
    (hash (exp (gen) w) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) w))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta (mul (rec l-0) w)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) w) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) w))))
  (deflistener
    (cat (exp (gen) w) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) w))))
  (deflistener (cat (gen) w))
  (deflistener (cat (exp (gen) x) l))
  (precedes ((1 2) (0 0)) ((1 2) (7 0)) ((2 1) (1 0)) ((3 2) (1 1))
    ((4 1) (1 3)) ((5 1) (4 0)) ((6 1) (5 0)) ((7 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (6 0))
  (gen-st (pv a l-0))
  (facts (neq b a) (neq a b) (undisclosed l))
  (leads-to ((2 1) (1 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) x) l))
    (exp (gen) (mul x l)) (5 0))
  (strand-map 0 1 2 3 4 5 6)
  (traces
    ((recv
       (hash (exp (gen) w) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) w))))
      (send
        (hash (exp (gen) w) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) w)))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l-0) w))
          (enc na nb a b
            (hash (exp (gen) w) (exp (gen) (mul x l))
              (exp (gen) (mul x (rec l-0) w)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) w) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) w))))
      (send
        (hash (exp (gen) w) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) w)))))
    ((recv
       (cat (exp (gen) w) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) w))))
      (send
        (cat (exp (gen) w) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) w)))))
    ((recv (cat (gen) w)) (send (cat (gen) w)))
    ((recv (cat (exp (gen) x) l)) (send (cat (exp (gen) x) l))))
  (label 255)
  (parent 219)
  (unrealized (0 0) (1 3) (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x l l-0 rndx)
    (w expt))
  (deflistener
    (hash (exp (gen) w) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) w))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta (mul (rec l-0) w)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) w) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) w))))
  (deflistener
    (cat (exp (gen) w) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) w))))
  (deflistener (cat (gen) w))
  (deflistener (cat (exp (gen) l) x))
  (precedes ((1 2) (0 0)) ((1 2) (7 0)) ((2 1) (1 0)) ((3 2) (1 1))
    ((4 1) (1 3)) ((5 1) (4 0)) ((6 1) (5 0)) ((7 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (6 0))
  (gen-st (pv a l-0))
  (facts (neq b a) (neq a b) (undisclosed l))
  (leads-to ((2 1) (1 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l) x))
    (exp (gen) (mul x l)) (5 0))
  (strand-map 0 1 2 3 4 5 6)
  (traces
    ((recv
       (hash (exp (gen) w) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) w))))
      (send
        (hash (exp (gen) w) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) w)))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l-0) w))
          (enc na nb a b
            (hash (exp (gen) w) (exp (gen) (mul x l))
              (exp (gen) (mul x (rec l-0) w)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) w) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) w))))
      (send
        (hash (exp (gen) w) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) w)))))
    ((recv
       (cat (exp (gen) w) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) w))))
      (send
        (cat (exp (gen) w) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) w)))))
    ((recv (cat (gen) w)) (send (cat (gen) w)))
    ((recv (cat (exp (gen) l) x)) (send (cat (exp (gen) l) x))))
  (label 256)
  (parent 219)
  (unrealized (0 0) (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x l rndx)
    (w expt) (l-0 rndx))
  (deflistener
    (hash (exp (gen) (mul w l-0)) (exp (gen) (mul x l))
      (exp (gen) (mul x w))))
  (defstrand init 4 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (l l-0) (x x) (beta l) (eta w))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (deflistener
    (hash (exp (gen) (mul w l-0)) (exp (gen) (mul x l))
      (exp (gen) (mul x w))))
  (deflistener
    (cat (exp (gen) (mul w l-0)) (exp (gen) (mul x l))
      (exp (gen) (mul x w))))
  (deflistener (cat (exp (gen) l-0) w))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) x) l))
  (precedes ((1 2) (0 0)) ((1 2) (7 0)) ((2 2) (1 1)) ((3 1) (1 3))
    ((4 1) (3 0)) ((5 1) (4 0)) ((6 1) (1 0)) ((6 2) (5 0))
    ((7 1) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (5 0))
  (gen-st (pv self l-0))
  (facts (neq b self) (neq self b) (undisclosed l))
  (leads-to ((6 1) (1 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) x) l))
    (exp (gen) (mul x l)) (4 0))
  (strand-map 0 1 2 3 4 5 6)
  (traces
    ((recv
       (hash (exp (gen) (mul w l-0)) (exp (gen) (mul x l))
         (exp (gen) (mul x w))))
      (send
        (hash (exp (gen) (mul w l-0)) (exp (gen) (mul x l))
          (exp (gen) (mul x w)))))
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) w)
          (enc na nb self b
            (hash (exp (gen) (mul w l-0)) (exp (gen) (mul x l))
              (exp (gen) (mul x w)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) (mul w l-0)) (exp (gen) (mul x l))
         (exp (gen) (mul x w))))
      (send
        (hash (exp (gen) (mul w l-0)) (exp (gen) (mul x l))
          (exp (gen) (mul x w)))))
    ((recv
       (cat (exp (gen) (mul w l-0)) (exp (gen) (mul x l))
         (exp (gen) (mul x w))))
      (send
        (cat (exp (gen) (mul w l-0)) (exp (gen) (mul x l))
          (exp (gen) (mul x w)))))
    ((recv (cat (exp (gen) l-0) w)) (send (cat (exp (gen) l-0) w)))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) x) l)) (send (cat (exp (gen) x) l))))
  (label 257)
  (parent 220)
  (unrealized (0 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x l rndx)
    (w expt) (l-0 rndx))
  (deflistener
    (hash (exp (gen) (mul w l-0)) (exp (gen) (mul x l))
      (exp (gen) (mul x w))))
  (defstrand init 4 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (l l-0) (x x) (beta l) (eta w))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (deflistener
    (hash (exp (gen) (mul w l-0)) (exp (gen) (mul x l))
      (exp (gen) (mul x w))))
  (deflistener
    (cat (exp (gen) (mul w l-0)) (exp (gen) (mul x l))
      (exp (gen) (mul x w))))
  (deflistener (cat (exp (gen) l-0) w))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l) x))
  (precedes ((1 2) (0 0)) ((1 2) (7 0)) ((2 2) (1 1)) ((3 1) (1 3))
    ((4 1) (3 0)) ((5 1) (4 0)) ((6 1) (1 0)) ((6 2) (5 0))
    ((7 1) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (5 0))
  (gen-st (pv self l-0))
  (facts (neq b self) (neq self b) (undisclosed l))
  (leads-to ((6 1) (1 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l) x))
    (exp (gen) (mul x l)) (4 0))
  (strand-map 0 1 2 3 4 5 6)
  (traces
    ((recv
       (hash (exp (gen) (mul w l-0)) (exp (gen) (mul x l))
         (exp (gen) (mul x w))))
      (send
        (hash (exp (gen) (mul w l-0)) (exp (gen) (mul x l))
          (exp (gen) (mul x w)))))
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) w)
          (enc na nb self b
            (hash (exp (gen) (mul w l-0)) (exp (gen) (mul x l))
              (exp (gen) (mul x w)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) (mul w l-0)) (exp (gen) (mul x l))
         (exp (gen) (mul x w))))
      (send
        (hash (exp (gen) (mul w l-0)) (exp (gen) (mul x l))
          (exp (gen) (mul x w)))))
    ((recv
       (cat (exp (gen) (mul w l-0)) (exp (gen) (mul x l))
         (exp (gen) (mul x w))))
      (send
        (cat (exp (gen) (mul w l-0)) (exp (gen) (mul x l))
          (exp (gen) (mul x w)))))
    ((recv (cat (exp (gen) l-0) w)) (send (cat (exp (gen) l-0) w)))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) x)) (send (cat (exp (gen) l) x))))
  (label 258)
  (parent 220)
  (unrealized (0 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (a b a-0 name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x l rndx)
    (alpha chi w expt) (y l-0 rndx))
  (deflistener
    (hash (exp (gen) (mul w y)) (exp (gen) (mul x l))
      (exp (gen) (mul x w y (rec l-0)))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta (mul w y (rec l-0))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) (mul w y)) (exp (gen) (mul x l))
      (exp (gen) (mul x w y (rec l-0)))))
  (deflistener
    (cat (exp (gen) (mul w y)) (exp (gen) (mul x l))
      (exp (gen) (mul x w y (rec l-0)))))
  (deflistener (cat (exp (gen) y) w))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b a)
    (priv-stor priv-stor) (l l-0) (y y) (alpha alpha) (chi chi))
  (precedes ((1 2) (0 0)) ((1 2) (5 0)) ((2 1) (1 0)) ((2 1) (7 0))
    ((3 2) (1 1)) ((4 1) (1 3)) ((5 1) (4 0)) ((6 1) (5 0))
    ((7 3) (0 0)) ((7 3) (6 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb-0 l l-0)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y alpha) (y chi) (y l-0))
  (precur (6 0))
  (gen-st (pv a l-0))
  (facts (neq a a-0) (neq a-0 a) (neq b a) (neq a b) (undisclosed l))
  (leads-to ((2 1) (1 0)) ((2 1) (7 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 8 2 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv b-0 l-1))) (7 0))
  (strand-map 0 1 2 3 4 5 6 7)
  (traces
    ((recv
       (hash (exp (gen) (mul w y)) (exp (gen) (mul x l))
         (exp (gen) (mul x w y (rec l-0)))))
      (send
        (hash (exp (gen) (mul w y)) (exp (gen) (mul x l))
          (exp (gen) (mul x w y (rec l-0))))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y (rec l-0)))
          (enc na nb a b
            (hash (exp (gen) (mul w y)) (exp (gen) (mul x l))
              (exp (gen) (mul x w y (rec l-0))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) (mul w y)) (exp (gen) (mul x l))
         (exp (gen) (mul x w y (rec l-0)))))
      (send
        (hash (exp (gen) (mul w y)) (exp (gen) (mul x l))
          (exp (gen) (mul x w y (rec l-0))))))
    ((recv
       (cat (exp (gen) (mul w y)) (exp (gen) (mul x l))
         (exp (gen) (mul x w y (rec l-0)))))
      (send
        (cat (exp (gen) (mul w y)) (exp (gen) (mul x l))
          (exp (gen) (mul x w y (rec l-0))))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w)))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 a (exp (gen) chi)))
      (send
        (cat (exp (gen) y)
          (enc na-0 nb-0 a-0 a
            (hash (exp (gen) (mul alpha y)) (exp (gen) (mul chi l-0))
              (exp (gen) (mul chi y))))))))
  (label 259)
  (parent 221)
  (unrealized (0 0) (1 3) (5 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (a b a-0 name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (alpha chi expt) (l rndx) (w expt) (y l-0 rndx))
  (deflistener
    (hash (exp (gen) (mul w y)) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) w y))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul (rec l) w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) (mul w y)) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) w y))))
  (deflistener
    (cat (exp (gen) (mul w y)) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) w y))))
  (deflistener (cat (exp (gen) y) w))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b)
    (priv-stor priv-stor-0) (l l-0) (y y) (alpha alpha) (chi chi))
  (precedes ((1 2) (0 0)) ((1 2) (5 0)) ((2 1) (1 0)) ((3 1) (7 0))
    ((3 2) (1 1)) ((4 1) (1 3)) ((5 1) (4 0)) ((6 1) (5 0))
    ((7 3) (0 0)) ((7 3) (6 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb-0 l l-0)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y alpha) (y chi) (y l-0))
  (precur (6 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq b a-0) (neq a-0 b) (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((2 1) (1 0)) ((3 1) (7 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 8 3 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv b-0 l-1))) (7 0))
  (strand-map 0 1 2 3 4 5 6 7)
  (traces
    ((recv
       (hash (exp (gen) (mul w y)) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) w y))))
      (send
        (hash (exp (gen) (mul w y)) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) w y)))))
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l) w y))
          (enc na nb a b
            (hash (exp (gen) (mul w y)) (exp (gen) (mul x l-0))
              (exp (gen) (mul x (rec l) w y)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) (mul w y)) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) w y))))
      (send
        (hash (exp (gen) (mul w y)) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) w y)))))
    ((recv
       (cat (exp (gen) (mul w y)) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) w y))))
      (send
        (cat (exp (gen) (mul w y)) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) w y)))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b (exp (gen) chi)))
      (send
        (cat (exp (gen) y)
          (enc na-0 nb-0 a-0 b
            (hash (exp (gen) (mul alpha y)) (exp (gen) (mul chi l-0))
              (exp (gen) (mul chi y))))))))
  (label 260)
  (parent 221)
  (unrealized (0 0) (1 3) (5 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x l rndx) (alpha chi expt)
    (l-0 rndx) (w expt) (y l-1 rndx))
  (deflistener
    (hash (exp (gen) (mul w y)) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) w y))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta (mul (rec l-0) w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) (mul w y)) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) w y))))
  (deflistener
    (cat (exp (gen) (mul w y)) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) w y))))
  (deflistener (cat (exp (gen) y) w))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b-0)
    (priv-stor priv-stor-1) (l l-1) (y y) (alpha alpha) (chi chi))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b-0)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((1 2) (0 0)) ((1 2) (5 0)) ((2 1) (1 0)) ((3 2) (1 1))
    ((4 1) (1 3)) ((5 1) (4 0)) ((6 1) (5 0)) ((7 3) (0 0))
    ((7 3) (6 0)) ((8 1) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb-0 l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y alpha) (y chi) (y l-1))
  (precur (6 0))
  (gen-st (pv a l-0) (pv b-0 l-1))
  (facts (neq b-0 a-0) (neq a-0 b-0) (neq b a) (neq a b)
    (undisclosed l))
  (leads-to ((2 1) (1 0)) ((8 1) (7 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv b-0 l-1))) (7 0))
  (strand-map 0 1 2 3 4 5 6 7)
  (traces
    ((recv
       (hash (exp (gen) (mul w y)) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) w y))))
      (send
        (hash (exp (gen) (mul w y)) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) w y)))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l-0) w y))
          (enc na nb a b
            (hash (exp (gen) (mul w y)) (exp (gen) (mul x l))
              (exp (gen) (mul x (rec l-0) w y)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) (mul w y)) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) w y))))
      (send
        (hash (exp (gen) (mul w y)) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) w y)))))
    ((recv
       (cat (exp (gen) (mul w y)) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) w y))))
      (send
        (cat (exp (gen) (mul w y)) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) w y)))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w)))
    ((load priv-stor-1 (cat pt-3 (pv b-0 l-1)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b-0 (exp (gen) chi)))
      (send
        (cat (exp (gen) y)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul alpha y)) (exp (gen) (mul chi l-1))
              (exp (gen) (mul chi y)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b-0 l-1)))))
  (label 261)
  (parent 221)
  (unrealized (0 0) (1 3) (5 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x l rndx)
    (w expt) (l-0 rndx))
  (deflistener
    (hash (exp (gen) (mul w l-0)) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) w l-0))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul (rec l) w l-0)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) (mul w l-0)) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) w l-0))))
  (deflistener
    (cat (exp (gen) (mul w l-0)) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) w l-0))))
  (deflistener (cat (exp (gen) l-0) w))
  (deflistener (cat (exp (gen) x) l-0))
  (precedes ((1 2) (0 0)) ((1 2) (7 0)) ((2 1) (1 0)) ((3 2) (1 1))
    ((3 2) (6 0)) ((4 1) (1 3)) ((5 1) (4 0)) ((6 1) (5 0))
    ((7 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (6 0))
  (gen-st (pv a l))
  (facts (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((2 1) (1 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) x) l-0))
    (exp (gen) (mul x l-0)) (5 0))
  (strand-map 0 1 2 3 4 5 6)
  (traces
    ((recv
       (hash (exp (gen) (mul w l-0)) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) w l-0))))
      (send
        (hash (exp (gen) (mul w l-0)) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) w l-0)))))
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l) w l-0))
          (enc na nb a b
            (hash (exp (gen) (mul w l-0)) (exp (gen) (mul x l-0))
              (exp (gen) (mul x (rec l) w l-0)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) (mul w l-0)) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) w l-0))))
      (send
        (hash (exp (gen) (mul w l-0)) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) w l-0)))))
    ((recv
       (cat (exp (gen) (mul w l-0)) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) w l-0))))
      (send
        (cat (exp (gen) (mul w l-0)) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) w l-0)))))
    ((recv (cat (exp (gen) l-0) w)) (send (cat (exp (gen) l-0) w)))
    ((recv (cat (exp (gen) x) l-0)) (send (cat (exp (gen) x) l-0))))
  (label 262)
  (parent 222)
  (unrealized (0 0) (1 3) (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x l rndx)
    (w expt) (l-0 rndx))
  (deflistener
    (hash (exp (gen) (mul w l-0)) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) w l-0))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul (rec l) w l-0)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) (mul w l-0)) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) w l-0))))
  (deflistener
    (cat (exp (gen) (mul w l-0)) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) w l-0))))
  (deflistener (cat (exp (gen) l-0) w))
  (deflistener (cat (exp (gen) l-0) x))
  (precedes ((1 2) (0 0)) ((1 2) (7 0)) ((2 1) (1 0)) ((3 2) (1 1))
    ((3 2) (6 0)) ((4 1) (1 3)) ((5 1) (4 0)) ((6 1) (5 0))
    ((7 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (6 0))
  (gen-st (pv a l))
  (facts (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((2 1) (1 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l-0) x))
    (exp (gen) (mul x l-0)) (5 0))
  (strand-map 0 1 2 3 4 5 6)
  (traces
    ((recv
       (hash (exp (gen) (mul w l-0)) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) w l-0))))
      (send
        (hash (exp (gen) (mul w l-0)) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) w l-0)))))
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l) w l-0))
          (enc na nb a b
            (hash (exp (gen) (mul w l-0)) (exp (gen) (mul x l-0))
              (exp (gen) (mul x (rec l) w l-0)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) (mul w l-0)) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) w l-0))))
      (send
        (hash (exp (gen) (mul w l-0)) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) w l-0)))))
    ((recv
       (cat (exp (gen) (mul w l-0)) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) w l-0))))
      (send
        (cat (exp (gen) (mul w l-0)) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) w l-0)))))
    ((recv (cat (exp (gen) l-0) w)) (send (cat (exp (gen) l-0) w)))
    ((recv (cat (exp (gen) l-0) x)) (send (cat (exp (gen) l-0) x))))
  (label 263)
  (parent 222)
  (unrealized (0 0) (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x l l-0 rndx) (w expt)
    (l-1 rndx))
  (deflistener
    (hash (exp (gen) (mul w l-1)) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) w l-1))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta (mul (rec l-0) w l-1)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) (mul w l-1)) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) w l-1))))
  (deflistener
    (cat (exp (gen) (mul w l-1)) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) w l-1))))
  (deflistener (cat (exp (gen) l-1) w))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) x) l))
  (precedes ((1 2) (0 0)) ((1 2) (8 0)) ((2 1) (1 0)) ((3 2) (1 1))
    ((4 1) (1 3)) ((5 1) (4 0)) ((6 1) (5 0)) ((7 2) (6 0))
    ((8 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0 l-1)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (6 0))
  (gen-st (pv a l-0))
  (facts (neq b a) (neq a b) (undisclosed l))
  (leads-to ((2 1) (1 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) x) l))
    (exp (gen) (mul x l)) (5 0))
  (strand-map 0 1 2 3 4 5 6 7)
  (traces
    ((recv
       (hash (exp (gen) (mul w l-1)) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) w l-1))))
      (send
        (hash (exp (gen) (mul w l-1)) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) w l-1)))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l-0) w l-1))
          (enc na nb a b
            (hash (exp (gen) (mul w l-1)) (exp (gen) (mul x l))
              (exp (gen) (mul x (rec l-0) w l-1)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) (mul w l-1)) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) w l-1))))
      (send
        (hash (exp (gen) (mul w l-1)) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) w l-1)))))
    ((recv
       (cat (exp (gen) (mul w l-1)) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) w l-1))))
      (send
        (cat (exp (gen) (mul w l-1)) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) w l-1)))))
    ((recv (cat (exp (gen) l-1) w)) (send (cat (exp (gen) l-1) w)))
    ((load priv-stor-1 (cat pt-3 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) x) l)) (send (cat (exp (gen) x) l))))
  (label 264)
  (parent 223)
  (unrealized (0 0) (1 3) (5 0) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x l l-0 rndx) (w expt)
    (l-1 rndx))
  (deflistener
    (hash (exp (gen) (mul w l-1)) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) w l-1))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta (mul (rec l-0) w l-1)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) (mul w l-1)) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) w l-1))))
  (deflistener
    (cat (exp (gen) (mul w l-1)) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) w l-1))))
  (deflistener (cat (exp (gen) l-1) w))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) l) x))
  (precedes ((1 2) (0 0)) ((1 2) (8 0)) ((2 1) (1 0)) ((3 2) (1 1))
    ((4 1) (1 3)) ((5 1) (4 0)) ((6 1) (5 0)) ((7 2) (6 0))
    ((8 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0 l-1)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (6 0))
  (gen-st (pv a l-0))
  (facts (neq b a) (neq a b) (undisclosed l))
  (leads-to ((2 1) (1 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l) x))
    (exp (gen) (mul x l)) (5 0))
  (strand-map 0 1 2 3 4 5 6 7)
  (traces
    ((recv
       (hash (exp (gen) (mul w l-1)) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) w l-1))))
      (send
        (hash (exp (gen) (mul w l-1)) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) w l-1)))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l-0) w l-1))
          (enc na nb a b
            (hash (exp (gen) (mul w l-1)) (exp (gen) (mul x l))
              (exp (gen) (mul x (rec l-0) w l-1)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) (mul w l-1)) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) w l-1))))
      (send
        (hash (exp (gen) (mul w l-1)) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) w l-1)))))
    ((recv
       (cat (exp (gen) (mul w l-1)) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) w l-1))))
      (send
        (cat (exp (gen) (mul w l-1)) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) w l-1)))))
    ((recv (cat (exp (gen) l-1) w)) (send (cat (exp (gen) l-1) w)))
    ((load priv-stor-1 (cat pt-3 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) x)) (send (cat (exp (gen) l) x))))
  (label 265)
  (parent 223)
  (unrealized (0 0) (5 0) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn)
    (y x l l-0 rndx))
  (deflistener
    (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
      (exp (gen) (mul y x))))
  (defstrand init 4 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (l l-0) (x x) (beta l) (eta y))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (priv-stor priv-stor)
    (l l) (y y) (alpha l-0) (chi x))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (cat (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
      (exp (gen) (mul y x))))
  (deflistener (cat (exp (gen) y) l-0))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l-0))
  (precedes ((1 2) (3 2)) ((2 1) (3 0)) ((2 2) (1 1)) ((3 3) (1 3))
    ((3 3) (6 0)) ((4 1) (1 0)) ((4 1) (7 0)) ((4 2) (3 1))
    ((5 1) (0 0)) ((6 1) (5 0)) ((7 2) (6 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen y x)
  (absent (y x) (y l) (y l-0) (x l) (x l-0))
  (gen-st (pv b l) (pv self l-0))
  (facts (neq b self) (neq self b) (undisclosed l))
  (leads-to ((2 1) (3 0)) ((4 1) (1 0)) ((4 1) (7 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-disclose 3) l-0 (6 0)
    (ch-msg priv-stor-0 (cat pt-2 (pv self l-0))))
  (strand-map 0 1 2 3 4 5 6)
  (traces
    ((recv
       (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
         (exp (gen) (mul y x))))
      (send
        (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
          (exp (gen) (mul y x)))))
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
              (exp (gen) (mul y x)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
              (exp (gen) (mul y x)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv
       (cat (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
         (exp (gen) (mul y x))))
      (send
        (cat (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
          (exp (gen) (mul y x)))))
    ((recv (cat (exp (gen) y) l-0)) (send (cat (exp (gen) y) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l-0)))
  (label 266)
  (parent 224)
  (unrealized (5 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn)
    (y x l l-0 rndx))
  (deflistener
    (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
      (exp (gen) (mul y x))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (l l) (y y) (alpha l-0) (chi x))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener
    (cat (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
      (exp (gen) (mul y x))))
  (precedes ((1 2) (4 2)) ((2 1) (1 0)) ((2 1) (6 0)) ((3 1) (4 0))
    ((3 2) (1 1)) ((4 3) (1 3)) ((4 3) (7 0)) ((5 1) (4 1))
    ((6 2) (5 0)) ((7 1) (0 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen y x)
  (absent (y x) (y l) (y l-0) (x l) (x l-0))
  (precur (5 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq b a) (neq a b) (undisclosed l))
  (leads-to ((2 1) (1 0)) ((2 1) (6 0)) ((3 1) (4 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation encryption-test
    (added-listener
      (cat (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
        (exp (gen) (mul y x))))
    (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
      (exp (gen) (mul y x))) (0 0))
  (strand-map 0 1 2 3 4 5 6)
  (traces
    ((recv
       (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
         (exp (gen) (mul y x))))
      (send
        (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
          (exp (gen) (mul y x)))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
              (exp (gen) (mul y x)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
              (exp (gen) (mul y x)))))))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-3 "nil")) (send l-0))
    ((recv
       (cat (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
         (exp (gen) (mul y x))))
      (send
        (cat (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
          (exp (gen) (mul y x))))))
  (label 267)
  (parent 229)
  (unrealized (7 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (y x l l-0 rndx))
  (deflistener
    (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
      (exp (gen) (mul y x))))
  (defstrand init 4 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (l l-0) (x x) (beta l) (eta y))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (priv-stor priv-stor)
    (l l) (y y) (alpha l-0) (chi x))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (cat (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
      (exp (gen) (mul y x))))
  (deflistener (cat (exp (gen) y) l-0))
  (precedes ((1 2) (3 2)) ((2 1) (3 0)) ((2 2) (1 1)) ((3 3) (1 3))
    ((3 3) (7 0)) ((4 1) (3 1)) ((5 1) (1 0)) ((5 2) (4 0))
    ((6 1) (0 0)) ((7 1) (6 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen y x)
  (absent (y x) (y l) (y l-0) (x l) (x l-0))
  (precur (4 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (neq b self) (neq self b) (undisclosed l))
  (leads-to ((2 1) (3 0)) ((5 1) (1 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) y) l-0))
    (exp (gen) (mul y l-0)) (6 0))
  (strand-map 0 1 2 3 4 5 6)
  (traces
    ((recv
       (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
         (exp (gen) (mul y x))))
      (send
        (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
          (exp (gen) (mul y x)))))
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
              (exp (gen) (mul y x)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
              (exp (gen) (mul y x)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv
       (cat (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
         (exp (gen) (mul y x))))
      (send
        (cat (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
          (exp (gen) (mul y x)))))
    ((recv (cat (exp (gen) y) l-0)) (send (cat (exp (gen) y) l-0))))
  (label 268)
  (parent 230)
  (unrealized (6 0) (7 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (y x l l-0 rndx))
  (deflistener
    (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
      (exp (gen) (mul y x))))
  (defstrand init 4 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (l l-0) (x x) (beta l) (eta y))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (priv-stor priv-stor)
    (l l) (y y) (alpha l-0) (chi x))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (cat (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
      (exp (gen) (mul y x))))
  (deflistener (cat (exp (gen) l-0) y))
  (precedes ((1 2) (3 2)) ((2 1) (3 0)) ((2 2) (1 1)) ((3 3) (1 3))
    ((3 3) (7 0)) ((4 1) (3 1)) ((5 1) (1 0)) ((5 2) (4 0))
    ((6 1) (0 0)) ((7 1) (6 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen y x)
  (absent (y x) (y l) (y l-0) (x l) (x l-0))
  (precur (4 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (neq b self) (neq self b) (undisclosed l))
  (leads-to ((2 1) (3 0)) ((5 1) (1 0)))
  (rule fact-resp-neq0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l-0) y))
    (exp (gen) (mul y l-0)) (6 0))
  (strand-map 0 1 2 3 4 5 6)
  (traces
    ((recv
       (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
         (exp (gen) (mul y x))))
      (send
        (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
          (exp (gen) (mul y x)))))
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
              (exp (gen) (mul y x)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
              (exp (gen) (mul y x)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv
       (cat (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
         (exp (gen) (mul y x))))
      (send
        (cat (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
          (exp (gen) (mul y x)))))
    ((recv (cat (exp (gen) l-0) y)) (send (cat (exp (gen) l-0) y))))
  (label 269)
  (parent 230)
  (unrealized (6 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (deflistener
    (hash (exp (gen) (mul y l (rec l-0) l-1)) (exp (gen) (mul x l))
      (exp (gen) (mul y x l (rec l-0)))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-1) (x x) (beta l) (eta (mul y l (rec l-0))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-0) (y y) (alpha (mul l (rec l-0) l-1))
    (chi (mul x l (rec l-0))))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul l l-1)) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) l) l-1))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-1))
  (precedes ((1 2) (4 2)) ((2 1) (1 0)) ((2 1) (9 0)) ((3 2) (1 1))
    ((4 3) (0 0)) ((4 3) (1 3)) ((5 1) (4 0)) ((5 1) (7 0))
    ((6 1) (4 1)) ((7 2) (6 0)) ((8 1) (6 0)) ((9 2) (8 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x l (rec l-0))) (y (mul l (rec l-0) l-1)) (y l-0)
    (x l) (x l-1))
  (gen-st (pv a l-1) (pv b l-0))
  (facts (neq b a) (neq a b) (undisclosed l))
  (leads-to ((2 1) (1 0)) ((2 1) (9 0)) ((5 1) (4 0)) ((5 1) (7 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-disclose 3) l-1 (8 0)
    (ch-msg priv-stor (cat pt (pv a l-1))))
  (strand-map 0 1 2 3 4 5 6 7 8)
  (traces
    ((recv
       (hash (exp (gen) (mul y l (rec l-0) l-1)) (exp (gen) (mul x l))
         (exp (gen) (mul y x l (rec l-0)))))
      (send
        (hash (exp (gen) (mul y l (rec l-0) l-1)) (exp (gen) (mul x l))
          (exp (gen) (mul y x l (rec l-0))))))
    ((load priv-stor (cat pt (pv a l-1)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y l (rec l-0)))
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-1))
              (exp (gen) (mul x l))
              (exp (gen) (mul y x l (rec l-0))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x l (rec l-0)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-1))
              (exp (gen) (mul x l))
              (exp (gen) (mul y x l (rec l-0))))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul l l-1)) l-0))
      (send (cat (exp (gen) (mul l l-1)) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l-0))
    ((recv (cat (exp (gen) l) l-1)) (send (cat (exp (gen) l) l-1)))
    ((load priv-stor (cat pt (pv a l-1)))
      (stor priv-stor (cat pt-6 "nil")) (send l-1)))
  (label 270)
  (parent 235)
  (unrealized (0 0) (1 3) (4 2) (8 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (deflistener
    (hash (exp (gen) (mul y l l-0 (rec l-1))) (exp (gen) (mul x l))
      (exp (gen) (mul y x l (rec l-1)))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta (mul y l (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-1) (y y) (alpha (mul l l-0 (rec l-1)))
    (chi (mul x l (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l (rec l-1))) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) l) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (precedes ((1 2) (4 2)) ((2 1) (1 0)) ((2 1) (7 0)) ((3 2) (1 1))
    ((4 3) (0 0)) ((4 3) (1 3)) ((5 1) (4 0)) ((5 1) (9 0))
    ((6 1) (4 1)) ((7 2) (6 0)) ((8 1) (6 0)) ((9 2) (8 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x l (rec l-1))) (y (mul l l-0 (rec l-1))) (y l-1)
    (x l) (x l-0))
  (gen-st (pv a l-0) (pv b l-1))
  (facts (neq b a) (neq a b) (undisclosed l))
  (leads-to ((2 1) (1 0)) ((2 1) (7 0)) ((5 1) (4 0)) ((5 1) (9 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-disclose 3) l-1 (8 0)
    (ch-msg priv-stor-1 (cat pt-3 (pv b l-1))))
  (strand-map 0 1 2 3 4 5 6 7 8)
  (traces
    ((recv
       (hash (exp (gen) (mul y l l-0 (rec l-1))) (exp (gen) (mul x l))
         (exp (gen) (mul y x l (rec l-1)))))
      (send
        (hash (exp (gen) (mul y l l-0 (rec l-1))) (exp (gen) (mul x l))
          (exp (gen) (mul y x l (rec l-1))))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y l (rec l-1)))
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l))
              (exp (gen) (mul y x l (rec l-1))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x l (rec l-1)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l))
              (exp (gen) (mul y x l (rec l-1))))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l (rec l-1))) l-0))
      (send (cat (exp (gen) (mul l (rec l-1))) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-5 "nil")) (send l-0))
    ((recv (cat (exp (gen) l) l-1)) (send (cat (exp (gen) l) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-1)))
  (label 271)
  (parent 236)
  (unrealized (0 0) (1 3) (4 2) (8 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x l rndx)
    (beta w expt) (x-0 l-0 rndx))
  (deflistener
    (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
      (exp (gen) (mul x w x-0 (rec l-0)))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta (mul w x-0 (rec l-0))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
      (exp (gen) (mul x w x-0 (rec l-0)))))
  (deflistener
    (cat (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
      (exp (gen) (mul x w x-0 (rec l-0)))))
  (deflistener (cat (exp (gen) x-0) w))
  (defstrand init 3 (na na-0) (a a) (b b-0) (priv-stor priv-stor)
    (l l-0) (x x-0) (beta beta))
  (deflistener (cat (exp (gen) x) l))
  (precedes ((1 2) (0 0)) ((1 2) (8 0)) ((2 1) (1 0)) ((2 1) (7 0))
    ((3 2) (1 1)) ((4 1) (1 3)) ((5 1) (4 0)) ((6 1) (5 0))
    ((7 2) (0 0)) ((7 2) (6 0)) ((8 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na na-0 l l-0)
  (uniq-gen x x-0)
  (absent (x l) (x l-0) (x-0 beta) (x-0 l-0))
  (precur (6 0))
  (gen-st (pv a l-0))
  (facts (neq a b-0) (neq b-0 a) (neq b a) (neq a b) (undisclosed l))
  (leads-to ((2 1) (1 0)) ((2 1) (7 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) x) l))
    (exp (gen) (mul x l)) (5 0))
  (strand-map 0 1 2 3 4 5 6 7)
  (traces
    ((recv
       (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
         (exp (gen) (mul x w x-0 (rec l-0)))))
      (send
        (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
          (exp (gen) (mul x w x-0 (rec l-0))))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w x-0 (rec l-0)))
          (enc na nb a b
            (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
              (exp (gen) (mul x w x-0 (rec l-0))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
         (exp (gen) (mul x w x-0 (rec l-0)))))
      (send
        (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
          (exp (gen) (mul x w x-0 (rec l-0))))))
    ((recv
       (cat (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
         (exp (gen) (mul x w x-0 (rec l-0)))))
      (send
        (cat (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
          (exp (gen) (mul x w x-0 (rec l-0))))))
    ((recv (cat (exp (gen) x-0) w)) (send (cat (exp (gen) x-0) w)))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a b-0 (exp (gen) x-0))))
    ((recv (cat (exp (gen) x) l)) (send (cat (exp (gen) x) l))))
  (label 272)
  (parent 250)
  (unrealized (0 0) (1 3) (5 0) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x l rndx)
    (beta w expt) (x-0 l-0 rndx))
  (deflistener
    (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
      (exp (gen) (mul x w x-0 (rec l-0)))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta (mul w x-0 (rec l-0))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
      (exp (gen) (mul x w x-0 (rec l-0)))))
  (deflistener
    (cat (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
      (exp (gen) (mul x w x-0 (rec l-0)))))
  (deflistener (cat (exp (gen) x-0) w))
  (defstrand init 3 (na na-0) (a a) (b b-0) (priv-stor priv-stor)
    (l l-0) (x x-0) (beta beta))
  (deflistener (cat (exp (gen) l) x))
  (precedes ((1 2) (0 0)) ((1 2) (8 0)) ((2 1) (1 0)) ((2 1) (7 0))
    ((3 2) (1 1)) ((4 1) (1 3)) ((5 1) (4 0)) ((6 1) (5 0))
    ((7 2) (0 0)) ((7 2) (6 0)) ((8 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na na-0 l l-0)
  (uniq-gen x x-0)
  (absent (x l) (x l-0) (x-0 beta) (x-0 l-0))
  (precur (6 0))
  (gen-st (pv a l-0))
  (facts (neq a b-0) (neq b-0 a) (neq b a) (neq a b) (undisclosed l))
  (leads-to ((2 1) (1 0)) ((2 1) (7 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l) x))
    (exp (gen) (mul x l)) (5 0))
  (strand-map 0 1 2 3 4 5 6 7)
  (traces
    ((recv
       (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
         (exp (gen) (mul x w x-0 (rec l-0)))))
      (send
        (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
          (exp (gen) (mul x w x-0 (rec l-0))))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w x-0 (rec l-0)))
          (enc na nb a b
            (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
              (exp (gen) (mul x w x-0 (rec l-0))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
         (exp (gen) (mul x w x-0 (rec l-0)))))
      (send
        (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
          (exp (gen) (mul x w x-0 (rec l-0))))))
    ((recv
       (cat (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
         (exp (gen) (mul x w x-0 (rec l-0)))))
      (send
        (cat (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
          (exp (gen) (mul x w x-0 (rec l-0))))))
    ((recv (cat (exp (gen) x-0) w)) (send (cat (exp (gen) x-0) w)))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a b-0 (exp (gen) x-0))))
    ((recv (cat (exp (gen) l) x)) (send (cat (exp (gen) l) x))))
  (label 273)
  (parent 250)
  (unrealized (0 0) (5 0) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (beta expt) (l rndx) (w expt) (x-0 l-0 rndx))
  (deflistener
    (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) w x-0))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul (rec l) w x-0)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) w x-0))))
  (deflistener
    (cat (exp (gen) (mul w x-0)) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) w x-0))))
  (deflistener (cat (exp (gen) x-0) w))
  (defstrand init 3 (na na-0) (a b) (b b-0) (priv-stor priv-stor-0)
    (l l-0) (x x-0) (beta beta))
  (deflistener (cat (exp (gen) x) l-0))
  (precedes ((1 2) (0 0)) ((1 2) (8 0)) ((2 1) (1 0)) ((3 1) (7 0))
    ((3 2) (1 1)) ((4 1) (1 3)) ((5 1) (4 0)) ((6 1) (5 0))
    ((7 2) (0 0)) ((7 2) (6 0)) ((8 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na na-0 l l-0)
  (uniq-gen x x-0)
  (absent (x l) (x l-0) (x-0 beta) (x-0 l-0))
  (precur (6 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq b b-0) (neq b-0 b) (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((2 1) (1 0)) ((3 1) (7 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) x) l-0))
    (exp (gen) (mul x l-0)) (5 0))
  (strand-map 0 1 2 3 4 5 6 7)
  (traces
    ((recv
       (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) w x-0))))
      (send
        (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) w x-0)))))
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l) w x-0))
          (enc na nb a b
            (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l-0))
              (exp (gen) (mul x (rec l) w x-0)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) w x-0))))
      (send
        (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) w x-0)))))
    ((recv
       (cat (exp (gen) (mul w x-0)) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) w x-0))))
      (send
        (cat (exp (gen) (mul w x-0)) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) w x-0)))))
    ((recv (cat (exp (gen) x-0) w)) (send (cat (exp (gen) x-0) w)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 b b-0 (exp (gen) x-0))))
    ((recv (cat (exp (gen) x) l-0)) (send (cat (exp (gen) x) l-0))))
  (label 274)
  (parent 251)
  (unrealized (0 0) (1 3) (5 0) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (beta expt) (l rndx) (w expt) (x-0 l-0 rndx))
  (deflistener
    (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) w x-0))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul (rec l) w x-0)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) w x-0))))
  (deflistener
    (cat (exp (gen) (mul w x-0)) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) w x-0))))
  (deflistener (cat (exp (gen) x-0) w))
  (defstrand init 3 (na na-0) (a b) (b b-0) (priv-stor priv-stor-0)
    (l l-0) (x x-0) (beta beta))
  (deflistener (cat (exp (gen) l-0) x))
  (precedes ((1 2) (0 0)) ((1 2) (8 0)) ((2 1) (1 0)) ((3 1) (7 0))
    ((3 2) (1 1)) ((4 1) (1 3)) ((5 1) (4 0)) ((6 1) (5 0))
    ((7 2) (0 0)) ((7 2) (6 0)) ((8 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na na-0 l l-0)
  (uniq-gen x x-0)
  (absent (x l) (x l-0) (x-0 beta) (x-0 l-0))
  (precur (6 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq b b-0) (neq b-0 b) (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((2 1) (1 0)) ((3 1) (7 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l-0) x))
    (exp (gen) (mul x l-0)) (5 0))
  (strand-map 0 1 2 3 4 5 6 7)
  (traces
    ((recv
       (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) w x-0))))
      (send
        (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) w x-0)))))
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l) w x-0))
          (enc na nb a b
            (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l-0))
              (exp (gen) (mul x (rec l) w x-0)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) w x-0))))
      (send
        (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) w x-0)))))
    ((recv
       (cat (exp (gen) (mul w x-0)) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) w x-0))))
      (send
        (cat (exp (gen) (mul w x-0)) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) w x-0)))))
    ((recv (cat (exp (gen) x-0) w)) (send (cat (exp (gen) x-0) w)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 b b-0 (exp (gen) x-0))))
    ((recv (cat (exp (gen) l-0) x)) (send (cat (exp (gen) l-0) x))))
  (label 275)
  (parent 251)
  (unrealized (0 0) (5 0) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (a b a-0 b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x l rndx) (beta expt)
    (l-0 rndx) (w expt) (x-0 l-1 rndx))
  (deflistener
    (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) w x-0))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta (mul (rec l-0) w x-0)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) w x-0))))
  (deflistener
    (cat (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) w x-0))))
  (deflistener (cat (exp (gen) x-0) w))
  (defstrand init 3 (na na-0) (a a-0) (b b-0) (priv-stor priv-stor-1)
    (l l-1) (x x-0) (beta beta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self a-0)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) x) l))
  (precedes ((1 2) (0 0)) ((1 2) (9 0)) ((2 1) (1 0)) ((3 2) (1 1))
    ((4 1) (1 3)) ((5 1) (4 0)) ((6 1) (5 0)) ((7 2) (0 0))
    ((7 2) (6 0)) ((8 1) (7 0)) ((9 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na na-0 l l-0 l-1)
  (uniq-gen x x-0)
  (absent (x l) (x l-0) (x-0 beta) (x-0 l-1))
  (precur (6 0))
  (gen-st (pv a l-0) (pv a-0 l-1))
  (facts (neq a-0 b-0) (neq b-0 a-0) (neq b a) (neq a b)
    (undisclosed l))
  (leads-to ((2 1) (1 0)) ((8 1) (7 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) x) l))
    (exp (gen) (mul x l)) (5 0))
  (strand-map 0 1 2 3 4 5 6 7 8)
  (traces
    ((recv
       (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) w x-0))))
      (send
        (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) w x-0)))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l-0) w x-0))
          (enc na nb a b
            (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
              (exp (gen) (mul x (rec l-0) w x-0)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) w x-0))))
      (send
        (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) w x-0)))))
    ((recv
       (cat (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) w x-0))))
      (send
        (cat (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) w x-0)))))
    ((recv (cat (exp (gen) x-0) w)) (send (cat (exp (gen) x-0) w)))
    ((load priv-stor-1 (cat pt-3 (pv a-0 l-1)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a-0 b-0 (exp (gen) x-0))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv a-0 l-1))))
    ((recv (cat (exp (gen) x) l)) (send (cat (exp (gen) x) l))))
  (label 276)
  (parent 252)
  (unrealized (0 0) (1 3) (5 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (a b a-0 b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x l rndx) (beta expt)
    (l-0 rndx) (w expt) (x-0 l-1 rndx))
  (deflistener
    (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) w x-0))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta (mul (rec l-0) w x-0)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) w x-0))))
  (deflistener
    (cat (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) w x-0))))
  (deflistener (cat (exp (gen) x-0) w))
  (defstrand init 3 (na na-0) (a a-0) (b b-0) (priv-stor priv-stor-1)
    (l l-1) (x x-0) (beta beta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self a-0)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) l) x))
  (precedes ((1 2) (0 0)) ((1 2) (9 0)) ((2 1) (1 0)) ((3 2) (1 1))
    ((4 1) (1 3)) ((5 1) (4 0)) ((6 1) (5 0)) ((7 2) (0 0))
    ((7 2) (6 0)) ((8 1) (7 0)) ((9 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na na-0 l l-0 l-1)
  (uniq-gen x x-0)
  (absent (x l) (x l-0) (x-0 beta) (x-0 l-1))
  (precur (6 0))
  (gen-st (pv a l-0) (pv a-0 l-1))
  (facts (neq a-0 b-0) (neq b-0 a-0) (neq b a) (neq a b)
    (undisclosed l))
  (leads-to ((2 1) (1 0)) ((8 1) (7 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l) x))
    (exp (gen) (mul x l)) (5 0))
  (strand-map 0 1 2 3 4 5 6 7 8)
  (traces
    ((recv
       (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) w x-0))))
      (send
        (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) w x-0)))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l-0) w x-0))
          (enc na nb a b
            (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
              (exp (gen) (mul x (rec l-0) w x-0)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) w x-0))))
      (send
        (hash (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) w x-0)))))
    ((recv
       (cat (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) w x-0))))
      (send
        (cat (exp (gen) (mul w x-0)) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) w x-0)))))
    ((recv (cat (exp (gen) x-0) w)) (send (cat (exp (gen) x-0) w)))
    ((load priv-stor-1 (cat pt-3 (pv a-0 l-1)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a-0 b-0 (exp (gen) x-0))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv a-0 l-1))))
    ((recv (cat (exp (gen) l) x)) (send (cat (exp (gen) l) x))))
  (label 277)
  (parent 252)
  (unrealized (0 0) (5 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (a b a-0 name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x l rndx)
    (alpha chi w expt) (y l-0 rndx))
  (deflistener
    (hash (exp (gen) (mul w y)) (exp (gen) (mul x l))
      (exp (gen) (mul x w y (rec l-0)))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta (mul w y (rec l-0))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) (mul w y)) (exp (gen) (mul x l))
      (exp (gen) (mul x w y (rec l-0)))))
  (deflistener
    (cat (exp (gen) (mul w y)) (exp (gen) (mul x l))
      (exp (gen) (mul x w y (rec l-0)))))
  (deflistener (cat (exp (gen) y) w))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b a)
    (priv-stor priv-stor) (l l-0) (y y) (alpha alpha) (chi chi))
  (deflistener (cat (exp (gen) x) l))
  (precedes ((1 2) (0 0)) ((1 2) (8 0)) ((2 1) (1 0)) ((2 1) (7 0))
    ((3 2) (1 1)) ((4 1) (1 3)) ((5 1) (4 0)) ((6 1) (5 0))
    ((7 3) (0 0)) ((7 3) (6 0)) ((8 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb-0 l l-0)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y alpha) (y chi) (y l-0))
  (precur (6 0))
  (gen-st (pv a l-0))
  (facts (neq a a-0) (neq a-0 a) (neq b a) (neq a b) (undisclosed l))
  (leads-to ((2 1) (1 0)) ((2 1) (7 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) x) l))
    (exp (gen) (mul x l)) (5 0))
  (strand-map 0 1 2 3 4 5 6 7)
  (traces
    ((recv
       (hash (exp (gen) (mul w y)) (exp (gen) (mul x l))
         (exp (gen) (mul x w y (rec l-0)))))
      (send
        (hash (exp (gen) (mul w y)) (exp (gen) (mul x l))
          (exp (gen) (mul x w y (rec l-0))))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y (rec l-0)))
          (enc na nb a b
            (hash (exp (gen) (mul w y)) (exp (gen) (mul x l))
              (exp (gen) (mul x w y (rec l-0))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) (mul w y)) (exp (gen) (mul x l))
         (exp (gen) (mul x w y (rec l-0)))))
      (send
        (hash (exp (gen) (mul w y)) (exp (gen) (mul x l))
          (exp (gen) (mul x w y (rec l-0))))))
    ((recv
       (cat (exp (gen) (mul w y)) (exp (gen) (mul x l))
         (exp (gen) (mul x w y (rec l-0)))))
      (send
        (cat (exp (gen) (mul w y)) (exp (gen) (mul x l))
          (exp (gen) (mul x w y (rec l-0))))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w)))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 a (exp (gen) chi)))
      (send
        (cat (exp (gen) y)
          (enc na-0 nb-0 a-0 a
            (hash (exp (gen) (mul alpha y)) (exp (gen) (mul chi l-0))
              (exp (gen) (mul chi y)))))))
    ((recv (cat (exp (gen) x) l)) (send (cat (exp (gen) x) l))))
  (label 278)
  (parent 259)
  (unrealized (0 0) (1 3) (5 0) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (a b a-0 name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x l rndx)
    (alpha chi w expt) (y l-0 rndx))
  (deflistener
    (hash (exp (gen) (mul w y)) (exp (gen) (mul x l))
      (exp (gen) (mul x w y (rec l-0)))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta (mul w y (rec l-0))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) (mul w y)) (exp (gen) (mul x l))
      (exp (gen) (mul x w y (rec l-0)))))
  (deflistener
    (cat (exp (gen) (mul w y)) (exp (gen) (mul x l))
      (exp (gen) (mul x w y (rec l-0)))))
  (deflistener (cat (exp (gen) y) w))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b a)
    (priv-stor priv-stor) (l l-0) (y y) (alpha alpha) (chi chi))
  (deflistener (cat (exp (gen) l) x))
  (precedes ((1 2) (0 0)) ((1 2) (8 0)) ((2 1) (1 0)) ((2 1) (7 0))
    ((3 2) (1 1)) ((4 1) (1 3)) ((5 1) (4 0)) ((6 1) (5 0))
    ((7 3) (0 0)) ((7 3) (6 0)) ((8 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb-0 l l-0)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y alpha) (y chi) (y l-0))
  (precur (6 0))
  (gen-st (pv a l-0))
  (facts (neq a a-0) (neq a-0 a) (neq b a) (neq a b) (undisclosed l))
  (leads-to ((2 1) (1 0)) ((2 1) (7 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l) x))
    (exp (gen) (mul x l)) (5 0))
  (strand-map 0 1 2 3 4 5 6 7)
  (traces
    ((recv
       (hash (exp (gen) (mul w y)) (exp (gen) (mul x l))
         (exp (gen) (mul x w y (rec l-0)))))
      (send
        (hash (exp (gen) (mul w y)) (exp (gen) (mul x l))
          (exp (gen) (mul x w y (rec l-0))))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y (rec l-0)))
          (enc na nb a b
            (hash (exp (gen) (mul w y)) (exp (gen) (mul x l))
              (exp (gen) (mul x w y (rec l-0))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) (mul w y)) (exp (gen) (mul x l))
         (exp (gen) (mul x w y (rec l-0)))))
      (send
        (hash (exp (gen) (mul w y)) (exp (gen) (mul x l))
          (exp (gen) (mul x w y (rec l-0))))))
    ((recv
       (cat (exp (gen) (mul w y)) (exp (gen) (mul x l))
         (exp (gen) (mul x w y (rec l-0)))))
      (send
        (cat (exp (gen) (mul w y)) (exp (gen) (mul x l))
          (exp (gen) (mul x w y (rec l-0))))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w)))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 a (exp (gen) chi)))
      (send
        (cat (exp (gen) y)
          (enc na-0 nb-0 a-0 a
            (hash (exp (gen) (mul alpha y)) (exp (gen) (mul chi l-0))
              (exp (gen) (mul chi y)))))))
    ((recv (cat (exp (gen) l) x)) (send (cat (exp (gen) l) x))))
  (label 279)
  (parent 259)
  (unrealized (0 0) (5 0) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (a b a-0 name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (alpha chi expt) (l rndx) (w expt) (y l-0 rndx))
  (deflistener
    (hash (exp (gen) (mul w y)) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) w y))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul (rec l) w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) (mul w y)) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) w y))))
  (deflistener
    (cat (exp (gen) (mul w y)) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) w y))))
  (deflistener (cat (exp (gen) y) w))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b)
    (priv-stor priv-stor-0) (l l-0) (y y) (alpha alpha) (chi chi))
  (deflistener (cat (exp (gen) x) l-0))
  (precedes ((1 2) (0 0)) ((1 2) (8 0)) ((2 1) (1 0)) ((3 1) (7 0))
    ((3 2) (1 1)) ((4 1) (1 3)) ((5 1) (4 0)) ((6 1) (5 0))
    ((7 3) (0 0)) ((7 3) (6 0)) ((8 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb-0 l l-0)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y alpha) (y chi) (y l-0))
  (precur (6 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq b a-0) (neq a-0 b) (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((2 1) (1 0)) ((3 1) (7 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) x) l-0))
    (exp (gen) (mul x l-0)) (5 0))
  (strand-map 0 1 2 3 4 5 6 7)
  (traces
    ((recv
       (hash (exp (gen) (mul w y)) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) w y))))
      (send
        (hash (exp (gen) (mul w y)) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) w y)))))
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l) w y))
          (enc na nb a b
            (hash (exp (gen) (mul w y)) (exp (gen) (mul x l-0))
              (exp (gen) (mul x (rec l) w y)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) (mul w y)) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) w y))))
      (send
        (hash (exp (gen) (mul w y)) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) w y)))))
    ((recv
       (cat (exp (gen) (mul w y)) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) w y))))
      (send
        (cat (exp (gen) (mul w y)) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) w y)))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b (exp (gen) chi)))
      (send
        (cat (exp (gen) y)
          (enc na-0 nb-0 a-0 b
            (hash (exp (gen) (mul alpha y)) (exp (gen) (mul chi l-0))
              (exp (gen) (mul chi y)))))))
    ((recv (cat (exp (gen) x) l-0)) (send (cat (exp (gen) x) l-0))))
  (label 280)
  (parent 260)
  (unrealized (0 0) (1 3) (5 0) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (a b a-0 name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (alpha chi expt) (l rndx) (w expt) (y l-0 rndx))
  (deflistener
    (hash (exp (gen) (mul w y)) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) w y))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul (rec l) w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) (mul w y)) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) w y))))
  (deflistener
    (cat (exp (gen) (mul w y)) (exp (gen) (mul x l-0))
      (exp (gen) (mul x (rec l) w y))))
  (deflistener (cat (exp (gen) y) w))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b)
    (priv-stor priv-stor-0) (l l-0) (y y) (alpha alpha) (chi chi))
  (deflistener (cat (exp (gen) l-0) x))
  (precedes ((1 2) (0 0)) ((1 2) (8 0)) ((2 1) (1 0)) ((3 1) (7 0))
    ((3 2) (1 1)) ((4 1) (1 3)) ((5 1) (4 0)) ((6 1) (5 0))
    ((7 3) (0 0)) ((7 3) (6 0)) ((8 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb-0 l l-0)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y alpha) (y chi) (y l-0))
  (precur (6 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq b a-0) (neq a-0 b) (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((2 1) (1 0)) ((3 1) (7 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l-0) x))
    (exp (gen) (mul x l-0)) (5 0))
  (strand-map 0 1 2 3 4 5 6 7)
  (traces
    ((recv
       (hash (exp (gen) (mul w y)) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) w y))))
      (send
        (hash (exp (gen) (mul w y)) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) w y)))))
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l) w y))
          (enc na nb a b
            (hash (exp (gen) (mul w y)) (exp (gen) (mul x l-0))
              (exp (gen) (mul x (rec l) w y)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) (mul w y)) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) w y))))
      (send
        (hash (exp (gen) (mul w y)) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) w y)))))
    ((recv
       (cat (exp (gen) (mul w y)) (exp (gen) (mul x l-0))
         (exp (gen) (mul x (rec l) w y))))
      (send
        (cat (exp (gen) (mul w y)) (exp (gen) (mul x l-0))
          (exp (gen) (mul x (rec l) w y)))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b (exp (gen) chi)))
      (send
        (cat (exp (gen) y)
          (enc na-0 nb-0 a-0 b
            (hash (exp (gen) (mul alpha y)) (exp (gen) (mul chi l-0))
              (exp (gen) (mul chi y)))))))
    ((recv (cat (exp (gen) l-0) x)) (send (cat (exp (gen) l-0) x))))
  (label 281)
  (parent 260)
  (unrealized (0 0) (5 0) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x l rndx) (alpha chi expt)
    (l-0 rndx) (w expt) (y l-1 rndx))
  (deflistener
    (hash (exp (gen) (mul w y)) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) w y))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta (mul (rec l-0) w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) (mul w y)) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) w y))))
  (deflistener
    (cat (exp (gen) (mul w y)) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) w y))))
  (deflistener (cat (exp (gen) y) w))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b-0)
    (priv-stor priv-stor-1) (l l-1) (y y) (alpha alpha) (chi chi))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b-0)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) x) l))
  (precedes ((1 2) (0 0)) ((1 2) (9 0)) ((2 1) (1 0)) ((3 2) (1 1))
    ((4 1) (1 3)) ((5 1) (4 0)) ((6 1) (5 0)) ((7 3) (0 0))
    ((7 3) (6 0)) ((8 1) (7 0)) ((9 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb-0 l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y alpha) (y chi) (y l-1))
  (precur (6 0))
  (gen-st (pv a l-0) (pv b-0 l-1))
  (facts (neq b-0 a-0) (neq a-0 b-0) (neq b a) (neq a b)
    (undisclosed l))
  (leads-to ((2 1) (1 0)) ((8 1) (7 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) x) l))
    (exp (gen) (mul x l)) (5 0))
  (strand-map 0 1 2 3 4 5 6 7 8)
  (traces
    ((recv
       (hash (exp (gen) (mul w y)) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) w y))))
      (send
        (hash (exp (gen) (mul w y)) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) w y)))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l-0) w y))
          (enc na nb a b
            (hash (exp (gen) (mul w y)) (exp (gen) (mul x l))
              (exp (gen) (mul x (rec l-0) w y)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) (mul w y)) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) w y))))
      (send
        (hash (exp (gen) (mul w y)) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) w y)))))
    ((recv
       (cat (exp (gen) (mul w y)) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) w y))))
      (send
        (cat (exp (gen) (mul w y)) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) w y)))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w)))
    ((load priv-stor-1 (cat pt-3 (pv b-0 l-1)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b-0 (exp (gen) chi)))
      (send
        (cat (exp (gen) y)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul alpha y)) (exp (gen) (mul chi l-1))
              (exp (gen) (mul chi y)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b-0 l-1))))
    ((recv (cat (exp (gen) x) l)) (send (cat (exp (gen) x) l))))
  (label 282)
  (parent 261)
  (unrealized (0 0) (1 3) (5 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x l rndx) (alpha chi expt)
    (l-0 rndx) (w expt) (y l-1 rndx))
  (deflistener
    (hash (exp (gen) (mul w y)) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) w y))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta (mul (rec l-0) w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) (mul w y)) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) w y))))
  (deflistener
    (cat (exp (gen) (mul w y)) (exp (gen) (mul x l))
      (exp (gen) (mul x (rec l-0) w y))))
  (deflistener (cat (exp (gen) y) w))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b-0)
    (priv-stor priv-stor-1) (l l-1) (y y) (alpha alpha) (chi chi))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b-0)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) l) x))
  (precedes ((1 2) (0 0)) ((1 2) (9 0)) ((2 1) (1 0)) ((3 2) (1 1))
    ((4 1) (1 3)) ((5 1) (4 0)) ((6 1) (5 0)) ((7 3) (0 0))
    ((7 3) (6 0)) ((8 1) (7 0)) ((9 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb-0 l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y alpha) (y chi) (y l-1))
  (precur (6 0))
  (gen-st (pv a l-0) (pv b-0 l-1))
  (facts (neq b-0 a-0) (neq a-0 b-0) (neq b a) (neq a b)
    (undisclosed l))
  (leads-to ((2 1) (1 0)) ((8 1) (7 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l) x))
    (exp (gen) (mul x l)) (5 0))
  (strand-map 0 1 2 3 4 5 6 7 8)
  (traces
    ((recv
       (hash (exp (gen) (mul w y)) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) w y))))
      (send
        (hash (exp (gen) (mul w y)) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) w y)))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec l-0) w y))
          (enc na nb a b
            (hash (exp (gen) (mul w y)) (exp (gen) (mul x l))
              (exp (gen) (mul x (rec l-0) w y)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv
       (hash (exp (gen) (mul w y)) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) w y))))
      (send
        (hash (exp (gen) (mul w y)) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) w y)))))
    ((recv
       (cat (exp (gen) (mul w y)) (exp (gen) (mul x l))
         (exp (gen) (mul x (rec l-0) w y))))
      (send
        (cat (exp (gen) (mul w y)) (exp (gen) (mul x l))
          (exp (gen) (mul x (rec l-0) w y)))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w)))
    ((load priv-stor-1 (cat pt-3 (pv b-0 l-1)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b-0 (exp (gen) chi)))
      (send
        (cat (exp (gen) y)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul alpha y)) (exp (gen) (mul chi l-1))
              (exp (gen) (mul chi y)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b-0 l-1))))
    ((recv (cat (exp (gen) l) x)) (send (cat (exp (gen) l) x))))
  (label 283)
  (parent 261)
  (unrealized (0 0) (5 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn)
    (y x l l-0 rndx))
  (deflistener
    (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
      (exp (gen) (mul y x))))
  (defstrand init 4 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (l l-0) (x x) (beta l) (eta y))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (priv-stor priv-stor)
    (l l) (y y) (alpha l-0) (chi x))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (cat (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
      (exp (gen) (mul y x))))
  (deflistener (cat (exp (gen) y) l-0))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) x) l))
  (precedes ((1 2) (3 2)) ((1 2) (8 0)) ((2 1) (3 0)) ((2 2) (1 1))
    ((3 3) (1 3)) ((3 3) (6 0)) ((4 1) (1 0)) ((4 1) (7 0))
    ((4 2) (3 1)) ((5 1) (0 0)) ((6 1) (5 0)) ((7 2) (6 0))
    ((8 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen y x)
  (absent (y x) (y l) (y l-0) (x l) (x l-0))
  (gen-st (pv b l) (pv self l-0))
  (facts (neq b self) (neq self b) (undisclosed l))
  (leads-to ((2 1) (3 0)) ((4 1) (1 0)) ((4 1) (7 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) x) l))
    (exp (gen) (mul x l)) (5 0))
  (strand-map 0 1 2 3 4 5 6 7)
  (traces
    ((recv
       (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
         (exp (gen) (mul y x))))
      (send
        (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
          (exp (gen) (mul y x)))))
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
              (exp (gen) (mul y x)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
              (exp (gen) (mul y x)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv
       (cat (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
         (exp (gen) (mul y x))))
      (send
        (cat (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
          (exp (gen) (mul y x)))))
    ((recv (cat (exp (gen) y) l-0)) (send (cat (exp (gen) y) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l-0))
    ((recv (cat (exp (gen) x) l)) (send (cat (exp (gen) x) l))))
  (label 284)
  (parent 266)
  (unrealized (5 0) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn)
    (y x l l-0 rndx))
  (deflistener
    (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
      (exp (gen) (mul y x))))
  (defstrand init 4 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (l l-0) (x x) (beta l) (eta y))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (priv-stor priv-stor)
    (l l) (y y) (alpha l-0) (chi x))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (cat (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
      (exp (gen) (mul y x))))
  (deflistener (cat (exp (gen) y) l-0))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l) x))
  (precedes ((1 2) (3 2)) ((1 2) (8 0)) ((2 1) (3 0)) ((2 2) (1 1))
    ((3 3) (1 3)) ((3 3) (6 0)) ((4 1) (1 0)) ((4 1) (7 0))
    ((4 2) (3 1)) ((5 1) (0 0)) ((6 1) (5 0)) ((7 2) (6 0))
    ((8 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen y x)
  (absent (y x) (y l) (y l-0) (x l) (x l-0))
  (gen-st (pv b l) (pv self l-0))
  (facts (neq b self) (neq self b) (undisclosed l))
  (leads-to ((2 1) (3 0)) ((4 1) (1 0)) ((4 1) (7 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l) x))
    (exp (gen) (mul x l)) (5 0))
  (strand-map 0 1 2 3 4 5 6 7)
  (traces
    ((recv
       (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
         (exp (gen) (mul y x))))
      (send
        (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
          (exp (gen) (mul y x)))))
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
              (exp (gen) (mul y x)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
              (exp (gen) (mul y x)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv
       (cat (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
         (exp (gen) (mul y x))))
      (send
        (cat (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
          (exp (gen) (mul y x)))))
    ((recv (cat (exp (gen) y) l-0)) (send (cat (exp (gen) y) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l-0))
    ((recv (cat (exp (gen) l) x)) (send (cat (exp (gen) l) x))))
  (label 285)
  (parent 266)
  (unrealized (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn)
    (y x l l-0 rndx))
  (deflistener
    (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
      (exp (gen) (mul y x))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (l l) (y y) (alpha l-0) (chi x))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener
    (cat (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
      (exp (gen) (mul y x))))
  (deflistener (cat (exp (gen) x) l))
  (precedes ((1 2) (4 2)) ((1 2) (8 0)) ((2 1) (1 0)) ((2 1) (6 0))
    ((3 1) (4 0)) ((3 2) (1 1)) ((4 3) (1 3)) ((4 3) (7 0))
    ((5 1) (4 1)) ((6 2) (5 0)) ((7 1) (0 0)) ((8 1) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen y x)
  (absent (y x) (y l) (y l-0) (x l) (x l-0))
  (precur (5 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq b a) (neq a b) (undisclosed l))
  (leads-to ((2 1) (1 0)) ((2 1) (6 0)) ((3 1) (4 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) x) l))
    (exp (gen) (mul x l)) (7 0))
  (strand-map 0 1 2 3 4 5 6 7)
  (traces
    ((recv
       (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
         (exp (gen) (mul y x))))
      (send
        (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
          (exp (gen) (mul y x)))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
              (exp (gen) (mul y x)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
              (exp (gen) (mul y x)))))))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-3 "nil")) (send l-0))
    ((recv
       (cat (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
         (exp (gen) (mul y x))))
      (send
        (cat (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
          (exp (gen) (mul y x)))))
    ((recv (cat (exp (gen) x) l)) (send (cat (exp (gen) x) l))))
  (label 286)
  (parent 267)
  (unrealized (7 0) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn)
    (y x l l-0 rndx))
  (deflistener
    (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
      (exp (gen) (mul y x))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (l l) (y y) (alpha l-0) (chi x))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener
    (cat (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
      (exp (gen) (mul y x))))
  (deflistener (cat (exp (gen) l) x))
  (precedes ((1 2) (4 2)) ((1 2) (8 0)) ((2 1) (1 0)) ((2 1) (6 0))
    ((3 1) (4 0)) ((3 2) (1 1)) ((4 3) (1 3)) ((4 3) (7 0))
    ((5 1) (4 1)) ((6 2) (5 0)) ((7 1) (0 0)) ((8 1) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen y x)
  (absent (y x) (y l) (y l-0) (x l) (x l-0))
  (precur (5 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq b a) (neq a b) (undisclosed l))
  (leads-to ((2 1) (1 0)) ((2 1) (6 0)) ((3 1) (4 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l) x))
    (exp (gen) (mul x l)) (7 0))
  (strand-map 0 1 2 3 4 5 6 7)
  (traces
    ((recv
       (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
         (exp (gen) (mul y x))))
      (send
        (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
          (exp (gen) (mul y x)))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
              (exp (gen) (mul y x)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
              (exp (gen) (mul y x)))))))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-3 "nil")) (send l-0))
    ((recv
       (cat (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
         (exp (gen) (mul y x))))
      (send
        (cat (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
          (exp (gen) (mul y x)))))
    ((recv (cat (exp (gen) l) x)) (send (cat (exp (gen) l) x))))
  (label 287)
  (parent 267)
  (unrealized (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn)
    (y x l l-0 rndx))
  (deflistener
    (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
      (exp (gen) (mul y x))))
  (defstrand init 4 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (l l-0) (x x) (beta l) (eta y))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (priv-stor priv-stor)
    (l l) (y y) (alpha l-0) (chi x))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (cat (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
      (exp (gen) (mul y x))))
  (deflistener (cat (exp (gen) y) l-0))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l-0))
  (precedes ((1 2) (3 2)) ((2 1) (3 0)) ((2 2) (1 1)) ((3 3) (1 3))
    ((3 3) (7 0)) ((4 1) (3 1)) ((5 1) (1 0)) ((5 1) (8 0))
    ((5 2) (4 0)) ((6 1) (0 0)) ((7 1) (6 0)) ((8 2) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen y x)
  (absent (y x) (y l) (y l-0) (x l) (x l-0))
  (precur (4 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (neq b self) (neq self b) (undisclosed l))
  (leads-to ((2 1) (3 0)) ((5 1) (1 0)) ((5 1) (8 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-disclose 3) l-0 (7 0)
    (ch-msg priv-stor-0 (cat pt-2 (pv self l-0))))
  (strand-map 0 1 2 3 4 5 6 7)
  (traces
    ((recv
       (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
         (exp (gen) (mul y x))))
      (send
        (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
          (exp (gen) (mul y x)))))
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
              (exp (gen) (mul y x)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
              (exp (gen) (mul y x)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv
       (cat (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
         (exp (gen) (mul y x))))
      (send
        (cat (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
          (exp (gen) (mul y x)))))
    ((recv (cat (exp (gen) y) l-0)) (send (cat (exp (gen) y) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l-0)))
  (label 288)
  (parent 268)
  (unrealized (6 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (deflistener
    (hash (exp (gen) (mul y (rec l) l-0 l-1)) (exp (gen) (mul x l-1))
      (exp (gen) (mul y x (rec l) l-1))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l-1) (eta (mul y (rec l) l-1)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l) (y y) (alpha (mul (rec l) l-0 l-1)) (chi (mul x (rec l) l-1)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (precedes ((1 2) (4 2)) ((2 1) (1 0)) ((2 1) (9 0)) ((3 2) (1 1))
    ((3 2) (8 0)) ((4 3) (0 0)) ((4 3) (1 3)) ((5 1) (4 0))
    ((5 1) (7 0)) ((6 1) (4 1)) ((7 2) (6 0)) ((8 1) (6 0))
    ((9 2) (8 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x (rec l) l-1)) (y (mul (rec l) l-0 l-1)) (y l)
    (x l-0) (x l-1))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq b a) (neq a b) (undisclosed l-1))
  (leads-to ((2 1) (1 0)) ((2 1) (9 0)) ((5 1) (4 0)) ((5 1) (7 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 10 3 ltx-gen 3) (exp (gen) l-1)
    (8 0))
  (strand-map 0 1 2 3 4 5 6 7 8 9)
  (traces
    ((recv
       (hash (exp (gen) (mul y (rec l) l-0 l-1)) (exp (gen) (mul x l-1))
         (exp (gen) (mul y x (rec l) l-1))))
      (send
        (hash (exp (gen) (mul y (rec l) l-0 l-1))
          (exp (gen) (mul x l-1)) (exp (gen) (mul y x (rec l) l-1)))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l) l-1))
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l) l-1)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x (rec l) l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l) l-1)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0)))
  (label 289)
  (parent 270)
  (unrealized (0 0) (1 3) (4 2))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx)
    (w expt))
  (deflistener
    (hash (exp (gen) (mul y l (rec l-0) l-1)) (exp (gen) (mul x l))
      (exp (gen) (mul y x l (rec l-0)))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-1) (x x) (beta l) (eta (mul y l (rec l-0))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-0) (y y) (alpha (mul l (rec l-0) l-1))
    (chi (mul x l (rec l-0))))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul l l-1)) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) l) l-1))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-1))
  (deflistener (cat (exp (gen) (mul l (rec w))) w))
  (precedes ((1 2) (4 2)) ((2 1) (1 0)) ((2 1) (9 0)) ((3 2) (1 1))
    ((4 3) (0 0)) ((4 3) (1 3)) ((5 1) (4 0)) ((5 1) (7 0))
    ((6 1) (4 1)) ((7 2) (6 0)) ((8 1) (6 0)) ((9 2) (8 0))
    ((10 1) (8 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x l (rec l-0))) (y (mul l (rec l-0) l-1)) (y l-0)
    (x l) (x l-1))
  (precur (10 0))
  (gen-st (pv a l-1) (pv b l-0))
  (facts (neq b a) (neq a b) (undisclosed l))
  (leads-to ((2 1) (1 0)) ((2 1) (9 0)) ((5 1) (4 0)) ((5 1) (7 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul l (rec w))) w)) (exp (gen) l)
    (8 0))
  (strand-map 0 1 2 3 4 5 6 7 8 9)
  (traces
    ((recv
       (hash (exp (gen) (mul y l (rec l-0) l-1)) (exp (gen) (mul x l))
         (exp (gen) (mul y x l (rec l-0)))))
      (send
        (hash (exp (gen) (mul y l (rec l-0) l-1)) (exp (gen) (mul x l))
          (exp (gen) (mul y x l (rec l-0))))))
    ((load priv-stor (cat pt (pv a l-1)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y l (rec l-0)))
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-1))
              (exp (gen) (mul x l))
              (exp (gen) (mul y x l (rec l-0))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x l (rec l-0)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-1))
              (exp (gen) (mul x l))
              (exp (gen) (mul y x l (rec l-0))))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul l l-1)) l-0))
      (send (cat (exp (gen) (mul l l-1)) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l-0))
    ((recv (cat (exp (gen) l) l-1)) (send (cat (exp (gen) l) l-1)))
    ((load priv-stor (cat pt (pv a l-1)))
      (stor priv-stor (cat pt-6 "nil")) (send l-1))
    ((recv (cat (exp (gen) (mul l (rec w))) w))
      (send (cat (exp (gen) (mul l (rec w))) w))))
  (label 290)
  (parent 270)
  (unrealized (0 0) (1 3) (4 2) (10 0))
  (comment "8 in cohort - 8 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (deflistener
    (hash (exp (gen) (mul y l (rec l-0) l-1)) (exp (gen) (mul x l-1))
      (exp (gen) (mul y x (rec l-0) l-1))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-1) (eta (mul y (rec l-0) l-1)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-0) (y y) (alpha (mul l (rec l-0) l-1))
    (chi (mul x (rec l-0) l-1)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (precedes ((1 2) (4 2)) ((2 1) (1 0)) ((2 1) (7 0)) ((3 2) (1 1))
    ((3 2) (8 0)) ((4 3) (0 0)) ((4 3) (1 3)) ((5 1) (4 0))
    ((5 1) (9 0)) ((6 1) (4 1)) ((7 2) (6 0)) ((8 1) (6 0))
    ((9 2) (8 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x (rec l-0) l-1)) (y (mul l (rec l-0) l-1)) (y l-0)
    (x l) (x l-1))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq b a) (neq a b) (undisclosed l-1))
  (leads-to ((2 1) (1 0)) ((2 1) (7 0)) ((5 1) (4 0)) ((5 1) (9 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 10 3 ltx-gen 3) (exp (gen) l-1)
    (8 0))
  (strand-map 0 1 2 3 4 5 6 7 8 9)
  (traces
    ((recv
       (hash (exp (gen) (mul y l (rec l-0) l-1)) (exp (gen) (mul x l-1))
         (exp (gen) (mul y x (rec l-0) l-1))))
      (send
        (hash (exp (gen) (mul y l (rec l-0) l-1))
          (exp (gen) (mul x l-1)) (exp (gen) (mul y x (rec l-0) l-1)))))
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l-0) l-1))
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l-0) l-1)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x (rec l-0) l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l-0) l-1)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-0)))
  (label 291)
  (parent 271)
  (unrealized (0 0) (1 3) (4 2))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx)
    (w expt))
  (deflistener
    (hash (exp (gen) (mul y l l-0 (rec l-1))) (exp (gen) (mul x l))
      (exp (gen) (mul y x l (rec l-1)))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l) (eta (mul y l (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-1) (y y) (alpha (mul l l-0 (rec l-1)))
    (chi (mul x l (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l (rec l-1))) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) l) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l (rec w))) w))
  (precedes ((1 2) (4 2)) ((2 1) (1 0)) ((2 1) (7 0)) ((3 2) (1 1))
    ((4 3) (0 0)) ((4 3) (1 3)) ((5 1) (4 0)) ((5 1) (9 0))
    ((6 1) (4 1)) ((7 2) (6 0)) ((8 1) (6 0)) ((9 2) (8 0))
    ((10 1) (8 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x l (rec l-1))) (y (mul l l-0 (rec l-1))) (y l-1)
    (x l) (x l-0))
  (precur (10 0))
  (gen-st (pv a l-0) (pv b l-1))
  (facts (neq b a) (neq a b) (undisclosed l))
  (leads-to ((2 1) (1 0)) ((2 1) (7 0)) ((5 1) (4 0)) ((5 1) (9 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul l (rec w))) w)) (exp (gen) l)
    (8 0))
  (strand-map 0 1 2 3 4 5 6 7 8 9)
  (traces
    ((recv
       (hash (exp (gen) (mul y l l-0 (rec l-1))) (exp (gen) (mul x l))
         (exp (gen) (mul y x l (rec l-1)))))
      (send
        (hash (exp (gen) (mul y l l-0 (rec l-1))) (exp (gen) (mul x l))
          (exp (gen) (mul y x l (rec l-1))))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y l (rec l-1)))
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l))
              (exp (gen) (mul y x l (rec l-1))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x l (rec l-1)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l))
              (exp (gen) (mul y x l (rec l-1))))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l (rec l-1))) l-0))
      (send (cat (exp (gen) (mul l (rec l-1))) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-5 "nil")) (send l-0))
    ((recv (cat (exp (gen) l) l-1)) (send (cat (exp (gen) l) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-1))
    ((recv (cat (exp (gen) (mul l (rec w))) w))
      (send (cat (exp (gen) (mul l (rec w))) w))))
  (label 292)
  (parent 271)
  (unrealized (0 0) (1 3) (4 2) (10 0))
  (comment "8 in cohort - 8 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn)
    (y x l l-0 rndx))
  (deflistener
    (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
      (exp (gen) (mul y x))))
  (defstrand init 4 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (l l-0) (x x) (beta l) (eta y))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (priv-stor priv-stor)
    (l l) (y y) (alpha l-0) (chi x))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (cat (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
      (exp (gen) (mul y x))))
  (deflistener (cat (exp (gen) y) l-0))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) x) l))
  (precedes ((1 2) (3 2)) ((1 2) (9 0)) ((2 1) (3 0)) ((2 2) (1 1))
    ((3 3) (1 3)) ((3 3) (7 0)) ((4 1) (3 1)) ((5 1) (1 0))
    ((5 1) (8 0)) ((5 2) (4 0)) ((6 1) (0 0)) ((7 1) (6 0))
    ((8 2) (7 0)) ((9 1) (6 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen y x)
  (absent (y x) (y l) (y l-0) (x l) (x l-0))
  (precur (4 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (neq b self) (neq self b) (undisclosed l))
  (leads-to ((2 1) (3 0)) ((5 1) (1 0)) ((5 1) (8 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) x) l))
    (exp (gen) (mul x l)) (6 0))
  (strand-map 0 1 2 3 4 5 6 7 8)
  (traces
    ((recv
       (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
         (exp (gen) (mul y x))))
      (send
        (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
          (exp (gen) (mul y x)))))
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
              (exp (gen) (mul y x)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
              (exp (gen) (mul y x)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv
       (cat (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
         (exp (gen) (mul y x))))
      (send
        (cat (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
          (exp (gen) (mul y x)))))
    ((recv (cat (exp (gen) y) l-0)) (send (cat (exp (gen) y) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l-0))
    ((recv (cat (exp (gen) x) l)) (send (cat (exp (gen) x) l))))
  (label 293)
  (parent 288)
  (unrealized (6 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn)
    (y x l l-0 rndx))
  (deflistener
    (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
      (exp (gen) (mul y x))))
  (defstrand init 4 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (l l-0) (x x) (beta l) (eta y))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (priv-stor priv-stor)
    (l l) (y y) (alpha l-0) (chi x))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (cat (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
      (exp (gen) (mul y x))))
  (deflistener (cat (exp (gen) y) l-0))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l) x))
  (precedes ((1 2) (3 2)) ((1 2) (9 0)) ((2 1) (3 0)) ((2 2) (1 1))
    ((3 3) (1 3)) ((3 3) (7 0)) ((4 1) (3 1)) ((5 1) (1 0))
    ((5 1) (8 0)) ((5 2) (4 0)) ((6 1) (0 0)) ((7 1) (6 0))
    ((8 2) (7 0)) ((9 1) (6 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen y x)
  (absent (y x) (y l) (y l-0) (x l) (x l-0))
  (precur (4 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (neq b self) (neq self b) (undisclosed l))
  (leads-to ((2 1) (3 0)) ((5 1) (1 0)) ((5 1) (8 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l) x))
    (exp (gen) (mul x l)) (6 0))
  (strand-map 0 1 2 3 4 5 6 7 8)
  (traces
    ((recv
       (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
         (exp (gen) (mul y x))))
      (send
        (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
          (exp (gen) (mul y x)))))
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
              (exp (gen) (mul y x)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
              (exp (gen) (mul y x)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv
       (cat (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
         (exp (gen) (mul y x))))
      (send
        (cat (exp (gen) (mul y l-0)) (exp (gen) (mul x l))
          (exp (gen) (mul y x)))))
    ((recv (cat (exp (gen) y) l-0)) (send (cat (exp (gen) y) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l-0))
    ((recv (cat (exp (gen) l) x)) (send (cat (exp (gen) l) x))))
  (label 294)
  (parent 288)
  (unrealized (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (deflistener
    (hash (exp (gen) (mul y (rec l) l-0 l-1)) (exp (gen) (mul x l-1))
      (exp (gen) (mul y x (rec l) l-1))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l-1) (eta (mul y (rec l) l-1)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l) (y y) (alpha (mul (rec l) l-0 l-1)) (chi (mul x (rec l) l-1)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) (mul x (rec l))) l-1))
  (precedes ((1 2) (10 0)) ((2 1) (1 0)) ((2 1) (9 0)) ((3 2) (1 1))
    ((3 2) (8 0)) ((4 3) (0 0)) ((4 3) (1 3)) ((5 1) (4 0))
    ((5 1) (7 0)) ((6 1) (4 1)) ((7 2) (6 0)) ((8 1) (6 0))
    ((9 2) (8 0)) ((10 1) (4 2)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x (rec l) l-1)) (y (mul (rec l) l-0 l-1)) (y l)
    (x l-0) (x l-1))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq b a) (neq a b) (undisclosed l-1))
  (leads-to ((2 1) (1 0)) ((2 1) (9 0)) ((5 1) (4 0)) ((5 1) (7 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul x (rec l))) l-1))
    (exp (gen) (mul x (rec l) l-1)) (4 2))
  (strand-map 0 1 2 3 4 5 6 7 8 9)
  (traces
    ((recv
       (hash (exp (gen) (mul y (rec l) l-0 l-1)) (exp (gen) (mul x l-1))
         (exp (gen) (mul y x (rec l) l-1))))
      (send
        (hash (exp (gen) (mul y (rec l) l-0 l-1))
          (exp (gen) (mul x l-1)) (exp (gen) (mul y x (rec l) l-1)))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l) l-1))
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l) l-1)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x (rec l) l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l) l-1)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul x (rec l))) l-1))
      (send (cat (exp (gen) (mul x (rec l))) l-1))))
  (label 295)
  (parent 289)
  (unrealized (0 0) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (deflistener
    (hash (exp (gen) (mul y (rec l) l-0 l-1)) (exp (gen) (mul x l-1))
      (exp (gen) (mul y x (rec l) l-1))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l-1) (eta (mul y (rec l) l-1)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l) (y y) (alpha (mul (rec l) l-0 l-1)) (chi (mul x (rec l) l-1)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) (mul x l-1)) l))
  (precedes ((1 2) (10 0)) ((2 1) (1 0)) ((2 1) (9 0)) ((3 2) (1 1))
    ((3 2) (8 0)) ((4 3) (0 0)) ((4 3) (1 3)) ((5 1) (4 0))
    ((5 1) (7 0)) ((5 1) (10 0)) ((6 1) (4 1)) ((7 2) (6 0))
    ((8 1) (6 0)) ((9 2) (8 0)) ((10 1) (4 2)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x (rec l) l-1)) (y (mul (rec l) l-0 l-1)) (y l)
    (x l-0) (x l-1))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq b a) (neq a b) (undisclosed l-1))
  (leads-to ((2 1) (1 0)) ((2 1) (9 0)) ((5 1) (4 0)) ((5 1) (7 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) (mul x l-1)) l))
    (exp (gen) (mul x (rec l) l-1)) (4 2))
  (strand-map 0 1 2 3 4 5 6 7 8 9)
  (traces
    ((recv
       (hash (exp (gen) (mul y (rec l) l-0 l-1)) (exp (gen) (mul x l-1))
         (exp (gen) (mul y x (rec l) l-1))))
      (send
        (hash (exp (gen) (mul y (rec l) l-0 l-1))
          (exp (gen) (mul x l-1)) (exp (gen) (mul y x (rec l) l-1)))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l) l-1))
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l) l-1)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x (rec l) l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l) l-1)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul x l-1)) l))
      (send (cat (exp (gen) (mul x l-1)) l))))
  (label 296)
  (parent 289)
  (seen 317)
  (seen-ops
    (317
      (operation nonce-test (added-strand ltx-disclose 3) l-1 (10 0)
        (ch-msg priv-stor-1 (cat pt-3 (pv b l-1))))
      (strand-map 0 1 2 3 4 5 6 7 8 9 10)))
  (unrealized (0 0) (1 3) (10 0))
  (comment "2 in cohort - 1 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (deflistener
    (hash (exp (gen) (mul y (rec l) l-0 l-1)) (exp (gen) (mul x l-1))
      (exp (gen) (mul y x (rec l) l-1))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l-1) (eta (mul y (rec l) l-1)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l) (y y) (alpha (mul (rec l) l-0 l-1)) (chi (mul x (rec l) l-1)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l) l-1)) x))
  (precedes ((1 2) (10 0)) ((2 1) (1 0)) ((2 1) (9 0)) ((3 2) (1 1))
    ((3 2) (8 0)) ((4 3) (0 0)) ((4 3) (1 3)) ((5 1) (4 0))
    ((5 1) (7 0)) ((6 1) (4 1)) ((7 2) (6 0)) ((8 1) (6 0))
    ((9 2) (8 0)) ((10 1) (4 2)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x (rec l) l-1)) (y (mul (rec l) l-0 l-1)) (y l)
    (x l-0) (x l-1))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq b a) (neq a b) (undisclosed l-1))
  (leads-to ((2 1) (1 0)) ((2 1) (9 0)) ((5 1) (4 0)) ((5 1) (7 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec l) l-1)) x))
    (exp (gen) (mul x (rec l) l-1)) (4 2))
  (strand-map 0 1 2 3 4 5 6 7 8 9)
  (traces
    ((recv
       (hash (exp (gen) (mul y (rec l) l-0 l-1)) (exp (gen) (mul x l-1))
         (exp (gen) (mul y x (rec l) l-1))))
      (send
        (hash (exp (gen) (mul y (rec l) l-0 l-1))
          (exp (gen) (mul x l-1)) (exp (gen) (mul y x (rec l) l-1)))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l) l-1))
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l) l-1)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x (rec l) l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l) l-1)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul (rec l) l-1)) x))
      (send (cat (exp (gen) (mul (rec l) l-1)) x))))
  (label 297)
  (parent 289)
  (unrealized (0 0) (1 3) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn)
    (y x l l-0 l-1 rndx) (alpha chi expt) (l-2 y-0 rndx))
  (deflistener
    (hash (exp (gen) (mul y (rec l) l-0 l-2)) (exp (gen) (mul x l-2))
      (exp (gen) (mul y x (rec l) l-2))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l-2) (eta (mul y (rec l) l-2)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-2))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l) (y y) (alpha (mul (rec l) l-0 l-2)) (chi (mul x (rec l) l-2)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-2)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-2) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) y-0) (mul l-2 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b-0)
    (priv-stor priv-stor-2) (l l-1) (y y-0) (alpha alpha) (chi chi))
  (precedes ((1 2) (4 2)) ((2 1) (1 0)) ((2 1) (9 0)) ((3 2) (1 1))
    ((4 3) (0 0)) ((4 3) (1 3)) ((5 1) (4 0)) ((5 1) (7 0))
    ((6 1) (4 1)) ((7 2) (6 0)) ((8 1) (6 0)) ((9 2) (8 0))
    ((10 1) (8 0)) ((11 3) (10 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-2)
  (uniq-gen y x y-0)
  (absent (y (mul x (rec l) l-2)) (y (mul (rec l) l-0 l-2)) (y l)
    (x l-0) (x l-2) (y-0 l-1) (y-0 alpha) (y-0 chi))
  (precur (10 0))
  (gen-st (pv a l-0) (pv b l) (pv b-0 l-1))
  (facts (neq b-0 a-0) (neq a-0 b-0) (neq b a) (neq a b)
    (undisclosed l-2))
  (leads-to ((2 1) (1 0)) ((2 1) (9 0)) ((5 1) (4 0)) ((5 1) (7 0)))
  (rule fact-init-neq0 fact-resp-neq0 gen-st-ltx-disclose-0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand resp 4) (exp (gen) y-0) (10 0))
  (strand-map 0 1 2 3 4 5 6 7 8 9 10)
  (traces
    ((recv
       (hash (exp (gen) (mul y (rec l) l-0 l-2)) (exp (gen) (mul x l-2))
         (exp (gen) (mul y x (rec l) l-2))))
      (send
        (hash (exp (gen) (mul y (rec l) l-0 l-2))
          (exp (gen) (mul x l-2)) (exp (gen) (mul y x (rec l) l-2)))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b (exp (gen) l-2) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l) l-2))
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-2))
              (exp (gen) (mul x l-2))
              (exp (gen) (mul y x (rec l) l-2)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-2)))
      (send
        (sig (body b (exp (gen) l-2) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-2)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x (rec l) l-2))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-2))
              (exp (gen) (mul x l-2))
              (exp (gen) (mul y x (rec l) l-2)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-2)) l))
      (send (cat (exp (gen) (mul l-0 l-2)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-2) l-0)) (send (cat (exp (gen) l-2) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) y-0) (mul l-2 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-2 (rec y-0)))))
    ((load priv-stor-2 (cat pt-7 (pv b-0 l-1)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b-0 (exp (gen) chi)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul alpha y-0)) (exp (gen) (mul l-1 chi))
              (exp (gen) (mul chi y-0))))))))
  (label 298)
  (parent 290)
  (unrealized (0 0) (1 3) (4 2) (8 0) (10 0) (11 0))
  (comment "4 in cohort - 4 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (a b a-0 b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn)
    (y x l l-0 l-1 rndx) (beta expt) (l-2 x-0 rndx))
  (deflistener
    (hash (exp (gen) (mul y (rec l) l-0 l-2)) (exp (gen) (mul x l-2))
      (exp (gen) (mul y x (rec l) l-2))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l-2) (eta (mul y (rec l) l-2)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-2))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l) (y y) (alpha (mul (rec l) l-0 l-2)) (chi (mul x (rec l) l-2)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-2)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-2) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) x-0) (mul l-2 (rec x-0))))
  (defstrand init 3 (na na-0) (a a-0) (b b-0) (priv-stor priv-stor-2)
    (l l-1) (x x-0) (beta beta))
  (precedes ((1 2) (4 2)) ((2 1) (1 0)) ((2 1) (9 0)) ((3 2) (1 1))
    ((4 3) (0 0)) ((4 3) (1 3)) ((5 1) (4 0)) ((5 1) (7 0))
    ((6 1) (4 1)) ((7 2) (6 0)) ((8 1) (6 0)) ((9 2) (8 0))
    ((10 1) (8 0)) ((11 2) (10 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-2)
  (uniq-gen y x x-0)
  (absent (y (mul x (rec l) l-2)) (y (mul (rec l) l-0 l-2)) (y l)
    (x l-0) (x l-2) (x-0 l-1) (x-0 beta))
  (precur (10 0))
  (gen-st (pv a l-0) (pv b l) (pv a-0 l-1))
  (facts (neq a-0 b-0) (neq b-0 a-0) (neq b a) (neq a b)
    (undisclosed l-2))
  (leads-to ((2 1) (1 0)) ((2 1) (9 0)) ((5 1) (4 0)) ((5 1) (7 0)))
  (rule fact-init-neq0 fact-resp-neq0 gen-st-ltx-disclose-0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand init 3) (exp (gen) x-0) (10 0))
  (strand-map 0 1 2 3 4 5 6 7 8 9 10)
  (traces
    ((recv
       (hash (exp (gen) (mul y (rec l) l-0 l-2)) (exp (gen) (mul x l-2))
         (exp (gen) (mul y x (rec l) l-2))))
      (send
        (hash (exp (gen) (mul y (rec l) l-0 l-2))
          (exp (gen) (mul x l-2)) (exp (gen) (mul y x (rec l) l-2)))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b (exp (gen) l-2) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l) l-2))
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-2))
              (exp (gen) (mul x l-2))
              (exp (gen) (mul y x (rec l) l-2)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-2)))
      (send
        (sig (body b (exp (gen) l-2) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-2)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x (rec l) l-2))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-2))
              (exp (gen) (mul x l-2))
              (exp (gen) (mul y x (rec l) l-2)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-2)) l))
      (send (cat (exp (gen) (mul l-0 l-2)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-2) l-0)) (send (cat (exp (gen) l-2) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) x-0) (mul l-2 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-2 (rec x-0)))))
    ((load priv-stor-2 (cat pt-7 (pv a-0 l-1)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0)))
      (send (cat na-0 a-0 b-0 (exp (gen) x-0)))))
  (label 299)
  (parent 290)
  (unrealized (0 0) (1 3) (4 2) (8 0) (10 0) (11 0))
  (comment "4 in cohort - 4 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (deflistener
    (hash (exp (gen) (mul y (rec l) l-0 l-1)) (exp (gen) (mul x l-1))
      (exp (gen) (mul y x (rec l) l-1))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l-1) (eta (mul y (rec l) l-1)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l) (y y) (alpha (mul (rec l) l-0 l-1)) (chi (mul x (rec l) l-1)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (gen) l-1))
  (precedes ((1 2) (4 2)) ((2 1) (1 0)) ((2 1) (9 0)) ((3 1) (10 0))
    ((3 2) (1 1)) ((4 3) (0 0)) ((4 3) (1 3)) ((5 1) (4 0))
    ((5 1) (7 0)) ((6 1) (4 1)) ((7 2) (6 0)) ((8 1) (6 0))
    ((9 2) (8 0)) ((10 1) (8 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x (rec l) l-1)) (y (mul (rec l) l-0 l-1)) (y l)
    (x l-0) (x l-1))
  (precur (10 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq b a) (neq a b) (undisclosed l-1))
  (leads-to ((2 1) (1 0)) ((2 1) (9 0)) ((5 1) (4 0)) ((5 1) (7 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (contracted (l-2 l-1) (w l-1)) (gen) (10 0))
  (strand-map 0 1 2 3 4 5 6 7 8 9 10)
  (traces
    ((recv
       (hash (exp (gen) (mul y (rec l) l-0 l-1)) (exp (gen) (mul x l-1))
         (exp (gen) (mul y x (rec l) l-1))))
      (send
        (hash (exp (gen) (mul y (rec l) l-0 l-1))
          (exp (gen) (mul x l-1)) (exp (gen) (mul y x (rec l) l-1)))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l) l-1))
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l) l-1)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x (rec l) l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l) l-1)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0))
    ((recv (cat (gen) l-1)) (send (cat (gen) l-1))))
  (label 300)
  (parent 290)
  (unrealized (0 0) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y l l-0 l-1 x rndx))
  (deflistener
    (hash (exp (gen) (mul y (rec l) l-0 l-1)) (exp (gen) (mul l-1 x))
      (exp (gen) (mul y (rec l) l-1 x))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l-1) (eta (mul y (rec l) l-1)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l) (y y) (alpha (mul (rec l) l-0 l-1)) (chi (mul (rec l) l-1 x)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) x) (mul l-1 (rec x))))
  (precedes ((1 2) (10 0)) ((2 1) (1 0)) ((2 1) (9 0)) ((3 2) (1 1))
    ((4 3) (0 0)) ((4 3) (1 3)) ((5 1) (4 0)) ((5 1) (7 0))
    ((6 1) (4 1)) ((7 2) (6 0)) ((8 1) (6 0)) ((9 2) (8 0))
    ((10 1) (8 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul (rec l) l-0 l-1)) (y (mul (rec l) l-1 x)) (y l)
    (x l-0) (x l-1))
  (precur (10 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq b a) (neq a b) (undisclosed l-1))
  (leads-to ((2 1) (1 0)) ((2 1) (9 0)) ((5 1) (4 0)) ((5 1) (7 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 11 1 init 3) (exp (gen) x-0) (10 0))
  (strand-map 0 1 2 3 4 5 6 7 8 9 10)
  (traces
    ((recv
       (hash (exp (gen) (mul y (rec l) l-0 l-1)) (exp (gen) (mul l-1 x))
         (exp (gen) (mul y (rec l) l-1 x))))
      (send
        (hash (exp (gen) (mul y (rec l) l-0 l-1))
          (exp (gen) (mul l-1 x)) (exp (gen) (mul y (rec l) l-1 x)))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l) l-1))
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul l-1 x))
              (exp (gen) (mul y (rec l) l-1 x)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul (rec l) l-1 x))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul l-1 x))
              (exp (gen) (mul y (rec l) l-1 x)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) x) (mul l-1 (rec x))))
      (send (cat (exp (gen) x) (mul l-1 (rec x))))))
  (label 301)
  (parent 290)
  (unrealized (0 0) (1 3) (4 2) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (deflistener
    (hash (exp (gen) (mul y (rec l) l-0 l-1)) (exp (gen) (mul x l-1))
      (exp (gen) (mul y x (rec l) l-1))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l-1) (eta (mul y (rec l) l-1)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l) (y y) (alpha (mul (rec l) l-0 l-1)) (chi (mul x (rec l) l-1)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) l-1) (one)))
  (precedes ((1 2) (4 2)) ((2 1) (1 0)) ((2 1) (9 0)) ((3 2) (1 1))
    ((3 2) (10 0)) ((4 3) (0 0)) ((4 3) (1 3)) ((5 1) (4 0))
    ((5 1) (7 0)) ((6 1) (4 1)) ((7 2) (6 0)) ((8 1) (6 0))
    ((9 2) (8 0)) ((10 1) (8 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x (rec l) l-1)) (y (mul (rec l) l-0 l-1)) (y l)
    (x l-0) (x l-1))
  (precur (10 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq b a) (neq a b) (undisclosed l-1))
  (leads-to ((2 1) (1 0)) ((2 1) (9 0)) ((5 1) (4 0)) ((5 1) (7 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 11 3 ltx-gen 3) (exp (gen) l-2)
    (10 0))
  (strand-map 0 1 2 3 4 5 6 7 8 9 10)
  (traces
    ((recv
       (hash (exp (gen) (mul y (rec l) l-0 l-1)) (exp (gen) (mul x l-1))
         (exp (gen) (mul y x (rec l) l-1))))
      (send
        (hash (exp (gen) (mul y (rec l) l-0 l-1))
          (exp (gen) (mul x l-1)) (exp (gen) (mul y x (rec l) l-1)))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l) l-1))
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l) l-1)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x (rec l) l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l) l-1)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) l-1) (one)))
      (send (cat (exp (gen) l-1) (one)))))
  (label 302)
  (parent 290)
  (unrealized (0 0) (1 3) (4 2))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (deflistener
    (hash (exp (gen) (mul y (rec l) l-0 l-1)) (exp (gen) (mul x l-0))
      (exp (gen) (mul y x (rec l) l-0))))
  (defstrand init 4 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (l l-1) (x x) (beta l-0)
    (eta (mul y (rec l) l-0)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (l l) (y y) (alpha (mul (rec l) l-0 l-1))
    (chi (mul x (rec l) l-0)))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-0) l-1))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((1 2) (3 2)) ((2 2) (1 1)) ((3 3) (0 0)) ((3 3) (1 3))
    ((4 1) (3 0)) ((4 1) (6 0)) ((5 1) (3 1)) ((6 2) (5 0))
    ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0)) ((10 1) (1 0))
    ((10 1) (8 0)) ((10 2) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x (rec l) l-0)) (y (mul (rec l) l-0 l-1)) (y l)
    (x l-0) (x l-1))
  (precur (9 0))
  (gen-st (pv b l) (pv self l-1))
  (facts (neq b self) (neq self b) (undisclosed l-0))
  (leads-to ((4 1) (3 0)) ((4 1) (6 0)) ((10 1) (1 0)) ((10 1) (8 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 2 11 ltx-gen 3) (exp (gen) l-2)
    (10 0))
  (strand-map 0 1 10 2 3 4 5 6 7 8 9)
  (traces
    ((recv
       (hash (exp (gen) (mul y (rec l) l-0 l-1)) (exp (gen) (mul x l-0))
         (exp (gen) (mul y x (rec l) l-0))))
      (send
        (hash (exp (gen) (mul y (rec l) l-0 l-1))
          (exp (gen) (mul x l-0)) (exp (gen) (mul y x (rec l) l-0)))))
    ((load priv-stor-1 (cat pt-6 (pv self l-1)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l) l-0))
          (enc na nb self b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x (rec l) l-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-1 (pv b l)))
      (recv
        (sig
          (body self (exp (gen) (mul (rec l) l-0 l-1))
            (pubk "sig" self)) (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul x (rec l) l-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x (rec l) l-0)))))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-0 (cat pt-1 (pv b l)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) l-1)) (send (cat (exp (gen) l-0) l-1)))
    ((load priv-stor-1 (cat pt-6 (pv self l-1)))
      (stor priv-stor-1 (cat pt-4 "nil")) (send l-1))
    ((recv (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
      (send (cat (exp (gen) l-1) (mul l-0 (rec l-1)))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))))
  (label 303)
  (parent 290)
  (unrealized (0 0) (1 3) (3 2) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (deflistener
    (hash (exp (gen) (mul y l l-0 (rec l-1))) (exp (gen) (mul x l-0))
      (exp (gen) (mul y x l-0 (rec l-1)))))
  (defstrand init 4 (na na) (nb nb) (a a) (b self) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul y l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b self)
    (priv-stor priv-stor-1) (l l-1) (y y) (alpha (mul l l-0 (rec l-1)))
    (chi (mul x l-0 (rec l-1))))
  (deflistener (cat (exp (gen) (mul l l-0)) l-1))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((1 2) (4 2)) ((2 1) (1 0)) ((2 1) (8 0)) ((3 2) (1 1))
    ((4 3) (0 0)) ((4 3) (1 3)) ((5 1) (4 1)) ((6 2) (5 0))
    ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0)) ((10 1) (4 0))
    ((10 1) (6 0)) ((10 2) (9 0)))
  (non-orig (privk "sig" self))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x l-0 (rec l-1))) (y (mul l l-0 (rec l-1))) (y l-1)
    (x l) (x l-0))
  (precur (9 0))
  (gen-st (pv a l) (pv self l-1))
  (facts (neq self a) (neq a self) (undisclosed l-0))
  (leads-to ((2 1) (1 0)) ((2 1) (8 0)) ((10 1) (4 0)) ((10 1) (6 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 5 11 ltx-gen 3) (exp (gen) l-2)
    (10 0))
  (strand-map 0 1 2 3 4 10 5 6 7 8 9)
  (traces
    ((recv
       (hash (exp (gen) (mul y l l-0 (rec l-1))) (exp (gen) (mul x l-0))
         (exp (gen) (mul y x l-0 (rec l-1)))))
      (send
        (hash (exp (gen) (mul y l l-0 (rec l-1)))
          (exp (gen) (mul x l-0)) (exp (gen) (mul y x l-0 (rec l-1))))))
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (send (cat na a self (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y l-0 (rec l-1)))
          (enc na nb a self
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-1 (cat pt-6 (pv self l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a self (exp (gen) (mul x l-0 (rec l-1)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a self
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((recv (cat (exp (gen) (mul l l-0)) l-1))
      (send (cat (exp (gen) (mul l l-0)) l-1)))
    ((load priv-stor-1 (cat pt-6 (pv self l-1)))
      (stor priv-stor-1 (cat pt-3 "nil")) (send l-1))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-4 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
      (send (cat (exp (gen) l-1) (mul l-0 (rec l-1)))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))))
  (label 304)
  (parent 290)
  (unrealized (0 0) (1 3) (4 2) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 ignore-2 mesg) (na nb data)
    (a b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pt-8 pval)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn)
    (y x l l-0 l-1 l-2 rndx))
  (deflistener
    (hash (exp (gen) (mul y (rec l) l-0 l-1)) (exp (gen) (mul x l-1))
      (exp (gen) (mul y x (rec l) l-1))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l-1) (eta (mul y (rec l) l-1)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l) (y y) (alpha (mul (rec l) l-0 l-1)) (chi (mul x (rec l) l-1)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) l-2) (mul l-1 (rec l-2))))
  (defstrand ltx-gen 3 (ignore ignore-2) (self self)
    (priv-stor priv-stor-2) (l l-2))
  (precedes ((1 2) (4 2)) ((2 1) (1 0)) ((2 1) (9 0)) ((3 2) (1 1))
    ((4 3) (0 0)) ((4 3) (1 3)) ((5 1) (4 0)) ((5 1) (7 0))
    ((6 1) (4 1)) ((7 2) (6 0)) ((8 1) (6 0)) ((9 2) (8 0))
    ((10 1) (8 0)) ((11 2) (10 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1 l-2)
  (uniq-gen y x)
  (absent (y (mul x (rec l) l-1)) (y (mul (rec l) l-0 l-1)) (y l)
    (x l-0) (x l-1))
  (precur (10 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq b a) (neq a b) (undisclosed l-1))
  (leads-to ((2 1) (1 0)) ((2 1) (9 0)) ((5 1) (4 0)) ((5 1) (7 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 3) (exp (gen) l-2) (10 0))
  (strand-map 0 1 2 3 4 5 6 7 8 9 10)
  (traces
    ((recv
       (hash (exp (gen) (mul y (rec l) l-0 l-1)) (exp (gen) (mul x l-1))
         (exp (gen) (mul y x (rec l) l-1))))
      (send
        (hash (exp (gen) (mul y (rec l) l-0 l-1))
          (exp (gen) (mul x l-1)) (exp (gen) (mul y x (rec l) l-1)))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l) l-1))
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l) l-1)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x (rec l) l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l) l-1)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) l-2) (mul l-1 (rec l-2))))
      (send (cat (exp (gen) l-2) (mul l-1 (rec l-2)))))
    ((load priv-stor-2 (cat pt-7 ignore-2))
      (stor priv-stor-2 (cat pt-8 (pv self l-2)))
      (send
        (sig (body self (exp (gen) l-2) (pubk "sig" self))
          (privk "sig" self)))))
  (label 305)
  (parent 290)
  (unrealized (0 0) (1 3) (4 2) (8 0) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (deflistener
    (hash (exp (gen) (mul y l (rec l-0) l-1)) (exp (gen) (mul x l-1))
      (exp (gen) (mul y x (rec l-0) l-1))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-1) (eta (mul y (rec l-0) l-1)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-0) (y y) (alpha (mul l (rec l-0) l-1))
    (chi (mul x (rec l-0) l-1)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul x (rec l-0))) l-1))
  (precedes ((1 2) (10 0)) ((2 1) (1 0)) ((2 1) (7 0)) ((3 2) (1 1))
    ((3 2) (8 0)) ((4 3) (0 0)) ((4 3) (1 3)) ((5 1) (4 0))
    ((5 1) (9 0)) ((6 1) (4 1)) ((7 2) (6 0)) ((8 1) (6 0))
    ((9 2) (8 0)) ((10 1) (4 2)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x (rec l-0) l-1)) (y (mul l (rec l-0) l-1)) (y l-0)
    (x l) (x l-1))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq b a) (neq a b) (undisclosed l-1))
  (leads-to ((2 1) (1 0)) ((2 1) (7 0)) ((5 1) (4 0)) ((5 1) (9 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul x (rec l-0))) l-1))
    (exp (gen) (mul x (rec l-0) l-1)) (4 2))
  (strand-map 0 1 2 3 4 5 6 7 8 9)
  (traces
    ((recv
       (hash (exp (gen) (mul y l (rec l-0) l-1)) (exp (gen) (mul x l-1))
         (exp (gen) (mul y x (rec l-0) l-1))))
      (send
        (hash (exp (gen) (mul y l (rec l-0) l-1))
          (exp (gen) (mul x l-1)) (exp (gen) (mul y x (rec l-0) l-1)))))
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l-0) l-1))
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l-0) l-1)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x (rec l-0) l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l-0) l-1)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul x (rec l-0))) l-1))
      (send (cat (exp (gen) (mul x (rec l-0))) l-1))))
  (label 306)
  (parent 291)
  (unrealized (0 0) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (deflistener
    (hash (exp (gen) (mul y l (rec l-0) l-1)) (exp (gen) (mul x l-1))
      (exp (gen) (mul y x (rec l-0) l-1))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-1) (eta (mul y (rec l-0) l-1)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-0) (y y) (alpha (mul l (rec l-0) l-1))
    (chi (mul x (rec l-0) l-1)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul x l-1)) l-0))
  (precedes ((1 2) (10 0)) ((2 1) (1 0)) ((2 1) (7 0)) ((3 2) (1 1))
    ((3 2) (8 0)) ((4 3) (0 0)) ((4 3) (1 3)) ((5 1) (4 0))
    ((5 1) (9 0)) ((5 1) (10 0)) ((6 1) (4 1)) ((7 2) (6 0))
    ((8 1) (6 0)) ((9 2) (8 0)) ((10 1) (4 2)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x (rec l-0) l-1)) (y (mul l (rec l-0) l-1)) (y l-0)
    (x l) (x l-1))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq b a) (neq a b) (undisclosed l-1))
  (leads-to ((2 1) (1 0)) ((2 1) (7 0)) ((5 1) (4 0)) ((5 1) (9 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul x l-1)) l-0))
    (exp (gen) (mul x (rec l-0) l-1)) (4 2))
  (strand-map 0 1 2 3 4 5 6 7 8 9)
  (traces
    ((recv
       (hash (exp (gen) (mul y l (rec l-0) l-1)) (exp (gen) (mul x l-1))
         (exp (gen) (mul y x (rec l-0) l-1))))
      (send
        (hash (exp (gen) (mul y l (rec l-0) l-1))
          (exp (gen) (mul x l-1)) (exp (gen) (mul y x (rec l-0) l-1)))))
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l-0) l-1))
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l-0) l-1)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x (rec l-0) l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l-0) l-1)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul x l-1)) l-0))
      (send (cat (exp (gen) (mul x l-1)) l-0))))
  (label 307)
  (parent 291)
  (seen 329)
  (seen-ops
    (329
      (operation nonce-test (added-strand ltx-disclose 3) l-1 (10 0)
        (ch-msg priv-stor-1 (cat pt-3 (pv b l-1))))
      (strand-map 0 1 2 3 4 5 6 7 8 9 10)))
  (unrealized (0 0) (1 3) (10 0))
  (comment "2 in cohort - 1 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (deflistener
    (hash (exp (gen) (mul y l (rec l-0) l-1)) (exp (gen) (mul x l-1))
      (exp (gen) (mul y x (rec l-0) l-1))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-1) (eta (mul y (rec l-0) l-1)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-0) (y y) (alpha (mul l (rec l-0) l-1))
    (chi (mul x (rec l-0) l-1)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) x))
  (precedes ((1 2) (10 0)) ((2 1) (1 0)) ((2 1) (7 0)) ((3 2) (1 1))
    ((3 2) (8 0)) ((4 3) (0 0)) ((4 3) (1 3)) ((5 1) (4 0))
    ((5 1) (9 0)) ((6 1) (4 1)) ((7 2) (6 0)) ((8 1) (6 0))
    ((9 2) (8 0)) ((10 1) (4 2)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x (rec l-0) l-1)) (y (mul l (rec l-0) l-1)) (y l-0)
    (x l) (x l-1))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq b a) (neq a b) (undisclosed l-1))
  (leads-to ((2 1) (1 0)) ((2 1) (7 0)) ((5 1) (4 0)) ((5 1) (9 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec l-0) l-1)) x))
    (exp (gen) (mul x (rec l-0) l-1)) (4 2))
  (strand-map 0 1 2 3 4 5 6 7 8 9)
  (traces
    ((recv
       (hash (exp (gen) (mul y l (rec l-0) l-1)) (exp (gen) (mul x l-1))
         (exp (gen) (mul y x (rec l-0) l-1))))
      (send
        (hash (exp (gen) (mul y l (rec l-0) l-1))
          (exp (gen) (mul x l-1)) (exp (gen) (mul y x (rec l-0) l-1)))))
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l-0) l-1))
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l-0) l-1)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x (rec l-0) l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l-0) l-1)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) x))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) x))))
  (label 308)
  (parent 291)
  (unrealized (0 0) (1 3) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn)
    (y x l l-0 l-1 rndx) (alpha chi expt) (l-2 y-0 rndx))
  (deflistener
    (hash (exp (gen) (mul y l (rec l-0) l-2)) (exp (gen) (mul x l-2))
      (exp (gen) (mul y x (rec l-0) l-2))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-2) (eta (mul y (rec l-0) l-2)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-2))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-0) (y y) (alpha (mul l (rec l-0) l-2))
    (chi (mul x (rec l-0) l-2)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-2)) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-2) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) y-0) (mul l-2 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b-0)
    (priv-stor priv-stor-2) (l l-1) (y y-0) (alpha alpha) (chi chi))
  (precedes ((1 2) (4 2)) ((2 1) (1 0)) ((2 1) (7 0)) ((3 2) (1 1))
    ((4 3) (0 0)) ((4 3) (1 3)) ((5 1) (4 0)) ((5 1) (9 0))
    ((6 1) (4 1)) ((7 2) (6 0)) ((8 1) (6 0)) ((9 2) (8 0))
    ((10 1) (8 0)) ((11 3) (10 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-2)
  (uniq-gen y x y-0)
  (absent (y (mul x (rec l-0) l-2)) (y (mul l (rec l-0) l-2)) (y l-0)
    (x l) (x l-2) (y-0 l-1) (y-0 alpha) (y-0 chi))
  (precur (10 0))
  (gen-st (pv a l) (pv b l-0) (pv b-0 l-1))
  (facts (neq b-0 a-0) (neq a-0 b-0) (neq b a) (neq a b)
    (undisclosed l-2))
  (leads-to ((2 1) (1 0)) ((2 1) (7 0)) ((5 1) (4 0)) ((5 1) (9 0)))
  (rule fact-init-neq0 fact-resp-neq0 gen-st-ltx-disclose-0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand resp 4) (exp (gen) y-0) (10 0))
  (strand-map 0 1 2 3 4 5 6 7 8 9 10)
  (traces
    ((recv
       (hash (exp (gen) (mul y l (rec l-0) l-2)) (exp (gen) (mul x l-2))
         (exp (gen) (mul y x (rec l-0) l-2))))
      (send
        (hash (exp (gen) (mul y l (rec l-0) l-2))
          (exp (gen) (mul x l-2)) (exp (gen) (mul y x (rec l-0) l-2)))))
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-2) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l-0) l-2))
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-2))
              (exp (gen) (mul x l-2))
              (exp (gen) (mul y x (rec l-0) l-2)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-2)))
      (send
        (sig (body b (exp (gen) l-2) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-2)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x (rec l-0) l-2))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-2))
              (exp (gen) (mul x l-2))
              (exp (gen) (mul y x (rec l-0) l-2)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-2)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-2)) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-2) l-0)) (send (cat (exp (gen) l-2) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) y-0) (mul l-2 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-2 (rec y-0)))))
    ((load priv-stor-2 (cat pt-7 (pv b-0 l-1)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b-0 (exp (gen) chi)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul alpha y-0)) (exp (gen) (mul l-1 chi))
              (exp (gen) (mul chi y-0))))))))
  (label 309)
  (parent 292)
  (unrealized (0 0) (1 3) (4 2) (8 0) (10 0) (11 0))
  (comment "4 in cohort - 4 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (a b a-0 b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn)
    (y x l l-0 l-1 rndx) (beta expt) (l-2 x-0 rndx))
  (deflistener
    (hash (exp (gen) (mul y l (rec l-0) l-2)) (exp (gen) (mul x l-2))
      (exp (gen) (mul y x (rec l-0) l-2))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-2) (eta (mul y (rec l-0) l-2)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-2))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-0) (y y) (alpha (mul l (rec l-0) l-2))
    (chi (mul x (rec l-0) l-2)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-2)) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-2) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) x-0) (mul l-2 (rec x-0))))
  (defstrand init 3 (na na-0) (a a-0) (b b-0) (priv-stor priv-stor-2)
    (l l-1) (x x-0) (beta beta))
  (precedes ((1 2) (4 2)) ((2 1) (1 0)) ((2 1) (7 0)) ((3 2) (1 1))
    ((4 3) (0 0)) ((4 3) (1 3)) ((5 1) (4 0)) ((5 1) (9 0))
    ((6 1) (4 1)) ((7 2) (6 0)) ((8 1) (6 0)) ((9 2) (8 0))
    ((10 1) (8 0)) ((11 2) (10 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-2)
  (uniq-gen y x x-0)
  (absent (y (mul x (rec l-0) l-2)) (y (mul l (rec l-0) l-2)) (y l-0)
    (x l) (x l-2) (x-0 l-1) (x-0 beta))
  (precur (10 0))
  (gen-st (pv a l) (pv b l-0) (pv a-0 l-1))
  (facts (neq a-0 b-0) (neq b-0 a-0) (neq b a) (neq a b)
    (undisclosed l-2))
  (leads-to ((2 1) (1 0)) ((2 1) (7 0)) ((5 1) (4 0)) ((5 1) (9 0)))
  (rule fact-init-neq0 fact-resp-neq0 gen-st-ltx-disclose-0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand init 3) (exp (gen) x-0) (10 0))
  (strand-map 0 1 2 3 4 5 6 7 8 9 10)
  (traces
    ((recv
       (hash (exp (gen) (mul y l (rec l-0) l-2)) (exp (gen) (mul x l-2))
         (exp (gen) (mul y x (rec l-0) l-2))))
      (send
        (hash (exp (gen) (mul y l (rec l-0) l-2))
          (exp (gen) (mul x l-2)) (exp (gen) (mul y x (rec l-0) l-2)))))
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-2) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l-0) l-2))
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-2))
              (exp (gen) (mul x l-2))
              (exp (gen) (mul y x (rec l-0) l-2)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-2)))
      (send
        (sig (body b (exp (gen) l-2) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-2)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x (rec l-0) l-2))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-2))
              (exp (gen) (mul x l-2))
              (exp (gen) (mul y x (rec l-0) l-2)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-2)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-2)) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-2) l-0)) (send (cat (exp (gen) l-2) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) x-0) (mul l-2 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-2 (rec x-0)))))
    ((load priv-stor-2 (cat pt-7 (pv a-0 l-1)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0)))
      (send (cat na-0 a-0 b-0 (exp (gen) x-0)))))
  (label 310)
  (parent 292)
  (unrealized (0 0) (1 3) (4 2) (8 0) (10 0) (11 0))
  (comment "4 in cohort - 4 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (deflistener
    (hash (exp (gen) (mul y l (rec l-0) l-1)) (exp (gen) (mul x l-1))
      (exp (gen) (mul y x (rec l-0) l-1))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-1) (eta (mul y (rec l-0) l-1)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-0) (y y) (alpha (mul l (rec l-0) l-1))
    (chi (mul x (rec l-0) l-1)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (gen) l-1))
  (precedes ((1 2) (4 2)) ((2 1) (1 0)) ((2 1) (7 0)) ((3 1) (10 0))
    ((3 2) (1 1)) ((4 3) (0 0)) ((4 3) (1 3)) ((5 1) (4 0))
    ((5 1) (9 0)) ((6 1) (4 1)) ((7 2) (6 0)) ((8 1) (6 0))
    ((9 2) (8 0)) ((10 1) (8 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x (rec l-0) l-1)) (y (mul l (rec l-0) l-1)) (y l-0)
    (x l) (x l-1))
  (precur (10 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq b a) (neq a b) (undisclosed l-1))
  (leads-to ((2 1) (1 0)) ((2 1) (7 0)) ((5 1) (4 0)) ((5 1) (9 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (contracted (l-2 l-1) (w l-1)) (gen) (10 0))
  (strand-map 0 1 2 3 4 5 6 7 8 9 10)
  (traces
    ((recv
       (hash (exp (gen) (mul y l (rec l-0) l-1)) (exp (gen) (mul x l-1))
         (exp (gen) (mul y x (rec l-0) l-1))))
      (send
        (hash (exp (gen) (mul y l (rec l-0) l-1))
          (exp (gen) (mul x l-1)) (exp (gen) (mul y x (rec l-0) l-1)))))
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l-0) l-1))
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l-0) l-1)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x (rec l-0) l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l-0) l-1)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (gen) l-1)) (send (cat (gen) l-1))))
  (label 311)
  (parent 292)
  (unrealized (0 0) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y l l-0 l-1 x rndx))
  (deflistener
    (hash (exp (gen) (mul y (rec l) l-0 l-1)) (exp (gen) (mul l-1 x))
      (exp (gen) (mul y (rec l) l-1 x))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l-1) (eta (mul y (rec l) l-1)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l) (y y) (alpha (mul (rec l) l-0 l-1)) (chi (mul (rec l) l-1 x)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul (rec l) l-1)) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) l-1) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) x) (mul l-1 (rec x))))
  (precedes ((1 2) (10 0)) ((2 1) (1 0)) ((2 1) (7 0)) ((3 2) (1 1))
    ((4 3) (0 0)) ((4 3) (1 3)) ((5 1) (4 0)) ((5 1) (9 0))
    ((6 1) (4 1)) ((7 2) (6 0)) ((8 1) (6 0)) ((9 2) (8 0))
    ((10 1) (8 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul (rec l) l-0 l-1)) (y (mul (rec l) l-1 x)) (y l)
    (x l-0) (x l-1))
  (precur (10 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq b a) (neq a b) (undisclosed l-1))
  (leads-to ((2 1) (1 0)) ((2 1) (7 0)) ((5 1) (4 0)) ((5 1) (9 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 11 1 init 3) (exp (gen) x-0) (10 0))
  (strand-map 0 1 2 3 4 5 6 7 8 9 10)
  (traces
    ((recv
       (hash (exp (gen) (mul y (rec l) l-0 l-1)) (exp (gen) (mul l-1 x))
         (exp (gen) (mul y (rec l) l-1 x))))
      (send
        (hash (exp (gen) (mul y (rec l) l-0 l-1))
          (exp (gen) (mul l-1 x)) (exp (gen) (mul y (rec l) l-1 x)))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l) l-1))
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul l-1 x))
              (exp (gen) (mul y (rec l) l-1 x)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul (rec l) l-1 x))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul l-1 x))
              (exp (gen) (mul y (rec l) l-1 x)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul (rec l) l-1)) l-0))
      (send (cat (exp (gen) (mul (rec l) l-1)) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-5 "nil")) (send l-0))
    ((recv (cat (exp (gen) l-1) l)) (send (cat (exp (gen) l-1) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l))
    ((recv (cat (exp (gen) x) (mul l-1 (rec x))))
      (send (cat (exp (gen) x) (mul l-1 (rec x))))))
  (label 312)
  (parent 292)
  (unrealized (0 0) (1 3) (4 2) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (deflistener
    (hash (exp (gen) (mul y l (rec l-0) l-1)) (exp (gen) (mul x l-1))
      (exp (gen) (mul y x (rec l-0) l-1))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-1) (eta (mul y (rec l-0) l-1)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-0) (y y) (alpha (mul l (rec l-0) l-1))
    (chi (mul x (rec l-0) l-1)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) l-1) (one)))
  (precedes ((1 2) (4 2)) ((2 1) (1 0)) ((2 1) (7 0)) ((3 2) (1 1))
    ((3 2) (10 0)) ((4 3) (0 0)) ((4 3) (1 3)) ((5 1) (4 0))
    ((5 1) (9 0)) ((6 1) (4 1)) ((7 2) (6 0)) ((8 1) (6 0))
    ((9 2) (8 0)) ((10 1) (8 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x (rec l-0) l-1)) (y (mul l (rec l-0) l-1)) (y l-0)
    (x l) (x l-1))
  (precur (10 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq b a) (neq a b) (undisclosed l-1))
  (leads-to ((2 1) (1 0)) ((2 1) (7 0)) ((5 1) (4 0)) ((5 1) (9 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 11 3 ltx-gen 3) (exp (gen) l-2)
    (10 0))
  (strand-map 0 1 2 3 4 5 6 7 8 9 10)
  (traces
    ((recv
       (hash (exp (gen) (mul y l (rec l-0) l-1)) (exp (gen) (mul x l-1))
         (exp (gen) (mul y x (rec l-0) l-1))))
      (send
        (hash (exp (gen) (mul y l (rec l-0) l-1))
          (exp (gen) (mul x l-1)) (exp (gen) (mul y x (rec l-0) l-1)))))
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l-0) l-1))
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l-0) l-1)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x (rec l-0) l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l-0) l-1)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) l-1) (one)))
      (send (cat (exp (gen) l-1) (one)))))
  (label 313)
  (parent 292)
  (unrealized (0 0) (1 3) (4 2))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (deflistener
    (hash (exp (gen) (mul y (rec l) l-0 l-1)) (exp (gen) (mul x l-0))
      (exp (gen) (mul y x (rec l) l-0))))
  (defstrand init 4 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (l l-1) (x x) (beta l-0)
    (eta (mul y (rec l) l-0)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (l l) (y y) (alpha (mul (rec l) l-0 l-1))
    (chi (mul x (rec l) l-0)))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul (rec l) l-0)) l-1))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((1 2) (3 2)) ((2 2) (1 1)) ((3 3) (0 0)) ((3 3) (1 3))
    ((4 1) (3 0)) ((4 1) (8 0)) ((5 1) (3 1)) ((6 2) (5 0))
    ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0)) ((10 1) (1 0))
    ((10 1) (6 0)) ((10 2) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x (rec l) l-0)) (y (mul (rec l) l-0 l-1)) (y l)
    (x l-0) (x l-1))
  (precur (9 0))
  (gen-st (pv b l) (pv self l-1))
  (facts (neq b self) (neq self b) (undisclosed l-0))
  (leads-to ((4 1) (3 0)) ((4 1) (8 0)) ((10 1) (1 0)) ((10 1) (6 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 2 11 ltx-gen 3) (exp (gen) l-2)
    (10 0))
  (strand-map 0 1 10 2 3 4 5 6 7 8 9)
  (traces
    ((recv
       (hash (exp (gen) (mul y (rec l) l-0 l-1)) (exp (gen) (mul x l-0))
         (exp (gen) (mul y x (rec l) l-0))))
      (send
        (hash (exp (gen) (mul y (rec l) l-0 l-1))
          (exp (gen) (mul x l-0)) (exp (gen) (mul y x (rec l) l-0)))))
    ((load priv-stor-1 (cat pt-6 (pv self l-1)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l) l-0))
          (enc na nb self b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x (rec l) l-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-1 (pv b l)))
      (recv
        (sig
          (body self (exp (gen) (mul (rec l) l-0 l-1))
            (pubk "sig" self)) (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul x (rec l) l-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x (rec l) l-0)))))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b l))))
    ((recv (cat (exp (gen) (mul (rec l) l-0)) l-1))
      (send (cat (exp (gen) (mul (rec l) l-0)) l-1)))
    ((load priv-stor-1 (cat pt-6 (pv self l-1)))
      (stor priv-stor-1 (cat pt-3 "nil")) (send l-1))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-1 (pv b l)))
      (stor priv-stor-0 (cat pt-4 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
      (send (cat (exp (gen) l-1) (mul l-0 (rec l-1)))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))))
  (label 314)
  (parent 292)
  (unrealized (0 0) (1 3) (3 2) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (deflistener
    (hash (exp (gen) (mul y l l-0 (rec l-1))) (exp (gen) (mul x l-0))
      (exp (gen) (mul y x l-0 (rec l-1)))))
  (defstrand init 4 (na na) (nb nb) (a a) (b self) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul y l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b self)
    (priv-stor priv-stor-1) (l l-1) (y y) (alpha (mul l l-0 (rec l-1)))
    (chi (mul x l-0 (rec l-1))))
  (deflistener (cat (exp (gen) (mul l-0 (rec l-1))) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) l-1))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((1 2) (4 2)) ((2 1) (1 0)) ((2 1) (6 0)) ((3 2) (1 1))
    ((4 3) (0 0)) ((4 3) (1 3)) ((5 1) (4 1)) ((6 2) (5 0))
    ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0)) ((10 1) (4 0))
    ((10 1) (8 0)) ((10 2) (9 0)))
  (non-orig (privk "sig" self))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x l-0 (rec l-1))) (y (mul l l-0 (rec l-1))) (y l-1)
    (x l) (x l-0))
  (precur (9 0))
  (gen-st (pv a l) (pv self l-1))
  (facts (neq self a) (neq a self) (undisclosed l-0))
  (leads-to ((2 1) (1 0)) ((2 1) (6 0)) ((10 1) (4 0)) ((10 1) (8 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 5 11 ltx-gen 3) (exp (gen) l-2)
    (10 0))
  (strand-map 0 1 2 3 4 10 5 6 7 8 9)
  (traces
    ((recv
       (hash (exp (gen) (mul y l l-0 (rec l-1))) (exp (gen) (mul x l-0))
         (exp (gen) (mul y x l-0 (rec l-1)))))
      (send
        (hash (exp (gen) (mul y l l-0 (rec l-1)))
          (exp (gen) (mul x l-0)) (exp (gen) (mul y x l-0 (rec l-1))))))
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (send (cat na a self (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y l-0 (rec l-1)))
          (enc na nb a self
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-1 (cat pt-6 (pv self l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a self (exp (gen) (mul x l-0 (rec l-1)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a self
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((recv (cat (exp (gen) (mul l-0 (rec l-1))) l))
      (send (cat (exp (gen) (mul l-0 (rec l-1))) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) l-1)) (send (cat (exp (gen) l-0) l-1)))
    ((load priv-stor-1 (cat pt-6 (pv self l-1)))
      (stor priv-stor-1 (cat pt-4 "nil")) (send l-1))
    ((recv (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
      (send (cat (exp (gen) l-1) (mul l-0 (rec l-1)))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))))
  (label 315)
  (parent 292)
  (unrealized (0 0) (1 3) (4 2) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 ignore-2 mesg) (na nb data)
    (a b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pt-8 pval)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn)
    (y x l l-0 l-1 l-2 rndx))
  (deflistener
    (hash (exp (gen) (mul y l (rec l-0) l-1)) (exp (gen) (mul x l-1))
      (exp (gen) (mul y x (rec l-0) l-1))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-1) (eta (mul y (rec l-0) l-1)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-0) (y y) (alpha (mul l (rec l-0) l-1))
    (chi (mul x (rec l-0) l-1)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) l-2) (mul l-1 (rec l-2))))
  (defstrand ltx-gen 3 (ignore ignore-2) (self self)
    (priv-stor priv-stor-2) (l l-2))
  (precedes ((1 2) (4 2)) ((2 1) (1 0)) ((2 1) (7 0)) ((3 2) (1 1))
    ((4 3) (0 0)) ((4 3) (1 3)) ((5 1) (4 0)) ((5 1) (9 0))
    ((6 1) (4 1)) ((7 2) (6 0)) ((8 1) (6 0)) ((9 2) (8 0))
    ((10 1) (8 0)) ((11 2) (10 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1 l-2)
  (uniq-gen y x)
  (absent (y (mul x (rec l-0) l-1)) (y (mul l (rec l-0) l-1)) (y l-0)
    (x l) (x l-1))
  (precur (10 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq b a) (neq a b) (undisclosed l-1))
  (leads-to ((2 1) (1 0)) ((2 1) (7 0)) ((5 1) (4 0)) ((5 1) (9 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 3) (exp (gen) l-2) (10 0))
  (strand-map 0 1 2 3 4 5 6 7 8 9 10)
  (traces
    ((recv
       (hash (exp (gen) (mul y l (rec l-0) l-1)) (exp (gen) (mul x l-1))
         (exp (gen) (mul y x (rec l-0) l-1))))
      (send
        (hash (exp (gen) (mul y l (rec l-0) l-1))
          (exp (gen) (mul x l-1)) (exp (gen) (mul y x (rec l-0) l-1)))))
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l-0) l-1))
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l-0) l-1)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x (rec l-0) l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l-0) l-1)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) l-2) (mul l-1 (rec l-2))))
      (send (cat (exp (gen) l-2) (mul l-1 (rec l-2)))))
    ((load priv-stor-2 (cat pt-7 ignore-2))
      (stor priv-stor-2 (cat pt-8 (pv self l-2)))
      (send
        (sig (body self (exp (gen) l-2) (pubk "sig" self))
          (privk "sig" self)))))
  (label 316)
  (parent 292)
  (unrealized (0 0) (1 3) (4 2) (8 0) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (deflistener
    (hash (exp (gen) (mul y l l-0 (rec l-1))) (exp (gen) (mul x l-0))
      (exp (gen) (mul y x l-0 (rec l-1)))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul y l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-1) (y y) (alpha (mul l l-0 (rec l-1)))
    (chi (mul x l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l l-0)) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul x l-0)) l-1))
  (precedes ((1 2) (10 0)) ((2 1) (1 0)) ((2 1) (9 0)) ((3 2) (1 1))
    ((3 2) (8 0)) ((4 3) (0 0)) ((4 3) (1 3)) ((5 1) (4 0))
    ((5 1) (7 0)) ((6 1) (4 1)) ((7 2) (6 0)) ((7 2) (10 0))
    ((8 1) (6 0)) ((9 2) (8 0)) ((10 1) (4 2)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x l-0 (rec l-1))) (y (mul l l-0 (rec l-1))) (y l-1)
    (x l) (x l-0))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((2 1) (1 0)) ((2 1) (9 0)) ((5 1) (4 0)) ((5 1) (7 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 11 7 ltx-disclose 3) l-1 (10 0)
    (ch-msg priv-stor-1 (cat pt-3 (pv b l-1))))
  (strand-map 0 1 2 3 4 5 6 7 8 9 10)
  (traces
    ((recv
       (hash (exp (gen) (mul y l l-0 (rec l-1))) (exp (gen) (mul x l-0))
         (exp (gen) (mul y x l-0 (rec l-1)))))
      (send
        (hash (exp (gen) (mul y l l-0 (rec l-1)))
          (exp (gen) (mul x l-0)) (exp (gen) (mul y x l-0 (rec l-1))))))
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y l-0 (rec l-1)))
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x l-0 (rec l-1)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l l-0)) l-1))
      (send (cat (exp (gen) (mul l l-0)) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l-1))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-6 "nil")) (send l))
    ((recv (cat (exp (gen) (mul x l-0)) l-1))
      (send (cat (exp (gen) (mul x l-0)) l-1))))
  (label 317)
  (parent 296)
  (unrealized (0 0) (1 3) (10 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 rndx)
    (alpha chi expt) (y-0 l-1 rndx))
  (deflistener
    (hash (exp (gen) (mul y (rec l) l-0 l-1)) (exp (gen) (mul x l-1))
      (exp (gen) (mul y x (rec l) l-1))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l-1) (eta (mul y (rec l) l-1)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l) (y y) (alpha (mul (rec l) l-0 l-1)) (chi (mul x (rec l) l-1)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) y-0) (mul (rec y-0) l-1)))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b)
    (priv-stor priv-stor-0) (l l-1) (y y-0) (alpha alpha) (chi chi))
  (precedes ((1 2) (4 2)) ((2 1) (1 0)) ((2 1) (9 0)) ((3 1) (11 0))
    ((3 2) (1 1)) ((4 3) (0 0)) ((4 3) (1 3)) ((5 1) (4 0))
    ((5 1) (7 0)) ((6 1) (4 1)) ((7 2) (6 0)) ((8 1) (6 0))
    ((9 2) (8 0)) ((10 1) (8 0)) ((11 3) (10 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen y x y-0)
  (absent (y (mul x (rec l) l-1)) (y (mul (rec l) l-0 l-1)) (y l)
    (x l-0) (x l-1) (y-0 alpha) (y-0 chi) (y-0 l-1))
  (precur (10 0))
  (gen-st (pv a l-0) (pv b l) (pv b l-1))
  (facts (neq b a-0) (neq a-0 b) (neq b a) (neq a b) (undisclosed l-1))
  (leads-to ((2 1) (1 0)) ((2 1) (9 0)) ((3 1) (11 0)) ((5 1) (4 0))
    ((5 1) (7 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 12 3 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv b-0 l-2))) (11 0))
  (strand-map 0 1 2 3 4 5 6 7 8 9 10 11)
  (traces
    ((recv
       (hash (exp (gen) (mul y (rec l) l-0 l-1)) (exp (gen) (mul x l-1))
         (exp (gen) (mul y x (rec l) l-1))))
      (send
        (hash (exp (gen) (mul y (rec l) l-0 l-1))
          (exp (gen) (mul x l-1)) (exp (gen) (mul y x (rec l) l-1)))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l) l-1))
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l) l-1)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x (rec l) l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l) l-1)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) y-0) (mul (rec y-0) l-1)))
      (send (cat (exp (gen) y-0) (mul (rec y-0) l-1))))
    ((load priv-stor-0 (cat pt-2 (pv b l-1)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b (exp (gen) chi)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b
            (hash (exp (gen) (mul alpha y-0)) (exp (gen) (mul chi l-1))
              (exp (gen) (mul chi y-0))))))))
  (label 318)
  (parent 298)
  (unrealized (0 0) (1 3) (4 2) (8 0) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l rndx)
    (alpha chi expt) (l-0 y-0 l-1 rndx))
  (deflistener
    (hash (exp (gen) (mul y (rec l) l-0 l-1)) (exp (gen) (mul x l-0))
      (exp (gen) (mul y x (rec l) l-0))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-1) (x x) (beta l-0) (eta (mul y (rec l) l-0)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l) (y y) (alpha (mul (rec l) l-0 l-1)) (chi (mul x (rec l) l-0)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-0) l-1))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-1))
  (deflistener (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b a)
    (priv-stor priv-stor) (l l-1) (y y-0) (alpha alpha) (chi chi))
  (precedes ((1 2) (4 2)) ((2 1) (1 0)) ((2 1) (9 0)) ((2 1) (11 0))
    ((3 2) (1 1)) ((4 3) (0 0)) ((4 3) (1 3)) ((5 1) (4 0))
    ((5 1) (7 0)) ((6 1) (4 1)) ((7 2) (6 0)) ((8 1) (6 0))
    ((9 2) (8 0)) ((10 1) (8 0)) ((11 3) (10 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen y x y-0)
  (absent (y (mul x (rec l) l-0)) (y (mul (rec l) l-0 l-1)) (y l)
    (x l-0) (x l-1) (y-0 alpha) (y-0 chi) (y-0 l-1))
  (precur (10 0))
  (gen-st (pv a l-1) (pv b l))
  (facts (neq a a-0) (neq a-0 a) (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((2 1) (1 0)) ((2 1) (9 0)) ((2 1) (11 0)) ((5 1) (4 0))
    ((5 1) (7 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 12 2 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv b-0 l-2))) (11 0))
  (strand-map 0 1 2 3 4 5 6 7 8 9 10 11)
  (traces
    ((recv
       (hash (exp (gen) (mul y (rec l) l-0 l-1)) (exp (gen) (mul x l-0))
         (exp (gen) (mul y x (rec l) l-0))))
      (send
        (hash (exp (gen) (mul y (rec l) l-0 l-1))
          (exp (gen) (mul x l-0)) (exp (gen) (mul y x (rec l) l-0)))))
    ((load priv-stor (cat pt (pv a l-1)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l) l-0))
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x (rec l) l-0)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x (rec l) l-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x (rec l) l-0)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) l-1)) (send (cat (exp (gen) l-0) l-1)))
    ((load priv-stor (cat pt (pv a l-1)))
      (stor priv-stor (cat pt-6 "nil")) (send l-1))
    ((recv (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-0 (rec y-0)))))
    ((load priv-stor (cat pt (pv a l-1)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 a (exp (gen) chi)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 a
            (hash (exp (gen) (mul alpha y-0)) (exp (gen) (mul chi l-1))
              (exp (gen) (mul chi y-0))))))))
  (label 319)
  (parent 298)
  (unrealized (0 0) (1 3) (4 2) (8 0) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l rndx)
    (alpha chi expt) (l-0 y-0 l-1 rndx))
  (deflistener
    (hash (exp (gen) (mul y l l-0 (rec l-1))) (exp (gen) (mul x l-0))
      (exp (gen) (mul y x l-0 (rec l-1)))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul y l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-1) (y y) (alpha (mul l l-0 (rec l-1)))
    (chi (mul x l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l l-0)) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b)
    (priv-stor priv-stor-1) (l l-1) (y y-0) (alpha alpha) (chi chi))
  (precedes ((1 2) (4 2)) ((2 1) (1 0)) ((2 1) (9 0)) ((3 2) (1 1))
    ((4 3) (0 0)) ((4 3) (1 3)) ((5 1) (4 0)) ((5 1) (7 0))
    ((5 1) (11 0)) ((6 1) (4 1)) ((7 2) (6 0)) ((8 1) (6 0))
    ((9 2) (8 0)) ((10 1) (8 0)) ((11 3) (10 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen y x y-0)
  (absent (y (mul x l-0 (rec l-1))) (y (mul l l-0 (rec l-1))) (y l-1)
    (x l) (x l-0) (y-0 alpha) (y-0 chi) (y-0 l-1))
  (precur (10 0))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq b a-0) (neq a-0 b) (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((2 1) (1 0)) ((2 1) (9 0)) ((5 1) (4 0)) ((5 1) (7 0))
    ((5 1) (11 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 12 5 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv b-0 l-2))) (11 0))
  (strand-map 0 1 2 3 4 5 6 7 8 9 10 11)
  (traces
    ((recv
       (hash (exp (gen) (mul y l l-0 (rec l-1))) (exp (gen) (mul x l-0))
         (exp (gen) (mul y x l-0 (rec l-1)))))
      (send
        (hash (exp (gen) (mul y l l-0 (rec l-1)))
          (exp (gen) (mul x l-0)) (exp (gen) (mul y x l-0 (rec l-1))))))
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y l-0 (rec l-1)))
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x l-0 (rec l-1)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l l-0)) l-1))
      (send (cat (exp (gen) (mul l l-0)) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l-1))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-6 "nil")) (send l))
    ((recv (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-0 (rec y-0)))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b (exp (gen) chi)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b
            (hash (exp (gen) (mul alpha y-0)) (exp (gen) (mul chi l-1))
              (exp (gen) (mul chi y-0))))))))
  (label 320)
  (parent 298)
  (unrealized (0 0) (1 3) (4 2) (8 0) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 ignore-2 mesg) (na nb na-0 nb-0 data)
    (a b a-0 b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pt-8 pval)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn)
    (y x l l-0 rndx) (alpha chi expt) (l-1 y-0 l-2 rndx))
  (deflistener
    (hash (exp (gen) (mul y (rec l) l-0 l-1)) (exp (gen) (mul x l-1))
      (exp (gen) (mul y x (rec l) l-1))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l-1) (eta (mul y (rec l) l-1)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l) (y y) (alpha (mul (rec l) l-0 l-1)) (chi (mul x (rec l) l-1)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) y-0) (mul l-1 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b-0)
    (priv-stor priv-stor-2) (l l-2) (y y-0) (alpha alpha) (chi chi))
  (defstrand ltx-gen 2 (ignore ignore-2) (self b-0)
    (priv-stor priv-stor-2) (l l-2))
  (precedes ((1 2) (4 2)) ((2 1) (1 0)) ((2 1) (9 0)) ((3 2) (1 1))
    ((4 3) (0 0)) ((4 3) (1 3)) ((5 1) (4 0)) ((5 1) (7 0))
    ((6 1) (4 1)) ((7 2) (6 0)) ((8 1) (6 0)) ((9 2) (8 0))
    ((10 1) (8 0)) ((11 3) (10 0)) ((12 1) (11 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1 l-2)
  (uniq-gen y x y-0)
  (absent (y (mul x (rec l) l-1)) (y (mul (rec l) l-0 l-1)) (y l)
    (x l-0) (x l-1) (y-0 alpha) (y-0 chi) (y-0 l-2))
  (precur (10 0))
  (gen-st (pv a l-0) (pv b l) (pv b-0 l-2))
  (facts (neq b-0 a-0) (neq a-0 b-0) (neq b a) (neq a b)
    (undisclosed l-1))
  (leads-to ((2 1) (1 0)) ((2 1) (9 0)) ((5 1) (4 0)) ((5 1) (7 0))
    ((12 1) (11 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv b-0 l-2))) (11 0))
  (strand-map 0 1 2 3 4 5 6 7 8 9 10 11)
  (traces
    ((recv
       (hash (exp (gen) (mul y (rec l) l-0 l-1)) (exp (gen) (mul x l-1))
         (exp (gen) (mul y x (rec l) l-1))))
      (send
        (hash (exp (gen) (mul y (rec l) l-0 l-1))
          (exp (gen) (mul x l-1)) (exp (gen) (mul y x (rec l) l-1)))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l) l-1))
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l) l-1)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x (rec l) l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l) l-1)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) y-0) (mul l-1 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-1 (rec y-0)))))
    ((load priv-stor-2 (cat pt-7 (pv b-0 l-2)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b-0 (exp (gen) chi)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul alpha y-0)) (exp (gen) (mul chi l-2))
              (exp (gen) (mul chi y-0)))))))
    ((load priv-stor-2 (cat pt-8 ignore-2))
      (stor priv-stor-2 (cat pt-7 (pv b-0 l-2)))))
  (label 321)
  (parent 298)
  (unrealized (0 0) (1 3) (4 2) (8 0) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 rndx)
    (beta expt) (x-0 l-1 rndx))
  (deflistener
    (hash (exp (gen) (mul y (rec l) l-0 l-1)) (exp (gen) (mul x l-1))
      (exp (gen) (mul y x (rec l) l-1))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l-1) (eta (mul y (rec l) l-1)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l) (y y) (alpha (mul (rec l) l-0 l-1)) (chi (mul x (rec l) l-1)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) x-0) (mul (rec x-0) l-1)))
  (defstrand init 3 (na na-0) (a b) (b b-0) (priv-stor priv-stor-0)
    (l l-1) (x x-0) (beta beta))
  (precedes ((1 2) (4 2)) ((2 1) (1 0)) ((2 1) (9 0)) ((3 1) (11 0))
    ((3 2) (1 1)) ((4 3) (0 0)) ((4 3) (1 3)) ((5 1) (4 0))
    ((5 1) (7 0)) ((6 1) (4 1)) ((7 2) (6 0)) ((8 1) (6 0))
    ((9 2) (8 0)) ((10 1) (8 0)) ((11 2) (10 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen y x x-0)
  (absent (y (mul x (rec l) l-1)) (y (mul (rec l) l-0 l-1)) (y l)
    (x l-0) (x l-1) (x-0 beta) (x-0 l-1))
  (precur (10 0))
  (gen-st (pv a l-0) (pv b l) (pv b l-1))
  (facts (neq b b-0) (neq b-0 b) (neq b a) (neq a b) (undisclosed l-1))
  (leads-to ((2 1) (1 0)) ((2 1) (9 0)) ((3 1) (11 0)) ((5 1) (4 0))
    ((5 1) (7 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 12 3 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv a-0 l-2))) (11 0))
  (strand-map 0 1 2 3 4 5 6 7 8 9 10 11)
  (traces
    ((recv
       (hash (exp (gen) (mul y (rec l) l-0 l-1)) (exp (gen) (mul x l-1))
         (exp (gen) (mul y x (rec l) l-1))))
      (send
        (hash (exp (gen) (mul y (rec l) l-0 l-1))
          (exp (gen) (mul x l-1)) (exp (gen) (mul y x (rec l) l-1)))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l) l-1))
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l) l-1)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x (rec l) l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l) l-1)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) x-0) (mul (rec x-0) l-1)))
      (send (cat (exp (gen) x-0) (mul (rec x-0) l-1))))
    ((load priv-stor-0 (cat pt-2 (pv b l-1)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 b b-0 (exp (gen) x-0)))))
  (label 322)
  (parent 299)
  (unrealized (0 0) (1 3) (4 2) (8 0) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l rndx) (beta expt)
    (l-0 x-0 l-1 rndx))
  (deflistener
    (hash (exp (gen) (mul y (rec l) l-0 l-1)) (exp (gen) (mul x l-0))
      (exp (gen) (mul y x (rec l) l-0))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-1) (x x) (beta l-0) (eta (mul y (rec l) l-0)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l) (y y) (alpha (mul (rec l) l-0 l-1)) (chi (mul x (rec l) l-0)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-0) l-1))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-1))
  (deflistener (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
  (defstrand init 3 (na na-0) (a a) (b b-0) (priv-stor priv-stor)
    (l l-1) (x x-0) (beta beta))
  (precedes ((1 2) (4 2)) ((2 1) (1 0)) ((2 1) (9 0)) ((2 1) (11 0))
    ((3 2) (1 1)) ((4 3) (0 0)) ((4 3) (1 3)) ((5 1) (4 0))
    ((5 1) (7 0)) ((6 1) (4 1)) ((7 2) (6 0)) ((8 1) (6 0))
    ((9 2) (8 0)) ((10 1) (8 0)) ((11 2) (10 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen y x x-0)
  (absent (y (mul x (rec l) l-0)) (y (mul (rec l) l-0 l-1)) (y l)
    (x l-0) (x l-1) (x-0 beta) (x-0 l-1))
  (precur (10 0))
  (gen-st (pv a l-1) (pv b l))
  (facts (neq a b-0) (neq b-0 a) (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((2 1) (1 0)) ((2 1) (9 0)) ((2 1) (11 0)) ((5 1) (4 0))
    ((5 1) (7 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 12 2 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv a-0 l-2))) (11 0))
  (strand-map 0 1 2 3 4 5 6 7 8 9 10 11)
  (traces
    ((recv
       (hash (exp (gen) (mul y (rec l) l-0 l-1)) (exp (gen) (mul x l-0))
         (exp (gen) (mul y x (rec l) l-0))))
      (send
        (hash (exp (gen) (mul y (rec l) l-0 l-1))
          (exp (gen) (mul x l-0)) (exp (gen) (mul y x (rec l) l-0)))))
    ((load priv-stor (cat pt (pv a l-1)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l) l-0))
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x (rec l) l-0)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x (rec l) l-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x (rec l) l-0)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) l-1)) (send (cat (exp (gen) l-0) l-1)))
    ((load priv-stor (cat pt (pv a l-1)))
      (stor priv-stor (cat pt-6 "nil")) (send l-1))
    ((recv (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-0 (rec x-0)))))
    ((load priv-stor (cat pt (pv a l-1)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a b-0 (exp (gen) x-0)))))
  (label 323)
  (parent 299)
  (unrealized (0 0) (1 3) (4 2) (8 0) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l rndx) (beta expt)
    (l-0 x-0 l-1 rndx))
  (deflistener
    (hash (exp (gen) (mul y l l-0 (rec l-1))) (exp (gen) (mul x l-0))
      (exp (gen) (mul y x l-0 (rec l-1)))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul y l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-1) (y y) (alpha (mul l l-0 (rec l-1)))
    (chi (mul x l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l l-0)) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
  (defstrand init 3 (na na-0) (a b) (b b-0) (priv-stor priv-stor-1)
    (l l-1) (x x-0) (beta beta))
  (precedes ((1 2) (4 2)) ((2 1) (1 0)) ((2 1) (9 0)) ((3 2) (1 1))
    ((4 3) (0 0)) ((4 3) (1 3)) ((5 1) (4 0)) ((5 1) (7 0))
    ((5 1) (11 0)) ((6 1) (4 1)) ((7 2) (6 0)) ((8 1) (6 0))
    ((9 2) (8 0)) ((10 1) (8 0)) ((11 2) (10 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen y x x-0)
  (absent (y (mul x l-0 (rec l-1))) (y (mul l l-0 (rec l-1))) (y l-1)
    (x l) (x l-0) (x-0 beta) (x-0 l-1))
  (precur (10 0))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq b b-0) (neq b-0 b) (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((2 1) (1 0)) ((2 1) (9 0)) ((5 1) (4 0)) ((5 1) (7 0))
    ((5 1) (11 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 12 5 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv a-0 l-2))) (11 0))
  (strand-map 0 1 2 3 4 5 6 7 8 9 10 11)
  (traces
    ((recv
       (hash (exp (gen) (mul y l l-0 (rec l-1))) (exp (gen) (mul x l-0))
         (exp (gen) (mul y x l-0 (rec l-1)))))
      (send
        (hash (exp (gen) (mul y l l-0 (rec l-1)))
          (exp (gen) (mul x l-0)) (exp (gen) (mul y x l-0 (rec l-1))))))
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y l-0 (rec l-1)))
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x l-0 (rec l-1)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l l-0)) l-1))
      (send (cat (exp (gen) (mul l l-0)) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l-1))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-6 "nil")) (send l))
    ((recv (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-0 (rec x-0)))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 b b-0 (exp (gen) x-0)))))
  (label 324)
  (parent 299)
  (unrealized (0 0) (1 3) (4 2) (8 0) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 ignore-2 mesg) (na nb na-0 data)
    (a b a-0 b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pt-8 pval)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn)
    (y x l l-0 rndx) (beta expt) (l-1 x-0 l-2 rndx))
  (deflistener
    (hash (exp (gen) (mul y (rec l) l-0 l-1)) (exp (gen) (mul x l-1))
      (exp (gen) (mul y x (rec l) l-1))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l-1) (eta (mul y (rec l) l-1)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l) (y y) (alpha (mul (rec l) l-0 l-1)) (chi (mul x (rec l) l-1)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
  (defstrand init 3 (na na-0) (a a-0) (b b-0) (priv-stor priv-stor-2)
    (l l-2) (x x-0) (beta beta))
  (defstrand ltx-gen 2 (ignore ignore-2) (self a-0)
    (priv-stor priv-stor-2) (l l-2))
  (precedes ((1 2) (4 2)) ((2 1) (1 0)) ((2 1) (9 0)) ((3 2) (1 1))
    ((4 3) (0 0)) ((4 3) (1 3)) ((5 1) (4 0)) ((5 1) (7 0))
    ((6 1) (4 1)) ((7 2) (6 0)) ((8 1) (6 0)) ((9 2) (8 0))
    ((10 1) (8 0)) ((11 2) (10 0)) ((12 1) (11 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1 l-2)
  (uniq-gen y x x-0)
  (absent (y (mul x (rec l) l-1)) (y (mul (rec l) l-0 l-1)) (y l)
    (x l-0) (x l-1) (x-0 beta) (x-0 l-2))
  (precur (10 0))
  (gen-st (pv a l-0) (pv b l) (pv a-0 l-2))
  (facts (neq a-0 b-0) (neq b-0 a-0) (neq b a) (neq a b)
    (undisclosed l-1))
  (leads-to ((2 1) (1 0)) ((2 1) (9 0)) ((5 1) (4 0)) ((5 1) (7 0))
    ((12 1) (11 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv a-0 l-2))) (11 0))
  (strand-map 0 1 2 3 4 5 6 7 8 9 10 11)
  (traces
    ((recv
       (hash (exp (gen) (mul y (rec l) l-0 l-1)) (exp (gen) (mul x l-1))
         (exp (gen) (mul y x (rec l) l-1))))
      (send
        (hash (exp (gen) (mul y (rec l) l-0 l-1))
          (exp (gen) (mul x l-1)) (exp (gen) (mul y x (rec l) l-1)))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l) l-1))
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l) l-1)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x (rec l) l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l) l-1)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-1 (rec x-0)))))
    ((load priv-stor-2 (cat pt-7 (pv a-0 l-2)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a-0 b-0 (exp (gen) x-0))))
    ((load priv-stor-2 (cat pt-8 ignore-2))
      (stor priv-stor-2 (cat pt-7 (pv a-0 l-2)))))
  (label 325)
  (parent 299)
  (unrealized (0 0) (1 3) (4 2) (8 0) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (deflistener
    (hash (exp (gen) (mul y (rec l) l-0 l-1)) (exp (gen) (mul x l-1))
      (exp (gen) (mul y x (rec l) l-1))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l-1) (eta (mul y (rec l) l-1)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l) (y y) (alpha (mul (rec l) l-0 l-1)) (chi (mul x (rec l) l-1)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) l-1) (one)))
  (deflistener (cat (exp (gen) (mul x (rec l))) l-1))
  (precedes ((1 2) (11 0)) ((2 1) (1 0)) ((2 1) (9 0)) ((3 2) (1 1))
    ((3 2) (10 0)) ((4 3) (0 0)) ((4 3) (1 3)) ((5 1) (4 0))
    ((5 1) (7 0)) ((6 1) (4 1)) ((7 2) (6 0)) ((8 1) (6 0))
    ((9 2) (8 0)) ((10 1) (8 0)) ((11 1) (4 2)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x (rec l) l-1)) (y (mul (rec l) l-0 l-1)) (y l)
    (x l-0) (x l-1))
  (precur (10 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq b a) (neq a b) (undisclosed l-1))
  (leads-to ((2 1) (1 0)) ((2 1) (9 0)) ((5 1) (4 0)) ((5 1) (7 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul x (rec l))) l-1))
    (exp (gen) (mul x (rec l) l-1)) (4 2))
  (strand-map 0 1 2 3 4 5 6 7 8 9 10)
  (traces
    ((recv
       (hash (exp (gen) (mul y (rec l) l-0 l-1)) (exp (gen) (mul x l-1))
         (exp (gen) (mul y x (rec l) l-1))))
      (send
        (hash (exp (gen) (mul y (rec l) l-0 l-1))
          (exp (gen) (mul x l-1)) (exp (gen) (mul y x (rec l) l-1)))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l) l-1))
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l) l-1)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x (rec l) l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l) l-1)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) l-1) (one)))
      (send (cat (exp (gen) l-1) (one))))
    ((recv (cat (exp (gen) (mul x (rec l))) l-1))
      (send (cat (exp (gen) (mul x (rec l))) l-1))))
  (label 326)
  (parent 302)
  (unrealized (0 0) (11 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (deflistener
    (hash (exp (gen) (mul y (rec l) l-0 l-1)) (exp (gen) (mul x l-1))
      (exp (gen) (mul y x (rec l) l-1))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l-1) (eta (mul y (rec l) l-1)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l) (y y) (alpha (mul (rec l) l-0 l-1)) (chi (mul x (rec l) l-1)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) l-1) (one)))
  (deflistener (cat (exp (gen) (mul x l-1)) l))
  (precedes ((1 2) (11 0)) ((2 1) (1 0)) ((2 1) (9 0)) ((3 2) (1 1))
    ((3 2) (10 0)) ((4 3) (0 0)) ((4 3) (1 3)) ((5 1) (4 0))
    ((5 1) (7 0)) ((5 1) (11 0)) ((6 1) (4 1)) ((7 2) (6 0))
    ((8 1) (6 0)) ((9 2) (8 0)) ((10 1) (8 0)) ((11 1) (4 2)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x (rec l) l-1)) (y (mul (rec l) l-0 l-1)) (y l)
    (x l-0) (x l-1))
  (precur (10 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq b a) (neq a b) (undisclosed l-1))
  (leads-to ((2 1) (1 0)) ((2 1) (9 0)) ((5 1) (4 0)) ((5 1) (7 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) (mul x l-1)) l))
    (exp (gen) (mul x (rec l) l-1)) (4 2))
  (strand-map 0 1 2 3 4 5 6 7 8 9 10)
  (traces
    ((recv
       (hash (exp (gen) (mul y (rec l) l-0 l-1)) (exp (gen) (mul x l-1))
         (exp (gen) (mul y x (rec l) l-1))))
      (send
        (hash (exp (gen) (mul y (rec l) l-0 l-1))
          (exp (gen) (mul x l-1)) (exp (gen) (mul y x (rec l) l-1)))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l) l-1))
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l) l-1)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x (rec l) l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l) l-1)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) l-1) (one)))
      (send (cat (exp (gen) l-1) (one))))
    ((recv (cat (exp (gen) (mul x l-1)) l))
      (send (cat (exp (gen) (mul x l-1)) l))))
  (label 327)
  (parent 302)
  (seen 343)
  (seen-ops
    (343
      (operation nonce-test (added-strand ltx-disclose 3) l-1 (11 0)
        (ch-msg priv-stor-1 (cat pt-3 (pv b l-1))))
      (strand-map 0 1 2 3 4 5 6 7 8 9 10 11)))
  (unrealized (0 0) (1 3) (11 0))
  (comment "2 in cohort - 1 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (deflistener
    (hash (exp (gen) (mul y (rec l) l-0 l-1)) (exp (gen) (mul x l-1))
      (exp (gen) (mul y x (rec l) l-1))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-0) (x x) (beta l-1) (eta (mul y (rec l) l-1)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l) (y y) (alpha (mul (rec l) l-0 l-1)) (chi (mul x (rec l) l-1)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) l-1) (one)))
  (deflistener (cat (exp (gen) (mul (rec l) l-1)) x))
  (precedes ((1 2) (11 0)) ((2 1) (1 0)) ((2 1) (9 0)) ((3 2) (1 1))
    ((3 2) (10 0)) ((4 3) (0 0)) ((4 3) (1 3)) ((5 1) (4 0))
    ((5 1) (7 0)) ((6 1) (4 1)) ((7 2) (6 0)) ((8 1) (6 0))
    ((9 2) (8 0)) ((10 1) (8 0)) ((11 1) (4 2)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x (rec l) l-1)) (y (mul (rec l) l-0 l-1)) (y l)
    (x l-0) (x l-1))
  (precur (10 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq b a) (neq a b) (undisclosed l-1))
  (leads-to ((2 1) (1 0)) ((2 1) (9 0)) ((5 1) (4 0)) ((5 1) (7 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec l) l-1)) x))
    (exp (gen) (mul x (rec l) l-1)) (4 2))
  (strand-map 0 1 2 3 4 5 6 7 8 9 10)
  (traces
    ((recv
       (hash (exp (gen) (mul y (rec l) l-0 l-1)) (exp (gen) (mul x l-1))
         (exp (gen) (mul y x (rec l) l-1))))
      (send
        (hash (exp (gen) (mul y (rec l) l-0 l-1))
          (exp (gen) (mul x l-1)) (exp (gen) (mul y x (rec l) l-1)))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l) l-1))
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l) l-1)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x (rec l) l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l) l-1)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) l-1) (one)))
      (send (cat (exp (gen) l-1) (one))))
    ((recv (cat (exp (gen) (mul (rec l) l-1)) x))
      (send (cat (exp (gen) (mul (rec l) l-1)) x))))
  (label 328)
  (parent 302)
  (unrealized (0 0) (1 3) (11 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (deflistener
    (hash (exp (gen) (mul y l l-0 (rec l-1))) (exp (gen) (mul x l-0))
      (exp (gen) (mul y x l-0 (rec l-1)))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul y l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-1) (y y) (alpha (mul l l-0 (rec l-1)))
    (chi (mul x l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l-0 (rec l-1))) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul x l-0)) l-1))
  (precedes ((1 2) (10 0)) ((2 1) (1 0)) ((2 1) (7 0)) ((3 2) (1 1))
    ((3 2) (8 0)) ((4 3) (0 0)) ((4 3) (1 3)) ((5 1) (4 0))
    ((5 1) (9 0)) ((6 1) (4 1)) ((7 2) (6 0)) ((8 1) (6 0))
    ((9 2) (8 0)) ((9 2) (10 0)) ((10 1) (4 2)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x l-0 (rec l-1))) (y (mul l l-0 (rec l-1))) (y l-1)
    (x l) (x l-0))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((2 1) (1 0)) ((2 1) (7 0)) ((5 1) (4 0)) ((5 1) (9 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 11 9 ltx-disclose 3) l-1 (10 0)
    (ch-msg priv-stor-1 (cat pt-3 (pv b l-1))))
  (strand-map 0 1 2 3 4 5 6 7 8 9 10)
  (traces
    ((recv
       (hash (exp (gen) (mul y l l-0 (rec l-1))) (exp (gen) (mul x l-0))
         (exp (gen) (mul y x l-0 (rec l-1)))))
      (send
        (hash (exp (gen) (mul y l l-0 (rec l-1)))
          (exp (gen) (mul x l-0)) (exp (gen) (mul y x l-0 (rec l-1))))))
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y l-0 (rec l-1)))
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x l-0 (rec l-1)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l-0 (rec l-1))) l))
      (send (cat (exp (gen) (mul l-0 (rec l-1))) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) l-1)) (send (cat (exp (gen) l-0) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-1))
    ((recv (cat (exp (gen) (mul x l-0)) l-1))
      (send (cat (exp (gen) (mul x l-0)) l-1))))
  (label 329)
  (parent 307)
  (unrealized (0 0) (1 3) (10 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 rndx)
    (alpha chi expt) (y-0 l-1 rndx))
  (deflistener
    (hash (exp (gen) (mul y l (rec l-0) l-1)) (exp (gen) (mul x l-1))
      (exp (gen) (mul y x (rec l-0) l-1))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-1) (eta (mul y (rec l-0) l-1)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-0) (y y) (alpha (mul l (rec l-0) l-1))
    (chi (mul x (rec l-0) l-1)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) y-0) (mul (rec y-0) l-1)))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b)
    (priv-stor priv-stor-0) (l l-1) (y y-0) (alpha alpha) (chi chi))
  (precedes ((1 2) (4 2)) ((2 1) (1 0)) ((2 1) (7 0)) ((3 1) (11 0))
    ((3 2) (1 1)) ((4 3) (0 0)) ((4 3) (1 3)) ((5 1) (4 0))
    ((5 1) (9 0)) ((6 1) (4 1)) ((7 2) (6 0)) ((8 1) (6 0))
    ((9 2) (8 0)) ((10 1) (8 0)) ((11 3) (10 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen y x y-0)
  (absent (y (mul x (rec l-0) l-1)) (y (mul l (rec l-0) l-1)) (y l-0)
    (x l) (x l-1) (y-0 alpha) (y-0 chi) (y-0 l-1))
  (precur (10 0))
  (gen-st (pv a l) (pv b l-0) (pv b l-1))
  (facts (neq b a-0) (neq a-0 b) (neq b a) (neq a b) (undisclosed l-1))
  (leads-to ((2 1) (1 0)) ((2 1) (7 0)) ((3 1) (11 0)) ((5 1) (4 0))
    ((5 1) (9 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 12 3 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv b-0 l-2))) (11 0))
  (strand-map 0 1 2 3 4 5 6 7 8 9 10 11)
  (traces
    ((recv
       (hash (exp (gen) (mul y l (rec l-0) l-1)) (exp (gen) (mul x l-1))
         (exp (gen) (mul y x (rec l-0) l-1))))
      (send
        (hash (exp (gen) (mul y l (rec l-0) l-1))
          (exp (gen) (mul x l-1)) (exp (gen) (mul y x (rec l-0) l-1)))))
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l-0) l-1))
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l-0) l-1)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x (rec l-0) l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l-0) l-1)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) y-0) (mul (rec y-0) l-1)))
      (send (cat (exp (gen) y-0) (mul (rec y-0) l-1))))
    ((load priv-stor-0 (cat pt-2 (pv b l-1)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b (exp (gen) chi)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b
            (hash (exp (gen) (mul alpha y-0)) (exp (gen) (mul chi l-1))
              (exp (gen) (mul chi y-0))))))))
  (label 330)
  (parent 309)
  (unrealized (0 0) (1 3) (4 2) (8 0) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l rndx)
    (alpha chi expt) (l-0 y-0 l-1 rndx))
  (deflistener
    (hash (exp (gen) (mul y (rec l) l-0 l-1)) (exp (gen) (mul x l-0))
      (exp (gen) (mul y x (rec l) l-0))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-1) (x x) (beta l-0) (eta (mul y (rec l) l-0)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l) (y y) (alpha (mul (rec l) l-0 l-1)) (chi (mul x (rec l) l-0)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul (rec l) l-0)) l-1))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-1))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b a)
    (priv-stor priv-stor) (l l-1) (y y-0) (alpha alpha) (chi chi))
  (precedes ((1 2) (4 2)) ((2 1) (1 0)) ((2 1) (7 0)) ((2 1) (11 0))
    ((3 2) (1 1)) ((4 3) (0 0)) ((4 3) (1 3)) ((5 1) (4 0))
    ((5 1) (9 0)) ((6 1) (4 1)) ((7 2) (6 0)) ((8 1) (6 0))
    ((9 2) (8 0)) ((10 1) (8 0)) ((11 3) (10 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen y x y-0)
  (absent (y (mul x (rec l) l-0)) (y (mul (rec l) l-0 l-1)) (y l)
    (x l-0) (x l-1) (y-0 alpha) (y-0 chi) (y-0 l-1))
  (precur (10 0))
  (gen-st (pv a l-1) (pv b l))
  (facts (neq a a-0) (neq a-0 a) (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((2 1) (1 0)) ((2 1) (7 0)) ((2 1) (11 0)) ((5 1) (4 0))
    ((5 1) (9 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 12 2 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv b-0 l-2))) (11 0))
  (strand-map 0 1 2 3 4 5 6 7 8 9 10 11)
  (traces
    ((recv
       (hash (exp (gen) (mul y (rec l) l-0 l-1)) (exp (gen) (mul x l-0))
         (exp (gen) (mul y x (rec l) l-0))))
      (send
        (hash (exp (gen) (mul y (rec l) l-0 l-1))
          (exp (gen) (mul x l-0)) (exp (gen) (mul y x (rec l) l-0)))))
    ((load priv-stor (cat pt (pv a l-1)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l) l-0))
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x (rec l) l-0)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x (rec l) l-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x (rec l) l-0)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul (rec l) l-0)) l-1))
      (send (cat (exp (gen) (mul (rec l) l-0)) l-1)))
    ((load priv-stor (cat pt (pv a l-1)))
      (stor priv-stor (cat pt-5 "nil")) (send l-1))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l))
    ((recv (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-0 (rec y-0)))))
    ((load priv-stor (cat pt (pv a l-1)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 a (exp (gen) chi)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 a
            (hash (exp (gen) (mul alpha y-0)) (exp (gen) (mul chi l-1))
              (exp (gen) (mul chi y-0))))))))
  (label 331)
  (parent 309)
  (unrealized (0 0) (1 3) (4 2) (8 0) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l rndx)
    (alpha chi expt) (l-0 y-0 l-1 rndx))
  (deflistener
    (hash (exp (gen) (mul y l l-0 (rec l-1))) (exp (gen) (mul x l-0))
      (exp (gen) (mul y x l-0 (rec l-1)))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul y l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-1) (y y) (alpha (mul l l-0 (rec l-1)))
    (chi (mul x l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l-0 (rec l-1))) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b)
    (priv-stor priv-stor-1) (l l-1) (y y-0) (alpha alpha) (chi chi))
  (precedes ((1 2) (4 2)) ((2 1) (1 0)) ((2 1) (7 0)) ((3 2) (1 1))
    ((4 3) (0 0)) ((4 3) (1 3)) ((5 1) (4 0)) ((5 1) (9 0))
    ((5 1) (11 0)) ((6 1) (4 1)) ((7 2) (6 0)) ((8 1) (6 0))
    ((9 2) (8 0)) ((10 1) (8 0)) ((11 3) (10 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen y x y-0)
  (absent (y (mul x l-0 (rec l-1))) (y (mul l l-0 (rec l-1))) (y l-1)
    (x l) (x l-0) (y-0 alpha) (y-0 chi) (y-0 l-1))
  (precur (10 0))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq b a-0) (neq a-0 b) (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((2 1) (1 0)) ((2 1) (7 0)) ((5 1) (4 0)) ((5 1) (9 0))
    ((5 1) (11 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 12 5 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv b-0 l-2))) (11 0))
  (strand-map 0 1 2 3 4 5 6 7 8 9 10 11)
  (traces
    ((recv
       (hash (exp (gen) (mul y l l-0 (rec l-1))) (exp (gen) (mul x l-0))
         (exp (gen) (mul y x l-0 (rec l-1)))))
      (send
        (hash (exp (gen) (mul y l l-0 (rec l-1)))
          (exp (gen) (mul x l-0)) (exp (gen) (mul y x l-0 (rec l-1))))))
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y l-0 (rec l-1)))
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x l-0 (rec l-1)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l-0 (rec l-1))) l))
      (send (cat (exp (gen) (mul l-0 (rec l-1))) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) l-1)) (send (cat (exp (gen) l-0) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-1))
    ((recv (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-0 (rec y-0)))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b (exp (gen) chi)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b
            (hash (exp (gen) (mul alpha y-0)) (exp (gen) (mul chi l-1))
              (exp (gen) (mul chi y-0))))))))
  (label 332)
  (parent 309)
  (unrealized (0 0) (1 3) (4 2) (8 0) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 ignore-2 mesg) (na nb na-0 nb-0 data)
    (a b a-0 b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pt-8 pval)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn)
    (y x l l-0 rndx) (alpha chi expt) (l-1 y-0 l-2 rndx))
  (deflistener
    (hash (exp (gen) (mul y l (rec l-0) l-1)) (exp (gen) (mul x l-1))
      (exp (gen) (mul y x (rec l-0) l-1))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-1) (eta (mul y (rec l-0) l-1)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-0) (y y) (alpha (mul l (rec l-0) l-1))
    (chi (mul x (rec l-0) l-1)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) y-0) (mul l-1 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b-0)
    (priv-stor priv-stor-2) (l l-2) (y y-0) (alpha alpha) (chi chi))
  (defstrand ltx-gen 2 (ignore ignore-2) (self b-0)
    (priv-stor priv-stor-2) (l l-2))
  (precedes ((1 2) (4 2)) ((2 1) (1 0)) ((2 1) (7 0)) ((3 2) (1 1))
    ((4 3) (0 0)) ((4 3) (1 3)) ((5 1) (4 0)) ((5 1) (9 0))
    ((6 1) (4 1)) ((7 2) (6 0)) ((8 1) (6 0)) ((9 2) (8 0))
    ((10 1) (8 0)) ((11 3) (10 0)) ((12 1) (11 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1 l-2)
  (uniq-gen y x y-0)
  (absent (y (mul x (rec l-0) l-1)) (y (mul l (rec l-0) l-1)) (y l-0)
    (x l) (x l-1) (y-0 alpha) (y-0 chi) (y-0 l-2))
  (precur (10 0))
  (gen-st (pv a l) (pv b l-0) (pv b-0 l-2))
  (facts (neq b-0 a-0) (neq a-0 b-0) (neq b a) (neq a b)
    (undisclosed l-1))
  (leads-to ((2 1) (1 0)) ((2 1) (7 0)) ((5 1) (4 0)) ((5 1) (9 0))
    ((12 1) (11 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv b-0 l-2))) (11 0))
  (strand-map 0 1 2 3 4 5 6 7 8 9 10 11)
  (traces
    ((recv
       (hash (exp (gen) (mul y l (rec l-0) l-1)) (exp (gen) (mul x l-1))
         (exp (gen) (mul y x (rec l-0) l-1))))
      (send
        (hash (exp (gen) (mul y l (rec l-0) l-1))
          (exp (gen) (mul x l-1)) (exp (gen) (mul y x (rec l-0) l-1)))))
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l-0) l-1))
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l-0) l-1)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x (rec l-0) l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l-0) l-1)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) y-0) (mul l-1 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-1 (rec y-0)))))
    ((load priv-stor-2 (cat pt-7 (pv b-0 l-2)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b-0 (exp (gen) chi)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul alpha y-0)) (exp (gen) (mul chi l-2))
              (exp (gen) (mul chi y-0)))))))
    ((load priv-stor-2 (cat pt-8 ignore-2))
      (stor priv-stor-2 (cat pt-7 (pv b-0 l-2)))))
  (label 333)
  (parent 309)
  (unrealized (0 0) (1 3) (4 2) (8 0) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 rndx)
    (beta expt) (x-0 l-1 rndx))
  (deflistener
    (hash (exp (gen) (mul y l (rec l-0) l-1)) (exp (gen) (mul x l-1))
      (exp (gen) (mul y x (rec l-0) l-1))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-1) (eta (mul y (rec l-0) l-1)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-0) (y y) (alpha (mul l (rec l-0) l-1))
    (chi (mul x (rec l-0) l-1)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) x-0) (mul (rec x-0) l-1)))
  (defstrand init 3 (na na-0) (a b) (b b-0) (priv-stor priv-stor-0)
    (l l-1) (x x-0) (beta beta))
  (precedes ((1 2) (4 2)) ((2 1) (1 0)) ((2 1) (7 0)) ((3 1) (11 0))
    ((3 2) (1 1)) ((4 3) (0 0)) ((4 3) (1 3)) ((5 1) (4 0))
    ((5 1) (9 0)) ((6 1) (4 1)) ((7 2) (6 0)) ((8 1) (6 0))
    ((9 2) (8 0)) ((10 1) (8 0)) ((11 2) (10 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen y x x-0)
  (absent (y (mul x (rec l-0) l-1)) (y (mul l (rec l-0) l-1)) (y l-0)
    (x l) (x l-1) (x-0 beta) (x-0 l-1))
  (precur (10 0))
  (gen-st (pv a l) (pv b l-0) (pv b l-1))
  (facts (neq b b-0) (neq b-0 b) (neq b a) (neq a b) (undisclosed l-1))
  (leads-to ((2 1) (1 0)) ((2 1) (7 0)) ((3 1) (11 0)) ((5 1) (4 0))
    ((5 1) (9 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 12 3 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv a-0 l-2))) (11 0))
  (strand-map 0 1 2 3 4 5 6 7 8 9 10 11)
  (traces
    ((recv
       (hash (exp (gen) (mul y l (rec l-0) l-1)) (exp (gen) (mul x l-1))
         (exp (gen) (mul y x (rec l-0) l-1))))
      (send
        (hash (exp (gen) (mul y l (rec l-0) l-1))
          (exp (gen) (mul x l-1)) (exp (gen) (mul y x (rec l-0) l-1)))))
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l-0) l-1))
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l-0) l-1)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x (rec l-0) l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l-0) l-1)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) x-0) (mul (rec x-0) l-1)))
      (send (cat (exp (gen) x-0) (mul (rec x-0) l-1))))
    ((load priv-stor-0 (cat pt-2 (pv b l-1)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 b b-0 (exp (gen) x-0)))))
  (label 334)
  (parent 310)
  (unrealized (0 0) (1 3) (4 2) (8 0) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l rndx) (beta expt)
    (l-0 x-0 l-1 rndx))
  (deflistener
    (hash (exp (gen) (mul y (rec l) l-0 l-1)) (exp (gen) (mul x l-0))
      (exp (gen) (mul y x (rec l) l-0))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l-1) (x x) (beta l-0) (eta (mul y (rec l) l-0)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l) (y y) (alpha (mul (rec l) l-0 l-1)) (chi (mul x (rec l) l-0)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul (rec l) l-0)) l-1))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-1))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
  (defstrand init 3 (na na-0) (a a) (b b-0) (priv-stor priv-stor)
    (l l-1) (x x-0) (beta beta))
  (precedes ((1 2) (4 2)) ((2 1) (1 0)) ((2 1) (7 0)) ((2 1) (11 0))
    ((3 2) (1 1)) ((4 3) (0 0)) ((4 3) (1 3)) ((5 1) (4 0))
    ((5 1) (9 0)) ((6 1) (4 1)) ((7 2) (6 0)) ((8 1) (6 0))
    ((9 2) (8 0)) ((10 1) (8 0)) ((11 2) (10 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen y x x-0)
  (absent (y (mul x (rec l) l-0)) (y (mul (rec l) l-0 l-1)) (y l)
    (x l-0) (x l-1) (x-0 beta) (x-0 l-1))
  (precur (10 0))
  (gen-st (pv a l-1) (pv b l))
  (facts (neq a b-0) (neq b-0 a) (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((2 1) (1 0)) ((2 1) (7 0)) ((2 1) (11 0)) ((5 1) (4 0))
    ((5 1) (9 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 12 2 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv a-0 l-2))) (11 0))
  (strand-map 0 1 2 3 4 5 6 7 8 9 10 11)
  (traces
    ((recv
       (hash (exp (gen) (mul y (rec l) l-0 l-1)) (exp (gen) (mul x l-0))
         (exp (gen) (mul y x (rec l) l-0))))
      (send
        (hash (exp (gen) (mul y (rec l) l-0 l-1))
          (exp (gen) (mul x l-0)) (exp (gen) (mul y x (rec l) l-0)))))
    ((load priv-stor (cat pt (pv a l-1)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l) l-0))
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x (rec l) l-0)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x (rec l) l-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y (rec l) l-0 l-1))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x (rec l) l-0)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul (rec l) l-0)) l-1))
      (send (cat (exp (gen) (mul (rec l) l-0)) l-1)))
    ((load priv-stor (cat pt (pv a l-1)))
      (stor priv-stor (cat pt-5 "nil")) (send l-1))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l))
    ((recv (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-0 (rec x-0)))))
    ((load priv-stor (cat pt (pv a l-1)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a b-0 (exp (gen) x-0)))))
  (label 335)
  (parent 310)
  (unrealized (0 0) (1 3) (4 2) (8 0) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l rndx) (beta expt)
    (l-0 x-0 l-1 rndx))
  (deflistener
    (hash (exp (gen) (mul y l l-0 (rec l-1))) (exp (gen) (mul x l-0))
      (exp (gen) (mul y x l-0 (rec l-1)))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul y l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-1) (y y) (alpha (mul l l-0 (rec l-1)))
    (chi (mul x l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l-0 (rec l-1))) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
  (defstrand init 3 (na na-0) (a b) (b b-0) (priv-stor priv-stor-1)
    (l l-1) (x x-0) (beta beta))
  (precedes ((1 2) (4 2)) ((2 1) (1 0)) ((2 1) (7 0)) ((3 2) (1 1))
    ((4 3) (0 0)) ((4 3) (1 3)) ((5 1) (4 0)) ((5 1) (9 0))
    ((5 1) (11 0)) ((6 1) (4 1)) ((7 2) (6 0)) ((8 1) (6 0))
    ((9 2) (8 0)) ((10 1) (8 0)) ((11 2) (10 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen y x x-0)
  (absent (y (mul x l-0 (rec l-1))) (y (mul l l-0 (rec l-1))) (y l-1)
    (x l) (x l-0) (x-0 beta) (x-0 l-1))
  (precur (10 0))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq b b-0) (neq b-0 b) (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((2 1) (1 0)) ((2 1) (7 0)) ((5 1) (4 0)) ((5 1) (9 0))
    ((5 1) (11 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 12 5 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv a-0 l-2))) (11 0))
  (strand-map 0 1 2 3 4 5 6 7 8 9 10 11)
  (traces
    ((recv
       (hash (exp (gen) (mul y l l-0 (rec l-1))) (exp (gen) (mul x l-0))
         (exp (gen) (mul y x l-0 (rec l-1)))))
      (send
        (hash (exp (gen) (mul y l l-0 (rec l-1)))
          (exp (gen) (mul x l-0)) (exp (gen) (mul y x l-0 (rec l-1))))))
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y l-0 (rec l-1)))
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x l-0 (rec l-1)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l-0 (rec l-1))) l))
      (send (cat (exp (gen) (mul l-0 (rec l-1))) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) l-1)) (send (cat (exp (gen) l-0) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-1))
    ((recv (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-0 (rec x-0)))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 b b-0 (exp (gen) x-0)))))
  (label 336)
  (parent 310)
  (unrealized (0 0) (1 3) (4 2) (8 0) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 ignore-2 mesg) (na nb na-0 data)
    (a b a-0 b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pt-8 pval)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn)
    (y x l l-0 rndx) (beta expt) (l-1 x-0 l-2 rndx))
  (deflistener
    (hash (exp (gen) (mul y l (rec l-0) l-1)) (exp (gen) (mul x l-1))
      (exp (gen) (mul y x (rec l-0) l-1))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-1) (eta (mul y (rec l-0) l-1)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-0) (y y) (alpha (mul l (rec l-0) l-1))
    (chi (mul x (rec l-0) l-1)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
  (defstrand init 3 (na na-0) (a a-0) (b b-0) (priv-stor priv-stor-2)
    (l l-2) (x x-0) (beta beta))
  (defstrand ltx-gen 2 (ignore ignore-2) (self a-0)
    (priv-stor priv-stor-2) (l l-2))
  (precedes ((1 2) (4 2)) ((2 1) (1 0)) ((2 1) (7 0)) ((3 2) (1 1))
    ((4 3) (0 0)) ((4 3) (1 3)) ((5 1) (4 0)) ((5 1) (9 0))
    ((6 1) (4 1)) ((7 2) (6 0)) ((8 1) (6 0)) ((9 2) (8 0))
    ((10 1) (8 0)) ((11 2) (10 0)) ((12 1) (11 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1 l-2)
  (uniq-gen y x x-0)
  (absent (y (mul x (rec l-0) l-1)) (y (mul l (rec l-0) l-1)) (y l-0)
    (x l) (x l-1) (x-0 beta) (x-0 l-2))
  (precur (10 0))
  (gen-st (pv a l) (pv b l-0) (pv a-0 l-2))
  (facts (neq a-0 b-0) (neq b-0 a-0) (neq b a) (neq a b)
    (undisclosed l-1))
  (leads-to ((2 1) (1 0)) ((2 1) (7 0)) ((5 1) (4 0)) ((5 1) (9 0))
    ((12 1) (11 0)))
  (rule fact-init-neq0 fact-resp-neq0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv a-0 l-2))) (11 0))
  (strand-map 0 1 2 3 4 5 6 7 8 9 10 11)
  (traces
    ((recv
       (hash (exp (gen) (mul y l (rec l-0) l-1)) (exp (gen) (mul x l-1))
         (exp (gen) (mul y x (rec l-0) l-1))))
      (send
        (hash (exp (gen) (mul y l (rec l-0) l-1))
          (exp (gen) (mul x l-1)) (exp (gen) (mul y x (rec l-0) l-1)))))
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l-0) l-1))
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l-0) l-1)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x (rec l-0) l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l-0) l-1)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-1 (rec x-0)))))
    ((load priv-stor-2 (cat pt-7 (pv a-0 l-2)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a-0 b-0 (exp (gen) x-0))))
    ((load priv-stor-2 (cat pt-8 ignore-2))
      (stor priv-stor-2 (cat pt-7 (pv a-0 l-2)))))
  (label 337)
  (parent 310)
  (unrealized (0 0) (1 3) (4 2) (8 0) (10 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (deflistener
    (hash (exp (gen) (mul y l (rec l-0) l-1)) (exp (gen) (mul x l-1))
      (exp (gen) (mul y x (rec l-0) l-1))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-1) (eta (mul y (rec l-0) l-1)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-0) (y y) (alpha (mul l (rec l-0) l-1))
    (chi (mul x (rec l-0) l-1)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) l-1) (one)))
  (deflistener (cat (exp (gen) (mul x (rec l-0))) l-1))
  (precedes ((1 2) (11 0)) ((2 1) (1 0)) ((2 1) (7 0)) ((3 2) (1 1))
    ((3 2) (10 0)) ((4 3) (0 0)) ((4 3) (1 3)) ((5 1) (4 0))
    ((5 1) (9 0)) ((6 1) (4 1)) ((7 2) (6 0)) ((8 1) (6 0))
    ((9 2) (8 0)) ((10 1) (8 0)) ((11 1) (4 2)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x (rec l-0) l-1)) (y (mul l (rec l-0) l-1)) (y l-0)
    (x l) (x l-1))
  (precur (10 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq b a) (neq a b) (undisclosed l-1))
  (leads-to ((2 1) (1 0)) ((2 1) (7 0)) ((5 1) (4 0)) ((5 1) (9 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul x (rec l-0))) l-1))
    (exp (gen) (mul x (rec l-0) l-1)) (4 2))
  (strand-map 0 1 2 3 4 5 6 7 8 9 10)
  (traces
    ((recv
       (hash (exp (gen) (mul y l (rec l-0) l-1)) (exp (gen) (mul x l-1))
         (exp (gen) (mul y x (rec l-0) l-1))))
      (send
        (hash (exp (gen) (mul y l (rec l-0) l-1))
          (exp (gen) (mul x l-1)) (exp (gen) (mul y x (rec l-0) l-1)))))
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l-0) l-1))
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l-0) l-1)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x (rec l-0) l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l-0) l-1)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) l-1) (one)))
      (send (cat (exp (gen) l-1) (one))))
    ((recv (cat (exp (gen) (mul x (rec l-0))) l-1))
      (send (cat (exp (gen) (mul x (rec l-0))) l-1))))
  (label 338)
  (parent 313)
  (unrealized (0 0) (11 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (deflistener
    (hash (exp (gen) (mul y l (rec l-0) l-1)) (exp (gen) (mul x l-1))
      (exp (gen) (mul y x (rec l-0) l-1))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-1) (eta (mul y (rec l-0) l-1)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-0) (y y) (alpha (mul l (rec l-0) l-1))
    (chi (mul x (rec l-0) l-1)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) l-1) (one)))
  (deflistener (cat (exp (gen) (mul x l-1)) l-0))
  (precedes ((1 2) (11 0)) ((2 1) (1 0)) ((2 1) (7 0)) ((3 2) (1 1))
    ((3 2) (10 0)) ((4 3) (0 0)) ((4 3) (1 3)) ((5 1) (4 0))
    ((5 1) (9 0)) ((5 1) (11 0)) ((6 1) (4 1)) ((7 2) (6 0))
    ((8 1) (6 0)) ((9 2) (8 0)) ((10 1) (8 0)) ((11 1) (4 2)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x (rec l-0) l-1)) (y (mul l (rec l-0) l-1)) (y l-0)
    (x l) (x l-1))
  (precur (10 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq b a) (neq a b) (undisclosed l-1))
  (leads-to ((2 1) (1 0)) ((2 1) (7 0)) ((5 1) (4 0)) ((5 1) (9 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul x l-1)) l-0))
    (exp (gen) (mul x (rec l-0) l-1)) (4 2))
  (strand-map 0 1 2 3 4 5 6 7 8 9 10)
  (traces
    ((recv
       (hash (exp (gen) (mul y l (rec l-0) l-1)) (exp (gen) (mul x l-1))
         (exp (gen) (mul y x (rec l-0) l-1))))
      (send
        (hash (exp (gen) (mul y l (rec l-0) l-1))
          (exp (gen) (mul x l-1)) (exp (gen) (mul y x (rec l-0) l-1)))))
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l-0) l-1))
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l-0) l-1)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x (rec l-0) l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l-0) l-1)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) l-1) (one)))
      (send (cat (exp (gen) l-1) (one))))
    ((recv (cat (exp (gen) (mul x l-1)) l-0))
      (send (cat (exp (gen) (mul x l-1)) l-0))))
  (label 339)
  (parent 313)
  (seen 346)
  (seen-ops
    (346
      (operation nonce-test (added-strand ltx-disclose 3) l-1 (11 0)
        (ch-msg priv-stor-1 (cat pt-3 (pv b l-1))))
      (strand-map 0 1 2 3 4 5 6 7 8 9 10 11)))
  (unrealized (0 0) (1 3) (11 0))
  (comment "2 in cohort - 1 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (deflistener
    (hash (exp (gen) (mul y l (rec l-0) l-1)) (exp (gen) (mul x l-1))
      (exp (gen) (mul y x (rec l-0) l-1))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-1) (eta (mul y (rec l-0) l-1)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-0) (y y) (alpha (mul l (rec l-0) l-1))
    (chi (mul x (rec l-0) l-1)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) l-1) (one)))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) x))
  (precedes ((1 2) (11 0)) ((2 1) (1 0)) ((2 1) (7 0)) ((3 2) (1 1))
    ((3 2) (10 0)) ((4 3) (0 0)) ((4 3) (1 3)) ((5 1) (4 0))
    ((5 1) (9 0)) ((6 1) (4 1)) ((7 2) (6 0)) ((8 1) (6 0))
    ((9 2) (8 0)) ((10 1) (8 0)) ((11 1) (4 2)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x (rec l-0) l-1)) (y (mul l (rec l-0) l-1)) (y l-0)
    (x l) (x l-1))
  (precur (10 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq b a) (neq a b) (undisclosed l-1))
  (leads-to ((2 1) (1 0)) ((2 1) (7 0)) ((5 1) (4 0)) ((5 1) (9 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec l-0) l-1)) x))
    (exp (gen) (mul x (rec l-0) l-1)) (4 2))
  (strand-map 0 1 2 3 4 5 6 7 8 9 10)
  (traces
    ((recv
       (hash (exp (gen) (mul y l (rec l-0) l-1)) (exp (gen) (mul x l-1))
         (exp (gen) (mul y x (rec l-0) l-1))))
      (send
        (hash (exp (gen) (mul y l (rec l-0) l-1))
          (exp (gen) (mul x l-1)) (exp (gen) (mul y x (rec l-0) l-1)))))
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec l-0) l-1))
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l-0) l-1)))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x (rec l-0) l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l (rec l-0) l-1))
              (exp (gen) (mul x l-1))
              (exp (gen) (mul y x (rec l-0) l-1)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) l-1) (one)))
      (send (cat (exp (gen) l-1) (one))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) x))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) x))))
  (label 340)
  (parent 313)
  (unrealized (0 0) (1 3) (11 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (deflistener
    (hash (exp (gen) (mul y l l-0 (rec l-1))) (exp (gen) (mul x l-0))
      (exp (gen) (mul y x l-0 (rec l-1)))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul y l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-1) (y y) (alpha (mul l l-0 (rec l-1)))
    (chi (mul x l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l l-0)) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul x l-0)) l-1))
  (deflistener (cat (exp (gen) x) l-0))
  (precedes ((1 2) (11 0)) ((2 1) (1 0)) ((2 1) (9 0)) ((3 2) (1 1))
    ((3 2) (8 0)) ((4 3) (0 0)) ((4 3) (1 3)) ((5 1) (4 0))
    ((5 1) (7 0)) ((6 1) (4 1)) ((7 2) (6 0)) ((7 2) (10 0))
    ((8 1) (6 0)) ((9 2) (8 0)) ((10 1) (4 2)) ((11 1) (10 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x l-0 (rec l-1))) (y (mul l l-0 (rec l-1))) (y l-1)
    (x l) (x l-0))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((2 1) (1 0)) ((2 1) (9 0)) ((5 1) (4 0)) ((5 1) (7 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) x) l-0))
    (exp (gen) (mul x l-0)) (10 0))
  (strand-map 0 1 2 3 4 5 6 7 8 9 10)
  (traces
    ((recv
       (hash (exp (gen) (mul y l l-0 (rec l-1))) (exp (gen) (mul x l-0))
         (exp (gen) (mul y x l-0 (rec l-1)))))
      (send
        (hash (exp (gen) (mul y l l-0 (rec l-1)))
          (exp (gen) (mul x l-0)) (exp (gen) (mul y x l-0 (rec l-1))))))
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y l-0 (rec l-1)))
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x l-0 (rec l-1)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l l-0)) l-1))
      (send (cat (exp (gen) (mul l l-0)) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l-1))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-6 "nil")) (send l))
    ((recv (cat (exp (gen) (mul x l-0)) l-1))
      (send (cat (exp (gen) (mul x l-0)) l-1)))
    ((recv (cat (exp (gen) x) l-0)) (send (cat (exp (gen) x) l-0))))
  (label 341)
  (parent 317)
  (unrealized (0 0) (11 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (deflistener
    (hash (exp (gen) (mul y l l-0 (rec l-1))) (exp (gen) (mul x l-0))
      (exp (gen) (mul y x l-0 (rec l-1)))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul y l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-1) (y y) (alpha (mul l l-0 (rec l-1)))
    (chi (mul x l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l l-0)) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (mul x l-0)) l-1))
  (deflistener (cat (exp (gen) l-0) x))
  (precedes ((1 2) (11 0)) ((2 1) (1 0)) ((2 1) (9 0)) ((3 2) (1 1))
    ((3 2) (8 0)) ((4 3) (0 0)) ((4 3) (1 3)) ((5 1) (4 0))
    ((5 1) (7 0)) ((6 1) (4 1)) ((7 2) (6 0)) ((7 2) (10 0))
    ((8 1) (6 0)) ((9 2) (8 0)) ((10 1) (4 2)) ((11 1) (10 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x l-0 (rec l-1))) (y (mul l l-0 (rec l-1))) (y l-1)
    (x l) (x l-0))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((2 1) (1 0)) ((2 1) (9 0)) ((5 1) (4 0)) ((5 1) (7 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l-0) x))
    (exp (gen) (mul x l-0)) (10 0))
  (strand-map 0 1 2 3 4 5 6 7 8 9 10)
  (traces
    ((recv
       (hash (exp (gen) (mul y l l-0 (rec l-1))) (exp (gen) (mul x l-0))
         (exp (gen) (mul y x l-0 (rec l-1)))))
      (send
        (hash (exp (gen) (mul y l l-0 (rec l-1)))
          (exp (gen) (mul x l-0)) (exp (gen) (mul y x l-0 (rec l-1))))))
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y l-0 (rec l-1)))
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x l-0 (rec l-1)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l l-0)) l-1))
      (send (cat (exp (gen) (mul l l-0)) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l-1))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-6 "nil")) (send l))
    ((recv (cat (exp (gen) (mul x l-0)) l-1))
      (send (cat (exp (gen) (mul x l-0)) l-1)))
    ((recv (cat (exp (gen) l-0) x)) (send (cat (exp (gen) l-0) x))))
  (label 342)
  (parent 317)
  (unrealized (0 0) (1 3) (11 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (deflistener
    (hash (exp (gen) (mul y l l-0 (rec l-1))) (exp (gen) (mul x l-0))
      (exp (gen) (mul y x l-0 (rec l-1)))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul y l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-1) (y y) (alpha (mul l l-0 (rec l-1)))
    (chi (mul x l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l l-0)) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (deflistener (cat (exp (gen) (mul x l-0)) l-1))
  (precedes ((1 2) (11 0)) ((2 1) (1 0)) ((2 1) (9 0)) ((3 2) (1 1))
    ((3 2) (10 0)) ((4 3) (0 0)) ((4 3) (1 3)) ((5 1) (4 0))
    ((5 1) (7 0)) ((6 1) (4 1)) ((7 2) (6 0)) ((7 2) (11 0))
    ((8 1) (6 0)) ((9 2) (8 0)) ((10 1) (8 0)) ((11 1) (4 2)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x l-0 (rec l-1))) (y (mul l l-0 (rec l-1))) (y l-1)
    (x l) (x l-0))
  (precur (10 0))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((2 1) (1 0)) ((2 1) (9 0)) ((5 1) (4 0)) ((5 1) (7 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 12 7 ltx-disclose 3) l-1 (11 0)
    (ch-msg priv-stor-1 (cat pt-3 (pv b l-1))))
  (strand-map 0 1 2 3 4 5 6 7 8 9 10 11)
  (traces
    ((recv
       (hash (exp (gen) (mul y l l-0 (rec l-1))) (exp (gen) (mul x l-0))
         (exp (gen) (mul y x l-0 (rec l-1)))))
      (send
        (hash (exp (gen) (mul y l l-0 (rec l-1)))
          (exp (gen) (mul x l-0)) (exp (gen) (mul y x l-0 (rec l-1))))))
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y l-0 (rec l-1)))
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x l-0 (rec l-1)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l l-0)) l-1))
      (send (cat (exp (gen) (mul l l-0)) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l-1))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-6 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((recv (cat (exp (gen) (mul x l-0)) l-1))
      (send (cat (exp (gen) (mul x l-0)) l-1))))
  (label 343)
  (parent 327)
  (unrealized (0 0) (1 3) (11 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (deflistener
    (hash (exp (gen) (mul y l l-0 (rec l-1))) (exp (gen) (mul x l-0))
      (exp (gen) (mul y x l-0 (rec l-1)))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul y l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-1) (y y) (alpha (mul l l-0 (rec l-1)))
    (chi (mul x l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l-0 (rec l-1))) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul x l-0)) l-1))
  (deflistener (cat (exp (gen) x) l-0))
  (precedes ((1 2) (11 0)) ((2 1) (1 0)) ((2 1) (7 0)) ((3 2) (1 1))
    ((3 2) (8 0)) ((4 3) (0 0)) ((4 3) (1 3)) ((5 1) (4 0))
    ((5 1) (9 0)) ((6 1) (4 1)) ((7 2) (6 0)) ((8 1) (6 0))
    ((9 2) (8 0)) ((9 2) (10 0)) ((10 1) (4 2)) ((11 1) (10 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x l-0 (rec l-1))) (y (mul l l-0 (rec l-1))) (y l-1)
    (x l) (x l-0))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((2 1) (1 0)) ((2 1) (7 0)) ((5 1) (4 0)) ((5 1) (9 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) x) l-0))
    (exp (gen) (mul x l-0)) (10 0))
  (strand-map 0 1 2 3 4 5 6 7 8 9 10)
  (traces
    ((recv
       (hash (exp (gen) (mul y l l-0 (rec l-1))) (exp (gen) (mul x l-0))
         (exp (gen) (mul y x l-0 (rec l-1)))))
      (send
        (hash (exp (gen) (mul y l l-0 (rec l-1)))
          (exp (gen) (mul x l-0)) (exp (gen) (mul y x l-0 (rec l-1))))))
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y l-0 (rec l-1)))
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x l-0 (rec l-1)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l-0 (rec l-1))) l))
      (send (cat (exp (gen) (mul l-0 (rec l-1))) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) l-1)) (send (cat (exp (gen) l-0) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-1))
    ((recv (cat (exp (gen) (mul x l-0)) l-1))
      (send (cat (exp (gen) (mul x l-0)) l-1)))
    ((recv (cat (exp (gen) x) l-0)) (send (cat (exp (gen) x) l-0))))
  (label 344)
  (parent 329)
  (unrealized (0 0) (11 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (deflistener
    (hash (exp (gen) (mul y l l-0 (rec l-1))) (exp (gen) (mul x l-0))
      (exp (gen) (mul y x l-0 (rec l-1)))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul y l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-1) (y y) (alpha (mul l l-0 (rec l-1)))
    (chi (mul x l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l-0 (rec l-1))) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul x l-0)) l-1))
  (deflistener (cat (exp (gen) l-0) x))
  (precedes ((1 2) (11 0)) ((2 1) (1 0)) ((2 1) (7 0)) ((3 2) (1 1))
    ((3 2) (8 0)) ((4 3) (0 0)) ((4 3) (1 3)) ((5 1) (4 0))
    ((5 1) (9 0)) ((6 1) (4 1)) ((7 2) (6 0)) ((8 1) (6 0))
    ((9 2) (8 0)) ((9 2) (10 0)) ((10 1) (4 2)) ((11 1) (10 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x l-0 (rec l-1))) (y (mul l l-0 (rec l-1))) (y l-1)
    (x l) (x l-0))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((2 1) (1 0)) ((2 1) (7 0)) ((5 1) (4 0)) ((5 1) (9 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l-0) x))
    (exp (gen) (mul x l-0)) (10 0))
  (strand-map 0 1 2 3 4 5 6 7 8 9 10)
  (traces
    ((recv
       (hash (exp (gen) (mul y l l-0 (rec l-1))) (exp (gen) (mul x l-0))
         (exp (gen) (mul y x l-0 (rec l-1)))))
      (send
        (hash (exp (gen) (mul y l l-0 (rec l-1)))
          (exp (gen) (mul x l-0)) (exp (gen) (mul y x l-0 (rec l-1))))))
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y l-0 (rec l-1)))
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x l-0 (rec l-1)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l-0 (rec l-1))) l))
      (send (cat (exp (gen) (mul l-0 (rec l-1))) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) l-1)) (send (cat (exp (gen) l-0) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-1))
    ((recv (cat (exp (gen) (mul x l-0)) l-1))
      (send (cat (exp (gen) (mul x l-0)) l-1)))
    ((recv (cat (exp (gen) l-0) x)) (send (cat (exp (gen) l-0) x))))
  (label 345)
  (parent 329)
  (unrealized (0 0) (1 3) (11 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (deflistener
    (hash (exp (gen) (mul y l l-0 (rec l-1))) (exp (gen) (mul x l-0))
      (exp (gen) (mul y x l-0 (rec l-1)))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul y l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-1) (y y) (alpha (mul l l-0 (rec l-1)))
    (chi (mul x l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l-0 (rec l-1))) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) l-0) (one)))
  (deflistener (cat (exp (gen) (mul x l-0)) l-1))
  (precedes ((1 2) (11 0)) ((2 1) (1 0)) ((2 1) (7 0)) ((3 2) (1 1))
    ((3 2) (10 0)) ((4 3) (0 0)) ((4 3) (1 3)) ((5 1) (4 0))
    ((5 1) (9 0)) ((6 1) (4 1)) ((7 2) (6 0)) ((8 1) (6 0))
    ((9 2) (8 0)) ((9 2) (11 0)) ((10 1) (8 0)) ((11 1) (4 2)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x l-0 (rec l-1))) (y (mul l l-0 (rec l-1))) (y l-1)
    (x l) (x l-0))
  (precur (10 0))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((2 1) (1 0)) ((2 1) (7 0)) ((5 1) (4 0)) ((5 1) (9 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 12 9 ltx-disclose 3) l-1 (11 0)
    (ch-msg priv-stor-1 (cat pt-3 (pv b l-1))))
  (strand-map 0 1 2 3 4 5 6 7 8 9 10 11)
  (traces
    ((recv
       (hash (exp (gen) (mul y l l-0 (rec l-1))) (exp (gen) (mul x l-0))
         (exp (gen) (mul y x l-0 (rec l-1)))))
      (send
        (hash (exp (gen) (mul y l l-0 (rec l-1)))
          (exp (gen) (mul x l-0)) (exp (gen) (mul y x l-0 (rec l-1))))))
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y l-0 (rec l-1)))
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x l-0 (rec l-1)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l-0 (rec l-1))) l))
      (send (cat (exp (gen) (mul l-0 (rec l-1))) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) l-1)) (send (cat (exp (gen) l-0) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-1))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((recv (cat (exp (gen) (mul x l-0)) l-1))
      (send (cat (exp (gen) (mul x l-0)) l-1))))
  (label 346)
  (parent 339)
  (unrealized (0 0) (1 3) (11 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (deflistener
    (hash (exp (gen) (mul y l l-0 (rec l-1))) (exp (gen) (mul x l-0))
      (exp (gen) (mul y x l-0 (rec l-1)))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul y l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-1) (y y) (alpha (mul l l-0 (rec l-1)))
    (chi (mul x l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l l-0)) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (deflistener (cat (exp (gen) (mul x l-0)) l-1))
  (deflistener (cat (exp (gen) x) l-0))
  (precedes ((1 2) (12 0)) ((2 1) (1 0)) ((2 1) (9 0)) ((3 2) (1 1))
    ((3 2) (10 0)) ((4 3) (0 0)) ((4 3) (1 3)) ((5 1) (4 0))
    ((5 1) (7 0)) ((6 1) (4 1)) ((7 2) (6 0)) ((7 2) (11 0))
    ((8 1) (6 0)) ((9 2) (8 0)) ((10 1) (8 0)) ((11 1) (4 2))
    ((12 1) (11 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x l-0 (rec l-1))) (y (mul l l-0 (rec l-1))) (y l-1)
    (x l) (x l-0))
  (precur (10 0))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((2 1) (1 0)) ((2 1) (9 0)) ((5 1) (4 0)) ((5 1) (7 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) x) l-0))
    (exp (gen) (mul x l-0)) (11 0))
  (strand-map 0 1 2 3 4 5 6 7 8 9 10 11)
  (traces
    ((recv
       (hash (exp (gen) (mul y l l-0 (rec l-1))) (exp (gen) (mul x l-0))
         (exp (gen) (mul y x l-0 (rec l-1)))))
      (send
        (hash (exp (gen) (mul y l l-0 (rec l-1)))
          (exp (gen) (mul x l-0)) (exp (gen) (mul y x l-0 (rec l-1))))))
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y l-0 (rec l-1)))
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x l-0 (rec l-1)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l l-0)) l-1))
      (send (cat (exp (gen) (mul l l-0)) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l-1))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-6 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((recv (cat (exp (gen) (mul x l-0)) l-1))
      (send (cat (exp (gen) (mul x l-0)) l-1)))
    ((recv (cat (exp (gen) x) l-0)) (send (cat (exp (gen) x) l-0))))
  (label 347)
  (parent 343)
  (unrealized (0 0) (12 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (deflistener
    (hash (exp (gen) (mul y l l-0 (rec l-1))) (exp (gen) (mul x l-0))
      (exp (gen) (mul y x l-0 (rec l-1)))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul y l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-1) (y y) (alpha (mul l l-0 (rec l-1)))
    (chi (mul x l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l l-0)) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (deflistener (cat (exp (gen) (mul x l-0)) l-1))
  (deflistener (cat (exp (gen) l-0) x))
  (precedes ((1 2) (12 0)) ((2 1) (1 0)) ((2 1) (9 0)) ((3 2) (1 1))
    ((3 2) (10 0)) ((4 3) (0 0)) ((4 3) (1 3)) ((5 1) (4 0))
    ((5 1) (7 0)) ((6 1) (4 1)) ((7 2) (6 0)) ((7 2) (11 0))
    ((8 1) (6 0)) ((9 2) (8 0)) ((10 1) (8 0)) ((11 1) (4 2))
    ((12 1) (11 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x l-0 (rec l-1))) (y (mul l l-0 (rec l-1))) (y l-1)
    (x l) (x l-0))
  (precur (10 0))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((2 1) (1 0)) ((2 1) (9 0)) ((5 1) (4 0)) ((5 1) (7 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l-0) x))
    (exp (gen) (mul x l-0)) (11 0))
  (strand-map 0 1 2 3 4 5 6 7 8 9 10 11)
  (traces
    ((recv
       (hash (exp (gen) (mul y l l-0 (rec l-1))) (exp (gen) (mul x l-0))
         (exp (gen) (mul y x l-0 (rec l-1)))))
      (send
        (hash (exp (gen) (mul y l l-0 (rec l-1)))
          (exp (gen) (mul x l-0)) (exp (gen) (mul y x l-0 (rec l-1))))))
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y l-0 (rec l-1)))
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x l-0 (rec l-1)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l l-0)) l-1))
      (send (cat (exp (gen) (mul l l-0)) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l-1))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-6 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((recv (cat (exp (gen) (mul x l-0)) l-1))
      (send (cat (exp (gen) (mul x l-0)) l-1)))
    ((recv (cat (exp (gen) l-0) x)) (send (cat (exp (gen) l-0) x))))
  (label 348)
  (parent 343)
  (unrealized (0 0) (1 3) (12 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (deflistener
    (hash (exp (gen) (mul y l l-0 (rec l-1))) (exp (gen) (mul x l-0))
      (exp (gen) (mul y x l-0 (rec l-1)))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul y l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-1) (y y) (alpha (mul l l-0 (rec l-1)))
    (chi (mul x l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l-0 (rec l-1))) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) l-0) (one)))
  (deflistener (cat (exp (gen) (mul x l-0)) l-1))
  (deflistener (cat (exp (gen) x) l-0))
  (precedes ((1 2) (12 0)) ((2 1) (1 0)) ((2 1) (7 0)) ((3 2) (1 1))
    ((3 2) (10 0)) ((4 3) (0 0)) ((4 3) (1 3)) ((5 1) (4 0))
    ((5 1) (9 0)) ((6 1) (4 1)) ((7 2) (6 0)) ((8 1) (6 0))
    ((9 2) (8 0)) ((9 2) (11 0)) ((10 1) (8 0)) ((11 1) (4 2))
    ((12 1) (11 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x l-0 (rec l-1))) (y (mul l l-0 (rec l-1))) (y l-1)
    (x l) (x l-0))
  (precur (10 0))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((2 1) (1 0)) ((2 1) (7 0)) ((5 1) (4 0)) ((5 1) (9 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) x) l-0))
    (exp (gen) (mul x l-0)) (11 0))
  (strand-map 0 1 2 3 4 5 6 7 8 9 10 11)
  (traces
    ((recv
       (hash (exp (gen) (mul y l l-0 (rec l-1))) (exp (gen) (mul x l-0))
         (exp (gen) (mul y x l-0 (rec l-1)))))
      (send
        (hash (exp (gen) (mul y l l-0 (rec l-1)))
          (exp (gen) (mul x l-0)) (exp (gen) (mul y x l-0 (rec l-1))))))
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y l-0 (rec l-1)))
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x l-0 (rec l-1)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l-0 (rec l-1))) l))
      (send (cat (exp (gen) (mul l-0 (rec l-1))) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) l-1)) (send (cat (exp (gen) l-0) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-1))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((recv (cat (exp (gen) (mul x l-0)) l-1))
      (send (cat (exp (gen) (mul x l-0)) l-1)))
    ((recv (cat (exp (gen) x) l-0)) (send (cat (exp (gen) x) l-0))))
  (label 349)
  (parent 346)
  (unrealized (0 0) (12 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um3
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y x l l-0 l-1 rndx))
  (deflistener
    (hash (exp (gen) (mul y l l-0 (rec l-1))) (exp (gen) (mul x l-0))
      (exp (gen) (mul y x l-0 (rec l-1)))))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (l l) (x x) (beta l-0) (eta (mul y l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (l l-1) (y y) (alpha (mul l l-0 (rec l-1)))
    (chi (mul x l-0 (rec l-1))))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l-0 (rec l-1))) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) l-0) (one)))
  (deflistener (cat (exp (gen) (mul x l-0)) l-1))
  (deflistener (cat (exp (gen) l-0) x))
  (precedes ((1 2) (12 0)) ((2 1) (1 0)) ((2 1) (7 0)) ((3 2) (1 1))
    ((3 2) (10 0)) ((4 3) (0 0)) ((4 3) (1 3)) ((5 1) (4 0))
    ((5 1) (9 0)) ((6 1) (4 1)) ((7 2) (6 0)) ((8 1) (6 0))
    ((9 2) (8 0)) ((9 2) (11 0)) ((10 1) (8 0)) ((11 1) (4 2))
    ((12 1) (11 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y (mul x l-0 (rec l-1))) (y (mul l l-0 (rec l-1))) (y l-1)
    (x l) (x l-0))
  (precur (10 0))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq b a) (neq a b) (undisclosed l-0))
  (leads-to ((2 1) (1 0)) ((2 1) (7 0)) ((5 1) (4 0)) ((5 1) (9 0)))
  (rule fact-resp-neq0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l-0) x))
    (exp (gen) (mul x l-0)) (11 0))
  (strand-map 0 1 2 3 4 5 6 7 8 9 10 11)
  (traces
    ((recv
       (hash (exp (gen) (mul y l l-0 (rec l-1))) (exp (gen) (mul x l-0))
         (exp (gen) (mul y x l-0 (rec l-1)))))
      (send
        (hash (exp (gen) (mul y l l-0 (rec l-1)))
          (exp (gen) (mul x l-0)) (exp (gen) (mul y x l-0 (rec l-1))))))
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y l-0 (rec l-1)))
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x l-0 (rec l-1)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul y l l-0 (rec l-1)))
              (exp (gen) (mul x l-0))
              (exp (gen) (mul y x l-0 (rec l-1))))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l-0 (rec l-1))) l))
      (send (cat (exp (gen) (mul l-0 (rec l-1))) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) l-1)) (send (cat (exp (gen) l-0) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-1))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((recv (cat (exp (gen) (mul x l-0)) l-1))
      (send (cat (exp (gen) (mul x l-0)) l-1)))
    ((recv (cat (exp (gen) l-0) x)) (send (cat (exp (gen) l-0) x))))
  (label 350)
  (parent 346)
  (unrealized (0 0) (1 3) (12 0))
  (dead)
  (comment "empty cohort"))

(comment "Nothing left to do")
