(herald "DHCR: unified model (UM) original" (bound 20) (limit 12000)
  (algebra diffie-hellman))

(comment "CPSA 4.4.2")
(comment "All input read from tst/dhcr_um_exercise_resolved_bug.scm")
(comment "Step count limited to 12000")
(comment "Strand count bounded at 20")

(defprotocol dhcr-um diffie-hellman
  (defrole init
    (vars (l x rndx) (gb gy base) (a b name) (na nb data)
      (priv-stor locn))
    (trace (load priv-stor (pv a l))
      (recv (sig (body b gb (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv (cat gy (enc na nb a b (hash (exp gb l) (exp gy x)))))
      (send nb))
    (uniq-orig na)
    (uniq-gen x)
    (absent (x l))
    (gen-st (pv a l))
    (fn-of ("principal-of" (ltxa a) (ltxb b))
      ("ltx-of" (a ltxa) (b ltxb))))
  (defrole resp
    (vars (l y rndx) (ga gx base) (a b name) (na nb data)
      (priv-stor locn))
    (trace (load priv-stor (pv b l))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b gx))
      (send
        (cat (exp (gen) y)
          (enc na nb a b (hash (exp ga l) (exp gx y))))) (recv nb))
    (uniq-orig nb)
    (uniq-gen y)
    (absent (y l))
    (facts (neq gx (gen)))
    (gen-st (pv b l))
    (fn-of ("principal-of" (ltxa a) (ltxb b))
      ("ltx-of" (a ltxa) (b ltxb))))
  (defrole ltx-gen
    (vars (self name) (l rndx) (priv-stor locn) (ignore mesg))
    (trace (load priv-stor ignore) (stor priv-stor (pv self l))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    (uniq-orig l)
    (fn-of ("principal-of" (l self)) ("ltx-of" (self l))))
  (defrole ltx-disclose
    (vars (self name) (l rndx) (priv-stor locn))
    (trace (load priv-stor (pv self l)) (stor priv-stor "nil") (send l))
    (gen-st (pv self l))
    (fn-of ("principal-of" (l self)) ("ltx-of" (self l))))
  (defrule fact-resp-silly
    (forall ((z strd) (gx base))
      (implies
        (and (p "resp" z (idx 3)) (p "resp" "gx" z gx))
        (fact silly gx))))
  (defrule fact-resp-neq0
    (forall ((z strd))
      (implies
        (and (p "resp" z (idx 3)) (p "resp" "gx" z (gen)))
        (false))))
  (defrule fact-init-neq0
    (forall ((z strd))
      (implies
        (and (p "init" z (idx 4)) (p "init" "gy" z (gen)))
        (false))))
  (defrule undisclosed-not-disclosed
    (forall ((z strd) (l rndx))
      (implies
        (and (fact undisclosed l) (p "ltx-disclose" z (idx 2))
          (p "ltx-disclose" "l" z l))
        (false))))
  (defgenrule neqRl_indx
    (forall ((x indx)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_strd
    (forall ((x strd)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_mesg
    (forall ((x mesg)) (implies (fact neq x x) (false))))
  (defgenrule scissorsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (trans z2 i2)
          (leads-to z0 i0 z1 i1) (leads-to z0 i0 z2 i2))
        (and (= z1 z2) (= i1 i2)))))
  (defgenrule cakeRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (leads-to z0 i0 z1 i1)
          (leads-to z0 i0 z2 i2) (prec z1 i1 z2 i2)) (false))))
  (defgenrule no-interruption
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (leads-to z0 i0 z2 i2) (trans z1 i1)
          (same-locn z0 i0 z1 i1) (prec z0 i0 z1 i1) (prec z1 i1 z2 i2))
        (false))))
  (defgenrule shearsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (trans z2 i2)
          (leads-to z0 i0 z1 i1) (same-locn z0 i0 z2 i2)
          (prec z0 i0 z2 i2))
        (or (and (= z1 z2) (= i1 i2)) (prec z1 i1 z2 i2)))))
  (defgenrule invShearsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (same-locn z0 i0 z1 i1)
          (leads-to z1 i1 z2 i2) (prec z0 i0 z2 i2))
        (or (and (= z0 z1) (= i0 i1)) (prec z0 i0 z1 i1)))))
  (defgenrule fact-resp-neq0
    (forall ((z strd) (gx base))
      (implies (and (p "resp" z (idx 3)) (p "resp" "gx" z gx))
        (fact neq gx (gen)))))
  (defgenrule trRl_ltx-gen-at-1
    (forall ((z strd))
      (implies (p "ltx-gen" z (idx 2)) (trans z (idx 1)))))
  (defgenrule trRl_ltx-gen-at-0
    (forall ((z strd))
      (implies (p "ltx-gen" z (idx 2)) (trans z (idx 0)))))
  (defgenrule trRl_ltx-disclose-at-1
    (forall ((z strd))
      (implies (p "ltx-disclose" z (idx 2)) (trans z (idx 1)))))
  (defgenrule trRl_ltx-disclose-at-0
    (forall ((z strd))
      (implies (p "ltx-disclose" z (idx 2)) (trans z (idx 0)))))
  (defgenrule gen-st-init-0
    (forall ((z strd) (l rndx) (a name))
      (implies
        (and (p "init" z (idx 1)) (p "init" "l" z l) (p "init" "a" z a))
        (gen-st (pv a l)))))
  (defgenrule gen-st-resp-0
    (forall ((z strd) (l rndx) (b name))
      (implies
        (and (p "resp" z (idx 1)) (p "resp" "l" z l) (p "resp" "b" z b))
        (gen-st (pv b l)))))
  (defgenrule gen-st-ltx-disclose-0
    (forall ((z strd) (l rndx) (self name))
      (implies
        (and (p "ltx-disclose" z (idx 1)) (p "ltx-disclose" "l" z l)
          (p "ltx-disclose" "self" z self)) (gen-st (pv self l)))))
  (lang (sig sign) (body (tuple 3)) (pv (tuple 2))))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (pt pval) (gy base) (priv-stor locn)
    (l l-peer x rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (gb (exp (gen) l-peer))
    (gy gy) (priv-stor priv-stor) (l l) (x x))
  (non-orig (privk "sig" b))
  (uniq-orig na)
  (uniq-gen x)
  (absent (x l))
  (facts (neq a b) (undisclosed l) (undisclosed l-peer))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-peer) (pubk "sig" b))
          (privk "sig" b))) (send (cat na a b (exp (gen) x)))
      (recv
        (cat gy
          (enc na nb a b
            (hash (exp (gen) (mul l l-peer)) (exp gy x)))))))
  (label 0)
  (unrealized (0 1) (0 3))
  (origs (na (0 2)))
  (comment "Not closed under rules"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (pt pval) (gy base) (priv-stor locn)
    (l l-peer x rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (gb (exp (gen) l-peer))
    (gy gy) (priv-stor priv-stor) (l l) (x x))
  (non-orig (privk "sig" b))
  (uniq-orig na)
  (uniq-gen x)
  (absent (x l))
  (gen-st (pv a l))
  (facts (neq a b) (undisclosed l) (undisclosed l-peer))
  (rule gen-st-ltx-disclose-0)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-peer) (pubk "sig" b))
          (privk "sig" b))) (send (cat na a b (exp (gen) x)))
      (recv
        (cat gy
          (enc na nb a b
            (hash (exp (gen) (mul l l-peer)) (exp gy x)))))))
  (label 1)
  (parent 0)
  (unrealized (0 0) (0 1) (0 3))
  (origs (na (0 2)))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (a b name) (pt pt-0 pval) (gy base)
    (priv-stor locn) (l-peer x l rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (gb (exp (gen) l-peer))
    (gy gy) (priv-stor priv-stor) (l l) (x x))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (precedes ((1 1) (0 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l)
  (uniq-gen x)
  (absent (x l))
  (gen-st (pv a l))
  (facts (neq a b) (undisclosed l) (undisclosed l-peer))
  (leads-to ((1 1) (0 0)))
  (rule trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor (cat pt (pv a l))) (0 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-peer) (pubk "sig" b))
          (privk "sig" b))) (send (cat na a b (exp (gen) x)))
      (recv
        (cat gy
          (enc na nb a b
            (hash (exp (gen) (mul l-peer l)) (exp gy x))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l)))))
  (label 2)
  (parent 1)
  (unrealized (0 1) (0 3))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (gy base) (priv-stor priv-stor-0 locn)
    (x l l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (gb (exp (gen) l-0))
    (gy gy) (priv-stor priv-stor) (l l) (x x))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((1 1) (0 0)) ((2 2) (0 1)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (gen-st (pv a l))
  (facts (neq a b) (undisclosed l) (undisclosed l-0))
  (leads-to ((1 1) (0 0)))
  (rule trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation encryption-test (added-strand ltx-gen 3)
    (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)) (0 1))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat gy
          (enc na nb a b (hash (exp (gen) (mul l l-0)) (exp gy x))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))))
  (label 3)
  (parent 2)
  (unrealized (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (gy base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 l-1 x y rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (gb (exp (gen) l-0))
    (gy gy) (priv-stor priv-stor) (l l) (x x))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b)
    (ga (exp (gen) (mul l l-0 (rec l-1)))) (gx (exp gy (mul x (rec y))))
    (priv-stor priv-stor-1) (l l-1) (y y))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 2) (0 1)) ((3 3) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l) (y l-1))
  (gen-st (pv a l) (pv b l-1))
  (facts (silly (exp gy (mul x (rec y))))
    (neq (exp gy (mul x (rec y))) (gen)) (neq a b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly gen-st-ltx-disclose-0
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation encryption-test (added-strand resp 4)
    (enc na nb a b (hash (exp (gen) (mul l l-0)) (exp gy x))) (0 3))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat gy
          (enc na nb a b (hash (exp (gen) (mul l l-0)) (exp gy x))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp gy (mul x (rec y)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b (hash (exp (gen) (mul l l-0)) (exp gy x)))))))
  (label 4)
  (parent 3)
  (unrealized (3 0) (3 1) (3 2))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (gy base) (priv-stor priv-stor-0 locn)
    (x l l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (gb (exp (gen) l-0))
    (gy gy) (priv-stor priv-stor) (l l) (x x))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp gy x)))
  (precedes ((0 2) (3 0)) ((1 1) (0 0)) ((2 2) (0 1)) ((3 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (gen-st (pv a l))
  (facts (neq a b) (undisclosed l) (undisclosed l-0))
  (leads-to ((1 1) (0 0)))
  (rule trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation encryption-test
    (added-listener (hash (exp (gen) (mul l l-0)) (exp gy x)))
    (enc na nb a b (hash (exp (gen) (mul l l-0)) (exp gy x))) (0 3))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat gy
          (enc na nb a b (hash (exp (gen) (mul l l-0)) (exp gy x))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp gy x)))
      (send (hash (exp (gen) (mul l l-0)) (exp gy x)))))
  (label 5)
  (parent 3)
  (unrealized (3 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (gy base) (priv-stor priv-stor-0 locn)
    (l x y l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (gb (exp (gen) l-0))
    (gy gy) (priv-stor priv-stor) (l l) (x x))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (ga (exp (gen) l))
    (gx (exp gy (mul x (rec y)))) (priv-stor priv-stor-0) (l l-0) (y y))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (3 0)) ((2 2) (0 1))
    ((3 3) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l) (y l-0))
  (gen-st (pv a l) (pv b l-0))
  (facts (silly (exp gy (mul x (rec y))))
    (neq (exp gy (mul x (rec y))) (gen)) (neq a b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((2 1) (3 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 4 2 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv b l-1))) (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat gy
          (enc na nb a b (hash (exp (gen) (mul l l-0)) (exp gy x))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp gy (mul x (rec y)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b (hash (exp (gen) (mul l l-0)) (exp gy x)))))))
  (label 6)
  (parent 4)
  (unrealized (3 1) (3 2))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (gy base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 x y l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (gb (exp (gen) l-0))
    (gy gy) (priv-stor priv-stor) (l l) (x x))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b)
    (ga (exp (gen) (mul l l-0 (rec l-1)))) (gx (exp gy (mul x (rec y))))
    (priv-stor priv-stor-1) (l l-1) (y y))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 2) (0 1)) ((3 3) (0 3))
    ((4 1) (3 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (y l-1))
  (gen-st (pv a l) (pv b l-1))
  (facts (silly (exp gy (mul x (rec y))))
    (neq (exp gy (mul x (rec y))) (gen)) (neq a b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((4 1) (3 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv b l-1))) (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat gy
          (enc na nb a b (hash (exp (gen) (mul l l-0)) (exp gy x))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp gy (mul x (rec y)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b (hash (exp (gen) (mul l l-0)) (exp gy x))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1)))))
  (label 7)
  (parent 4)
  (unrealized (3 1) (3 2))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (gy base) (priv-stor priv-stor-0 locn)
    (x l l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (gb (exp (gen) l-0))
    (gy gy) (priv-stor priv-stor) (l l) (x x))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp gy x)))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp gy x)))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((2 2) (0 1)) ((3 1) (0 3))
    ((4 1) (3 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (gen-st (pv a l))
  (facts (neq a b) (undisclosed l) (undisclosed l-0))
  (leads-to ((1 1) (0 0)))
  (rule trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation encryption-test
    (added-listener (cat (exp (gen) (mul l l-0)) (exp gy x)))
    (hash (exp (gen) (mul l l-0)) (exp gy x)) (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat gy
          (enc na nb a b (hash (exp (gen) (mul l l-0)) (exp gy x))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp gy x)))
      (send (hash (exp (gen) (mul l l-0)) (exp gy x))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp gy x)))
      (send (cat (exp (gen) (mul l l-0)) (exp gy x)))))
  (label 8)
  (parent 5)
  (unrealized (4 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (gy base) (priv-stor priv-stor-0 locn)
    (x y l l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy gy) (priv-stor priv-stor-0) (l l-0) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp gy (mul x (rec y)))) (priv-stor priv-stor) (l l) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (0 0)) ((3 2) (2 1)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l-0) (y l))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly (exp gy (mul x (rec y))))
    (neq (exp gy (mul x (rec y))) (gen)) (neq self b) (undisclosed l-0)
    (undisclosed l))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 1 4 ltx-gen 3) (exp (gen) l-0) (3 1))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat gy
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp gy x))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp gy (mul x (rec y)))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp gy x))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 9)
  (parent 6)
  (unrealized (2 2))
  (comment "7 in cohort - 7 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (gy base) (priv-stor priv-stor-0 locn)
    (l x y l-0 rndx) (w expt))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (gb (exp (gen) l-0))
    (gy gy) (priv-stor priv-stor) (l l) (x x))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (ga (exp (gen) l))
    (gx (exp gy (mul x (rec y)))) (priv-stor priv-stor-0) (l l-0) (y y))
  (deflistener (cat (exp (gen) (mul l (rec w))) w))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (3 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 1)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l) (y l-0))
  (precur (4 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (silly (exp gy (mul x (rec y))))
    (neq (exp gy (mul x (rec y))) (gen)) (neq a b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((2 1) (3 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul l (rec w))) w)) (exp (gen) l)
    (3 1))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat gy
          (enc na nb a b (hash (exp (gen) (mul l l-0)) (exp gy x))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp gy (mul x (rec y)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b (hash (exp (gen) (mul l l-0)) (exp gy x))))))
    ((recv (cat (exp (gen) (mul l (rec w))) w))
      (send (cat (exp (gen) (mul l (rec w))) w))))
  (label 10)
  (parent 6)
  (unrealized (3 2) (4 0))
  (comment "7 in cohort - 7 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (gy base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 x y l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (gb (exp (gen) l-0))
    (gy gy) (priv-stor priv-stor) (l l) (x x))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b)
    (ga (exp (gen) (mul l l-0 (rec l-1)))) (gx (exp gy (mul x (rec y))))
    (priv-stor priv-stor-1) (l l-1) (y y))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l l-0)) l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 2) (0 1)) ((3 3) (0 3))
    ((4 1) (3 0)) ((4 1) (5 0)) ((5 1) (3 1)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (y l-1))
  (gen-st (pv a l) (pv b l-1))
  (facts (silly (exp gy (mul x (rec y))))
    (neq (exp gy (mul x (rec y))) (gen)) (neq a b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((4 1) (3 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul l l-0)) l-1))
    (exp (gen) (mul l l-0 (rec l-1))) (3 1))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat gy
          (enc na nb a b (hash (exp (gen) (mul l l-0)) (exp gy x))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp gy (mul x (rec y)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b (hash (exp (gen) (mul l l-0)) (exp gy x))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l l-0)) l-1))
      (send (cat (exp (gen) (mul l l-0)) l-1))))
  (label 11)
  (parent 7)
  (unrealized (3 2) (5 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (gy base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 x y l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (gb (exp (gen) l-0))
    (gy gy) (priv-stor priv-stor) (l l) (x x))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b)
    (ga (exp (gen) (mul l l-0 (rec l-1)))) (gx (exp gy (mul x (rec y))))
    (priv-stor priv-stor-1) (l l-1) (y y))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l (rec l-1))) l-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (5 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((5 1) (3 1)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (y l-1))
  (gen-st (pv a l) (pv b l-1))
  (facts (silly (exp gy (mul x (rec y))))
    (neq (exp gy (mul x (rec y))) (gen)) (neq a b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((4 1) (3 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul l (rec l-1))) l-0))
    (exp (gen) (mul l l-0 (rec l-1))) (3 1))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat gy
          (enc na nb a b (hash (exp (gen) (mul l l-0)) (exp gy x))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp gy (mul x (rec y)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b (hash (exp (gen) (mul l l-0)) (exp gy x))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l (rec l-1))) l-0))
      (send (cat (exp (gen) (mul l (rec l-1))) l-0))))
  (label 12)
  (parent 7)
  (unrealized (3 2) (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (gy base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 x y l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (gb (exp (gen) l-0))
    (gy gy) (priv-stor priv-stor) (l l) (x x))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b)
    (ga (exp (gen) (mul l l-0 (rec l-1)))) (gx (exp gy (mul x (rec y))))
    (priv-stor priv-stor-1) (l l-1) (y y))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l-0 (rec l-1))) l))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (5 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((5 1) (3 1)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (y l-1))
  (gen-st (pv a l) (pv b l-1))
  (facts (silly (exp gy (mul x (rec y))))
    (neq (exp gy (mul x (rec y))) (gen)) (neq a b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((4 1) (3 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul l-0 (rec l-1))) l))
    (exp (gen) (mul l l-0 (rec l-1))) (3 1))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat gy
          (enc na nb a b (hash (exp (gen) (mul l l-0)) (exp gy x))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp gy (mul x (rec y)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b (hash (exp (gen) (mul l l-0)) (exp gy x))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l-0 (rec l-1))) l))
      (send (cat (exp (gen) (mul l-0 (rec l-1))) l))))
  (label 13)
  (parent 7)
  (unrealized (3 2) (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (gy base) (priv-stor priv-stor-0 locn)
    (x l l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (gb (exp (gen) l-0))
    (gy gy) (priv-stor priv-stor) (l l) (x x))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp gy x)))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp gy x)))
  (deflistener (cat (exp (gen) l) l-0))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((2 1) (5 0)) ((2 2) (0 1))
    ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (gen-st (pv a l))
  (facts (neq a b) (undisclosed l) (undisclosed l-0))
  (leads-to ((1 1) (0 0)))
  (rule trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l) l-0))
    (exp (gen) (mul l l-0)) (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat gy
          (enc na nb a b (hash (exp (gen) (mul l l-0)) (exp gy x))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp gy x)))
      (send (hash (exp (gen) (mul l l-0)) (exp gy x))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp gy x)))
      (send (cat (exp (gen) (mul l l-0)) (exp gy x))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0))))
  (label 14)
  (parent 8)
  (unrealized (4 0) (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (gy base) (priv-stor priv-stor-0 locn)
    (x l l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (gb (exp (gen) l-0))
    (gy gy) (priv-stor priv-stor) (l l) (x x))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp gy x)))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp gy x)))
  (deflistener (cat (exp (gen) l-0) l))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((1 1) (5 0)) ((2 2) (0 1))
    ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l))
  (gen-st (pv a l))
  (facts (neq a b) (undisclosed l) (undisclosed l-0))
  (leads-to ((1 1) (0 0)))
  (rule trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l-0) l))
    (exp (gen) (mul l l-0)) (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat gy
          (enc na nb a b (hash (exp (gen) (mul l l-0)) (exp gy x))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp gy x)))
      (send (hash (exp (gen) (mul l l-0)) (exp gy x))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp gy x)))
      (send (cat (exp (gen) (mul l l-0)) (exp gy x))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l))))
  (label 15)
  (parent 8)
  (unrealized (4 0) (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data)
    (b self a b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pval) (ga gx base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y l l-0 l-1 y-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y y-0))) (priv-stor priv-stor-0) (l l-0)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) y-0)) (priv-stor priv-stor) (l l) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b-0) (ga ga) (gx gx)
    (priv-stor priv-stor-1) (l l-1) (y y-0))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (0 0)) ((3 2) (2 1)) ((4 3) (2 2)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen x y y-0)
  (absent (x l-0) (y l) (y-0 l-1))
  (gen-st (pv b l) (pv self l-0) (pv b-0 l-1))
  (facts (silly gx) (silly (exp (gen) y-0)) (neq gx (gen))
    (neq (exp (gen) y-0) (gen)) (neq self b) (undisclosed l-0)
    (undisclosed l))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly gen-st-ltx-disclose-0
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand resp 4) (exp (gen) y-0) (2 2))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y y-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y y-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) y-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y y-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-1 (cat pt-3 (pv b-0 l-1)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b-0 gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a b-0 (hash (exp ga l-1) (exp gx y-0)))))))
  (label 16)
  (parent 9)
  (unrealized (0 3) (4 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (b self a b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (gb base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y l l-0 l-1 x-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y x-0))) (priv-stor priv-stor-0) (l l-0)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) x-0)) (priv-stor priv-stor) (l l) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand init 3 (na na-0) (a a) (b b-0) (gb gb)
    (priv-stor priv-stor-1) (l l-1) (x x-0))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (0 0)) ((3 2) (2 1)) ((4 2) (2 2)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen x y x-0)
  (absent (x l-0) (y l) (x-0 l-1))
  (gen-st (pv b l) (pv self l-0) (pv a l-1))
  (facts (silly (exp (gen) x-0)) (neq (exp (gen) x-0) (gen))
    (neq self b) (undisclosed l-0) (undisclosed l))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly gen-st-ltx-disclose-0
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand init 3) (exp (gen) x-0) (2 2))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y x-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-1 (cat pt-3 (pv a l-1)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 a b-0 (exp (gen) x-0)))))
  (label 17)
  (parent 9)
  (unrealized (0 3) (4 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (y l l-0 x rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor-0) (l l-0) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) x)) (priv-stor priv-stor) (l l) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (0 0)) ((3 2) (2 1)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen y x)
  (absent (y l) (x l-0))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly (exp (gen) x)) (neq (exp (gen) x) (gen)) (neq self b)
    (undisclosed l-0) (undisclosed l))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 4 0 init 3) (exp (gen) x-0) (2 2))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 18)
  (parent 9)
  (realized)
  (shape)
  (maps
    ((0)
      ((a self) (b b) (l l-0) (l-peer l) (x x) (gy (exp (gen) y))
        (na na) (nb nb) (priv-stor priv-stor-0))))
  (origs (na (0 2)) (l-0 (3 1)) (pt-2 (3 1)) (l (1 1)) (pt-0 (1 1))
    (nb (2 3))))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (x y l l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y l-0))) (priv-stor priv-stor-0) (l l-0)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) l-0)) (priv-stor priv-stor) (l l) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (0 0)) ((3 2) (2 1)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l-0) (y l))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly (exp (gen) l-0)) (neq (exp (gen) l-0) (gen))
    (neq self b) (undisclosed l-0) (undisclosed l))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 4 3 ltx-gen 3) (exp (gen) l-1) (2 2))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y l-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) l-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 19)
  (parent 9)
  (unrealized (0 3))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (x y l l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul (rec x) y l-0))) (priv-stor priv-stor-0) (l l)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) l-0)) (priv-stor priv-stor) (l l-0) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (0 0)) ((3 2) (2 1)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l) (y l-0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) l-0)) (neq (exp (gen) l-0) (gen))
    (neq self b) (undisclosed l) (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 4 1 ltx-gen 3) (exp (gen) l-1) (2 2))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y l-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) l-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))))
  (label 20)
  (parent 9)
  (unrealized (0 3))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data)
    (b self self-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y l l-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y l-1))) (priv-stor priv-stor-0) (l l-0)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) l-1)) (priv-stor priv-stor) (l l) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self-0)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (0 0)) ((3 2) (2 1)) ((4 2) (2 2)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l-0) (y l))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly (exp (gen) l-1)) (neq (exp (gen) l-1) (gen))
    (neq self b) (undisclosed l-0) (undisclosed l))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 3) (exp (gen) l-1) (2 2))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y l-1))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-1)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) l-1)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-1)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-1 (cat pt-3 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv self-0 l-1)))
      (send
        (sig (body self-0 (exp (gen) l-1) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 21)
  (parent 9)
  (unrealized (0 3))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (gy base) (priv-stor priv-stor-0 locn)
    (x y l l-0 rndx) (w expt))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy gy) (priv-stor priv-stor-0) (l l-0) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp gy (mul x (rec y)))) (priv-stor priv-stor) (l l) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp gy (mul x (rec y) (rec w))) w))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (2 2)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l-0) (y l))
  (precur (4 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly (exp gy (mul x (rec y))))
    (neq (exp gy (mul x (rec y))) (gen)) (neq self b) (undisclosed l-0)
    (undisclosed l))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp gy (mul x (rec y) (rec w))) w))
    (exp gy (mul x (rec y))) (2 2))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat gy
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp gy x))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp gy (mul x (rec y)))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp gy x))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp gy (mul x (rec y) (rec w))) w))
      (send (cat (exp gy (mul x (rec y) (rec w))) w))))
  (label 22)
  (parent 9)
  (unrealized (4 0))
  (comment "7 in cohort - 7 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (a b a-0 b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (gy gb base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y l l-0 l-1 x-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (gb (exp (gen) l))
    (gy gy) (priv-stor priv-stor) (l l-1) (x x))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (ga (exp (gen) l-1))
    (gx (exp gy (mul x (rec y)))) (priv-stor priv-stor-0) (l l) (y y))
  (deflistener (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
  (defstrand init 3 (na na-0) (a a-0) (b b-0) (gb gb)
    (priv-stor priv-stor-1) (l l-0) (x x-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (3 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 1)) ((5 2) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-1)
  (uniq-gen x y x-0)
  (absent (x l-1) (y l) (x-0 l-0))
  (precur (4 0))
  (gen-st (pv a l-1) (pv b l) (pv a-0 l-0))
  (facts (silly (exp gy (mul x (rec y))))
    (neq (exp gy (mul x (rec y))) (gen)) (neq a b) (undisclosed l-1)
    (undisclosed l))
  (leads-to ((1 1) (0 0)) ((2 1) (3 0)))
  (rule fact-resp-neq0 fact-resp-silly gen-st-ltx-disclose-0
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand init 3) (exp (gen) x-0) (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l-1)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat gy
          (enc na nb a b (hash (exp (gen) (mul l l-1)) (exp gy x))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (recv
        (sig (body a (exp (gen) l-1) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp gy (mul x (rec y)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b (hash (exp (gen) (mul l l-1)) (exp gy x))))))
    ((recv (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-1 (rec x-0)))))
    ((load priv-stor-1 (cat pt-3 (pv a-0 l-0)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 a-0 b-0 (exp (gen) x-0)))))
  (label 23)
  (parent 10)
  (unrealized (3 1) (3 2) (4 0) (5 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (gy base) (priv-stor priv-stor-0 locn)
    (y l l-0 x rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (gb (exp (gen) l))
    (gy gy) (priv-stor priv-stor) (l l-0) (x x))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (ga (exp (gen) l-0))
    (gx (exp gy (mul (rec y) x))) (priv-stor priv-stor-0) (l l) (y y))
  (deflistener (cat (exp (gen) x) (mul l-0 (rec x))))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((2 1) (3 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 1)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen y x)
  (absent (y l) (x l-0))
  (precur (4 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (silly (exp gy (mul (rec y) x)))
    (neq (exp gy (mul (rec y) x)) (gen)) (neq a b) (undisclosed l-0)
    (undisclosed l))
  (leads-to ((1 1) (0 0)) ((2 1) (3 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 5 0 init 3) (exp (gen) x-0) (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat gy
          (enc na nb a b (hash (exp (gen) (mul l l-0)) (exp gy x))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp gy (mul (rec y) x))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b (hash (exp (gen) (mul l l-0)) (exp gy x))))))
    ((recv (cat (exp (gen) x) (mul l-0 (rec x))))
      (send (cat (exp (gen) x) (mul l-0 (rec x))))))
  (label 24)
  (parent 10)
  (unrealized (3 1) (3 2) (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (gy base) (priv-stor priv-stor-0 locn)
    (x y l l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (gb (exp (gen) l))
    (gy gy) (priv-stor priv-stor) (l l-0) (x x))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (ga (exp (gen) l-0))
    (gx (exp gy (mul x (rec y)))) (priv-stor priv-stor-0) (l l) (y y))
  (deflistener (cat (gen) l-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (4 0)) ((2 1) (3 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 1)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l-0) (y l))
  (precur (4 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (silly (exp gy (mul x (rec y))))
    (neq (exp gy (mul x (rec y))) (gen)) (neq a b) (undisclosed l-0)
    (undisclosed l))
  (leads-to ((1 1) (0 0)) ((2 1) (3 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (contracted (l-1 l-0) (w l-0)) (gen) (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat gy
          (enc na nb a b (hash (exp (gen) (mul l l-0)) (exp gy x))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp gy (mul x (rec y)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b (hash (exp (gen) (mul l l-0)) (exp gy x))))))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0))))
  (label 25)
  (parent 10)
  (unrealized (3 2) (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (gy base) (priv-stor priv-stor-0 locn)
    (x y l l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy gy) (priv-stor priv-stor-0) (l l-0) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp gy (mul x (rec y)))) (priv-stor priv-stor) (l l) (y y))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l-0) (y l))
  (precur (3 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly (exp gy (mul x (rec y))))
    (neq (exp gy (mul x (rec y))) (gen)) (neq self b) (undisclosed l-0)
    (undisclosed l))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 1 5 ltx-gen 3) (exp (gen) l-1) (4 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat gy
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp gy x))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp gy (mul x (rec y)))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp gy x))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 26)
  (parent 10)
  (unrealized (2 2))
  (comment "7 in cohort - 7 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (a b a-0 b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (gy ga gx base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y l l-0 l-1 y-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (gb (exp (gen) l))
    (gy gy) (priv-stor priv-stor) (l l-1) (x x))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (ga (exp (gen) l-1))
    (gx (exp gy (mul x (rec y)))) (priv-stor priv-stor-0) (l l) (y y))
  (deflistener (cat (exp (gen) y-0) (mul l-1 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b-0) (ga ga) (gx gx)
    (priv-stor priv-stor-1) (l l-0) (y y-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (3 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 1)) ((5 3) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-1)
  (uniq-gen x y y-0)
  (absent (x l-1) (y l) (y-0 l-0))
  (precur (4 0))
  (gen-st (pv a l-1) (pv b l) (pv b-0 l-0))
  (facts (silly gx) (silly (exp gy (mul x (rec y)))) (neq gx (gen))
    (neq (exp gy (mul x (rec y))) (gen)) (neq a b) (undisclosed l-1)
    (undisclosed l))
  (leads-to ((1 1) (0 0)) ((2 1) (3 0)))
  (rule fact-resp-neq0 fact-resp-silly gen-st-ltx-disclose-0
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand resp 4) (exp (gen) y-0) (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l-1)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat gy
          (enc na nb a b (hash (exp (gen) (mul l l-1)) (exp gy x))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (recv
        (sig (body a (exp (gen) l-1) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp gy (mul x (rec y)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b (hash (exp (gen) (mul l l-1)) (exp gy x))))))
    ((recv (cat (exp (gen) y-0) (mul l-1 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-1 (rec y-0)))))
    ((load priv-stor-1 (cat pt-3 (pv b-0 l-0)))
      (recv (sig (body a-0 ga (pubk "sig" a-0)) (privk "sig" a-0)))
      (recv (cat na-0 a-0 b-0 gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b-0 (hash (exp ga l-0) (exp gx y-0)))))))
  (label 27)
  (parent 10)
  (unrealized (3 1) (3 2) (4 0) (5 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (gy base) (priv-stor priv-stor-0 locn)
    (x y l l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (gb (exp (gen) l-0))
    (gy gy) (priv-stor priv-stor) (l l) (x x))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (ga (exp (gen) l))
    (gx (exp gy (mul x (rec y)))) (priv-stor priv-stor-0) (l l-0) (y y))
  (deflistener (cat (exp (gen) l-0) (mul l (rec l-0))))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (3 0)) ((2 2) (0 1))
    ((2 2) (4 0)) ((3 3) (0 3)) ((4 1) (3 1)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l) (y l-0))
  (precur (4 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (silly (exp gy (mul x (rec y))))
    (neq (exp gy (mul x (rec y))) (gen)) (neq a b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((2 1) (3 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 5 2 ltx-gen 3) (exp (gen) l-1) (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat gy
          (enc na nb a b (hash (exp (gen) (mul l l-0)) (exp gy x))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp gy (mul x (rec y)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b (hash (exp (gen) (mul l l-0)) (exp gy x))))))
    ((recv (cat (exp (gen) l-0) (mul l (rec l-0))))
      (send (cat (exp (gen) l-0) (mul l (rec l-0))))))
  (label 28)
  (parent 10)
  (unrealized (3 1) (3 2) (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (gy base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y l l-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (gb (exp (gen) l))
    (gy gy) (priv-stor priv-stor) (l l-0) (x x))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (ga (exp (gen) l-0))
    (gx (exp gy (mul x (rec y)))) (priv-stor priv-stor-0) (l l) (y y))
  (deflistener (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (3 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 1)) ((5 2) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l-0) (y l))
  (precur (4 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (silly (exp gy (mul x (rec y))))
    (neq (exp gy (mul x (rec y))) (gen)) (neq a b) (undisclosed l-0)
    (undisclosed l))
  (leads-to ((1 1) (0 0)) ((2 1) (3 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 3) (exp (gen) l-1) (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat gy
          (enc na nb a b (hash (exp (gen) (mul l l-0)) (exp gy x))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp gy (mul x (rec y)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b (hash (exp (gen) (mul l l-0)) (exp gy x))))))
    ((recv (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
      (send (cat (exp (gen) l-1) (mul l-0 (rec l-1)))))
    ((load priv-stor-1 (cat pt-3 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))))
  (label 29)
  (parent 10)
  (unrealized (3 1) (3 2) (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval) (gy base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 x y l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (gb (exp (gen) l-0))
    (gy gy) (priv-stor priv-stor) (l l) (x x))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b)
    (ga (exp (gen) (mul l l-0 (rec l-1)))) (gx (exp gy (mul x (rec y))))
    (priv-stor priv-stor-1) (l l-1) (y y))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l l-0)) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 2) (0 1)) ((3 3) (0 3))
    ((4 1) (3 0)) ((4 1) (6 0)) ((5 1) (3 1)) ((6 2) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (y l-1))
  (gen-st (pv a l) (pv b l-1))
  (facts (silly (exp gy (mul x (rec y))))
    (neq (exp gy (mul x (rec y))) (gen)) (neq a b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-disclose 3) l-1 (5 0)
    (ch-msg priv-stor-1 (cat pt-3 (pv b l-1))))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat gy
          (enc na nb a b (hash (exp (gen) (mul l l-0)) (exp gy x))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp gy (mul x (rec y)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b (hash (exp (gen) (mul l l-0)) (exp gy x))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l l-0)) l-1))
      (send (cat (exp (gen) (mul l l-0)) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l-1)))
  (label 30)
  (parent 11)
  (unrealized (3 2) (5 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (b self a name)
    (pt pt-0 pt-1 pt-2 pval) (ga gx base) (priv-stor priv-stor-0 locn)
    (x y l y-0 l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul (rec x) y y-0))) (priv-stor priv-stor-0) (l l)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) y-0)) (priv-stor priv-stor) (l l-0) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b) (ga ga) (gx gx)
    (priv-stor priv-stor) (l l-0) (y y-0))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 1) (4 0)) ((1 2) (0 1))
    ((2 3) (0 3)) ((3 1) (0 0)) ((3 2) (2 1)) ((4 3) (2 2)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen x y y-0)
  (absent (x l) (y l-0) (y-0 l-0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly gx) (silly (exp (gen) y-0)) (neq gx (gen))
    (neq (exp (gen) y-0) (gen)) (neq self b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((1 1) (4 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 5 1 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv b-0 l-1))) (4 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y y-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y y-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) y-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y y-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a b (hash (exp ga l-0) (exp gx y-0)))))))
  (label 31)
  (parent 16)
  (unrealized (0 3))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (b self a name)
    (pt pt-0 pt-1 pt-2 pval) (ga gx base) (priv-stor priv-stor-0 locn)
    (x y l y-0 l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y y-0))) (priv-stor priv-stor-0) (l l-0)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) y-0)) (priv-stor priv-stor) (l l) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b self) (ga ga) (gx gx)
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (0 0)) ((3 1) (4 0)) ((3 2) (2 1)) ((4 3) (2 2)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen x y y-0)
  (absent (x l-0) (y l) (y-0 l-0))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly gx) (silly (exp (gen) y-0)) (neq gx (gen))
    (neq (exp (gen) y-0) (gen)) (neq self b) (undisclosed l-0)
    (undisclosed l))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)) ((3 1) (4 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 5 3 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv b-0 l-1))) (4 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y y-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y y-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) y-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y y-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a self gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a self (hash (exp ga l-0) (exp gx y-0)))))))
  (label 32)
  (parent 16)
  (unrealized (0 3))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (b self a b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (ga gx base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y l l-0 y-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y y-0))) (priv-stor priv-stor-0) (l l-0)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) y-0)) (priv-stor priv-stor) (l l) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b-0) (ga ga) (gx gx)
    (priv-stor priv-stor-1) (l l-1) (y y-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b-0)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (0 0)) ((3 2) (2 1)) ((4 3) (2 2)) ((5 1) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen x y y-0)
  (absent (x l-0) (y l) (y-0 l-1))
  (gen-st (pv b l) (pv self l-0) (pv b-0 l-1))
  (facts (silly gx) (silly (exp (gen) y-0)) (neq gx (gen))
    (neq (exp (gen) y-0) (gen)) (neq self b) (undisclosed l-0)
    (undisclosed l))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)) ((5 1) (4 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv b-0 l-1))) (4 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y y-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y y-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) y-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y y-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-1 (cat pt-3 (pv b-0 l-1)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b-0 gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a b-0 (hash (exp ga l-1) (exp gx y-0))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b-0 l-1)))))
  (label 33)
  (parent 16)
  (unrealized (0 3))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (b self b-0 name)
    (pt pt-0 pt-1 pt-2 pval) (gb base) (priv-stor priv-stor-0 locn)
    (x y l x-0 l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul (rec x) y x-0))) (priv-stor priv-stor-0) (l l)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) x-0)) (priv-stor priv-stor) (l l-0) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (defstrand init 3 (na na-0) (a b) (b b-0) (gb gb)
    (priv-stor priv-stor) (l l-0) (x x-0))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 1) (4 0)) ((1 2) (0 1))
    ((2 3) (0 3)) ((3 1) (0 0)) ((3 2) (2 1)) ((4 2) (2 2)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen x y x-0)
  (absent (x l) (y l-0) (x-0 l-0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) x-0)) (neq (exp (gen) x-0) (gen))
    (neq self b) (undisclosed l) (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((1 1) (4 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 5 1 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv a l-1))) (4 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y x-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 b b-0 (exp (gen) x-0)))))
  (label 34)
  (parent 17)
  (unrealized (0 3))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (b self b-0 name)
    (pt pt-0 pt-1 pt-2 pval) (gb base) (priv-stor priv-stor-0 locn)
    (x y l x-0 l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y x-0))) (priv-stor priv-stor-0) (l l-0)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) x-0)) (priv-stor priv-stor) (l l) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand init 3 (na na-0) (a self) (b b-0) (gb gb)
    (priv-stor priv-stor-0) (l l-0) (x x-0))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (0 0)) ((3 1) (4 0)) ((3 2) (2 1)) ((4 2) (2 2)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen x y x-0)
  (absent (x l-0) (y l) (x-0 l-0))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly (exp (gen) x-0)) (neq (exp (gen) x-0) (gen))
    (neq self b) (undisclosed l-0) (undisclosed l))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)) ((3 1) (4 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 5 3 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv a l-1))) (4 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y x-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 self b-0 (exp (gen) x-0)))))
  (label 35)
  (parent 17)
  (unrealized (0 3))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (b self a b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (gb base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y l l-0 x-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y x-0))) (priv-stor priv-stor-0) (l l-0)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) x-0)) (priv-stor priv-stor) (l l) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand init 3 (na na-0) (a a) (b b-0) (gb gb)
    (priv-stor priv-stor-1) (l l-1) (x x-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self a)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (0 0)) ((3 2) (2 1)) ((4 2) (2 2)) ((5 1) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen x y x-0)
  (absent (x l-0) (y l) (x-0 l-1))
  (gen-st (pv b l) (pv self l-0) (pv a l-1))
  (facts (silly (exp (gen) x-0)) (neq (exp (gen) x-0) (gen))
    (neq self b) (undisclosed l-0) (undisclosed l))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)) ((5 1) (4 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv a l-1))) (4 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y x-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-1 (cat pt-3 (pv a l-1)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 a b-0 (exp (gen) x-0))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv a l-1)))))
  (label 36)
  (parent 17)
  (unrealized (0 3))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (x y l l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y l-0))) (priv-stor priv-stor-0) (l l-0)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) l-0)) (priv-stor priv-stor) (l l) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec x) y)) l-0))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (4 0))
    ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l-0) (y l))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly (exp (gen) l-0)) (neq (exp (gen) l-0) (gen))
    (neq self b) (undisclosed l-0) (undisclosed l))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec x) y)) l-0))
    (exp (gen) (mul (rec x) y l-0)) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y l-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) l-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) (mul (rec x) y)) l-0))
      (send (cat (exp (gen) (mul (rec x) y)) l-0))))
  (label 37)
  (parent 19)
  (unrealized (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (x y l l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y l-0))) (priv-stor priv-stor-0) (l l-0)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) l-0)) (priv-stor priv-stor) (l l) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec x) l-0)) y))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (4 0))
    ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l-0) (y l))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly (exp (gen) l-0)) (neq (exp (gen) l-0) (gen))
    (neq self b) (undisclosed l-0) (undisclosed l))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec x) l-0)) y))
    (exp (gen) (mul (rec x) y l-0)) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y l-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) l-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) (mul (rec x) l-0)) y))
      (send (cat (exp (gen) (mul (rec x) l-0)) y))))
  (label 38)
  (parent 19)
  (unrealized (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (x y l l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y l-0))) (priv-stor priv-stor-0) (l l-0)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) l-0)) (priv-stor priv-stor) (l l) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) (mul y l-0)) x))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (4 0))
    ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l-0) (y l))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly (exp (gen) l-0)) (neq (exp (gen) l-0) (gen))
    (neq self b) (undisclosed l-0) (undisclosed l))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) (mul y l-0)) x))
    (exp (gen) (mul (rec x) y l-0)) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y l-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) l-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) (mul y l-0)) x))
      (send (cat (exp (gen) (mul y l-0)) x))))
  (label 39)
  (parent 19)
  (unrealized (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (x y l l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul (rec x) y l-0))) (priv-stor priv-stor-0) (l l)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) l-0)) (priv-stor priv-stor) (l l-0) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul (rec x) y)) l-0))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (4 0))
    ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l) (y l-0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) l-0)) (neq (exp (gen) l-0) (gen))
    (neq self b) (undisclosed l) (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec x) y)) l-0))
    (exp (gen) (mul (rec x) y l-0)) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y l-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) l-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) (mul (rec x) y)) l-0))
      (send (cat (exp (gen) (mul (rec x) y)) l-0))))
  (label 40)
  (parent 20)
  (unrealized (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (x y l l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul (rec x) y l-0))) (priv-stor priv-stor-0) (l l)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) l-0)) (priv-stor priv-stor) (l l-0) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul (rec x) l-0)) y))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (4 0))
    ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l) (y l-0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) l-0)) (neq (exp (gen) l-0) (gen))
    (neq self b) (undisclosed l) (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec x) l-0)) y))
    (exp (gen) (mul (rec x) y l-0)) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y l-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) l-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) (mul (rec x) l-0)) y))
      (send (cat (exp (gen) (mul (rec x) l-0)) y))))
  (label 41)
  (parent 20)
  (unrealized (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (x y l l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul (rec x) y l-0))) (priv-stor priv-stor-0) (l l)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) l-0)) (priv-stor priv-stor) (l l-0) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul y l-0)) x))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (4 0))
    ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l) (y l-0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) l-0)) (neq (exp (gen) l-0) (gen))
    (neq self b) (undisclosed l) (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) (mul y l-0)) x))
    (exp (gen) (mul (rec x) y l-0)) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y l-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) l-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) (mul y l-0)) x))
      (send (cat (exp (gen) (mul y l-0)) x))))
  (label 42)
  (parent 20)
  (unrealized (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data)
    (b self self-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y l l-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y l-1))) (priv-stor priv-stor-0) (l l-0)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) l-1)) (priv-stor priv-stor) (l l) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self-0)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul (rec x) y)) l-1))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (5 0))
    ((3 1) (0 0)) ((3 2) (2 1)) ((4 2) (2 2)) ((5 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l-0) (y l))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly (exp (gen) l-1)) (neq (exp (gen) l-1) (gen))
    (neq self b) (undisclosed l-0) (undisclosed l))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec x) y)) l-1))
    (exp (gen) (mul (rec x) y l-1)) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y l-1))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-1)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) l-1)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-1)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-1 (cat pt-3 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv self-0 l-1)))
      (send
        (sig (body self-0 (exp (gen) l-1) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) (mul (rec x) y)) l-1))
      (send (cat (exp (gen) (mul (rec x) y)) l-1))))
  (label 43)
  (parent 21)
  (unrealized (5 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data)
    (b self self-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y l l-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y l-1))) (priv-stor priv-stor-0) (l l-0)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) l-1)) (priv-stor priv-stor) (l l) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self-0)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul (rec x) l-1)) y))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (5 0))
    ((3 1) (0 0)) ((3 2) (2 1)) ((4 2) (2 2)) ((5 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l-0) (y l))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly (exp (gen) l-1)) (neq (exp (gen) l-1) (gen))
    (neq self b) (undisclosed l-0) (undisclosed l))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec x) l-1)) y))
    (exp (gen) (mul (rec x) y l-1)) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y l-1))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-1)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) l-1)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-1)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-1 (cat pt-3 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv self-0 l-1)))
      (send
        (sig (body self-0 (exp (gen) l-1) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) (mul (rec x) l-1)) y))
      (send (cat (exp (gen) (mul (rec x) l-1)) y))))
  (label 44)
  (parent 21)
  (unrealized (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data)
    (b self self-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y l l-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y l-1))) (priv-stor priv-stor-0) (l l-0)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) l-1)) (priv-stor priv-stor) (l l) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self-0)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul y l-1)) x))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (5 0))
    ((3 1) (0 0)) ((3 2) (2 1)) ((4 2) (2 2)) ((5 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l-0) (y l))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly (exp (gen) l-1)) (neq (exp (gen) l-1) (gen))
    (neq self b) (undisclosed l-0) (undisclosed l))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) (mul y l-1)) x))
    (exp (gen) (mul (rec x) y l-1)) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y l-1))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-1)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) l-1)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-1)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-1 (cat pt-3 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv self-0 l-1)))
      (send
        (sig (body self-0 (exp (gen) l-1) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) (mul y l-1)) x))
      (send (cat (exp (gen) (mul y l-1)) x))))
  (label 45)
  (parent 21)
  (unrealized (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (b self a b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (gb base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y l l-0 rndx) (w expt)
    (l-1 x-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y w x-0))) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) (mul w x-0))) (priv-stor priv-stor) (l l) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) x-0) w))
  (defstrand init 3 (na na-0) (a a) (b b-0) (gb gb)
    (priv-stor priv-stor-1) (l l-1) (x x-0))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (2 2)) ((5 2) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen x y x-0)
  (absent (x l-0) (y l) (x-0 l-1))
  (precur (4 0))
  (gen-st (pv b l) (pv self l-0) (pv a l-1))
  (facts (silly (exp (gen) (mul w x-0)))
    (neq (exp (gen) (mul w x-0)) (gen)) (neq self b) (undisclosed l-0)
    (undisclosed l))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly gen-st-ltx-disclose-0
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand init 3) (exp (gen) x-0) (4 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y w x-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w x-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul w x-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w x-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) x-0) w)) (send (cat (exp (gen) x-0) w)))
    ((load priv-stor-1 (cat pt-3 (pv a l-1)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 a b-0 (exp (gen) x-0)))))
  (label 46)
  (parent 22)
  (unrealized (0 3) (5 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (y l rndx)
    (w expt) (l-0 x rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul y w))) (priv-stor priv-stor-0) (l l-0) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) (mul w x))) (priv-stor priv-stor) (l l) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) x) w))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (2 2)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen y x)
  (absent (y l) (x l-0))
  (precur (4 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly (exp (gen) (mul w x))) (neq (exp (gen) (mul w x)) (gen))
    (neq self b) (undisclosed l-0) (undisclosed l))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 5 0 init 3) (exp (gen) x-0) (4 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y w))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w x)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul w x))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w x)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) x) w)) (send (cat (exp (gen) x) w))))
  (label 47)
  (parent 22)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (x y l l-0 rndx) (w expt))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y w))) (priv-stor priv-stor-0) (l l-0)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) w)) (priv-stor priv-stor) (l l) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (gen) w))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (2 2)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l-0) (y l))
  (precur (4 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly (exp (gen) w)) (neq (exp (gen) w) (gen)) (neq self b)
    (undisclosed l-0) (undisclosed l))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (contracted (gy (exp (gen) (mul (rec x) y w))))
    (gen) (4 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y w))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) w)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (gen) w)) (send (cat (gen) w))))
  (label 48)
  (parent 22)
  (unrealized (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x y l rndx)
    (w expt) (l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul (rec x) y w l-0))) (priv-stor priv-stor-0) (l l)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) (mul w l-0))) (priv-stor priv-stor) (l l-0) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-0) w))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (2 2)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l) (y l-0))
  (precur (4 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) (mul w l-0)))
    (neq (exp (gen) (mul w l-0)) (gen)) (neq self b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 5 1 ltx-gen 3) (exp (gen) l-1) (4 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y w l-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w l-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul w l-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w l-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l-0) w)) (send (cat (exp (gen) l-0) w))))
  (label 49)
  (parent 22)
  (unrealized (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data)
    (b self a b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pval) (ga gx base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y l l-0 rndx) (w expt)
    (l-1 y-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y w y-0))) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) (mul w y-0))) (priv-stor priv-stor) (l l) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) y-0) w))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b-0) (ga ga) (gx gx)
    (priv-stor priv-stor-1) (l l-1) (y y-0))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (2 2)) ((5 3) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen x y y-0)
  (absent (x l-0) (y l) (y-0 l-1))
  (precur (4 0))
  (gen-st (pv b l) (pv self l-0) (pv b-0 l-1))
  (facts (silly gx) (silly (exp (gen) (mul w y-0))) (neq gx (gen))
    (neq (exp (gen) (mul w y-0)) (gen)) (neq self b) (undisclosed l-0)
    (undisclosed l))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly gen-st-ltx-disclose-0
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand resp 4) (exp (gen) y-0) (4 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y w y-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w y-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul w y-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w y-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y-0) w)) (send (cat (exp (gen) y-0) w)))
    ((load priv-stor-1 (cat pt-3 (pv b-0 l-1)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b-0 gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a b-0 (hash (exp ga l-1) (exp gx y-0)))))))
  (label 50)
  (parent 22)
  (unrealized (0 3) (5 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x y l rndx)
    (w expt) (l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y w l-0))) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) (mul w l-0))) (priv-stor priv-stor) (l l) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l-0) w))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (0 0)) ((3 2) (2 1)) ((3 2) (4 0)) ((4 1) (2 2)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l-0) (y l))
  (precur (4 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly (exp (gen) (mul w l-0)))
    (neq (exp (gen) (mul w l-0)) (gen)) (neq self b) (undisclosed l-0)
    (undisclosed l))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 5 3 ltx-gen 3) (exp (gen) l-1) (4 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y w l-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w l-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul w l-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w l-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l-0) w)) (send (cat (exp (gen) l-0) w))))
  (label 51)
  (parent 22)
  (unrealized (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data)
    (b self self-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y l l-0 rndx) (w expt)
    (l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y w l-1))) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) (mul w l-1))) (priv-stor priv-stor) (l l) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l-1) w))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self-0)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (2 2)) ((5 2) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l-0) (y l))
  (precur (4 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly (exp (gen) (mul w l-1)))
    (neq (exp (gen) (mul w l-1)) (gen)) (neq self b) (undisclosed l-0)
    (undisclosed l))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 3) (exp (gen) l-1) (4 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y w l-1))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w l-1)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul w l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w l-1)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l-1) w)) (send (cat (exp (gen) l-1) w)))
    ((load priv-stor-1 (cat pt-3 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv self-0 l-1)))
      (send
        (sig (body self-0 (exp (gen) l-1) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 52)
  (parent 22)
  (unrealized (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pval) (gy gb base) (priv-stor priv-stor-0 locn)
    (x y l x-0 l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (gb (exp (gen) l))
    (gy gy) (priv-stor priv-stor) (l l-0) (x x))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (ga (exp (gen) l-0))
    (gx (exp gy (mul x (rec y)))) (priv-stor priv-stor-0) (l l) (y y))
  (deflistener (cat (exp (gen) x-0) (mul (rec x-0) l-0)))
  (defstrand init 3 (na na-0) (a a) (b b-0) (gb gb)
    (priv-stor priv-stor) (l l-0) (x x-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (5 0)) ((2 1) (3 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 1)) ((5 2) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen x y x-0)
  (absent (x l-0) (y l) (x-0 l-0))
  (precur (4 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (silly (exp gy (mul x (rec y))))
    (neq (exp gy (mul x (rec y))) (gen)) (neq a b) (undisclosed l-0)
    (undisclosed l))
  (leads-to ((1 1) (0 0)) ((1 1) (5 0)) ((2 1) (3 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 6 1 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv a-0 l-1))) (5 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat gy
          (enc na nb a b (hash (exp (gen) (mul l l-0)) (exp gy x))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp gy (mul x (rec y)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b (hash (exp (gen) (mul l l-0)) (exp gy x))))))
    ((recv (cat (exp (gen) x-0) (mul (rec x-0) l-0)))
      (send (cat (exp (gen) x-0) (mul (rec x-0) l-0))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 a b-0 (exp (gen) x-0)))))
  (label 53)
  (parent 23)
  (unrealized (3 1) (3 2) (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pval) (gy gb base) (priv-stor priv-stor-0 locn)
    (x y l x-0 l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (gb (exp (gen) l-0))
    (gy gy) (priv-stor priv-stor) (l l) (x x))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (ga (exp (gen) l))
    (gx (exp gy (mul x (rec y)))) (priv-stor priv-stor-0) (l l-0) (y y))
  (deflistener (cat (exp (gen) x-0) (mul l (rec x-0))))
  (defstrand init 3 (na na-0) (a b) (b b-0) (gb gb)
    (priv-stor priv-stor-0) (l l-0) (x x-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (3 0)) ((2 1) (5 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 1)) ((5 2) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen x y x-0)
  (absent (x l) (y l-0) (x-0 l-0))
  (precur (4 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (silly (exp gy (mul x (rec y))))
    (neq (exp gy (mul x (rec y))) (gen)) (neq a b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((2 1) (3 0)) ((2 1) (5 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 6 2 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv a-0 l-1))) (5 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat gy
          (enc na nb a b (hash (exp (gen) (mul l l-0)) (exp gy x))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp gy (mul x (rec y)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b (hash (exp (gen) (mul l l-0)) (exp gy x))))))
    ((recv (cat (exp (gen) x-0) (mul l (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l (rec x-0)))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 b b-0 (exp (gen) x-0)))))
  (label 54)
  (parent 23)
  (unrealized (3 1) (3 2) (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (a b a-0 b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (gy gb base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y l l-0 x-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (gb (exp (gen) l))
    (gy gy) (priv-stor priv-stor) (l l-0) (x x))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (ga (exp (gen) l-0))
    (gx (exp gy (mul x (rec y)))) (priv-stor priv-stor-0) (l l) (y y))
  (deflistener (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
  (defstrand init 3 (na na-0) (a a-0) (b b-0) (gb gb)
    (priv-stor priv-stor-1) (l l-1) (x x-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self a-0)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (3 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 1)) ((5 2) (4 0)) ((6 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen x y x-0)
  (absent (x l-0) (y l) (x-0 l-1))
  (precur (4 0))
  (gen-st (pv a l-0) (pv b l) (pv a-0 l-1))
  (facts (silly (exp gy (mul x (rec y))))
    (neq (exp gy (mul x (rec y))) (gen)) (neq a b) (undisclosed l-0)
    (undisclosed l))
  (leads-to ((1 1) (0 0)) ((2 1) (3 0)) ((6 1) (5 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv a-0 l-1))) (5 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat gy
          (enc na nb a b (hash (exp (gen) (mul l l-0)) (exp gy x))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp gy (mul x (rec y)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b (hash (exp (gen) (mul l l-0)) (exp gy x))))))
    ((recv (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-0 (rec x-0)))))
    ((load priv-stor-1 (cat pt-3 (pv a-0 l-1)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 a-0 b-0 (exp (gen) x-0))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv a-0 l-1)))))
  (label 55)
  (parent 23)
  (unrealized (3 1) (3 2) (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data)
    (b self a b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pval) (ga gx base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y l l-0 l-1 y-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y y-0))) (priv-stor priv-stor-0) (l l-0)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) y-0)) (priv-stor priv-stor) (l l) (y y))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b-0) (ga ga) (gx gx)
    (priv-stor priv-stor-1) (l l-1) (y y-0))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((5 3) (2 2)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen x y y-0)
  (absent (x l-0) (y l) (y-0 l-1))
  (precur (3 0))
  (gen-st (pv b l) (pv self l-0) (pv b-0 l-1))
  (facts (silly gx) (silly (exp (gen) y-0)) (neq gx (gen))
    (neq (exp (gen) y-0) (gen)) (neq self b) (undisclosed l-0)
    (undisclosed l))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly gen-st-ltx-disclose-0
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand resp 4) (exp (gen) y-0) (2 2))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y y-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y y-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) y-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y y-0)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-1 (cat pt-3 (pv b-0 l-1)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b-0 gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a b-0 (hash (exp ga l-1) (exp gx y-0)))))))
  (label 56)
  (parent 26)
  (unrealized (0 3) (5 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (b self a b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (gb base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y l l-0 l-1 x-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y x-0))) (priv-stor priv-stor-0) (l l-0)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) x-0)) (priv-stor priv-stor) (l l) (y y))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand init 3 (na na-0) (a a) (b b-0) (gb gb)
    (priv-stor priv-stor-1) (l l-1) (x x-0))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((5 2) (2 2)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen x y x-0)
  (absent (x l-0) (y l) (x-0 l-1))
  (precur (3 0))
  (gen-st (pv b l) (pv self l-0) (pv a l-1))
  (facts (silly (exp (gen) x-0)) (neq (exp (gen) x-0) (gen))
    (neq self b) (undisclosed l-0) (undisclosed l))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly gen-st-ltx-disclose-0
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand init 3) (exp (gen) x-0) (2 2))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y x-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x-0)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-1 (cat pt-3 (pv a l-1)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 a b-0 (exp (gen) x-0)))))
  (label 57)
  (parent 26)
  (unrealized (0 3) (5 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (y l l-0 x rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) y)) (priv-stor priv-stor-0) (l l-0) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) x)) (priv-stor priv-stor) (l l) (y y))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen y x)
  (absent (y l) (x l-0))
  (precur (3 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly (exp (gen) x)) (neq (exp (gen) x) (gen)) (neq self b)
    (undisclosed l-0) (undisclosed l))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 5 0 init 3) (exp (gen) x-0) (2 2))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 58)
  (parent 26)
  (seen 18)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (x y l l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y l-0))) (priv-stor priv-stor-0) (l l-0)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) l-0)) (priv-stor priv-stor) (l l) (y y))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l-0) (y l))
  (precur (3 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly (exp (gen) l-0)) (neq (exp (gen) l-0) (gen))
    (neq self b) (undisclosed l-0) (undisclosed l))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 5 4 ltx-gen 3) (exp (gen) l-1) (2 2))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y l-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) l-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-0)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 59)
  (parent 26)
  (unrealized (0 3))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (x y l l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul (rec x) y l-0))) (priv-stor priv-stor-0) (l l)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) l-0)) (priv-stor priv-stor) (l l-0) (y y))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l) (y l-0))
  (precur (3 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) l-0)) (neq (exp (gen) l-0) (gen))
    (neq self b) (undisclosed l) (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 5 1 ltx-gen 3) (exp (gen) l-1) (2 2))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y l-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) l-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-0)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))))
  (label 60)
  (parent 26)
  (unrealized (0 3))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data)
    (b self self-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y l l-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y l-1))) (priv-stor priv-stor-0) (l l-0)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) l-1)) (priv-stor priv-stor) (l l) (y y))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self-0)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((5 2) (2 2)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l-0) (y l))
  (precur (3 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly (exp (gen) l-1)) (neq (exp (gen) l-1) (gen))
    (neq self b) (undisclosed l-0) (undisclosed l))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 3) (exp (gen) l-1) (2 2))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y l-1))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-1)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) l-1)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-1)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-1 (cat pt-3 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv self-0 l-1)))
      (send
        (sig (body self-0 (exp (gen) l-1) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 61)
  (parent 26)
  (unrealized (0 3))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (gy base) (priv-stor priv-stor-0 locn)
    (x y l l-0 rndx) (w expt))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy gy) (priv-stor priv-stor-0) (l l-0) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp gy (mul x (rec y)))) (priv-stor priv-stor) (l l) (y y))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp gy (mul x (rec y) (rec w))) w))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((5 1) (2 2)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l-0) (y l))
  (precur (3 0) (5 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly (exp gy (mul x (rec y))))
    (neq (exp gy (mul x (rec y))) (gen)) (neq self b) (undisclosed l-0)
    (undisclosed l))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp gy (mul x (rec y) (rec w))) w))
    (exp gy (mul x (rec y))) (2 2))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat gy
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp gy x))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp gy (mul x (rec y)))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp gy x))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp gy (mul x (rec y) (rec w))) w))
      (send (cat (exp gy (mul x (rec y) (rec w))) w))))
  (label 62)
  (parent 26)
  (unrealized (5 0))
  (comment "7 in cohort - 7 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (a b a-0 name)
    (pt pt-0 pt-1 pt-2 pval) (gy ga gx base)
    (priv-stor priv-stor-0 locn) (x y l y-0 l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (gb (exp (gen) l))
    (gy gy) (priv-stor priv-stor) (l l-0) (x x))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (ga (exp (gen) l-0))
    (gx (exp gy (mul x (rec y)))) (priv-stor priv-stor-0) (l l) (y y))
  (deflistener (cat (exp (gen) y-0) (mul (rec y-0) l-0)))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b a) (ga ga) (gx gx)
    (priv-stor priv-stor) (l l-0) (y y-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (5 0)) ((2 1) (3 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 1)) ((5 3) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen x y y-0)
  (absent (x l-0) (y l) (y-0 l-0))
  (precur (4 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (silly gx) (silly (exp gy (mul x (rec y)))) (neq gx (gen))
    (neq (exp gy (mul x (rec y))) (gen)) (neq a b) (undisclosed l-0)
    (undisclosed l))
  (leads-to ((1 1) (0 0)) ((1 1) (5 0)) ((2 1) (3 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 6 1 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv b-0 l-1))) (5 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat gy
          (enc na nb a b (hash (exp (gen) (mul l l-0)) (exp gy x))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp gy (mul x (rec y)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b (hash (exp (gen) (mul l l-0)) (exp gy x))))))
    ((recv (cat (exp (gen) y-0) (mul (rec y-0) l-0)))
      (send (cat (exp (gen) y-0) (mul (rec y-0) l-0))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body a-0 ga (pubk "sig" a-0)) (privk "sig" a-0)))
      (recv (cat na-0 a-0 a gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 a (hash (exp ga l-0) (exp gx y-0)))))))
  (label 63)
  (parent 27)
  (unrealized (3 1) (3 2) (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (a b a-0 name)
    (pt pt-0 pt-1 pt-2 pval) (gy ga gx base)
    (priv-stor priv-stor-0 locn) (x y l y-0 l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (gb (exp (gen) l-0))
    (gy gy) (priv-stor priv-stor) (l l) (x x))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (ga (exp (gen) l))
    (gx (exp gy (mul x (rec y)))) (priv-stor priv-stor-0) (l l-0) (y y))
  (deflistener (cat (exp (gen) y-0) (mul l (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b) (ga ga) (gx gx)
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (3 0)) ((2 1) (5 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 1)) ((5 3) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen x y y-0)
  (absent (x l) (y l-0) (y-0 l-0))
  (precur (4 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (silly gx) (silly (exp gy (mul x (rec y)))) (neq gx (gen))
    (neq (exp gy (mul x (rec y))) (gen)) (neq a b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((2 1) (3 0)) ((2 1) (5 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 6 2 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv b-0 l-1))) (5 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat gy
          (enc na nb a b (hash (exp (gen) (mul l l-0)) (exp gy x))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp gy (mul x (rec y)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b (hash (exp (gen) (mul l l-0)) (exp gy x))))))
    ((recv (cat (exp (gen) y-0) (mul l (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l (rec y-0)))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv (sig (body a-0 ga (pubk "sig" a-0)) (privk "sig" a-0)))
      (recv (cat na-0 a-0 b gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b (hash (exp ga l-0) (exp gx y-0)))))))
  (label 64)
  (parent 27)
  (unrealized (3 1) (3 2) (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (gy ga gx base) (priv-stor priv-stor-0 priv-stor-1 locn)
    (x y l l-0 y-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (gb (exp (gen) l))
    (gy gy) (priv-stor priv-stor) (l l-0) (x x))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (ga (exp (gen) l-0))
    (gx (exp gy (mul x (rec y)))) (priv-stor priv-stor-0) (l l) (y y))
  (deflistener (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b-0) (ga ga) (gx gx)
    (priv-stor priv-stor-1) (l l-1) (y y-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b-0)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (3 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 1)) ((5 3) (4 0)) ((6 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen x y y-0)
  (absent (x l-0) (y l) (y-0 l-1))
  (precur (4 0))
  (gen-st (pv a l-0) (pv b l) (pv b-0 l-1))
  (facts (silly gx) (silly (exp gy (mul x (rec y)))) (neq gx (gen))
    (neq (exp gy (mul x (rec y))) (gen)) (neq a b) (undisclosed l-0)
    (undisclosed l))
  (leads-to ((1 1) (0 0)) ((2 1) (3 0)) ((6 1) (5 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv b-0 l-1))) (5 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat gy
          (enc na nb a b (hash (exp (gen) (mul l l-0)) (exp gy x))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp gy (mul x (rec y)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b (hash (exp (gen) (mul l l-0)) (exp gy x))))))
    ((recv (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-0 (rec y-0)))))
    ((load priv-stor-1 (cat pt-3 (pv b-0 l-1)))
      (recv (sig (body a-0 ga (pubk "sig" a-0)) (privk "sig" a-0)))
      (recv (cat na-0 a-0 b-0 gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b-0 (hash (exp ga l-1) (exp gx y-0))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b-0 l-1)))))
  (label 65)
  (parent 27)
  (unrealized (3 1) (3 2) (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval) (gy base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 x y l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (gb (exp (gen) l-0))
    (gy gy) (priv-stor priv-stor) (l l) (x x))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b)
    (ga (exp (gen) (mul l l-0 (rec l-1)))) (gx (exp gy (mul x (rec y))))
    (priv-stor priv-stor-1) (l l-1) (y y))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l l-0)) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) l) l-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (7 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (y l-1))
  (gen-st (pv a l) (pv b l-1))
  (facts (silly (exp gy (mul x (rec y))))
    (neq (exp gy (mul x (rec y))) (gen)) (neq a b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l) l-0))
    (exp (gen) (mul l l-0)) (5 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat gy
          (enc na nb a b (hash (exp (gen) (mul l l-0)) (exp gy x))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp gy (mul x (rec y)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b (hash (exp (gen) (mul l l-0)) (exp gy x))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l l-0)) l-1))
      (send (cat (exp (gen) (mul l l-0)) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l-1))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0))))
  (label 66)
  (parent 30)
  (unrealized (3 2) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval) (gy base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 x y l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a a) (b b) (gb (exp (gen) l-0))
    (gy gy) (priv-stor priv-stor) (l l) (x x))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b)
    (ga (exp (gen) (mul l l-0 (rec l-1)))) (gx (exp gy (mul x (rec y))))
    (priv-stor priv-stor-1) (l l-1) (y y))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l l-0)) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) l-0) l))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (7 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (y l-1))
  (gen-st (pv a l) (pv b l-1))
  (facts (silly (exp gy (mul x (rec y))))
    (neq (exp gy (mul x (rec y))) (gen)) (neq a b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l-0) l))
    (exp (gen) (mul l l-0)) (5 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat gy
          (enc na nb a b (hash (exp (gen) (mul l l-0)) (exp gy x))))))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp gy (mul x (rec y)))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b (hash (exp (gen) (mul l l-0)) (exp gy x))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l l-0)) l-1))
      (send (cat (exp (gen) (mul l l-0)) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l-1))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l))))
  (label 67)
  (parent 30)
  (unrealized (3 2) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (b self a name)
    (pt pt-0 pt-1 pt-2 pval) (ga gx base) (priv-stor priv-stor-0 locn)
    (x y l y-0 l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul (rec x) y y-0))) (priv-stor priv-stor-0) (l l)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) y-0)) (priv-stor priv-stor) (l l-0) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b) (ga ga) (gx gx)
    (priv-stor priv-stor) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) (mul (rec x) y)) y-0))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 1) (4 0)) ((1 2) (0 1))
    ((2 3) (5 0)) ((3 1) (0 0)) ((3 2) (2 1)) ((4 3) (2 2))
    ((5 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen x y y-0)
  (absent (x l) (y l-0) (y-0 l-0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly gx) (silly (exp (gen) y-0)) (neq gx (gen))
    (neq (exp (gen) y-0) (gen)) (neq self b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((1 1) (4 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec x) y)) y-0))
    (exp (gen) (mul (rec x) y y-0)) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y y-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y y-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) y-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y y-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a b (hash (exp ga l-0) (exp gx y-0))))))
    ((recv (cat (exp (gen) (mul (rec x) y)) y-0))
      (send (cat (exp (gen) (mul (rec x) y)) y-0))))
  (label 68)
  (parent 31)
  (unrealized (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (b self a name)
    (pt pt-0 pt-1 pt-2 pval) (ga gx base) (priv-stor priv-stor-0 locn)
    (x y l y-0 l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul (rec x) y y-0))) (priv-stor priv-stor-0) (l l)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) y-0)) (priv-stor priv-stor) (l l-0) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b) (ga ga) (gx gx)
    (priv-stor priv-stor) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) (mul (rec x) y-0)) y))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 1) (4 0)) ((1 2) (0 1))
    ((2 3) (5 0)) ((3 1) (0 0)) ((3 2) (2 1)) ((4 3) (2 2))
    ((5 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen x y y-0)
  (absent (x l) (y l-0) (y-0 l-0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly gx) (silly (exp (gen) y-0)) (neq gx (gen))
    (neq (exp (gen) y-0) (gen)) (neq self b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((1 1) (4 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec x) y-0)) y))
    (exp (gen) (mul (rec x) y y-0)) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y y-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y y-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) y-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y y-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a b (hash (exp ga l-0) (exp gx y-0))))))
    ((recv (cat (exp (gen) (mul (rec x) y-0)) y))
      (send (cat (exp (gen) (mul (rec x) y-0)) y))))
  (label 69)
  (parent 31)
  (unrealized (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (b self a name)
    (pt pt-0 pt-1 pt-2 pval) (ga gx base) (priv-stor priv-stor-0 locn)
    (x y l y-0 l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul (rec x) y y-0))) (priv-stor priv-stor-0) (l l)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) y-0)) (priv-stor priv-stor) (l l-0) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b) (ga ga) (gx gx)
    (priv-stor priv-stor) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) (mul y y-0)) x))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 1) (4 0)) ((1 2) (0 1))
    ((2 3) (5 0)) ((3 1) (0 0)) ((3 2) (2 1)) ((4 3) (2 2))
    ((5 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen x y y-0)
  (absent (x l) (y l-0) (y-0 l-0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly gx) (silly (exp (gen) y-0)) (neq gx (gen))
    (neq (exp (gen) y-0) (gen)) (neq self b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((1 1) (4 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) (mul y y-0)) x))
    (exp (gen) (mul (rec x) y y-0)) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y y-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y y-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) y-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y y-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a b (hash (exp ga l-0) (exp gx y-0))))))
    ((recv (cat (exp (gen) (mul y y-0)) x))
      (send (cat (exp (gen) (mul y y-0)) x))))
  (label 70)
  (parent 31)
  (unrealized (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (b self a name)
    (pt pt-0 pt-1 pt-2 pval) (ga gx base) (priv-stor priv-stor-0 locn)
    (x y l y-0 l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y y-0))) (priv-stor priv-stor-0) (l l-0)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) y-0)) (priv-stor priv-stor) (l l) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b self) (ga ga) (gx gx)
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) (mul (rec x) y)) y-0))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (5 0))
    ((3 1) (0 0)) ((3 1) (4 0)) ((3 2) (2 1)) ((4 3) (2 2))
    ((5 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen x y y-0)
  (absent (x l-0) (y l) (y-0 l-0))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly gx) (silly (exp (gen) y-0)) (neq gx (gen))
    (neq (exp (gen) y-0) (gen)) (neq self b) (undisclosed l-0)
    (undisclosed l))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)) ((3 1) (4 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec x) y)) y-0))
    (exp (gen) (mul (rec x) y y-0)) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y y-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y y-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) y-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y y-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a self gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a self (hash (exp ga l-0) (exp gx y-0))))))
    ((recv (cat (exp (gen) (mul (rec x) y)) y-0))
      (send (cat (exp (gen) (mul (rec x) y)) y-0))))
  (label 71)
  (parent 32)
  (unrealized (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (b self a name)
    (pt pt-0 pt-1 pt-2 pval) (ga gx base) (priv-stor priv-stor-0 locn)
    (x y l y-0 l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y y-0))) (priv-stor priv-stor-0) (l l-0)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) y-0)) (priv-stor priv-stor) (l l) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b self) (ga ga) (gx gx)
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) (mul (rec x) y-0)) y))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (5 0))
    ((3 1) (0 0)) ((3 1) (4 0)) ((3 2) (2 1)) ((4 3) (2 2))
    ((5 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen x y y-0)
  (absent (x l-0) (y l) (y-0 l-0))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly gx) (silly (exp (gen) y-0)) (neq gx (gen))
    (neq (exp (gen) y-0) (gen)) (neq self b) (undisclosed l-0)
    (undisclosed l))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)) ((3 1) (4 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec x) y-0)) y))
    (exp (gen) (mul (rec x) y y-0)) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y y-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y y-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) y-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y y-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a self gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a self (hash (exp ga l-0) (exp gx y-0))))))
    ((recv (cat (exp (gen) (mul (rec x) y-0)) y))
      (send (cat (exp (gen) (mul (rec x) y-0)) y))))
  (label 72)
  (parent 32)
  (unrealized (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (b self a name)
    (pt pt-0 pt-1 pt-2 pval) (ga gx base) (priv-stor priv-stor-0 locn)
    (x y l y-0 l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y y-0))) (priv-stor priv-stor-0) (l l-0)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) y-0)) (priv-stor priv-stor) (l l) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b self) (ga ga) (gx gx)
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) (mul y y-0)) x))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (5 0))
    ((3 1) (0 0)) ((3 1) (4 0)) ((3 2) (2 1)) ((4 3) (2 2))
    ((5 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen x y y-0)
  (absent (x l-0) (y l) (y-0 l-0))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly gx) (silly (exp (gen) y-0)) (neq gx (gen))
    (neq (exp (gen) y-0) (gen)) (neq self b) (undisclosed l-0)
    (undisclosed l))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)) ((3 1) (4 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) (mul y y-0)) x))
    (exp (gen) (mul (rec x) y y-0)) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y y-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y y-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) y-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y y-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a self gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a self (hash (exp ga l-0) (exp gx y-0))))))
    ((recv (cat (exp (gen) (mul y y-0)) x))
      (send (cat (exp (gen) (mul y y-0)) x))))
  (label 73)
  (parent 32)
  (unrealized (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (b self a b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (ga gx base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y l l-0 y-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y y-0))) (priv-stor priv-stor-0) (l l-0)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) y-0)) (priv-stor priv-stor) (l l) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b-0) (ga ga) (gx gx)
    (priv-stor priv-stor-1) (l l-1) (y y-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b-0)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul (rec x) y)) y-0))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (6 0))
    ((3 1) (0 0)) ((3 2) (2 1)) ((4 3) (2 2)) ((5 1) (4 0))
    ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen x y y-0)
  (absent (x l-0) (y l) (y-0 l-1))
  (gen-st (pv b l) (pv self l-0) (pv b-0 l-1))
  (facts (silly gx) (silly (exp (gen) y-0)) (neq gx (gen))
    (neq (exp (gen) y-0) (gen)) (neq self b) (undisclosed l-0)
    (undisclosed l))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)) ((5 1) (4 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec x) y)) y-0))
    (exp (gen) (mul (rec x) y y-0)) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y y-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y y-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) y-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y y-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-1 (cat pt-3 (pv b-0 l-1)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b-0 gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a b-0 (hash (exp ga l-1) (exp gx y-0))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b-0 l-1))))
    ((recv (cat (exp (gen) (mul (rec x) y)) y-0))
      (send (cat (exp (gen) (mul (rec x) y)) y-0))))
  (label 74)
  (parent 33)
  (unrealized (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (b self a b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (ga gx base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y l l-0 y-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y y-0))) (priv-stor priv-stor-0) (l l-0)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) y-0)) (priv-stor priv-stor) (l l) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b-0) (ga ga) (gx gx)
    (priv-stor priv-stor-1) (l l-1) (y y-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b-0)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul (rec x) y-0)) y))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (6 0))
    ((3 1) (0 0)) ((3 2) (2 1)) ((4 3) (2 2)) ((5 1) (4 0))
    ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen x y y-0)
  (absent (x l-0) (y l) (y-0 l-1))
  (gen-st (pv b l) (pv self l-0) (pv b-0 l-1))
  (facts (silly gx) (silly (exp (gen) y-0)) (neq gx (gen))
    (neq (exp (gen) y-0) (gen)) (neq self b) (undisclosed l-0)
    (undisclosed l))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)) ((5 1) (4 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec x) y-0)) y))
    (exp (gen) (mul (rec x) y y-0)) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y y-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y y-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) y-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y y-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-1 (cat pt-3 (pv b-0 l-1)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b-0 gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a b-0 (hash (exp ga l-1) (exp gx y-0))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b-0 l-1))))
    ((recv (cat (exp (gen) (mul (rec x) y-0)) y))
      (send (cat (exp (gen) (mul (rec x) y-0)) y))))
  (label 75)
  (parent 33)
  (unrealized (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (b self a b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (ga gx base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y l l-0 y-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y y-0))) (priv-stor priv-stor-0) (l l-0)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) y-0)) (priv-stor priv-stor) (l l) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b-0) (ga ga) (gx gx)
    (priv-stor priv-stor-1) (l l-1) (y y-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b-0)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul y y-0)) x))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (6 0))
    ((3 1) (0 0)) ((3 2) (2 1)) ((4 3) (2 2)) ((5 1) (4 0))
    ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen x y y-0)
  (absent (x l-0) (y l) (y-0 l-1))
  (gen-st (pv b l) (pv self l-0) (pv b-0 l-1))
  (facts (silly gx) (silly (exp (gen) y-0)) (neq gx (gen))
    (neq (exp (gen) y-0) (gen)) (neq self b) (undisclosed l-0)
    (undisclosed l))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)) ((5 1) (4 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) (mul y y-0)) x))
    (exp (gen) (mul (rec x) y y-0)) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y y-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y y-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) y-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y y-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-1 (cat pt-3 (pv b-0 l-1)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b-0 gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a b-0 (hash (exp ga l-1) (exp gx y-0))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b-0 l-1))))
    ((recv (cat (exp (gen) (mul y y-0)) x))
      (send (cat (exp (gen) (mul y y-0)) x))))
  (label 76)
  (parent 33)
  (unrealized (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (b self b-0 name)
    (pt pt-0 pt-1 pt-2 pval) (gb base) (priv-stor priv-stor-0 locn)
    (x y l x-0 l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul (rec x) y x-0))) (priv-stor priv-stor-0) (l l)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) x-0)) (priv-stor priv-stor) (l l-0) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (defstrand init 3 (na na-0) (a b) (b b-0) (gb gb)
    (priv-stor priv-stor) (l l-0) (x x-0))
  (deflistener (cat (exp (gen) (mul (rec x) y)) x-0))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 1) (4 0)) ((1 2) (0 1))
    ((2 3) (5 0)) ((3 1) (0 0)) ((3 2) (2 1)) ((4 2) (2 2))
    ((5 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen x y x-0)
  (absent (x l) (y l-0) (x-0 l-0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) x-0)) (neq (exp (gen) x-0) (gen))
    (neq self b) (undisclosed l) (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((1 1) (4 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec x) y)) x-0))
    (exp (gen) (mul (rec x) y x-0)) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y x-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 b b-0 (exp (gen) x-0))))
    ((recv (cat (exp (gen) (mul (rec x) y)) x-0))
      (send (cat (exp (gen) (mul (rec x) y)) x-0))))
  (label 77)
  (parent 34)
  (unrealized (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (b self b-0 name)
    (pt pt-0 pt-1 pt-2 pval) (gb base) (priv-stor priv-stor-0 locn)
    (x y l x-0 l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul (rec x) y x-0))) (priv-stor priv-stor-0) (l l)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) x-0)) (priv-stor priv-stor) (l l-0) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (defstrand init 3 (na na-0) (a b) (b b-0) (gb gb)
    (priv-stor priv-stor) (l l-0) (x x-0))
  (deflistener (cat (exp (gen) (mul (rec x) x-0)) y))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 1) (4 0)) ((1 2) (0 1))
    ((2 3) (5 0)) ((3 1) (0 0)) ((3 2) (2 1)) ((4 2) (2 2))
    ((5 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen x y x-0)
  (absent (x l) (y l-0) (x-0 l-0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) x-0)) (neq (exp (gen) x-0) (gen))
    (neq self b) (undisclosed l) (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((1 1) (4 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec x) x-0)) y))
    (exp (gen) (mul (rec x) y x-0)) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y x-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 b b-0 (exp (gen) x-0))))
    ((recv (cat (exp (gen) (mul (rec x) x-0)) y))
      (send (cat (exp (gen) (mul (rec x) x-0)) y))))
  (label 78)
  (parent 34)
  (unrealized (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (b self b-0 name)
    (pt pt-0 pt-1 pt-2 pval) (gb base) (priv-stor priv-stor-0 locn)
    (x y l x-0 l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul (rec x) y x-0))) (priv-stor priv-stor-0) (l l)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) x-0)) (priv-stor priv-stor) (l l-0) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (defstrand init 3 (na na-0) (a b) (b b-0) (gb gb)
    (priv-stor priv-stor) (l l-0) (x x-0))
  (deflistener (cat (exp (gen) (mul y x-0)) x))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 1) (4 0)) ((1 2) (0 1))
    ((2 3) (5 0)) ((3 1) (0 0)) ((3 2) (2 1)) ((4 2) (2 2))
    ((5 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen x y x-0)
  (absent (x l) (y l-0) (x-0 l-0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) x-0)) (neq (exp (gen) x-0) (gen))
    (neq self b) (undisclosed l) (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((1 1) (4 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) (mul y x-0)) x))
    (exp (gen) (mul (rec x) y x-0)) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y x-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 b b-0 (exp (gen) x-0))))
    ((recv (cat (exp (gen) (mul y x-0)) x))
      (send (cat (exp (gen) (mul y x-0)) x))))
  (label 79)
  (parent 34)
  (unrealized (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (b self b-0 name)
    (pt pt-0 pt-1 pt-2 pval) (gb base) (priv-stor priv-stor-0 locn)
    (x y l x-0 l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y x-0))) (priv-stor priv-stor-0) (l l-0)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) x-0)) (priv-stor priv-stor) (l l) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand init 3 (na na-0) (a self) (b b-0) (gb gb)
    (priv-stor priv-stor-0) (l l-0) (x x-0))
  (deflistener (cat (exp (gen) (mul (rec x) y)) x-0))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (5 0))
    ((3 1) (0 0)) ((3 1) (4 0)) ((3 2) (2 1)) ((4 2) (2 2))
    ((5 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen x y x-0)
  (absent (x l-0) (y l) (x-0 l-0))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly (exp (gen) x-0)) (neq (exp (gen) x-0) (gen))
    (neq self b) (undisclosed l-0) (undisclosed l))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)) ((3 1) (4 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec x) y)) x-0))
    (exp (gen) (mul (rec x) y x-0)) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y x-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 self b-0 (exp (gen) x-0))))
    ((recv (cat (exp (gen) (mul (rec x) y)) x-0))
      (send (cat (exp (gen) (mul (rec x) y)) x-0))))
  (label 80)
  (parent 35)
  (unrealized (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (b self b-0 name)
    (pt pt-0 pt-1 pt-2 pval) (gb base) (priv-stor priv-stor-0 locn)
    (x y l x-0 l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y x-0))) (priv-stor priv-stor-0) (l l-0)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) x-0)) (priv-stor priv-stor) (l l) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand init 3 (na na-0) (a self) (b b-0) (gb gb)
    (priv-stor priv-stor-0) (l l-0) (x x-0))
  (deflistener (cat (exp (gen) (mul (rec x) x-0)) y))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (5 0))
    ((3 1) (0 0)) ((3 1) (4 0)) ((3 2) (2 1)) ((4 2) (2 2))
    ((5 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen x y x-0)
  (absent (x l-0) (y l) (x-0 l-0))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly (exp (gen) x-0)) (neq (exp (gen) x-0) (gen))
    (neq self b) (undisclosed l-0) (undisclosed l))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)) ((3 1) (4 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec x) x-0)) y))
    (exp (gen) (mul (rec x) y x-0)) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y x-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 self b-0 (exp (gen) x-0))))
    ((recv (cat (exp (gen) (mul (rec x) x-0)) y))
      (send (cat (exp (gen) (mul (rec x) x-0)) y))))
  (label 81)
  (parent 35)
  (unrealized (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (b self b-0 name)
    (pt pt-0 pt-1 pt-2 pval) (gb base) (priv-stor priv-stor-0 locn)
    (x y l x-0 l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y x-0))) (priv-stor priv-stor-0) (l l-0)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) x-0)) (priv-stor priv-stor) (l l) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand init 3 (na na-0) (a self) (b b-0) (gb gb)
    (priv-stor priv-stor-0) (l l-0) (x x-0))
  (deflistener (cat (exp (gen) (mul y x-0)) x))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (5 0))
    ((3 1) (0 0)) ((3 1) (4 0)) ((3 2) (2 1)) ((4 2) (2 2))
    ((5 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen x y x-0)
  (absent (x l-0) (y l) (x-0 l-0))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly (exp (gen) x-0)) (neq (exp (gen) x-0) (gen))
    (neq self b) (undisclosed l-0) (undisclosed l))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)) ((3 1) (4 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) (mul y x-0)) x))
    (exp (gen) (mul (rec x) y x-0)) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y x-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 self b-0 (exp (gen) x-0))))
    ((recv (cat (exp (gen) (mul y x-0)) x))
      (send (cat (exp (gen) (mul y x-0)) x))))
  (label 82)
  (parent 35)
  (unrealized (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (b self a b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (gb base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y l l-0 x-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y x-0))) (priv-stor priv-stor-0) (l l-0)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) x-0)) (priv-stor priv-stor) (l l) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand init 3 (na na-0) (a a) (b b-0) (gb gb)
    (priv-stor priv-stor-1) (l l-1) (x x-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self a)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul (rec x) y)) x-0))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (6 0))
    ((3 1) (0 0)) ((3 2) (2 1)) ((4 2) (2 2)) ((5 1) (4 0))
    ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen x y x-0)
  (absent (x l-0) (y l) (x-0 l-1))
  (gen-st (pv b l) (pv self l-0) (pv a l-1))
  (facts (silly (exp (gen) x-0)) (neq (exp (gen) x-0) (gen))
    (neq self b) (undisclosed l-0) (undisclosed l))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)) ((5 1) (4 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec x) y)) x-0))
    (exp (gen) (mul (rec x) y x-0)) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y x-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-1 (cat pt-3 (pv a l-1)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 a b-0 (exp (gen) x-0))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv a l-1))))
    ((recv (cat (exp (gen) (mul (rec x) y)) x-0))
      (send (cat (exp (gen) (mul (rec x) y)) x-0))))
  (label 83)
  (parent 36)
  (unrealized (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (b self a b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (gb base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y l l-0 x-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y x-0))) (priv-stor priv-stor-0) (l l-0)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) x-0)) (priv-stor priv-stor) (l l) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand init 3 (na na-0) (a a) (b b-0) (gb gb)
    (priv-stor priv-stor-1) (l l-1) (x x-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self a)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul (rec x) x-0)) y))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (6 0))
    ((3 1) (0 0)) ((3 2) (2 1)) ((4 2) (2 2)) ((5 1) (4 0))
    ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen x y x-0)
  (absent (x l-0) (y l) (x-0 l-1))
  (gen-st (pv b l) (pv self l-0) (pv a l-1))
  (facts (silly (exp (gen) x-0)) (neq (exp (gen) x-0) (gen))
    (neq self b) (undisclosed l-0) (undisclosed l))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)) ((5 1) (4 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec x) x-0)) y))
    (exp (gen) (mul (rec x) y x-0)) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y x-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-1 (cat pt-3 (pv a l-1)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 a b-0 (exp (gen) x-0))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv a l-1))))
    ((recv (cat (exp (gen) (mul (rec x) x-0)) y))
      (send (cat (exp (gen) (mul (rec x) x-0)) y))))
  (label 84)
  (parent 36)
  (unrealized (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (b self a b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (gb base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y l l-0 x-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y x-0))) (priv-stor priv-stor-0) (l l-0)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) x-0)) (priv-stor priv-stor) (l l) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand init 3 (na na-0) (a a) (b b-0) (gb gb)
    (priv-stor priv-stor-1) (l l-1) (x x-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self a)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul y x-0)) x))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (6 0))
    ((3 1) (0 0)) ((3 2) (2 1)) ((4 2) (2 2)) ((5 1) (4 0))
    ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen x y x-0)
  (absent (x l-0) (y l) (x-0 l-1))
  (gen-st (pv b l) (pv self l-0) (pv a l-1))
  (facts (silly (exp (gen) x-0)) (neq (exp (gen) x-0) (gen))
    (neq self b) (undisclosed l-0) (undisclosed l))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)) ((5 1) (4 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) (mul y x-0)) x))
    (exp (gen) (mul (rec x) y x-0)) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y x-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-1 (cat pt-3 (pv a l-1)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 a b-0 (exp (gen) x-0))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv a l-1))))
    ((recv (cat (exp (gen) (mul y x-0)) x))
      (send (cat (exp (gen) (mul y x-0)) x))))
  (label 85)
  (parent 36)
  (unrealized (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data)
    (b self self-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y l l-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y l-1))) (priv-stor priv-stor-0) (l l-0)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) l-1)) (priv-stor priv-stor) (l l) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self-0)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul (rec x) y)) l-1))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-1)
    (l l-1))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (5 0))
    ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (6 0)) ((4 2) (2 2))
    ((5 1) (0 3)) ((6 2) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l-0) (y l))
  (gen-st (pv b l) (pv self l-0) (pv self-0 l-1))
  (facts (silly (exp (gen) l-1)) (neq (exp (gen) l-1) (gen))
    (neq self b) (undisclosed l-0) (undisclosed l))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)) ((4 1) (6 0)))
  (rule fact-resp-neq0 fact-resp-silly gen-st-ltx-disclose-0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-disclose 3) l-1 (5 0)
    (ch-msg priv-stor-1 (cat pt-4 (pv self-0 l-1))))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y l-1))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-1)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) l-1)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-1)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-1 (cat pt-3 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv self-0 l-1)))
      (send
        (sig (body self-0 (exp (gen) l-1) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) (mul (rec x) y)) l-1))
      (send (cat (exp (gen) (mul (rec x) y)) l-1)))
    ((load priv-stor-1 (cat pt-4 (pv self-0 l-1)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l-1)))
  (label 86)
  (parent 43)
  (unrealized (5 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (b self b-0 name)
    (pt pt-0 pt-1 pt-2 pval) (gb base) (priv-stor priv-stor-0 locn)
    (x y l rndx) (w expt) (x-0 l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul (rec x) y w x-0))) (priv-stor priv-stor-0) (l l)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) (mul w x-0))) (priv-stor priv-stor) (l l-0) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) x-0) w))
  (defstrand init 3 (na na-0) (a b) (b b-0) (gb gb)
    (priv-stor priv-stor) (l l-0) (x x-0))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 1) (5 0)) ((1 2) (0 1))
    ((2 3) (0 3)) ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (2 2))
    ((5 2) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen x y x-0)
  (absent (x l) (y l-0) (x-0 l-0))
  (precur (4 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) (mul w x-0)))
    (neq (exp (gen) (mul w x-0)) (gen)) (neq self b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((1 1) (5 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 6 1 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv a l-1))) (5 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y w x-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w x-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul w x-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w x-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) x-0) w)) (send (cat (exp (gen) x-0) w)))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 b b-0 (exp (gen) x-0)))))
  (label 87)
  (parent 46)
  (unrealized (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (b self b-0 name)
    (pt pt-0 pt-1 pt-2 pval) (gb base) (priv-stor priv-stor-0 locn)
    (x y l rndx) (w expt) (x-0 l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y w x-0))) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) (mul w x-0))) (priv-stor priv-stor) (l l) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) x-0) w))
  (defstrand init 3 (na na-0) (a self) (b b-0) (gb gb)
    (priv-stor priv-stor-0) (l l-0) (x x-0))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (0 0)) ((3 1) (5 0)) ((3 2) (2 1)) ((4 1) (2 2))
    ((5 2) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen x y x-0)
  (absent (x l-0) (y l) (x-0 l-0))
  (precur (4 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly (exp (gen) (mul w x-0)))
    (neq (exp (gen) (mul w x-0)) (gen)) (neq self b) (undisclosed l-0)
    (undisclosed l))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)) ((3 1) (5 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 6 3 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv a l-1))) (5 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y w x-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w x-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul w x-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w x-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) x-0) w)) (send (cat (exp (gen) x-0) w)))
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 self b-0 (exp (gen) x-0)))))
  (label 88)
  (parent 46)
  (unrealized (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (b self a b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (gb base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y l l-0 rndx) (w expt)
    (x-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y w x-0))) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) (mul w x-0))) (priv-stor priv-stor) (l l) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) x-0) w))
  (defstrand init 3 (na na-0) (a a) (b b-0) (gb gb)
    (priv-stor priv-stor-1) (l l-1) (x x-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self a)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (2 2)) ((5 2) (4 0))
    ((6 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen x y x-0)
  (absent (x l-0) (y l) (x-0 l-1))
  (precur (4 0))
  (gen-st (pv b l) (pv self l-0) (pv a l-1))
  (facts (silly (exp (gen) (mul w x-0)))
    (neq (exp (gen) (mul w x-0)) (gen)) (neq self b) (undisclosed l-0)
    (undisclosed l))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)) ((6 1) (5 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv a l-1))) (5 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y w x-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w x-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul w x-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w x-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) x-0) w)) (send (cat (exp (gen) x-0) w)))
    ((load priv-stor-1 (cat pt-3 (pv a l-1)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 a b-0 (exp (gen) x-0))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv a l-1)))))
  (label 89)
  (parent 46)
  (unrealized (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (y l rndx)
    (w expt) (l-0 x rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul y w))) (priv-stor priv-stor-0) (l l-0) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) (mul w x))) (priv-stor priv-stor) (l l) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (0 0)) ((3 2) (2 1)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen y x)
  (absent (y l) (x l-0))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly (exp (gen) (mul w x))) (neq (exp (gen) (mul w x)) (gen))
    (neq self b) (undisclosed l-0) (undisclosed l))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y w))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w x)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul w x))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w x)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 90)
  (parent 47)
  (realized)
  (shape)
  (maps
    ((0)
      ((a self) (b b) (l l-0) (l-peer l) (x x)
        (gy (exp (gen) (mul y w))) (na na) (nb nb)
        (priv-stor priv-stor-0))))
  (origs (na (0 2)) (l-0 (3 1)) (pt-2 (3 1)) (l (1 1)) (pt-0 (1 1))
    (nb (2 3))))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (l x l-0 y rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) y)) (priv-stor priv-stor-0) (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) x)) (priv-stor priv-stor) (l l-0) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (gen) x))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (2 2)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l) (y l-0))
  (precur (4 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) x)) (neq (exp (gen) x) (gen)) (neq self b)
    (undisclosed l) (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 5 2 resp 4) (exp (gen) y-0) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (gen) x)) (send (cat (gen) x))))
  (label 91)
  (parent 48)
  (unrealized (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (x y l l-0 rndx) (w w-0 expt))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y w))) (priv-stor priv-stor-0) (l l-0)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) w)) (priv-stor priv-stor) (l l) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (gen) w))
  (deflistener (cat (exp (gen) (mul (rec x) y w (rec w-0))) w-0))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (5 0))
    ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (2 2)) ((5 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l-0) (y l))
  (precur (4 0) (5 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly (exp (gen) w)) (neq (exp (gen) w) (gen)) (neq self b)
    (undisclosed l-0) (undisclosed l))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec x) y w (rec w-0))) w-0))
    (exp (gen) (mul (rec x) y w)) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y w))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) w)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (gen) w)) (send (cat (gen) w)))
    ((recv (cat (exp (gen) (mul (rec x) y w (rec w-0))) w-0))
      (send (cat (exp (gen) (mul (rec x) y w (rec w-0))) w-0))))
  (label 92)
  (parent 48)
  (unrealized (5 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (l x l-0 y rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) y)) (priv-stor priv-stor-0) (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) x)) (priv-stor priv-stor) (l l-0) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-0) (mul x (rec l-0))))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (2 2)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l) (y l-0))
  (precur (4 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) x)) (neq (exp (gen) x) (gen)) (neq self b)
    (undisclosed l) (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 5 2 resp 4) (exp (gen) y-0) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l-0) (mul x (rec l-0))))
      (send (cat (exp (gen) l-0) (mul x (rec l-0))))))
  (label 93)
  (parent 49)
  (unrealized (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x y l rndx)
    (w expt) (l-0 rndx) (w-0 expt))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul (rec x) y w l-0))) (priv-stor priv-stor-0) (l l)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) (mul w l-0))) (priv-stor priv-stor) (l l-0) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-0) w))
  (deflistener (cat (exp (gen) (mul (rec x) y w l-0 (rec w-0))) w-0))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (5 0))
    ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (2 2)) ((5 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l) (y l-0))
  (precur (4 0) (5 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) (mul w l-0)))
    (neq (exp (gen) (mul w l-0)) (gen)) (neq self b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener
      (cat (exp (gen) (mul (rec x) y w l-0 (rec w-0))) w-0))
    (exp (gen) (mul (rec x) y w l-0)) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y w l-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w l-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul w l-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w l-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l-0) w)) (send (cat (exp (gen) l-0) w)))
    ((recv (cat (exp (gen) (mul (rec x) y w l-0 (rec w-0))) w-0))
      (send (cat (exp (gen) (mul (rec x) y w l-0 (rec w-0))) w-0))))
  (label 94)
  (parent 49)
  (unrealized (5 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (b self a name)
    (pt pt-0 pt-1 pt-2 pval) (ga gx base) (priv-stor priv-stor-0 locn)
    (x y l rndx) (w expt) (y-0 l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul (rec x) y w y-0))) (priv-stor priv-stor-0) (l l)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) (mul w y-0))) (priv-stor priv-stor) (l l-0) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) y-0) w))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b) (ga ga) (gx gx)
    (priv-stor priv-stor) (l l-0) (y y-0))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 1) (5 0)) ((1 2) (0 1))
    ((2 3) (0 3)) ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (2 2))
    ((5 3) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen x y y-0)
  (absent (x l) (y l-0) (y-0 l-0))
  (precur (4 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly gx) (silly (exp (gen) (mul w y-0))) (neq gx (gen))
    (neq (exp (gen) (mul w y-0)) (gen)) (neq self b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((1 1) (5 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 6 1 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv b-0 l-1))) (5 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y w y-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w y-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul w y-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w y-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y-0) w)) (send (cat (exp (gen) y-0) w)))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a b (hash (exp ga l-0) (exp gx y-0)))))))
  (label 95)
  (parent 50)
  (unrealized (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (b self a name)
    (pt pt-0 pt-1 pt-2 pval) (ga gx base) (priv-stor priv-stor-0 locn)
    (x y l rndx) (w expt) (y-0 l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y w y-0))) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) (mul w y-0))) (priv-stor priv-stor) (l l) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) y-0) w))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b self) (ga ga) (gx gx)
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (0 0)) ((3 1) (5 0)) ((3 2) (2 1)) ((4 1) (2 2))
    ((5 3) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen x y y-0)
  (absent (x l-0) (y l) (y-0 l-0))
  (precur (4 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly gx) (silly (exp (gen) (mul w y-0))) (neq gx (gen))
    (neq (exp (gen) (mul w y-0)) (gen)) (neq self b) (undisclosed l-0)
    (undisclosed l))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)) ((3 1) (5 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 6 3 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv b-0 l-1))) (5 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y w y-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w y-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul w y-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w y-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y-0) w)) (send (cat (exp (gen) y-0) w)))
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a self gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a self (hash (exp ga l-0) (exp gx y-0)))))))
  (label 96)
  (parent 50)
  (unrealized (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (b self a b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (ga gx base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y l l-0 rndx) (w expt)
    (y-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y w y-0))) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) (mul w y-0))) (priv-stor priv-stor) (l l) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) y-0) w))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b-0) (ga ga) (gx gx)
    (priv-stor priv-stor-1) (l l-1) (y y-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b-0)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (2 2)) ((5 3) (4 0))
    ((6 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen x y y-0)
  (absent (x l-0) (y l) (y-0 l-1))
  (precur (4 0))
  (gen-st (pv b l) (pv self l-0) (pv b-0 l-1))
  (facts (silly gx) (silly (exp (gen) (mul w y-0))) (neq gx (gen))
    (neq (exp (gen) (mul w y-0)) (gen)) (neq self b) (undisclosed l-0)
    (undisclosed l))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)) ((6 1) (5 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv b-0 l-1))) (5 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y w y-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w y-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul w y-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w y-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y-0) w)) (send (cat (exp (gen) y-0) w)))
    ((load priv-stor-1 (cat pt-3 (pv b-0 l-1)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b-0 gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a b-0 (hash (exp ga l-1) (exp gx y-0))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b-0 l-1)))))
  (label 97)
  (parent 50)
  (unrealized (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (x l l-0 y rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) y)) (priv-stor priv-stor-0) (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) x)) (priv-stor priv-stor) (l l-0) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l) (mul x (rec l))))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (0 0)) ((3 2) (2 1)) ((3 2) (4 0)) ((4 1) (2 2)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l) (y l-0))
  (precur (4 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) x)) (neq (exp (gen) x) (gen)) (neq self b)
    (undisclosed l) (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 5 2 resp 4) (exp (gen) y-0) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) (mul x (rec l))))
      (send (cat (exp (gen) l) (mul x (rec l))))))
  (label 98)
  (parent 51)
  (unrealized (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x y l rndx)
    (w expt) (l-0 rndx) (w-0 expt))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y w l-0))) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) (mul w l-0))) (priv-stor priv-stor) (l l) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l-0) w))
  (deflistener (cat (exp (gen) (mul (rec x) y w l-0 (rec w-0))) w-0))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (5 0))
    ((3 1) (0 0)) ((3 2) (2 1)) ((3 2) (4 0)) ((4 1) (2 2))
    ((5 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l-0) (y l))
  (precur (4 0) (5 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly (exp (gen) (mul w l-0)))
    (neq (exp (gen) (mul w l-0)) (gen)) (neq self b) (undisclosed l-0)
    (undisclosed l))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener
      (cat (exp (gen) (mul (rec x) y w l-0 (rec w-0))) w-0))
    (exp (gen) (mul (rec x) y w l-0)) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y w l-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w l-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul w l-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w l-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l-0) w)) (send (cat (exp (gen) l-0) w)))
    ((recv (cat (exp (gen) (mul (rec x) y w l-0 (rec w-0))) w-0))
      (send (cat (exp (gen) (mul (rec x) y w l-0 (rec w-0))) w-0))))
  (label 99)
  (parent 51)
  (unrealized (5 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data)
    (b self self-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l x l-0 l-1 y rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-1))
    (gy (exp (gen) y)) (priv-stor priv-stor-0) (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) x)) (priv-stor priv-stor) (l l-1) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-0) (mul x (rec l-0))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self-0)
    (priv-stor priv-stor-1) (l l-0))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (2 2)) ((5 2) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (y l-1))
  (precur (4 0))
  (gen-st (pv b l-1) (pv self l))
  (facts (silly (exp (gen) x)) (neq (exp (gen) x) (gen)) (neq self b)
    (undisclosed l) (undisclosed l-1))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 6 2 resp 4) (exp (gen) y-0) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-1)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l-0) (mul x (rec l-0))))
      (send (cat (exp (gen) l-0) (mul x (rec l-0)))))
    ((load priv-stor-1 (cat pt-3 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 100)
  (parent 52)
  (unrealized (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data)
    (b self self-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y l l-0 rndx) (w expt)
    (l-1 rndx) (w-0 expt))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y w l-1))) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) (mul w l-1))) (priv-stor priv-stor) (l l) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l-1) w))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self-0)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul (rec x) y w l-1 (rec w-0))) w-0))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (6 0))
    ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (2 2)) ((5 2) (4 0))
    ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l-0) (y l))
  (precur (4 0) (6 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly (exp (gen) (mul w l-1)))
    (neq (exp (gen) (mul w l-1)) (gen)) (neq self b) (undisclosed l-0)
    (undisclosed l))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener
      (cat (exp (gen) (mul (rec x) y w l-1 (rec w-0))) w-0))
    (exp (gen) (mul (rec x) y w l-1)) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y w l-1))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w l-1)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul w l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w l-1)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l-1) w)) (send (cat (exp (gen) l-1) w)))
    ((load priv-stor-1 (cat pt-3 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv self-0 l-1)))
      (send
        (sig (body self-0 (exp (gen) l-1) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) (mul (rec x) y w l-1 (rec w-0))) w-0))
      (send (cat (exp (gen) (mul (rec x) y w l-1 (rec w-0))) w-0))))
  (label 101)
  (parent 52)
  (unrealized (6 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (b self a name)
    (pt pt-0 pt-1 pt-2 pval) (ga gx base) (priv-stor priv-stor-0 locn)
    (x y l y-0 l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul (rec x) y y-0))) (priv-stor priv-stor-0) (l l)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) y-0)) (priv-stor priv-stor) (l l-0) (y y))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b) (ga ga) (gx gx)
    (priv-stor priv-stor) (l l-0) (y y-0))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 1) (5 0)) ((1 2) (0 1))
    ((2 3) (0 3)) ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0))
    ((5 3) (2 2)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen x y y-0)
  (absent (x l) (y l-0) (y-0 l-0))
  (precur (3 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly gx) (silly (exp (gen) y-0)) (neq gx (gen))
    (neq (exp (gen) y-0) (gen)) (neq self b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((1 1) (5 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 6 1 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv b-0 l-1))) (5 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y y-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y y-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) y-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y y-0)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a b (hash (exp ga l-0) (exp gx y-0)))))))
  (label 102)
  (parent 56)
  (unrealized (0 3))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (b self a name)
    (pt pt-0 pt-1 pt-2 pval) (ga gx base) (priv-stor priv-stor-0 locn)
    (x y l y-0 l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y y-0))) (priv-stor priv-stor-0) (l l-0)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) y-0)) (priv-stor priv-stor) (l l) (y y))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b self) (ga ga) (gx gx)
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 1) (5 0)) ((4 2) (3 0))
    ((5 3) (2 2)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen x y y-0)
  (absent (x l-0) (y l) (y-0 l-0))
  (precur (3 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly gx) (silly (exp (gen) y-0)) (neq gx (gen))
    (neq (exp (gen) y-0) (gen)) (neq self b) (undisclosed l-0)
    (undisclosed l))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)) ((4 1) (5 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 6 4 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv b-0 l-1))) (5 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y y-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y y-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) y-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y y-0)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a self gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a self (hash (exp ga l-0) (exp gx y-0)))))))
  (label 103)
  (parent 56)
  (unrealized (0 3))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (b self a b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (ga gx base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y l l-0 y-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y y-0))) (priv-stor priv-stor-0) (l l-0)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) y-0)) (priv-stor priv-stor) (l l) (y y))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b-0) (ga ga) (gx gx)
    (priv-stor priv-stor-1) (l l-1) (y y-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b-0)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((5 3) (2 2))
    ((6 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen x y y-0)
  (absent (x l-0) (y l) (y-0 l-1))
  (precur (3 0))
  (gen-st (pv b l) (pv self l-0) (pv b-0 l-1))
  (facts (silly gx) (silly (exp (gen) y-0)) (neq gx (gen))
    (neq (exp (gen) y-0) (gen)) (neq self b) (undisclosed l-0)
    (undisclosed l))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)) ((6 1) (5 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv b-0 l-1))) (5 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y y-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y y-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) y-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y y-0)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-1 (cat pt-3 (pv b-0 l-1)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b-0 gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a b-0 (hash (exp ga l-1) (exp gx y-0))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b-0 l-1)))))
  (label 104)
  (parent 56)
  (unrealized (0 3))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (b self b-0 name)
    (pt pt-0 pt-1 pt-2 pval) (gb base) (priv-stor priv-stor-0 locn)
    (x y l x-0 l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul (rec x) y x-0))) (priv-stor priv-stor-0) (l l)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) x-0)) (priv-stor priv-stor) (l l-0) (y y))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (defstrand init 3 (na na-0) (a b) (b b-0) (gb gb)
    (priv-stor priv-stor) (l l-0) (x x-0))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 1) (5 0)) ((1 2) (0 1))
    ((2 3) (0 3)) ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0))
    ((5 2) (2 2)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen x y x-0)
  (absent (x l) (y l-0) (x-0 l-0))
  (precur (3 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) x-0)) (neq (exp (gen) x-0) (gen))
    (neq self b) (undisclosed l) (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((1 1) (5 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 6 1 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv a l-1))) (5 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y x-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x-0)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 b b-0 (exp (gen) x-0)))))
  (label 105)
  (parent 57)
  (unrealized (0 3))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (b self b-0 name)
    (pt pt-0 pt-1 pt-2 pval) (gb base) (priv-stor priv-stor-0 locn)
    (x y l x-0 l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y x-0))) (priv-stor priv-stor-0) (l l-0)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) x-0)) (priv-stor priv-stor) (l l) (y y))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand init 3 (na na-0) (a self) (b b-0) (gb gb)
    (priv-stor priv-stor-0) (l l-0) (x x-0))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 1) (5 0)) ((4 2) (3 0))
    ((5 2) (2 2)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen x y x-0)
  (absent (x l-0) (y l) (x-0 l-0))
  (precur (3 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly (exp (gen) x-0)) (neq (exp (gen) x-0) (gen))
    (neq self b) (undisclosed l-0) (undisclosed l))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)) ((4 1) (5 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 6 4 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv a l-1))) (5 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y x-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x-0)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 self b-0 (exp (gen) x-0)))))
  (label 106)
  (parent 57)
  (unrealized (0 3))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (b self a b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (gb base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y l l-0 x-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y x-0))) (priv-stor priv-stor-0) (l l-0)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) x-0)) (priv-stor priv-stor) (l l) (y y))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand init 3 (na na-0) (a a) (b b-0) (gb gb)
    (priv-stor priv-stor-1) (l l-1) (x x-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self a)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((5 2) (2 2))
    ((6 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen x y x-0)
  (absent (x l-0) (y l) (x-0 l-1))
  (precur (3 0))
  (gen-st (pv b l) (pv self l-0) (pv a l-1))
  (facts (silly (exp (gen) x-0)) (neq (exp (gen) x-0) (gen))
    (neq self b) (undisclosed l-0) (undisclosed l))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)) ((6 1) (5 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv a l-1))) (5 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y x-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x-0)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-1 (cat pt-3 (pv a l-1)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 a b-0 (exp (gen) x-0))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv a l-1)))))
  (label 107)
  (parent 57)
  (unrealized (0 3))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (x y l l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y l-0))) (priv-stor priv-stor-0) (l l-0)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) l-0)) (priv-stor priv-stor) (l l) (y y))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec x) y)) l-0))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (5 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((5 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l-0) (y l))
  (precur (3 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly (exp (gen) l-0)) (neq (exp (gen) l-0) (gen))
    (neq self b) (undisclosed l-0) (undisclosed l))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec x) y)) l-0))
    (exp (gen) (mul (rec x) y l-0)) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y l-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) l-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-0)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) (mul (rec x) y)) l-0))
      (send (cat (exp (gen) (mul (rec x) y)) l-0))))
  (label 108)
  (parent 59)
  (unrealized (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (x y l l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y l-0))) (priv-stor priv-stor-0) (l l-0)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) l-0)) (priv-stor priv-stor) (l l) (y y))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec x) l-0)) y))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (5 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((5 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l-0) (y l))
  (precur (3 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly (exp (gen) l-0)) (neq (exp (gen) l-0) (gen))
    (neq self b) (undisclosed l-0) (undisclosed l))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec x) l-0)) y))
    (exp (gen) (mul (rec x) y l-0)) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y l-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) l-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-0)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) (mul (rec x) l-0)) y))
      (send (cat (exp (gen) (mul (rec x) l-0)) y))))
  (label 109)
  (parent 59)
  (unrealized (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (x y l l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y l-0))) (priv-stor priv-stor-0) (l l-0)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) l-0)) (priv-stor priv-stor) (l l) (y y))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) (mul y l-0)) x))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (5 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((5 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l-0) (y l))
  (precur (3 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly (exp (gen) l-0)) (neq (exp (gen) l-0) (gen))
    (neq self b) (undisclosed l-0) (undisclosed l))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) (mul y l-0)) x))
    (exp (gen) (mul (rec x) y l-0)) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y l-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) l-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-0)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) (mul y l-0)) x))
      (send (cat (exp (gen) (mul y l-0)) x))))
  (label 110)
  (parent 59)
  (unrealized (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (x y l l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul (rec x) y l-0))) (priv-stor priv-stor-0) (l l)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) l-0)) (priv-stor priv-stor) (l l-0) (y y))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul (rec x) y)) l-0))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (5 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((5 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l) (y l-0))
  (precur (3 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) l-0)) (neq (exp (gen) l-0) (gen))
    (neq self b) (undisclosed l) (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec x) y)) l-0))
    (exp (gen) (mul (rec x) y l-0)) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y l-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) l-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-0)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) (mul (rec x) y)) l-0))
      (send (cat (exp (gen) (mul (rec x) y)) l-0))))
  (label 111)
  (parent 60)
  (unrealized (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (x y l l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul (rec x) y l-0))) (priv-stor priv-stor-0) (l l)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) l-0)) (priv-stor priv-stor) (l l-0) (y y))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul (rec x) l-0)) y))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (5 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((5 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l) (y l-0))
  (precur (3 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) l-0)) (neq (exp (gen) l-0) (gen))
    (neq self b) (undisclosed l) (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec x) l-0)) y))
    (exp (gen) (mul (rec x) y l-0)) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y l-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) l-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-0)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) (mul (rec x) l-0)) y))
      (send (cat (exp (gen) (mul (rec x) l-0)) y))))
  (label 112)
  (parent 60)
  (unrealized (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (x y l l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul (rec x) y l-0))) (priv-stor priv-stor-0) (l l)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) l-0)) (priv-stor priv-stor) (l l-0) (y y))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul y l-0)) x))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (5 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((5 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l) (y l-0))
  (precur (3 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) l-0)) (neq (exp (gen) l-0) (gen))
    (neq self b) (undisclosed l) (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) (mul y l-0)) x))
    (exp (gen) (mul (rec x) y l-0)) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y l-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) l-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-0)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) (mul y l-0)) x))
      (send (cat (exp (gen) (mul y l-0)) x))))
  (label 113)
  (parent 60)
  (unrealized (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data)
    (b self self-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y l l-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y l-1))) (priv-stor priv-stor-0) (l l-0)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) l-1)) (priv-stor priv-stor) (l l) (y y))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self-0)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul (rec x) y)) l-1))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (6 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((5 2) (2 2))
    ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l-0) (y l))
  (precur (3 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly (exp (gen) l-1)) (neq (exp (gen) l-1) (gen))
    (neq self b) (undisclosed l-0) (undisclosed l))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec x) y)) l-1))
    (exp (gen) (mul (rec x) y l-1)) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y l-1))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-1)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) l-1)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-1)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-1 (cat pt-3 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv self-0 l-1)))
      (send
        (sig (body self-0 (exp (gen) l-1) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) (mul (rec x) y)) l-1))
      (send (cat (exp (gen) (mul (rec x) y)) l-1))))
  (label 114)
  (parent 61)
  (unrealized (6 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data)
    (b self self-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y l l-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y l-1))) (priv-stor priv-stor-0) (l l-0)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) l-1)) (priv-stor priv-stor) (l l) (y y))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self-0)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul (rec x) l-1)) y))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (6 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((5 2) (2 2))
    ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l-0) (y l))
  (precur (3 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly (exp (gen) l-1)) (neq (exp (gen) l-1) (gen))
    (neq self b) (undisclosed l-0) (undisclosed l))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec x) l-1)) y))
    (exp (gen) (mul (rec x) y l-1)) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y l-1))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-1)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) l-1)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-1)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-1 (cat pt-3 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv self-0 l-1)))
      (send
        (sig (body self-0 (exp (gen) l-1) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) (mul (rec x) l-1)) y))
      (send (cat (exp (gen) (mul (rec x) l-1)) y))))
  (label 115)
  (parent 61)
  (unrealized (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data)
    (b self self-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y l l-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y l-1))) (priv-stor priv-stor-0) (l l-0)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) l-1)) (priv-stor priv-stor) (l l) (y y))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self-0)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul y l-1)) x))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (6 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((5 2) (2 2))
    ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l-0) (y l))
  (precur (3 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly (exp (gen) l-1)) (neq (exp (gen) l-1) (gen))
    (neq self b) (undisclosed l-0) (undisclosed l))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) (mul y l-1)) x))
    (exp (gen) (mul (rec x) y l-1)) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y l-1))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-1)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) l-1)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-1)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-1 (cat pt-3 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv self-0 l-1)))
      (send
        (sig (body self-0 (exp (gen) l-1) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) (mul y l-1)) x))
      (send (cat (exp (gen) (mul y l-1)) x))))
  (label 116)
  (parent 61)
  (unrealized (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (b self a b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (gb base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y l l-0 rndx) (w expt)
    (l-1 x-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y w x-0))) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) (mul w x-0))) (priv-stor priv-stor) (l l) (y y))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) x-0) w))
  (defstrand init 3 (na na-0) (a a) (b b-0) (gb gb)
    (priv-stor priv-stor-1) (l l-1) (x x-0))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((5 1) (2 2))
    ((6 2) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen x y x-0)
  (absent (x l-0) (y l) (x-0 l-1))
  (precur (3 0) (5 0))
  (gen-st (pv b l) (pv self l-0) (pv a l-1))
  (facts (silly (exp (gen) (mul w x-0)))
    (neq (exp (gen) (mul w x-0)) (gen)) (neq self b) (undisclosed l-0)
    (undisclosed l))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly gen-st-ltx-disclose-0
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand init 3) (exp (gen) x-0) (5 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y w x-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w x-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul w x-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w x-0)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) x-0) w)) (send (cat (exp (gen) x-0) w)))
    ((load priv-stor-1 (cat pt-3 (pv a l-1)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 a b-0 (exp (gen) x-0)))))
  (label 117)
  (parent 62)
  (unrealized (0 3) (6 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (y l rndx)
    (w expt) (l-0 x rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul y w))) (priv-stor priv-stor-0) (l l-0) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) (mul w x))) (priv-stor priv-stor) (l l) (y y))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) x) w))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((5 1) (2 2)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen y x)
  (absent (y l) (x l-0))
  (precur (3 0) (5 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly (exp (gen) (mul w x))) (neq (exp (gen) (mul w x)) (gen))
    (neq self b) (undisclosed l-0) (undisclosed l))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 6 0 init 3) (exp (gen) x-0) (5 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y w))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w x)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul w x))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w x)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) x) w)) (send (cat (exp (gen) x) w))))
  (label 118)
  (parent 62)
  (seen 47)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (x y l l-0 rndx) (w expt))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y w))) (priv-stor priv-stor-0) (l l-0)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) w)) (priv-stor priv-stor) (l l) (y y))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (gen) w))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((5 1) (2 2)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l-0) (y l))
  (precur (3 0) (5 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly (exp (gen) w)) (neq (exp (gen) w) (gen)) (neq self b)
    (undisclosed l-0) (undisclosed l))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (contracted (gy (exp (gen) (mul (rec x) y w))))
    (gen) (5 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y w))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) w)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (gen) w)) (send (cat (gen) w))))
  (label 119)
  (parent 62)
  (unrealized (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x y l rndx)
    (w expt) (l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul (rec x) y w l-0))) (priv-stor priv-stor-0) (l l)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) (mul w l-0))) (priv-stor priv-stor) (l l-0) (y y))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-0) w))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((5 1) (2 2)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l) (y l-0))
  (precur (3 0) (5 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) (mul w l-0)))
    (neq (exp (gen) (mul w l-0)) (gen)) (neq self b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 6 1 ltx-gen 3) (exp (gen) l-1) (5 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y w l-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w l-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul w l-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w l-0)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l-0) w)) (send (cat (exp (gen) l-0) w))))
  (label 120)
  (parent 62)
  (unrealized (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data)
    (b self a b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pval) (ga gx base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y l l-0 rndx) (w expt)
    (l-1 y-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y w y-0))) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) (mul w y-0))) (priv-stor priv-stor) (l l) (y y))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) y-0) w))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b-0) (ga ga) (gx gx)
    (priv-stor priv-stor-1) (l l-1) (y y-0))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((5 1) (2 2))
    ((6 3) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen x y y-0)
  (absent (x l-0) (y l) (y-0 l-1))
  (precur (3 0) (5 0))
  (gen-st (pv b l) (pv self l-0) (pv b-0 l-1))
  (facts (silly gx) (silly (exp (gen) (mul w y-0))) (neq gx (gen))
    (neq (exp (gen) (mul w y-0)) (gen)) (neq self b) (undisclosed l-0)
    (undisclosed l))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly gen-st-ltx-disclose-0
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand resp 4) (exp (gen) y-0) (5 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y w y-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w y-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul w y-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w y-0)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y-0) w)) (send (cat (exp (gen) y-0) w)))
    ((load priv-stor-1 (cat pt-3 (pv b-0 l-1)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b-0 gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a b-0 (hash (exp ga l-1) (exp gx y-0)))))))
  (label 121)
  (parent 62)
  (unrealized (0 3) (6 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x y l rndx)
    (w expt) (l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y w l-0))) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) (mul w l-0))) (priv-stor priv-stor) (l l) (y y))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l-0) w))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((4 2) (5 0))
    ((5 1) (2 2)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l-0) (y l))
  (precur (3 0) (5 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly (exp (gen) (mul w l-0)))
    (neq (exp (gen) (mul w l-0)) (gen)) (neq self b) (undisclosed l-0)
    (undisclosed l))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 6 4 ltx-gen 3) (exp (gen) l-1) (5 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y w l-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w l-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul w l-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w l-0)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l-0) w)) (send (cat (exp (gen) l-0) w))))
  (label 122)
  (parent 62)
  (unrealized (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data)
    (b self self-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y l l-0 rndx) (w expt)
    (l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y w l-1))) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) (mul w l-1))) (priv-stor priv-stor) (l l) (y y))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l-1) w))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self-0)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((5 1) (2 2))
    ((6 2) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l-0) (y l))
  (precur (3 0) (5 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly (exp (gen) (mul w l-1)))
    (neq (exp (gen) (mul w l-1)) (gen)) (neq self b) (undisclosed l-0)
    (undisclosed l))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 3) (exp (gen) l-1) (5 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y w l-1))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w l-1)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul w l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w l-1)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l-1) w)) (send (cat (exp (gen) l-1) w)))
    ((load priv-stor-1 (cat pt-3 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv self-0 l-1)))
      (send
        (sig (body self-0 (exp (gen) l-1) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 123)
  (parent 62)
  (unrealized (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data)
    (b self self-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y l l-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y l-1))) (priv-stor priv-stor-0) (l l-0)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) l-1)) (priv-stor priv-stor) (l l) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self-0)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul (rec x) y)) l-1))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-1)
    (l l-1))
  (deflistener (cat (exp (gen) (rec x)) y))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (7 0))
    ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (6 0)) ((4 2) (2 2))
    ((5 1) (0 3)) ((6 2) (5 0)) ((7 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l-0) (y l))
  (gen-st (pv b l) (pv self l-0) (pv self-0 l-1))
  (facts (silly (exp (gen) l-1)) (neq (exp (gen) l-1) (gen))
    (neq self b) (undisclosed l-0) (undisclosed l))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)) ((4 1) (6 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) (rec x)) y))
    (exp (gen) (mul (rec x) y)) (5 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y l-1))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-1)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) l-1)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-1)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-1 (cat pt-3 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv self-0 l-1)))
      (send
        (sig (body self-0 (exp (gen) l-1) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) (mul (rec x) y)) l-1))
      (send (cat (exp (gen) (mul (rec x) y)) l-1)))
    ((load priv-stor-1 (cat pt-4 (pv self-0 l-1)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l-1))
    ((recv (cat (exp (gen) (rec x)) y))
      (send (cat (exp (gen) (rec x)) y))))
  (label 124)
  (parent 86)
  (unrealized (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data)
    (b self self-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y l l-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y l-1))) (priv-stor priv-stor-0) (l l-0)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) l-1)) (priv-stor priv-stor) (l l) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self-0)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul (rec x) y)) l-1))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-1)
    (l l-1))
  (deflistener (cat (exp (gen) y) x))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (7 0))
    ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (6 0)) ((4 2) (2 2))
    ((5 1) (0 3)) ((6 2) (5 0)) ((7 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l-0) (y l))
  (gen-st (pv b l) (pv self l-0) (pv self-0 l-1))
  (facts (silly (exp (gen) l-1)) (neq (exp (gen) l-1) (gen))
    (neq self b) (undisclosed l-0) (undisclosed l))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)) ((4 1) (6 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) y) x))
    (exp (gen) (mul (rec x) y)) (5 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y l-1))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-1)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) l-1)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-1)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-1 (cat pt-3 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv self-0 l-1)))
      (send
        (sig (body self-0 (exp (gen) l-1) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) (mul (rec x) y)) l-1))
      (send (cat (exp (gen) (mul (rec x) y)) l-1)))
    ((load priv-stor-1 (cat pt-4 (pv self-0 l-1)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l-1))
    ((recv (cat (exp (gen) y) x)) (send (cat (exp (gen) y) x))))
  (label 125)
  (parent 86)
  (unrealized (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (b self b-0 name)
    (pt pt-0 pt-1 pt-2 pval) (gb base) (priv-stor priv-stor-0 locn)
    (l x x-0 l-0 y rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) y)) (priv-stor priv-stor-0) (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) x)) (priv-stor priv-stor) (l l-0) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) x-0) (mul x (rec x-0))))
  (defstrand init 3 (na na-0) (a b) (b b-0) (gb gb)
    (priv-stor priv-stor) (l l-0) (x x-0))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 1) (5 0)) ((1 2) (0 1))
    ((2 3) (0 3)) ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (2 2))
    ((5 2) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen x x-0 y)
  (absent (x l) (x-0 l-0) (y l-0))
  (precur (4 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) x)) (neq (exp (gen) x) (gen)) (neq self b)
    (undisclosed l) (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((1 1) (5 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 6 2 resp 4) (exp (gen) y-0) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) x-0) (mul x (rec x-0))))
      (send (cat (exp (gen) x-0) (mul x (rec x-0)))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 b b-0 (exp (gen) x-0)))))
  (label 126)
  (parent 87)
  (unrealized (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (b self b-0 name)
    (pt pt-0 pt-1 pt-2 pval) (gb base) (priv-stor priv-stor-0 locn)
    (x y l rndx) (w expt) (x-0 l-0 rndx) (w-0 expt))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul (rec x) y w x-0))) (priv-stor priv-stor-0) (l l)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) (mul w x-0))) (priv-stor priv-stor) (l l-0) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) x-0) w))
  (defstrand init 3 (na na-0) (a b) (b b-0) (gb gb)
    (priv-stor priv-stor) (l l-0) (x x-0))
  (deflistener (cat (exp (gen) (mul (rec x) y w x-0 (rec w-0))) w-0))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 1) (5 0)) ((1 2) (0 1))
    ((2 3) (6 0)) ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (2 2))
    ((5 2) (4 0)) ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen x y x-0)
  (absent (x l) (y l-0) (x-0 l-0))
  (precur (4 0) (6 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) (mul w x-0)))
    (neq (exp (gen) (mul w x-0)) (gen)) (neq self b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((1 1) (5 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener
      (cat (exp (gen) (mul (rec x) y w x-0 (rec w-0))) w-0))
    (exp (gen) (mul (rec x) y w x-0)) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y w x-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w x-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul w x-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w x-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) x-0) w)) (send (cat (exp (gen) x-0) w)))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 b b-0 (exp (gen) x-0))))
    ((recv (cat (exp (gen) (mul (rec x) y w x-0 (rec w-0))) w-0))
      (send (cat (exp (gen) (mul (rec x) y w x-0 (rec w-0))) w-0))))
  (label 127)
  (parent 87)
  (unrealized (6 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (b self b-0 name)
    (pt pt-0 pt-1 pt-2 pval) (gb base) (priv-stor priv-stor-0 locn)
    (l x x-0 l-0 y rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) y)) (priv-stor priv-stor-0) (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) x)) (priv-stor priv-stor) (l l-0) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) x-0) (mul x (rec x-0))))
  (defstrand init 3 (na na-0) (a self) (b b-0) (gb gb)
    (priv-stor priv-stor-0) (l l) (x x-0))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (0 0)) ((3 1) (5 0)) ((3 2) (2 1)) ((4 1) (2 2))
    ((5 2) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen x x-0 y)
  (absent (x l) (x-0 l) (y l-0))
  (precur (4 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) x)) (neq (exp (gen) x) (gen)) (neq self b)
    (undisclosed l) (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)) ((3 1) (5 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 6 2 resp 4) (exp (gen) y-0) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) x-0) (mul x (rec x-0))))
      (send (cat (exp (gen) x-0) (mul x (rec x-0)))))
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 self b-0 (exp (gen) x-0)))))
  (label 128)
  (parent 88)
  (unrealized (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (b self b-0 name)
    (pt pt-0 pt-1 pt-2 pval) (gb base) (priv-stor priv-stor-0 locn)
    (x y l rndx) (w expt) (x-0 l-0 rndx) (w-0 expt))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y w x-0))) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) (mul w x-0))) (priv-stor priv-stor) (l l) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) x-0) w))
  (defstrand init 3 (na na-0) (a self) (b b-0) (gb gb)
    (priv-stor priv-stor-0) (l l-0) (x x-0))
  (deflistener (cat (exp (gen) (mul (rec x) y w x-0 (rec w-0))) w-0))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (6 0))
    ((3 1) (0 0)) ((3 1) (5 0)) ((3 2) (2 1)) ((4 1) (2 2))
    ((5 2) (4 0)) ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen x y x-0)
  (absent (x l-0) (y l) (x-0 l-0))
  (precur (4 0) (6 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly (exp (gen) (mul w x-0)))
    (neq (exp (gen) (mul w x-0)) (gen)) (neq self b) (undisclosed l-0)
    (undisclosed l))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)) ((3 1) (5 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener
      (cat (exp (gen) (mul (rec x) y w x-0 (rec w-0))) w-0))
    (exp (gen) (mul (rec x) y w x-0)) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y w x-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w x-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul w x-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w x-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) x-0) w)) (send (cat (exp (gen) x-0) w)))
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 self b-0 (exp (gen) x-0))))
    ((recv (cat (exp (gen) (mul (rec x) y w x-0 (rec w-0))) w-0))
      (send (cat (exp (gen) (mul (rec x) y w x-0 (rec w-0))) w-0))))
  (label 129)
  (parent 88)
  (unrealized (6 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (b self a b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (gb base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 x x-0 l-1 y rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-1))
    (gy (exp (gen) y)) (priv-stor priv-stor-0) (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) x)) (priv-stor priv-stor) (l l-1) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) x-0) (mul x (rec x-0))))
  (defstrand init 3 (na na-0) (a a) (b b-0) (gb gb)
    (priv-stor priv-stor-1) (l l-0) (x x-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self a)
    (priv-stor priv-stor-1) (l l-0))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (2 2)) ((5 2) (4 0))
    ((6 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen x x-0 y)
  (absent (x l) (x-0 l-0) (y l-1))
  (precur (4 0))
  (gen-st (pv b l-1) (pv self l) (pv a l-0))
  (facts (silly (exp (gen) x)) (neq (exp (gen) x) (gen)) (neq self b)
    (undisclosed l) (undisclosed l-1))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)) ((6 1) (5 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 7 2 resp 4) (exp (gen) y-0) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-1)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) x-0) (mul x (rec x-0))))
      (send (cat (exp (gen) x-0) (mul x (rec x-0)))))
    ((load priv-stor-1 (cat pt-3 (pv a l-0)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 a b-0 (exp (gen) x-0))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv a l-0)))))
  (label 130)
  (parent 89)
  (unrealized (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (b self a b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (gb base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y l l-0 rndx) (w expt)
    (x-0 l-1 rndx) (w-0 expt))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y w x-0))) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) (mul w x-0))) (priv-stor priv-stor) (l l) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) x-0) w))
  (defstrand init 3 (na na-0) (a a) (b b-0) (gb gb)
    (priv-stor priv-stor-1) (l l-1) (x x-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self a)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul (rec x) y w x-0 (rec w-0))) w-0))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (7 0))
    ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (2 2)) ((5 2) (4 0))
    ((6 1) (5 0)) ((7 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen x y x-0)
  (absent (x l-0) (y l) (x-0 l-1))
  (precur (4 0) (7 0))
  (gen-st (pv b l) (pv self l-0) (pv a l-1))
  (facts (silly (exp (gen) (mul w x-0)))
    (neq (exp (gen) (mul w x-0)) (gen)) (neq self b) (undisclosed l-0)
    (undisclosed l))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)) ((6 1) (5 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener
      (cat (exp (gen) (mul (rec x) y w x-0 (rec w-0))) w-0))
    (exp (gen) (mul (rec x) y w x-0)) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y w x-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w x-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul w x-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w x-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) x-0) w)) (send (cat (exp (gen) x-0) w)))
    ((load priv-stor-1 (cat pt-3 (pv a l-1)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 a b-0 (exp (gen) x-0))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv a l-1))))
    ((recv (cat (exp (gen) (mul (rec x) y w x-0 (rec w-0))) w-0))
      (send (cat (exp (gen) (mul (rec x) y w x-0 (rec w-0))) w-0))))
  (label 131)
  (parent 89)
  (unrealized (7 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (l x rndx)
    (w expt) (l-0 y rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul w y))) (priv-stor priv-stor-0) (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) (mul x w))) (priv-stor priv-stor) (l l-0) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (gen) (mul x w)))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (5 0))
    ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (2 2)) ((5 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l) (y l-0))
  (precur (4 0) (5 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) (mul x w))) (neq (exp (gen) (mul x w)) (gen))
    (neq self b) (undisclosed l) (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 6 2 resp 4) (exp (gen) y-0) (5 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul x w))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (gen) (mul x w))) (send (cat (gen) (mul x w))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 132)
  (parent 92)
  (unrealized (4 0))
  (comment "4 in cohort - 4 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (l x rndx)
    (w expt) (l-0 y rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul w y))) (priv-stor priv-stor-0) (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) (mul x w))) (priv-stor priv-stor) (l l-0) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-0) (mul x w (rec l-0))))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (5 0))
    ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (2 2)) ((5 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l) (y l-0))
  (precur (4 0) (5 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) (mul x w))) (neq (exp (gen) (mul x w)) (gen))
    (neq self b) (undisclosed l) (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 6 2 resp 4) (exp (gen) y-0) (5 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul x w))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l-0) (mul x w (rec l-0))))
      (send (cat (exp (gen) l-0) (mul x w (rec l-0)))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 133)
  (parent 94)
  (unrealized (4 0))
  (comment "4 in cohort - 4 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (b self a name)
    (pt pt-0 pt-1 pt-2 pval) (ga gx base) (priv-stor priv-stor-0 locn)
    (l x y l-0 y-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) y-0)) (priv-stor priv-stor-0) (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) x)) (priv-stor priv-stor) (l l-0) (y y-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) y) (mul x (rec y))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b) (ga ga) (gx gx)
    (priv-stor priv-stor) (l l-0) (y y))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 1) (5 0)) ((1 2) (0 1))
    ((2 3) (0 3)) ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (2 2))
    ((5 3) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen x y y-0)
  (absent (x l) (y l-0) (y-0 l-0))
  (precur (4 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly gx) (silly (exp (gen) x)) (neq gx (gen))
    (neq (exp (gen) x) (gen)) (neq self b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((1 1) (5 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 6 2 resp 4) (exp (gen) y-1) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y-0)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x)))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y) (mul x (rec y))))
      (send (cat (exp (gen) y) (mul x (rec y)))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b gx))
      (send
        (cat (exp (gen) y)
          (enc na-0 nb-0 a b (hash (exp ga l-0) (exp gx y)))))))
  (label 134)
  (parent 95)
  (unrealized (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (b self a name)
    (pt pt-0 pt-1 pt-2 pval) (ga gx base) (priv-stor priv-stor-0 locn)
    (x y l rndx) (w expt) (y-0 l-0 rndx) (w-0 expt))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul (rec x) y w y-0))) (priv-stor priv-stor-0) (l l)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) (mul w y-0))) (priv-stor priv-stor) (l l-0) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) y-0) w))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b) (ga ga) (gx gx)
    (priv-stor priv-stor) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) (mul (rec x) y w y-0 (rec w-0))) w-0))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 1) (5 0)) ((1 2) (0 1))
    ((2 3) (6 0)) ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (2 2))
    ((5 3) (4 0)) ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen x y y-0)
  (absent (x l) (y l-0) (y-0 l-0))
  (precur (4 0) (6 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly gx) (silly (exp (gen) (mul w y-0))) (neq gx (gen))
    (neq (exp (gen) (mul w y-0)) (gen)) (neq self b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((1 1) (5 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener
      (cat (exp (gen) (mul (rec x) y w y-0 (rec w-0))) w-0))
    (exp (gen) (mul (rec x) y w y-0)) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y w y-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w y-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul w y-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w y-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y-0) w)) (send (cat (exp (gen) y-0) w)))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a b (hash (exp ga l-0) (exp gx y-0))))))
    ((recv (cat (exp (gen) (mul (rec x) y w y-0 (rec w-0))) w-0))
      (send (cat (exp (gen) (mul (rec x) y w y-0 (rec w-0))) w-0))))
  (label 135)
  (parent 95)
  (unrealized (6 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (b self a name)
    (pt pt-0 pt-1 pt-2 pval) (ga gx base) (priv-stor priv-stor-0 locn)
    (l x y l-0 y-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) y-0)) (priv-stor priv-stor-0) (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) x)) (priv-stor priv-stor) (l l-0) (y y-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) y) (mul x (rec y))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b self) (ga ga) (gx gx)
    (priv-stor priv-stor-0) (l l) (y y))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (0 0)) ((3 1) (5 0)) ((3 2) (2 1)) ((4 1) (2 2))
    ((5 3) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen x y y-0)
  (absent (x l) (y l) (y-0 l-0))
  (precur (4 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly gx) (silly (exp (gen) x)) (neq gx (gen))
    (neq (exp (gen) x) (gen)) (neq self b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)) ((3 1) (5 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 6 2 resp 4) (exp (gen) y-1) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y-0)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x)))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y) (mul x (rec y))))
      (send (cat (exp (gen) y) (mul x (rec y)))))
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a self gx))
      (send
        (cat (exp (gen) y)
          (enc na-0 nb-0 a self (hash (exp ga l) (exp gx y)))))))
  (label 136)
  (parent 96)
  (unrealized (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (b self a name)
    (pt pt-0 pt-1 pt-2 pval) (ga gx base) (priv-stor priv-stor-0 locn)
    (x y l rndx) (w expt) (y-0 l-0 rndx) (w-0 expt))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y w y-0))) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) (mul w y-0))) (priv-stor priv-stor) (l l) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) y-0) w))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b self) (ga ga) (gx gx)
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) (mul (rec x) y w y-0 (rec w-0))) w-0))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (6 0))
    ((3 1) (0 0)) ((3 1) (5 0)) ((3 2) (2 1)) ((4 1) (2 2))
    ((5 3) (4 0)) ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen x y y-0)
  (absent (x l-0) (y l) (y-0 l-0))
  (precur (4 0) (6 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly gx) (silly (exp (gen) (mul w y-0))) (neq gx (gen))
    (neq (exp (gen) (mul w y-0)) (gen)) (neq self b) (undisclosed l-0)
    (undisclosed l))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)) ((3 1) (5 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener
      (cat (exp (gen) (mul (rec x) y w y-0 (rec w-0))) w-0))
    (exp (gen) (mul (rec x) y w y-0)) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y w y-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w y-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul w y-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w y-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y-0) w)) (send (cat (exp (gen) y-0) w)))
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a self gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a self (hash (exp ga l-0) (exp gx y-0))))))
    ((recv (cat (exp (gen) (mul (rec x) y w y-0 (rec w-0))) w-0))
      (send (cat (exp (gen) (mul (rec x) y w y-0 (rec w-0))) w-0))))
  (label 137)
  (parent 96)
  (unrealized (6 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (b self a b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (ga gx base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 x y l-1 y-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-1))
    (gy (exp (gen) y-0)) (priv-stor priv-stor-0) (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) x)) (priv-stor priv-stor) (l l-1) (y y-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) y) (mul x (rec y))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b-0) (ga ga) (gx gx)
    (priv-stor priv-stor-1) (l l-0) (y y))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b-0)
    (priv-stor priv-stor-1) (l l-0))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (2 2)) ((5 3) (4 0))
    ((6 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen x y y-0)
  (absent (x l) (y l-0) (y-0 l-1))
  (precur (4 0))
  (gen-st (pv b l-1) (pv self l) (pv b-0 l-0))
  (facts (silly gx) (silly (exp (gen) x)) (neq gx (gen))
    (neq (exp (gen) x) (gen)) (neq self b) (undisclosed l)
    (undisclosed l-1))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)) ((6 1) (5 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 7 2 resp 4) (exp (gen) y-1) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y-0)
          (enc na nb self b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-1)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x)))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y) (mul x (rec y))))
      (send (cat (exp (gen) y) (mul x (rec y)))))
    ((load priv-stor-1 (cat pt-3 (pv b-0 l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b-0 gx))
      (send
        (cat (exp (gen) y)
          (enc na-0 nb-0 a b-0 (hash (exp ga l-0) (exp gx y))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b-0 l-0)))))
  (label 138)
  (parent 97)
  (unrealized (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (b self a b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (ga gx base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y l l-0 rndx) (w expt)
    (y-0 l-1 rndx) (w-0 expt))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y w y-0))) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) (mul w y-0))) (priv-stor priv-stor) (l l) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) y-0) w))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b-0) (ga ga) (gx gx)
    (priv-stor priv-stor-1) (l l-1) (y y-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b-0)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul (rec x) y w y-0 (rec w-0))) w-0))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (7 0))
    ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (2 2)) ((5 3) (4 0))
    ((6 1) (5 0)) ((7 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen x y y-0)
  (absent (x l-0) (y l) (y-0 l-1))
  (precur (4 0) (7 0))
  (gen-st (pv b l) (pv self l-0) (pv b-0 l-1))
  (facts (silly gx) (silly (exp (gen) (mul w y-0))) (neq gx (gen))
    (neq (exp (gen) (mul w y-0)) (gen)) (neq self b) (undisclosed l-0)
    (undisclosed l))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)) ((6 1) (5 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener
      (cat (exp (gen) (mul (rec x) y w y-0 (rec w-0))) w-0))
    (exp (gen) (mul (rec x) y w y-0)) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y w y-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w y-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul w y-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w y-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y-0) w)) (send (cat (exp (gen) y-0) w)))
    ((load priv-stor-1 (cat pt-3 (pv b-0 l-1)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b-0 gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a b-0 (hash (exp ga l-1) (exp gx y-0))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b-0 l-1))))
    ((recv (cat (exp (gen) (mul (rec x) y w y-0 (rec w-0))) w-0))
      (send (cat (exp (gen) (mul (rec x) y w y-0 (rec w-0))) w-0))))
  (label 139)
  (parent 97)
  (unrealized (7 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x l rndx)
    (w expt) (l-0 y rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul w y))) (priv-stor priv-stor-0) (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) (mul x w))) (priv-stor priv-stor) (l l-0) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l) (mul x (rec l) w)))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (5 0))
    ((3 1) (0 0)) ((3 2) (2 1)) ((3 2) (4 0)) ((4 1) (2 2))
    ((5 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l) (y l-0))
  (precur (4 0) (5 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) (mul x w))) (neq (exp (gen) (mul x w)) (gen))
    (neq self b) (undisclosed l) (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 6 2 resp 4) (exp (gen) y-0) (5 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul x w))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) (mul x (rec l) w)))
      (send (cat (exp (gen) l) (mul x (rec l) w))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 140)
  (parent 99)
  (unrealized (4 0))
  (comment "4 in cohort - 4 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data)
    (b self self-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l x l-0 rndx) (w expt)
    (l-1 y rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-1))
    (gy (exp (gen) (mul w y))) (priv-stor priv-stor-0) (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) (mul x w))) (priv-stor priv-stor) (l l-1) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-0) (mul x (rec l-0) w)))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self-0)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (6 0))
    ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (2 2)) ((5 2) (4 0))
    ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (y l-1))
  (precur (4 0) (6 0))
  (gen-st (pv b l-1) (pv self l))
  (facts (silly (exp (gen) (mul x w))) (neq (exp (gen) (mul x w)) (gen))
    (neq self b) (undisclosed l) (undisclosed l-1))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 7 2 resp 4) (exp (gen) y-0) (6 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb self b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x w y)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-1)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul x w))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x w y)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l-0) (mul x (rec l-0) w)))
      (send (cat (exp (gen) l-0) (mul x (rec l-0) w))))
    ((load priv-stor-1 (cat pt-3 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 141)
  (parent 101)
  (unrealized (4 0))
  (comment "5 in cohort - 5 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (b self a name)
    (pt pt-0 pt-1 pt-2 pval) (ga gx base) (priv-stor priv-stor-0 locn)
    (x y l y-0 l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul (rec x) y y-0))) (priv-stor priv-stor-0) (l l)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) y-0)) (priv-stor priv-stor) (l l-0) (y y))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b) (ga ga) (gx gx)
    (priv-stor priv-stor) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) (mul (rec x) y)) y-0))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 1) (5 0)) ((1 2) (0 1))
    ((2 3) (6 0)) ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0))
    ((5 3) (2 2)) ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen x y y-0)
  (absent (x l) (y l-0) (y-0 l-0))
  (precur (3 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly gx) (silly (exp (gen) y-0)) (neq gx (gen))
    (neq (exp (gen) y-0) (gen)) (neq self b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((1 1) (5 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec x) y)) y-0))
    (exp (gen) (mul (rec x) y y-0)) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y y-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y y-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) y-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y y-0)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a b (hash (exp ga l-0) (exp gx y-0))))))
    ((recv (cat (exp (gen) (mul (rec x) y)) y-0))
      (send (cat (exp (gen) (mul (rec x) y)) y-0))))
  (label 142)
  (parent 102)
  (unrealized (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (b self a name)
    (pt pt-0 pt-1 pt-2 pval) (ga gx base) (priv-stor priv-stor-0 locn)
    (x y l y-0 l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul (rec x) y y-0))) (priv-stor priv-stor-0) (l l)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) y-0)) (priv-stor priv-stor) (l l-0) (y y))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b) (ga ga) (gx gx)
    (priv-stor priv-stor) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) (mul (rec x) y-0)) y))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 1) (5 0)) ((1 2) (0 1))
    ((2 3) (6 0)) ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0))
    ((5 3) (2 2)) ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen x y y-0)
  (absent (x l) (y l-0) (y-0 l-0))
  (precur (3 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly gx) (silly (exp (gen) y-0)) (neq gx (gen))
    (neq (exp (gen) y-0) (gen)) (neq self b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((1 1) (5 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec x) y-0)) y))
    (exp (gen) (mul (rec x) y y-0)) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y y-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y y-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) y-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y y-0)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a b (hash (exp ga l-0) (exp gx y-0))))))
    ((recv (cat (exp (gen) (mul (rec x) y-0)) y))
      (send (cat (exp (gen) (mul (rec x) y-0)) y))))
  (label 143)
  (parent 102)
  (unrealized (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (b self a name)
    (pt pt-0 pt-1 pt-2 pval) (ga gx base) (priv-stor priv-stor-0 locn)
    (x y l y-0 l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul (rec x) y y-0))) (priv-stor priv-stor-0) (l l)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) y-0)) (priv-stor priv-stor) (l l-0) (y y))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b) (ga ga) (gx gx)
    (priv-stor priv-stor) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) (mul y y-0)) x))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 1) (5 0)) ((1 2) (0 1))
    ((2 3) (6 0)) ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0))
    ((5 3) (2 2)) ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen x y y-0)
  (absent (x l) (y l-0) (y-0 l-0))
  (precur (3 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly gx) (silly (exp (gen) y-0)) (neq gx (gen))
    (neq (exp (gen) y-0) (gen)) (neq self b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((1 1) (5 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) (mul y y-0)) x))
    (exp (gen) (mul (rec x) y y-0)) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y y-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y y-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) y-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y y-0)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a b (hash (exp ga l-0) (exp gx y-0))))))
    ((recv (cat (exp (gen) (mul y y-0)) x))
      (send (cat (exp (gen) (mul y y-0)) x))))
  (label 144)
  (parent 102)
  (unrealized (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (b self a name)
    (pt pt-0 pt-1 pt-2 pval) (ga gx base) (priv-stor priv-stor-0 locn)
    (x y l y-0 l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y y-0))) (priv-stor priv-stor-0) (l l-0)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) y-0)) (priv-stor priv-stor) (l l) (y y))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b self) (ga ga) (gx gx)
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) (mul (rec x) y)) y-0))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (6 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 1) (5 0)) ((4 2) (3 0))
    ((5 3) (2 2)) ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen x y y-0)
  (absent (x l-0) (y l) (y-0 l-0))
  (precur (3 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly gx) (silly (exp (gen) y-0)) (neq gx (gen))
    (neq (exp (gen) y-0) (gen)) (neq self b) (undisclosed l-0)
    (undisclosed l))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)) ((4 1) (5 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec x) y)) y-0))
    (exp (gen) (mul (rec x) y y-0)) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y y-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y y-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) y-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y y-0)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a self gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a self (hash (exp ga l-0) (exp gx y-0))))))
    ((recv (cat (exp (gen) (mul (rec x) y)) y-0))
      (send (cat (exp (gen) (mul (rec x) y)) y-0))))
  (label 145)
  (parent 103)
  (unrealized (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (b self a name)
    (pt pt-0 pt-1 pt-2 pval) (ga gx base) (priv-stor priv-stor-0 locn)
    (x y l y-0 l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y y-0))) (priv-stor priv-stor-0) (l l-0)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) y-0)) (priv-stor priv-stor) (l l) (y y))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b self) (ga ga) (gx gx)
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) (mul (rec x) y-0)) y))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (6 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 1) (5 0)) ((4 2) (3 0))
    ((5 3) (2 2)) ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen x y y-0)
  (absent (x l-0) (y l) (y-0 l-0))
  (precur (3 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly gx) (silly (exp (gen) y-0)) (neq gx (gen))
    (neq (exp (gen) y-0) (gen)) (neq self b) (undisclosed l-0)
    (undisclosed l))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)) ((4 1) (5 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec x) y-0)) y))
    (exp (gen) (mul (rec x) y y-0)) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y y-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y y-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) y-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y y-0)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a self gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a self (hash (exp ga l-0) (exp gx y-0))))))
    ((recv (cat (exp (gen) (mul (rec x) y-0)) y))
      (send (cat (exp (gen) (mul (rec x) y-0)) y))))
  (label 146)
  (parent 103)
  (unrealized (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (b self a name)
    (pt pt-0 pt-1 pt-2 pval) (ga gx base) (priv-stor priv-stor-0 locn)
    (x y l y-0 l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y y-0))) (priv-stor priv-stor-0) (l l-0)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) y-0)) (priv-stor priv-stor) (l l) (y y))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b self) (ga ga) (gx gx)
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) (mul y y-0)) x))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (6 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 1) (5 0)) ((4 2) (3 0))
    ((5 3) (2 2)) ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen x y y-0)
  (absent (x l-0) (y l) (y-0 l-0))
  (precur (3 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly gx) (silly (exp (gen) y-0)) (neq gx (gen))
    (neq (exp (gen) y-0) (gen)) (neq self b) (undisclosed l-0)
    (undisclosed l))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)) ((4 1) (5 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) (mul y y-0)) x))
    (exp (gen) (mul (rec x) y y-0)) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y y-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y y-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) y-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y y-0)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a self gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a self (hash (exp ga l-0) (exp gx y-0))))))
    ((recv (cat (exp (gen) (mul y y-0)) x))
      (send (cat (exp (gen) (mul y y-0)) x))))
  (label 147)
  (parent 103)
  (unrealized (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (b self a b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (ga gx base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y l l-0 y-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y y-0))) (priv-stor priv-stor-0) (l l-0)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) y-0)) (priv-stor priv-stor) (l l) (y y))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b-0) (ga ga) (gx gx)
    (priv-stor priv-stor-1) (l l-1) (y y-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b-0)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul (rec x) y)) y-0))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (7 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((5 3) (2 2))
    ((6 1) (5 0)) ((7 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen x y y-0)
  (absent (x l-0) (y l) (y-0 l-1))
  (precur (3 0))
  (gen-st (pv b l) (pv self l-0) (pv b-0 l-1))
  (facts (silly gx) (silly (exp (gen) y-0)) (neq gx (gen))
    (neq (exp (gen) y-0) (gen)) (neq self b) (undisclosed l-0)
    (undisclosed l))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)) ((6 1) (5 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec x) y)) y-0))
    (exp (gen) (mul (rec x) y y-0)) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y y-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y y-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) y-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y y-0)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-1 (cat pt-3 (pv b-0 l-1)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b-0 gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a b-0 (hash (exp ga l-1) (exp gx y-0))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b-0 l-1))))
    ((recv (cat (exp (gen) (mul (rec x) y)) y-0))
      (send (cat (exp (gen) (mul (rec x) y)) y-0))))
  (label 148)
  (parent 104)
  (unrealized (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (b self a b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (ga gx base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y l l-0 y-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y y-0))) (priv-stor priv-stor-0) (l l-0)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) y-0)) (priv-stor priv-stor) (l l) (y y))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b-0) (ga ga) (gx gx)
    (priv-stor priv-stor-1) (l l-1) (y y-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b-0)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul (rec x) y-0)) y))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (7 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((5 3) (2 2))
    ((6 1) (5 0)) ((7 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen x y y-0)
  (absent (x l-0) (y l) (y-0 l-1))
  (precur (3 0))
  (gen-st (pv b l) (pv self l-0) (pv b-0 l-1))
  (facts (silly gx) (silly (exp (gen) y-0)) (neq gx (gen))
    (neq (exp (gen) y-0) (gen)) (neq self b) (undisclosed l-0)
    (undisclosed l))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)) ((6 1) (5 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec x) y-0)) y))
    (exp (gen) (mul (rec x) y y-0)) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y y-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y y-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) y-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y y-0)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-1 (cat pt-3 (pv b-0 l-1)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b-0 gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a b-0 (hash (exp ga l-1) (exp gx y-0))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b-0 l-1))))
    ((recv (cat (exp (gen) (mul (rec x) y-0)) y))
      (send (cat (exp (gen) (mul (rec x) y-0)) y))))
  (label 149)
  (parent 104)
  (unrealized (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (b self a b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (ga gx base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y l l-0 y-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y y-0))) (priv-stor priv-stor-0) (l l-0)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) y-0)) (priv-stor priv-stor) (l l) (y y))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b-0) (ga ga) (gx gx)
    (priv-stor priv-stor-1) (l l-1) (y y-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b-0)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul y y-0)) x))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (7 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((5 3) (2 2))
    ((6 1) (5 0)) ((7 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen x y y-0)
  (absent (x l-0) (y l) (y-0 l-1))
  (precur (3 0))
  (gen-st (pv b l) (pv self l-0) (pv b-0 l-1))
  (facts (silly gx) (silly (exp (gen) y-0)) (neq gx (gen))
    (neq (exp (gen) y-0) (gen)) (neq self b) (undisclosed l-0)
    (undisclosed l))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)) ((6 1) (5 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) (mul y y-0)) x))
    (exp (gen) (mul (rec x) y y-0)) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y y-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y y-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) y-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y y-0)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-1 (cat pt-3 (pv b-0 l-1)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b-0 gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a b-0 (hash (exp ga l-1) (exp gx y-0))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b-0 l-1))))
    ((recv (cat (exp (gen) (mul y y-0)) x))
      (send (cat (exp (gen) (mul y y-0)) x))))
  (label 150)
  (parent 104)
  (unrealized (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (b self b-0 name)
    (pt pt-0 pt-1 pt-2 pval) (gb base) (priv-stor priv-stor-0 locn)
    (x y l x-0 l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul (rec x) y x-0))) (priv-stor priv-stor-0) (l l)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) x-0)) (priv-stor priv-stor) (l l-0) (y y))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (defstrand init 3 (na na-0) (a b) (b b-0) (gb gb)
    (priv-stor priv-stor) (l l-0) (x x-0))
  (deflistener (cat (exp (gen) (mul (rec x) y)) x-0))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 1) (5 0)) ((1 2) (0 1))
    ((2 3) (6 0)) ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0))
    ((5 2) (2 2)) ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen x y x-0)
  (absent (x l) (y l-0) (x-0 l-0))
  (precur (3 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) x-0)) (neq (exp (gen) x-0) (gen))
    (neq self b) (undisclosed l) (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((1 1) (5 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec x) y)) x-0))
    (exp (gen) (mul (rec x) y x-0)) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y x-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x-0)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 b b-0 (exp (gen) x-0))))
    ((recv (cat (exp (gen) (mul (rec x) y)) x-0))
      (send (cat (exp (gen) (mul (rec x) y)) x-0))))
  (label 151)
  (parent 105)
  (unrealized (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (b self b-0 name)
    (pt pt-0 pt-1 pt-2 pval) (gb base) (priv-stor priv-stor-0 locn)
    (x y l x-0 l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul (rec x) y x-0))) (priv-stor priv-stor-0) (l l)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) x-0)) (priv-stor priv-stor) (l l-0) (y y))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (defstrand init 3 (na na-0) (a b) (b b-0) (gb gb)
    (priv-stor priv-stor) (l l-0) (x x-0))
  (deflistener (cat (exp (gen) (mul (rec x) x-0)) y))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 1) (5 0)) ((1 2) (0 1))
    ((2 3) (6 0)) ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0))
    ((5 2) (2 2)) ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen x y x-0)
  (absent (x l) (y l-0) (x-0 l-0))
  (precur (3 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) x-0)) (neq (exp (gen) x-0) (gen))
    (neq self b) (undisclosed l) (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((1 1) (5 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec x) x-0)) y))
    (exp (gen) (mul (rec x) y x-0)) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y x-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x-0)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 b b-0 (exp (gen) x-0))))
    ((recv (cat (exp (gen) (mul (rec x) x-0)) y))
      (send (cat (exp (gen) (mul (rec x) x-0)) y))))
  (label 152)
  (parent 105)
  (unrealized (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (b self b-0 name)
    (pt pt-0 pt-1 pt-2 pval) (gb base) (priv-stor priv-stor-0 locn)
    (x y l x-0 l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul (rec x) y x-0))) (priv-stor priv-stor-0) (l l)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) x-0)) (priv-stor priv-stor) (l l-0) (y y))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (defstrand init 3 (na na-0) (a b) (b b-0) (gb gb)
    (priv-stor priv-stor) (l l-0) (x x-0))
  (deflistener (cat (exp (gen) (mul y x-0)) x))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 1) (5 0)) ((1 2) (0 1))
    ((2 3) (6 0)) ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0))
    ((5 2) (2 2)) ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen x y x-0)
  (absent (x l) (y l-0) (x-0 l-0))
  (precur (3 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) x-0)) (neq (exp (gen) x-0) (gen))
    (neq self b) (undisclosed l) (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((1 1) (5 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) (mul y x-0)) x))
    (exp (gen) (mul (rec x) y x-0)) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y x-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x-0)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 b b-0 (exp (gen) x-0))))
    ((recv (cat (exp (gen) (mul y x-0)) x))
      (send (cat (exp (gen) (mul y x-0)) x))))
  (label 153)
  (parent 105)
  (unrealized (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (b self b-0 name)
    (pt pt-0 pt-1 pt-2 pval) (gb base) (priv-stor priv-stor-0 locn)
    (x y l x-0 l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y x-0))) (priv-stor priv-stor-0) (l l-0)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) x-0)) (priv-stor priv-stor) (l l) (y y))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand init 3 (na na-0) (a self) (b b-0) (gb gb)
    (priv-stor priv-stor-0) (l l-0) (x x-0))
  (deflistener (cat (exp (gen) (mul (rec x) y)) x-0))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (6 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 1) (5 0)) ((4 2) (3 0))
    ((5 2) (2 2)) ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen x y x-0)
  (absent (x l-0) (y l) (x-0 l-0))
  (precur (3 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly (exp (gen) x-0)) (neq (exp (gen) x-0) (gen))
    (neq self b) (undisclosed l-0) (undisclosed l))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)) ((4 1) (5 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec x) y)) x-0))
    (exp (gen) (mul (rec x) y x-0)) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y x-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x-0)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 self b-0 (exp (gen) x-0))))
    ((recv (cat (exp (gen) (mul (rec x) y)) x-0))
      (send (cat (exp (gen) (mul (rec x) y)) x-0))))
  (label 154)
  (parent 106)
  (unrealized (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (b self b-0 name)
    (pt pt-0 pt-1 pt-2 pval) (gb base) (priv-stor priv-stor-0 locn)
    (x y l x-0 l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y x-0))) (priv-stor priv-stor-0) (l l-0)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) x-0)) (priv-stor priv-stor) (l l) (y y))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand init 3 (na na-0) (a self) (b b-0) (gb gb)
    (priv-stor priv-stor-0) (l l-0) (x x-0))
  (deflistener (cat (exp (gen) (mul (rec x) x-0)) y))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (6 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 1) (5 0)) ((4 2) (3 0))
    ((5 2) (2 2)) ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen x y x-0)
  (absent (x l-0) (y l) (x-0 l-0))
  (precur (3 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly (exp (gen) x-0)) (neq (exp (gen) x-0) (gen))
    (neq self b) (undisclosed l-0) (undisclosed l))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)) ((4 1) (5 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec x) x-0)) y))
    (exp (gen) (mul (rec x) y x-0)) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y x-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x-0)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 self b-0 (exp (gen) x-0))))
    ((recv (cat (exp (gen) (mul (rec x) x-0)) y))
      (send (cat (exp (gen) (mul (rec x) x-0)) y))))
  (label 155)
  (parent 106)
  (unrealized (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (b self b-0 name)
    (pt pt-0 pt-1 pt-2 pval) (gb base) (priv-stor priv-stor-0 locn)
    (x y l x-0 l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y x-0))) (priv-stor priv-stor-0) (l l-0)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) x-0)) (priv-stor priv-stor) (l l) (y y))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand init 3 (na na-0) (a self) (b b-0) (gb gb)
    (priv-stor priv-stor-0) (l l-0) (x x-0))
  (deflistener (cat (exp (gen) (mul y x-0)) x))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (6 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 1) (5 0)) ((4 2) (3 0))
    ((5 2) (2 2)) ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen x y x-0)
  (absent (x l-0) (y l) (x-0 l-0))
  (precur (3 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly (exp (gen) x-0)) (neq (exp (gen) x-0) (gen))
    (neq self b) (undisclosed l-0) (undisclosed l))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)) ((4 1) (5 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) (mul y x-0)) x))
    (exp (gen) (mul (rec x) y x-0)) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y x-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x-0)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 self b-0 (exp (gen) x-0))))
    ((recv (cat (exp (gen) (mul y x-0)) x))
      (send (cat (exp (gen) (mul y x-0)) x))))
  (label 156)
  (parent 106)
  (unrealized (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (b self a b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (gb base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y l l-0 x-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y x-0))) (priv-stor priv-stor-0) (l l-0)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) x-0)) (priv-stor priv-stor) (l l) (y y))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand init 3 (na na-0) (a a) (b b-0) (gb gb)
    (priv-stor priv-stor-1) (l l-1) (x x-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self a)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul (rec x) y)) x-0))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (7 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((5 2) (2 2))
    ((6 1) (5 0)) ((7 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen x y x-0)
  (absent (x l-0) (y l) (x-0 l-1))
  (precur (3 0))
  (gen-st (pv b l) (pv self l-0) (pv a l-1))
  (facts (silly (exp (gen) x-0)) (neq (exp (gen) x-0) (gen))
    (neq self b) (undisclosed l-0) (undisclosed l))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)) ((6 1) (5 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec x) y)) x-0))
    (exp (gen) (mul (rec x) y x-0)) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y x-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x-0)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-1 (cat pt-3 (pv a l-1)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 a b-0 (exp (gen) x-0))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv a l-1))))
    ((recv (cat (exp (gen) (mul (rec x) y)) x-0))
      (send (cat (exp (gen) (mul (rec x) y)) x-0))))
  (label 157)
  (parent 107)
  (unrealized (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (b self a b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (gb base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y l l-0 x-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y x-0))) (priv-stor priv-stor-0) (l l-0)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) x-0)) (priv-stor priv-stor) (l l) (y y))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand init 3 (na na-0) (a a) (b b-0) (gb gb)
    (priv-stor priv-stor-1) (l l-1) (x x-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self a)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul (rec x) x-0)) y))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (7 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((5 2) (2 2))
    ((6 1) (5 0)) ((7 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen x y x-0)
  (absent (x l-0) (y l) (x-0 l-1))
  (precur (3 0))
  (gen-st (pv b l) (pv self l-0) (pv a l-1))
  (facts (silly (exp (gen) x-0)) (neq (exp (gen) x-0) (gen))
    (neq self b) (undisclosed l-0) (undisclosed l))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)) ((6 1) (5 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec x) x-0)) y))
    (exp (gen) (mul (rec x) y x-0)) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y x-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x-0)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-1 (cat pt-3 (pv a l-1)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 a b-0 (exp (gen) x-0))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv a l-1))))
    ((recv (cat (exp (gen) (mul (rec x) x-0)) y))
      (send (cat (exp (gen) (mul (rec x) x-0)) y))))
  (label 158)
  (parent 107)
  (unrealized (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (b self a b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (gb base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y l l-0 x-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y x-0))) (priv-stor priv-stor-0) (l l-0)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) x-0)) (priv-stor priv-stor) (l l) (y y))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand init 3 (na na-0) (a a) (b b-0) (gb gb)
    (priv-stor priv-stor-1) (l l-1) (x x-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self a)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul y x-0)) x))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (7 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((5 2) (2 2))
    ((6 1) (5 0)) ((7 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen x y x-0)
  (absent (x l-0) (y l) (x-0 l-1))
  (precur (3 0))
  (gen-st (pv b l) (pv self l-0) (pv a l-1))
  (facts (silly (exp (gen) x-0)) (neq (exp (gen) x-0) (gen))
    (neq self b) (undisclosed l-0) (undisclosed l))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)) ((6 1) (5 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) (mul y x-0)) x))
    (exp (gen) (mul (rec x) y x-0)) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y x-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x-0)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-1 (cat pt-3 (pv a l-1)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 a b-0 (exp (gen) x-0))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv a l-1))))
    ((recv (cat (exp (gen) (mul y x-0)) x))
      (send (cat (exp (gen) (mul y x-0)) x))))
  (label 159)
  (parent 107)
  (unrealized (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data)
    (b self self-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y l l-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y l-1))) (priv-stor priv-stor-0) (l l-0)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) l-1)) (priv-stor priv-stor) (l l) (y y))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self-0)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul (rec x) y)) l-1))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-1)
    (l l-1))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (6 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((5 1) (7 0))
    ((5 2) (2 2)) ((6 1) (0 3)) ((7 2) (6 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l-0) (y l))
  (precur (3 0))
  (gen-st (pv b l) (pv self l-0) (pv self-0 l-1))
  (facts (silly (exp (gen) l-1)) (neq (exp (gen) l-1) (gen))
    (neq self b) (undisclosed l-0) (undisclosed l))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)) ((5 1) (7 0)))
  (rule fact-resp-neq0 fact-resp-silly gen-st-ltx-disclose-0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-disclose 3) l-1 (6 0)
    (ch-msg priv-stor-1 (cat pt-4 (pv self-0 l-1))))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y l-1))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-1)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) l-1)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-1)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-1 (cat pt-3 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv self-0 l-1)))
      (send
        (sig (body self-0 (exp (gen) l-1) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) (mul (rec x) y)) l-1))
      (send (cat (exp (gen) (mul (rec x) y)) l-1)))
    ((load priv-stor-1 (cat pt-4 (pv self-0 l-1)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l-1)))
  (label 160)
  (parent 114)
  (unrealized (6 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (b self b-0 name)
    (pt pt-0 pt-1 pt-2 pval) (gb base) (priv-stor priv-stor-0 locn)
    (x y l rndx) (w expt) (x-0 l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul (rec x) y w x-0))) (priv-stor priv-stor-0) (l l)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) (mul w x-0))) (priv-stor priv-stor) (l l-0) (y y))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) x-0) w))
  (defstrand init 3 (na na-0) (a b) (b b-0) (gb gb)
    (priv-stor priv-stor) (l l-0) (x x-0))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 1) (6 0)) ((1 2) (0 1))
    ((2 3) (0 3)) ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0))
    ((5 1) (2 2)) ((6 2) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen x y x-0)
  (absent (x l) (y l-0) (x-0 l-0))
  (precur (3 0) (5 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) (mul w x-0)))
    (neq (exp (gen) (mul w x-0)) (gen)) (neq self b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((1 1) (6 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 7 1 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv a l-1))) (6 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y w x-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w x-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul w x-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w x-0)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) x-0) w)) (send (cat (exp (gen) x-0) w)))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 b b-0 (exp (gen) x-0)))))
  (label 161)
  (parent 117)
  (unrealized (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (b self b-0 name)
    (pt pt-0 pt-1 pt-2 pval) (gb base) (priv-stor priv-stor-0 locn)
    (x y l rndx) (w expt) (x-0 l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y w x-0))) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) (mul w x-0))) (priv-stor priv-stor) (l l) (y y))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) x-0) w))
  (defstrand init 3 (na na-0) (a self) (b b-0) (gb gb)
    (priv-stor priv-stor-0) (l l-0) (x x-0))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 1) (6 0)) ((4 2) (3 0))
    ((5 1) (2 2)) ((6 2) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen x y x-0)
  (absent (x l-0) (y l) (x-0 l-0))
  (precur (3 0) (5 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly (exp (gen) (mul w x-0)))
    (neq (exp (gen) (mul w x-0)) (gen)) (neq self b) (undisclosed l-0)
    (undisclosed l))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)) ((4 1) (6 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 7 4 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv a l-1))) (6 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y w x-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w x-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul w x-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w x-0)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) x-0) w)) (send (cat (exp (gen) x-0) w)))
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 self b-0 (exp (gen) x-0)))))
  (label 162)
  (parent 117)
  (unrealized (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (b self a b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (gb base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y l l-0 rndx) (w expt)
    (x-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y w x-0))) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) (mul w x-0))) (priv-stor priv-stor) (l l) (y y))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) x-0) w))
  (defstrand init 3 (na na-0) (a a) (b b-0) (gb gb)
    (priv-stor priv-stor-1) (l l-1) (x x-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self a)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((5 1) (2 2))
    ((6 2) (5 0)) ((7 1) (6 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen x y x-0)
  (absent (x l-0) (y l) (x-0 l-1))
  (precur (3 0) (5 0))
  (gen-st (pv b l) (pv self l-0) (pv a l-1))
  (facts (silly (exp (gen) (mul w x-0)))
    (neq (exp (gen) (mul w x-0)) (gen)) (neq self b) (undisclosed l-0)
    (undisclosed l))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)) ((7 1) (6 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv a l-1))) (6 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y w x-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w x-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul w x-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w x-0)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) x-0) w)) (send (cat (exp (gen) x-0) w)))
    ((load priv-stor-1 (cat pt-3 (pv a l-1)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 a b-0 (exp (gen) x-0))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv a l-1)))))
  (label 163)
  (parent 117)
  (unrealized (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (l x l-0 y rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) y)) (priv-stor priv-stor-0) (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) x)) (priv-stor priv-stor) (l l-0) (y y))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (gen) x))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((5 1) (2 2)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l) (y l-0))
  (precur (3 0) (5 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) x)) (neq (exp (gen) x) (gen)) (neq self b)
    (undisclosed l) (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 6 2 resp 4) (exp (gen) y-0) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (gen) x)) (send (cat (gen) x))))
  (label 164)
  (parent 119)
  (unrealized (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (x y l l-0 rndx) (w w-0 expt))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y w))) (priv-stor priv-stor-0) (l l-0)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) w)) (priv-stor priv-stor) (l l) (y y))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (gen) w))
  (deflistener (cat (exp (gen) (mul (rec x) y w (rec w-0))) w-0))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (6 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((5 1) (2 2))
    ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l-0) (y l))
  (precur (3 0) (5 0) (6 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly (exp (gen) w)) (neq (exp (gen) w) (gen)) (neq self b)
    (undisclosed l-0) (undisclosed l))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec x) y w (rec w-0))) w-0))
    (exp (gen) (mul (rec x) y w)) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y w))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) w)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (gen) w)) (send (cat (gen) w)))
    ((recv (cat (exp (gen) (mul (rec x) y w (rec w-0))) w-0))
      (send (cat (exp (gen) (mul (rec x) y w (rec w-0))) w-0))))
  (label 165)
  (parent 119)
  (unrealized (6 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (l x l-0 y rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) y)) (priv-stor priv-stor-0) (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) x)) (priv-stor priv-stor) (l l-0) (y y))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-0) (mul x (rec l-0))))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((5 1) (2 2)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l) (y l-0))
  (precur (3 0) (5 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) x)) (neq (exp (gen) x) (gen)) (neq self b)
    (undisclosed l) (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 6 2 resp 4) (exp (gen) y-0) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l-0) (mul x (rec l-0))))
      (send (cat (exp (gen) l-0) (mul x (rec l-0))))))
  (label 166)
  (parent 120)
  (unrealized (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x y l rndx)
    (w expt) (l-0 rndx) (w-0 expt))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul (rec x) y w l-0))) (priv-stor priv-stor-0) (l l)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) (mul w l-0))) (priv-stor priv-stor) (l l-0) (y y))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-0) w))
  (deflistener (cat (exp (gen) (mul (rec x) y w l-0 (rec w-0))) w-0))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (6 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((5 1) (2 2))
    ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l) (y l-0))
  (precur (3 0) (5 0) (6 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) (mul w l-0)))
    (neq (exp (gen) (mul w l-0)) (gen)) (neq self b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener
      (cat (exp (gen) (mul (rec x) y w l-0 (rec w-0))) w-0))
    (exp (gen) (mul (rec x) y w l-0)) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y w l-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w l-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul w l-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w l-0)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l-0) w)) (send (cat (exp (gen) l-0) w)))
    ((recv (cat (exp (gen) (mul (rec x) y w l-0 (rec w-0))) w-0))
      (send (cat (exp (gen) (mul (rec x) y w l-0 (rec w-0))) w-0))))
  (label 167)
  (parent 120)
  (unrealized (6 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (b self a name)
    (pt pt-0 pt-1 pt-2 pval) (ga gx base) (priv-stor priv-stor-0 locn)
    (x y l rndx) (w expt) (y-0 l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul (rec x) y w y-0))) (priv-stor priv-stor-0) (l l)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) (mul w y-0))) (priv-stor priv-stor) (l l-0) (y y))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) y-0) w))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b) (ga ga) (gx gx)
    (priv-stor priv-stor) (l l-0) (y y-0))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 1) (6 0)) ((1 2) (0 1))
    ((2 3) (0 3)) ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0))
    ((5 1) (2 2)) ((6 3) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen x y y-0)
  (absent (x l) (y l-0) (y-0 l-0))
  (precur (3 0) (5 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly gx) (silly (exp (gen) (mul w y-0))) (neq gx (gen))
    (neq (exp (gen) (mul w y-0)) (gen)) (neq self b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((1 1) (6 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 7 1 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv b-0 l-1))) (6 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y w y-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w y-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul w y-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w y-0)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y-0) w)) (send (cat (exp (gen) y-0) w)))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a b (hash (exp ga l-0) (exp gx y-0)))))))
  (label 168)
  (parent 121)
  (unrealized (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (b self a name)
    (pt pt-0 pt-1 pt-2 pval) (ga gx base) (priv-stor priv-stor-0 locn)
    (x y l rndx) (w expt) (y-0 l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y w y-0))) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) (mul w y-0))) (priv-stor priv-stor) (l l) (y y))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) y-0) w))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b self) (ga ga) (gx gx)
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 1) (6 0)) ((4 2) (3 0))
    ((5 1) (2 2)) ((6 3) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen x y y-0)
  (absent (x l-0) (y l) (y-0 l-0))
  (precur (3 0) (5 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly gx) (silly (exp (gen) (mul w y-0))) (neq gx (gen))
    (neq (exp (gen) (mul w y-0)) (gen)) (neq self b) (undisclosed l-0)
    (undisclosed l))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)) ((4 1) (6 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (displaced 7 4 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv b-0 l-1))) (6 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y w y-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w y-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul w y-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w y-0)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y-0) w)) (send (cat (exp (gen) y-0) w)))
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a self gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a self (hash (exp ga l-0) (exp gx y-0)))))))
  (label 169)
  (parent 121)
  (unrealized (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (b self a b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (ga gx base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y l l-0 rndx) (w expt)
    (y-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y w y-0))) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) (mul w y-0))) (priv-stor priv-stor) (l l) (y y))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) y-0) w))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b-0) (ga ga) (gx gx)
    (priv-stor priv-stor-1) (l l-1) (y y-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b-0)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((5 1) (2 2))
    ((6 3) (5 0)) ((7 1) (6 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen x y y-0)
  (absent (x l-0) (y l) (y-0 l-1))
  (precur (3 0) (5 0))
  (gen-st (pv b l) (pv self l-0) (pv b-0 l-1))
  (facts (silly gx) (silly (exp (gen) (mul w y-0))) (neq gx (gen))
    (neq (exp (gen) (mul w y-0)) (gen)) (neq self b) (undisclosed l-0)
    (undisclosed l))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)) ((7 1) (6 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv b-0 l-1))) (6 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y w y-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w y-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul w y-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w y-0)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y-0) w)) (send (cat (exp (gen) y-0) w)))
    ((load priv-stor-1 (cat pt-3 (pv b-0 l-1)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b-0 gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a b-0 (hash (exp ga l-1) (exp gx y-0))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b-0 l-1)))))
  (label 170)
  (parent 121)
  (unrealized (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (x l l-0 y rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) y)) (priv-stor priv-stor-0) (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) x)) (priv-stor priv-stor) (l l-0) (y y))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l) (mul x (rec l))))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((4 2) (5 0))
    ((5 1) (2 2)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l) (y l-0))
  (precur (3 0) (5 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) x)) (neq (exp (gen) x) (gen)) (neq self b)
    (undisclosed l) (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 6 2 resp 4) (exp (gen) y-0) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) (mul x (rec l))))
      (send (cat (exp (gen) l) (mul x (rec l))))))
  (label 171)
  (parent 122)
  (unrealized (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x y l rndx)
    (w expt) (l-0 rndx) (w-0 expt))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y w l-0))) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) (mul w l-0))) (priv-stor priv-stor) (l l) (y y))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l-0) w))
  (deflistener (cat (exp (gen) (mul (rec x) y w l-0 (rec w-0))) w-0))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (6 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((4 2) (5 0))
    ((5 1) (2 2)) ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l-0) (y l))
  (precur (3 0) (5 0) (6 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly (exp (gen) (mul w l-0)))
    (neq (exp (gen) (mul w l-0)) (gen)) (neq self b) (undisclosed l-0)
    (undisclosed l))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener
      (cat (exp (gen) (mul (rec x) y w l-0 (rec w-0))) w-0))
    (exp (gen) (mul (rec x) y w l-0)) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y w l-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w l-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul w l-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w l-0)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l-0) w)) (send (cat (exp (gen) l-0) w)))
    ((recv (cat (exp (gen) (mul (rec x) y w l-0 (rec w-0))) w-0))
      (send (cat (exp (gen) (mul (rec x) y w l-0 (rec w-0))) w-0))))
  (label 172)
  (parent 122)
  (unrealized (6 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data)
    (b self self-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l x l-0 l-1 y rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-1))
    (gy (exp (gen) y)) (priv-stor priv-stor-0) (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) x)) (priv-stor priv-stor) (l l-1) (y y))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-0) (mul x (rec l-0))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self-0)
    (priv-stor priv-stor-1) (l l-0))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((5 1) (2 2))
    ((6 2) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (y l-1))
  (precur (3 0) (5 0))
  (gen-st (pv b l-1) (pv self l))
  (facts (silly (exp (gen) x)) (neq (exp (gen) x) (gen)) (neq self b)
    (undisclosed l) (undisclosed l-1))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 7 2 resp 4) (exp (gen) y-0) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-1)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l-0) (mul x (rec l-0))))
      (send (cat (exp (gen) l-0) (mul x (rec l-0)))))
    ((load priv-stor-1 (cat pt-3 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0)))))
  (label 173)
  (parent 123)
  (unrealized (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data)
    (b self self-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y l l-0 rndx) (w expt)
    (l-1 rndx) (w-0 expt))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y w l-1))) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) (mul w l-1))) (priv-stor priv-stor) (l l) (y y))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l-1) w))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self-0)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul (rec x) y w l-1 (rec w-0))) w-0))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (7 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((5 1) (2 2))
    ((6 2) (5 0)) ((7 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l-0) (y l))
  (precur (3 0) (5 0) (7 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly (exp (gen) (mul w l-1)))
    (neq (exp (gen) (mul w l-1)) (gen)) (neq self b) (undisclosed l-0)
    (undisclosed l))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener
      (cat (exp (gen) (mul (rec x) y w l-1 (rec w-0))) w-0))
    (exp (gen) (mul (rec x) y w l-1)) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y w l-1))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w l-1)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul w l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w l-1)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l-1) w)) (send (cat (exp (gen) l-1) w)))
    ((load priv-stor-1 (cat pt-3 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv self-0 l-1)))
      (send
        (sig (body self-0 (exp (gen) l-1) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) (mul (rec x) y w l-1 (rec w-0))) w-0))
      (send (cat (exp (gen) (mul (rec x) y w l-1 (rec w-0))) w-0))))
  (label 174)
  (parent 123)
  (unrealized (7 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (b self b-0 name)
    (pt pt-0 pt-1 pt-2 pval) (gb base) (priv-stor priv-stor-0 locn)
    (l x x-0 rndx) (w expt) (l-0 y rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul w y))) (priv-stor priv-stor-0) (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) (mul x w))) (priv-stor priv-stor) (l l-0) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) x-0) (mul x (rec x-0) w)))
  (defstrand init 3 (na na-0) (a b) (b b-0) (gb gb)
    (priv-stor priv-stor) (l l-0) (x x-0))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 1) (5 0)) ((1 2) (0 1))
    ((2 3) (6 0)) ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (2 2))
    ((5 2) (4 0)) ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen x x-0 y)
  (absent (x l) (x-0 l-0) (y l-0))
  (precur (4 0) (6 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) (mul x w))) (neq (exp (gen) (mul x w)) (gen))
    (neq self b) (undisclosed l) (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((1 1) (5 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 7 2 resp 4) (exp (gen) y-0) (6 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul x w))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) x-0) (mul x (rec x-0) w)))
      (send (cat (exp (gen) x-0) (mul x (rec x-0) w))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 b b-0 (exp (gen) x-0))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 175)
  (parent 127)
  (unrealized (4 0))
  (comment "4 in cohort - 4 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (b self b-0 name)
    (pt pt-0 pt-1 pt-2 pval) (gb base) (priv-stor priv-stor-0 locn)
    (l x x-0 rndx) (w expt) (l-0 y rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul w y))) (priv-stor priv-stor-0) (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) (mul x w))) (priv-stor priv-stor) (l l-0) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) x-0) (mul x (rec x-0) w)))
  (defstrand init 3 (na na-0) (a self) (b b-0) (gb gb)
    (priv-stor priv-stor-0) (l l) (x x-0))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (6 0))
    ((3 1) (0 0)) ((3 1) (5 0)) ((3 2) (2 1)) ((4 1) (2 2))
    ((5 2) (4 0)) ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen x x-0 y)
  (absent (x l) (x-0 l) (y l-0))
  (precur (4 0) (6 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) (mul x w))) (neq (exp (gen) (mul x w)) (gen))
    (neq self b) (undisclosed l) (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)) ((3 1) (5 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 7 2 resp 4) (exp (gen) y-0) (6 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul x w))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) x-0) (mul x (rec x-0) w)))
      (send (cat (exp (gen) x-0) (mul x (rec x-0) w))))
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 self b-0 (exp (gen) x-0))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 176)
  (parent 129)
  (unrealized (4 0))
  (comment "4 in cohort - 4 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (b self a b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (gb base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 x x-0 rndx) (w expt)
    (l-1 y rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-1))
    (gy (exp (gen) (mul w y))) (priv-stor priv-stor-0) (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) (mul x w))) (priv-stor priv-stor) (l l-1) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) x-0) (mul x (rec x-0) w)))
  (defstrand init 3 (na na-0) (a a) (b b-0) (gb gb)
    (priv-stor priv-stor-1) (l l-0) (x x-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self a)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (7 0))
    ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (2 2)) ((5 2) (4 0))
    ((6 1) (5 0)) ((7 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen x x-0 y)
  (absent (x l) (x-0 l-0) (y l-1))
  (precur (4 0) (7 0))
  (gen-st (pv b l-1) (pv self l) (pv a l-0))
  (facts (silly (exp (gen) (mul x w))) (neq (exp (gen) (mul x w)) (gen))
    (neq self b) (undisclosed l) (undisclosed l-1))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)) ((6 1) (5 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 8 2 resp 4) (exp (gen) y-0) (7 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb self b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x w y)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-1)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul x w))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x w y)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) x-0) (mul x (rec x-0) w)))
      (send (cat (exp (gen) x-0) (mul x (rec x-0) w))))
    ((load priv-stor-1 (cat pt-3 (pv a l-0)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 a b-0 (exp (gen) x-0))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv a l-0))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 177)
  (parent 131)
  (unrealized (4 0))
  (comment "5 in cohort - 5 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (l y x l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul y (rec x) l-0))) (priv-stor priv-stor-0) (l l)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) l-0)) (priv-stor priv-stor) (l l-0) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (gen) l-0))
  (deflistener (cat (exp (gen) y) (mul (rec x) l-0)))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (5 0))
    ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (2 2)) ((5 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen y x)
  (absent (y l-0) (x l))
  (precur (4 0) (5 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) l-0)) (neq (exp (gen) l-0) (gen))
    (neq self b) (undisclosed l) (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 6 1 ltx-gen 2) l-1 (4 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) l-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) l-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((recv (cat (exp (gen) y) (mul (rec x) l-0)))
      (send (cat (exp (gen) y) (mul (rec x) l-0)))))
  (label 178)
  (parent 132)
  (unrealized (0 3) (4 0) (5 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (l y x l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul y (rec x) l-0))) (priv-stor priv-stor-0) (l l-0)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) l-0)) (priv-stor priv-stor) (l l) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (gen) l-0))
  (deflistener (cat (exp (gen) y) (mul (rec x) l-0)))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (5 0))
    ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (2 2)) ((5 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen y x)
  (absent (y l) (x l-0))
  (precur (4 0) (5 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly (exp (gen) l-0)) (neq (exp (gen) l-0) (gen))
    (neq self b) (undisclosed l-0) (undisclosed l))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 6 3 ltx-gen 2) l-1 (4 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) l-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) l-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((recv (cat (exp (gen) y) (mul (rec x) l-0)))
      (send (cat (exp (gen) y) (mul (rec x) l-0)))))
  (label 179)
  (parent 132)
  (unrealized (0 3) (4 0) (5 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data)
    (b self self-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 y x l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul y (rec x) l-1))) (priv-stor priv-stor-0) (l l)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) l-1)) (priv-stor priv-stor) (l l-0) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (gen) l-1))
  (deflistener (cat (exp (gen) y) (mul (rec x) l-1)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self self-0)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (5 0))
    ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (2 2)) ((5 1) (0 3))
    ((6 1) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y l-0) (x l))
  (precur (4 0) (5 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) l-1)) (neq (exp (gen) l-1) (gen))
    (neq self b) (undisclosed l) (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 2) l-1 (4 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) l-1))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-1)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) l-1)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-1)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (gen) l-1)) (send (cat (gen) l-1)))
    ((recv (cat (exp (gen) y) (mul (rec x) l-1)))
      (send (cat (exp (gen) y) (mul (rec x) l-1))))
    ((load priv-stor-1 (cat pt-3 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv self-0 l-1)))))
  (label 180)
  (parent 132)
  (unrealized (0 3) (4 0) (5 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (l x rndx)
    (w expt) (l-0 y rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul w y))) (priv-stor priv-stor-0) (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) (mul x w))) (priv-stor priv-stor) (l l-0) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (gen) (mul x w)))
  (deflistener (cat (exp (gen) y) w))
  (deflistener x)
  (precedes ((0 2) (6 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (5 0))
    ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (2 2)) ((5 1) (0 3))
    ((6 1) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l) (y l-0))
  (precur (4 0) (5 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) (mul x w))) (neq (exp (gen) (mul x w)) (gen))
    (neq self b) (undisclosed l) (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener x) (mul x w) (4 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul x w))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (gen) (mul x w))) (send (cat (gen) (mul x w))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w)))
    ((recv x) (send x)))
  (label 181)
  (parent 132)
  (unrealized (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (l y x l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul y (rec x) l-0 l-0))) (priv-stor priv-stor-0)
    (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) (mul l-0 l-0))) (priv-stor priv-stor) (l l-0) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-0) l-0))
  (deflistener (cat (exp (gen) y) (mul (rec x) l-0 l-0)))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (5 0))
    ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (2 2)) ((5 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen y x)
  (absent (y l-0) (x l))
  (precur (4 0) (5 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) (mul l-0 l-0)))
    (neq (exp (gen) (mul l-0 l-0)) (gen)) (neq self b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 6 1 ltx-gen 2) l-1 (4 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) l-0 l-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y l-0 l-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul l-0 l-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y l-0 l-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l-0) l-0)) (send (cat (exp (gen) l-0) l-0)))
    ((recv (cat (exp (gen) y) (mul (rec x) l-0 l-0)))
      (send (cat (exp (gen) y) (mul (rec x) l-0 l-0)))))
  (label 182)
  (parent 133)
  (unrealized (0 3) (4 0) (5 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (l y x l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul y (rec x) l-0))) (priv-stor priv-stor-0) (l l)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) l-0)) (priv-stor priv-stor) (l l-0) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (deflistener (cat (exp (gen) y) (mul (rec x) l-0)))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (5 0))
    ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (2 2)) ((5 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen y x)
  (absent (y l-0) (x l))
  (precur (4 0) (5 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) l-0)) (neq (exp (gen) l-0) (gen))
    (neq self b) (undisclosed l) (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (contracted (x-0 x) (w (mul (rec x) l-0)) (l-1 l-0)) (one) (4 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) l-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) l-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((recv (cat (exp (gen) y) (mul (rec x) l-0)))
      (send (cat (exp (gen) y) (mul (rec x) l-0)))))
  (label 183)
  (parent 133)
  (unrealized (0 3) (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (y x l l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul y (rec x) l l-0))) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) (mul l l-0))) (priv-stor priv-stor) (l l) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (exp (gen) y) (mul (rec x) l l-0)))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (5 0))
    ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (2 2)) ((5 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen y x)
  (absent (y l) (x l-0))
  (precur (4 0) (5 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly (exp (gen) (mul l l-0)))
    (neq (exp (gen) (mul l l-0)) (gen)) (neq self b) (undisclosed l-0)
    (undisclosed l))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 6 3 ltx-gen 2) l-1 (4 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) l l-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l l-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul l l-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l l-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (exp (gen) y) (mul (rec x) l l-0)))
      (send (cat (exp (gen) y) (mul (rec x) l l-0)))))
  (label 184)
  (parent 133)
  (unrealized (0 3) (4 0) (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data)
    (b self self-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l y x l-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul y (rec x) l-0 l-1))) (priv-stor priv-stor-0)
    (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) (mul l-0 l-1))) (priv-stor priv-stor) (l l-0) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-0) l-1))
  (deflistener (cat (exp (gen) y) (mul (rec x) l-0 l-1)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self self-0)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (5 0))
    ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (2 2)) ((5 1) (0 3))
    ((6 1) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y l-0) (x l))
  (precur (4 0) (5 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) (mul l-0 l-1)))
    (neq (exp (gen) (mul l-0 l-1)) (gen)) (neq self b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 2) l-1 (4 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) l-0 l-1))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y l-0 l-1)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul l-0 l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y l-0 l-1)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l-0) l-1)) (send (cat (exp (gen) l-0) l-1)))
    ((recv (cat (exp (gen) y) (mul (rec x) l-0 l-1)))
      (send (cat (exp (gen) y) (mul (rec x) l-0 l-1))))
    ((load priv-stor-1 (cat pt-3 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv self-0 l-1)))))
  (label 185)
  (parent 133)
  (unrealized (0 3) (4 0) (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (b self a name)
    (pt pt-0 pt-1 pt-2 pval) (ga gx base) (priv-stor priv-stor-0 locn)
    (l x y rndx) (w expt) (l-0 y-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul w y-0))) (priv-stor priv-stor-0) (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) (mul x w))) (priv-stor priv-stor) (l l-0) (y y-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) y) (mul x (rec y) w)))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b) (ga ga) (gx gx)
    (priv-stor priv-stor) (l l-0) (y y))
  (deflistener (cat (exp (gen) y-0) w))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 1) (5 0)) ((1 2) (0 1))
    ((2 3) (6 0)) ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (2 2))
    ((5 3) (4 0)) ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen x y y-0)
  (absent (x l) (y l-0) (y-0 l-0))
  (precur (4 0) (6 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly gx) (silly (exp (gen) (mul x w))) (neq gx (gen))
    (neq (exp (gen) (mul x w)) (gen)) (neq self b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((1 1) (5 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 7 2 resp 4) (exp (gen) y-1) (6 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul x w))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y) (mul x (rec y) w)))
      (send (cat (exp (gen) y) (mul x (rec y) w))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b gx))
      (send
        (cat (exp (gen) y)
          (enc na-0 nb-0 a b (hash (exp ga l-0) (exp gx y))))))
    ((recv (cat (exp (gen) y-0) w)) (send (cat (exp (gen) y-0) w))))
  (label 186)
  (parent 135)
  (unrealized (4 0))
  (comment "4 in cohort - 4 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (b self a name)
    (pt pt-0 pt-1 pt-2 pval) (ga gx base) (priv-stor priv-stor-0 locn)
    (l x y rndx) (w expt) (l-0 y-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul w y-0))) (priv-stor priv-stor-0) (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) (mul x w))) (priv-stor priv-stor) (l l-0) (y y-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) y) (mul x (rec y) w)))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b self) (ga ga) (gx gx)
    (priv-stor priv-stor-0) (l l) (y y))
  (deflistener (cat (exp (gen) y-0) w))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (6 0))
    ((3 1) (0 0)) ((3 1) (5 0)) ((3 2) (2 1)) ((4 1) (2 2))
    ((5 3) (4 0)) ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen x y y-0)
  (absent (x l) (y l) (y-0 l-0))
  (precur (4 0) (6 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly gx) (silly (exp (gen) (mul x w))) (neq gx (gen))
    (neq (exp (gen) (mul x w)) (gen)) (neq self b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)) ((3 1) (5 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 7 2 resp 4) (exp (gen) y-1) (6 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul x w))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y) (mul x (rec y) w)))
      (send (cat (exp (gen) y) (mul x (rec y) w))))
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a self gx))
      (send
        (cat (exp (gen) y)
          (enc na-0 nb-0 a self (hash (exp ga l) (exp gx y))))))
    ((recv (cat (exp (gen) y-0) w)) (send (cat (exp (gen) y-0) w))))
  (label 187)
  (parent 137)
  (unrealized (4 0))
  (comment "4 in cohort - 4 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (b self a b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (ga gx base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 x y rndx) (w expt)
    (l-1 y-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-1))
    (gy (exp (gen) (mul w y-0))) (priv-stor priv-stor-0) (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) (mul x w))) (priv-stor priv-stor) (l l-1) (y y-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) y) (mul x (rec y) w)))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b-0) (ga ga) (gx gx)
    (priv-stor priv-stor-1) (l l-0) (y y))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b-0)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) y-0) w))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (7 0))
    ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (2 2)) ((5 3) (4 0))
    ((6 1) (5 0)) ((7 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen x y y-0)
  (absent (x l) (y l-0) (y-0 l-1))
  (precur (4 0) (7 0))
  (gen-st (pv b l-1) (pv self l) (pv b-0 l-0))
  (facts (silly gx) (silly (exp (gen) (mul x w))) (neq gx (gen))
    (neq (exp (gen) (mul x w)) (gen)) (neq self b) (undisclosed l)
    (undisclosed l-1))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)) ((6 1) (5 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 8 2 resp 4) (exp (gen) y-1) (7 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x w y-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-1)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul x w))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x w y-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y) (mul x (rec y) w)))
      (send (cat (exp (gen) y) (mul x (rec y) w))))
    ((load priv-stor-1 (cat pt-3 (pv b-0 l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b-0 gx))
      (send
        (cat (exp (gen) y)
          (enc na-0 nb-0 a b-0 (hash (exp ga l-0) (exp gx y))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b-0 l-0))))
    ((recv (cat (exp (gen) y-0) w)) (send (cat (exp (gen) y-0) w))))
  (label 188)
  (parent 139)
  (unrealized (4 0))
  (comment "5 in cohort - 5 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (y x l l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul y (rec x) l l-0))) (priv-stor priv-stor-0) (l l)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) (mul l l-0))) (priv-stor priv-stor) (l l-0) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (exp (gen) y) (mul (rec x) l l-0)))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (5 0))
    ((3 1) (0 0)) ((3 2) (2 1)) ((3 2) (4 0)) ((4 1) (2 2))
    ((5 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen y x)
  (absent (y l-0) (x l))
  (precur (4 0) (5 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) (mul l l-0)))
    (neq (exp (gen) (mul l l-0)) (gen)) (neq self b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 6 1 ltx-gen 2) l-1 (4 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) l l-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l l-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul l l-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l l-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (exp (gen) y) (mul (rec x) l l-0)))
      (send (cat (exp (gen) y) (mul (rec x) l l-0)))))
  (label 189)
  (parent 140)
  (unrealized (0 3) (4 0) (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (l y x l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul y (rec x) l-0))) (priv-stor priv-stor-0) (l l-0)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) l-0)) (priv-stor priv-stor) (l l) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l-0) (one)))
  (deflistener (cat (exp (gen) y) (mul (rec x) l-0)))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (5 0))
    ((3 1) (0 0)) ((3 2) (2 1)) ((3 2) (4 0)) ((4 1) (2 2))
    ((5 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen y x)
  (absent (y l) (x l-0))
  (precur (4 0) (5 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly (exp (gen) l-0)) (neq (exp (gen) l-0) (gen))
    (neq self b) (undisclosed l-0) (undisclosed l))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (contracted (x-0 x) (l-1 l-0) (w (mul (rec x) l-0))) (one) (4 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) l-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) l-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((recv (cat (exp (gen) y) (mul (rec x) l-0)))
      (send (cat (exp (gen) y) (mul (rec x) l-0)))))
  (label 190)
  (parent 140)
  (unrealized (0 3) (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (l y x l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul y (rec x) l-0 l-0))) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) (mul l-0 l-0))) (priv-stor priv-stor) (l l) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l-0) l-0))
  (deflistener (cat (exp (gen) y) (mul (rec x) l-0 l-0)))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (5 0))
    ((3 1) (0 0)) ((3 2) (2 1)) ((3 2) (4 0)) ((4 1) (2 2))
    ((5 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen y x)
  (absent (y l) (x l-0))
  (precur (4 0) (5 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly (exp (gen) (mul l-0 l-0)))
    (neq (exp (gen) (mul l-0 l-0)) (gen)) (neq self b) (undisclosed l-0)
    (undisclosed l))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 6 3 ltx-gen 2) l-1 (4 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) l-0 l-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y l-0 l-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul l-0 l-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y l-0 l-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l-0) l-0)) (send (cat (exp (gen) l-0) l-0)))
    ((recv (cat (exp (gen) y) (mul (rec x) l-0 l-0)))
      (send (cat (exp (gen) y) (mul (rec x) l-0 l-0)))))
  (label 191)
  (parent 140)
  (unrealized (0 3) (4 0) (5 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data)
    (b self self-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l y x l-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul y (rec x) l-0 l-1))) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) (mul l-0 l-1))) (priv-stor priv-stor) (l l) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l-0) l-1))
  (deflistener (cat (exp (gen) y) (mul (rec x) l-0 l-1)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self self-0)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (5 0))
    ((3 1) (0 0)) ((3 2) (2 1)) ((3 2) (4 0)) ((4 1) (2 2))
    ((5 1) (0 3)) ((6 1) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y l) (x l-0))
  (precur (4 0) (5 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly (exp (gen) (mul l-0 l-1)))
    (neq (exp (gen) (mul l-0 l-1)) (gen)) (neq self b) (undisclosed l-0)
    (undisclosed l))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 2) l-1 (4 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) l-0 l-1))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y l-0 l-1)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul l-0 l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y l-0 l-1)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l-0) l-1)) (send (cat (exp (gen) l-0) l-1)))
    ((recv (cat (exp (gen) y) (mul (rec x) l-0 l-1)))
      (send (cat (exp (gen) y) (mul (rec x) l-0 l-1))))
    ((load priv-stor-1 (cat pt-3 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv self-0 l-1)))))
  (label 192)
  (parent 140)
  (unrealized (0 3) (4 0) (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data)
    (b self self-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l y x l-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-1))
    (gy (exp (gen) (mul y (rec x) l-0 l-1))) (priv-stor priv-stor-0)
    (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) (mul l-0 l-1))) (priv-stor priv-stor) (l l-1) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-0) l-1))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self-0)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) y) (mul (rec x) l-0 l-1)))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (6 0))
    ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (2 2)) ((5 2) (4 0))
    ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y l-1) (x l))
  (precur (4 0) (6 0))
  (gen-st (pv b l-1) (pv self l))
  (facts (silly (exp (gen) (mul l-0 l-1)))
    (neq (exp (gen) (mul l-0 l-1)) (gen)) (neq self b) (undisclosed l)
    (undisclosed l-1))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 7 1 ltx-gen 2) l-2 (4 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) l-0 l-1))
          (enc na nb self b
            (hash (exp (gen) (mul l l-1))
              (exp (gen) (mul y l-0 l-1)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-1)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul l-0 l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-1))
              (exp (gen) (mul y l-0 l-1)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l-0) l-1)) (send (cat (exp (gen) l-0) l-1)))
    ((load priv-stor-1 (cat pt-3 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) y) (mul (rec x) l-0 l-1)))
      (send (cat (exp (gen) y) (mul (rec x) l-0 l-1)))))
  (label 193)
  (parent 141)
  (unrealized (0 3) (4 0) (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data)
    (b self self-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 y x l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul y (rec x) l-1))) (priv-stor priv-stor-0) (l l)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) l-1)) (priv-stor priv-stor) (l l-0) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-1) (one)))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self-0)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) y) (mul (rec x) l-1)))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (6 0))
    ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (2 2)) ((5 2) (4 0))
    ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y l-0) (x l))
  (precur (4 0) (6 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) l-1)) (neq (exp (gen) l-1) (gen))
    (neq self b) (undisclosed l) (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (contracted (x-0 x) (l-2 l-1) (w (mul (rec x) l-1))) (one) (4 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) l-1))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-1)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) l-1)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-1)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l-1) (one)))
      (send (cat (exp (gen) l-1) (one))))
    ((load priv-stor-1 (cat pt-3 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv self-0 l-1)))
      (send
        (sig (body self-0 (exp (gen) l-1) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) y) (mul (rec x) l-1)))
      (send (cat (exp (gen) y) (mul (rec x) l-1)))))
  (label 194)
  (parent 141)
  (unrealized (0 3) (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data)
    (b self self-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l y x l-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul y (rec x) l-0 l-1))) (priv-stor priv-stor-0)
    (l l-1) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-1))
    (gx (exp (gen) (mul l-0 l-1))) (priv-stor priv-stor) (l l) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-1))
  (deflistener (cat (exp (gen) l-0) l-1))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self-0)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) y) (mul (rec x) l-0 l-1)))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (6 0))
    ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (2 2)) ((5 2) (4 0))
    ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y l) (x l-1))
  (precur (4 0) (6 0))
  (gen-st (pv b l) (pv self l-1))
  (facts (silly (exp (gen) (mul l-0 l-1)))
    (neq (exp (gen) (mul l-0 l-1)) (gen)) (neq self b) (undisclosed l-1)
    (undisclosed l))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 7 3 ltx-gen 2) l-2 (4 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-1)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) l-0 l-1))
          (enc na nb self b
            (hash (exp (gen) (mul l l-1))
              (exp (gen) (mul y l-0 l-1)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul l-0 l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-1))
              (exp (gen) (mul y l-0 l-1)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l-0) l-1)) (send (cat (exp (gen) l-0) l-1)))
    ((load priv-stor-1 (cat pt-3 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) y) (mul (rec x) l-0 l-1)))
      (send (cat (exp (gen) y) (mul (rec x) l-0 l-1)))))
  (label 195)
  (parent 141)
  (unrealized (0 3) (4 0) (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data)
    (b self self-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 y x l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul y (rec x) l-1 l-1))) (priv-stor priv-stor-0)
    (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) (mul l-1 l-1))) (priv-stor priv-stor) (l l-0) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-1) l-1))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self-0)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) y) (mul (rec x) l-1 l-1)))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (6 0))
    ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (2 2)) ((5 2) (4 0))
    ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y l-0) (x l))
  (precur (4 0) (6 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) (mul l-1 l-1)))
    (neq (exp (gen) (mul l-1 l-1)) (gen)) (neq self b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 7 5 ltx-gen 2) l-2 (4 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) l-1 l-1))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y l-1 l-1)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul l-1 l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y l-1 l-1)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l-1) l-1)) (send (cat (exp (gen) l-1) l-1)))
    ((load priv-stor-1 (cat pt-3 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv self-0 l-1)))
      (send
        (sig (body self-0 (exp (gen) l-1) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) y) (mul (rec x) l-1 l-1)))
      (send (cat (exp (gen) y) (mul (rec x) l-1 l-1)))))
  (label 196)
  (parent 141)
  (unrealized (0 3) (4 0) (6 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 ignore-2 mesg) (na nb data)
    (b self self-0 self-1 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn)
    (l l-0 y x l-1 l-2 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul y (rec x) l-1 l-2))) (priv-stor priv-stor-0)
    (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) (mul l-1 l-2))) (priv-stor priv-stor) (l l-0) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-1) l-2))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self-0)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) y) (mul (rec x) l-1 l-2)))
  (defstrand ltx-gen 2 (ignore ignore-2) (self self-1)
    (priv-stor priv-stor-2) (l l-2))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (6 0))
    ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (2 2)) ((5 2) (4 0))
    ((6 1) (0 3)) ((7 1) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1 l-2)
  (uniq-gen y x)
  (absent (y l-0) (x l))
  (precur (4 0) (6 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) (mul l-1 l-2)))
    (neq (exp (gen) (mul l-1 l-2)) (gen)) (neq self b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 2) l-2 (4 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) l-1 l-2))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y l-1 l-2)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul l-1 l-2))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y l-1 l-2)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l-1) l-2)) (send (cat (exp (gen) l-1) l-2)))
    ((load priv-stor-1 (cat pt-3 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv self-0 l-1)))
      (send
        (sig (body self-0 (exp (gen) l-1) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) y) (mul (rec x) l-1 l-2)))
      (send (cat (exp (gen) y) (mul (rec x) l-1 l-2))))
    ((load priv-stor-2 (cat pt-5 ignore-2))
      (stor priv-stor-2 (cat pt-6 (pv self-1 l-2)))))
  (label 197)
  (parent 141)
  (unrealized (0 3) (4 0) (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data)
    (b self self-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y l l-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y l-1))) (priv-stor priv-stor-0) (l l-0)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) l-1)) (priv-stor priv-stor) (l l) (y y))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self-0)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul (rec x) y)) l-1))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-1)
    (l l-1))
  (deflistener (cat (exp (gen) (rec x)) y))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (8 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((5 1) (7 0))
    ((5 2) (2 2)) ((6 1) (0 3)) ((7 2) (6 0)) ((8 1) (6 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l-0) (y l))
  (precur (3 0))
  (gen-st (pv b l) (pv self l-0) (pv self-0 l-1))
  (facts (silly (exp (gen) l-1)) (neq (exp (gen) l-1) (gen))
    (neq self b) (undisclosed l-0) (undisclosed l))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)) ((5 1) (7 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) (rec x)) y))
    (exp (gen) (mul (rec x) y)) (6 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y l-1))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-1)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) l-1)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-1)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-1 (cat pt-3 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv self-0 l-1)))
      (send
        (sig (body self-0 (exp (gen) l-1) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) (mul (rec x) y)) l-1))
      (send (cat (exp (gen) (mul (rec x) y)) l-1)))
    ((load priv-stor-1 (cat pt-4 (pv self-0 l-1)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l-1))
    ((recv (cat (exp (gen) (rec x)) y))
      (send (cat (exp (gen) (rec x)) y))))
  (label 198)
  (parent 160)
  (unrealized (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data)
    (b self self-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y l l-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y l-1))) (priv-stor priv-stor-0) (l l-0)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) l-1)) (priv-stor priv-stor) (l l) (y y))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self-0)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul (rec x) y)) l-1))
  (defstrand ltx-disclose 3 (self self-0) (priv-stor priv-stor-1)
    (l l-1))
  (deflistener (cat (exp (gen) y) x))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (8 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((5 1) (7 0))
    ((5 2) (2 2)) ((6 1) (0 3)) ((7 2) (6 0)) ((8 1) (6 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l-0) (y l))
  (precur (3 0))
  (gen-st (pv b l) (pv self l-0) (pv self-0 l-1))
  (facts (silly (exp (gen) l-1)) (neq (exp (gen) l-1) (gen))
    (neq self b) (undisclosed l-0) (undisclosed l))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)) ((5 1) (7 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) y) x))
    (exp (gen) (mul (rec x) y)) (6 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y l-1))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-1)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) l-1)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-1)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-1 (cat pt-3 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv self-0 l-1)))
      (send
        (sig (body self-0 (exp (gen) l-1) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) (mul (rec x) y)) l-1))
      (send (cat (exp (gen) (mul (rec x) y)) l-1)))
    ((load priv-stor-1 (cat pt-4 (pv self-0 l-1)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l-1))
    ((recv (cat (exp (gen) y) x)) (send (cat (exp (gen) y) x))))
  (label 199)
  (parent 160)
  (unrealized (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (b self b-0 name)
    (pt pt-0 pt-1 pt-2 pval) (gb base) (priv-stor priv-stor-0 locn)
    (l x x-0 l-0 y rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) y)) (priv-stor priv-stor-0) (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) x)) (priv-stor priv-stor) (l l-0) (y y))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) x-0) (mul x (rec x-0))))
  (defstrand init 3 (na na-0) (a b) (b b-0) (gb gb)
    (priv-stor priv-stor) (l l-0) (x x-0))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 1) (6 0)) ((1 2) (0 1))
    ((2 3) (0 3)) ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0))
    ((5 1) (2 2)) ((6 2) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen x x-0 y)
  (absent (x l) (x-0 l-0) (y l-0))
  (precur (3 0) (5 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) x)) (neq (exp (gen) x) (gen)) (neq self b)
    (undisclosed l) (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((1 1) (6 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 7 2 resp 4) (exp (gen) y-0) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) x-0) (mul x (rec x-0))))
      (send (cat (exp (gen) x-0) (mul x (rec x-0)))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 b b-0 (exp (gen) x-0)))))
  (label 200)
  (parent 161)
  (unrealized (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (b self b-0 name)
    (pt pt-0 pt-1 pt-2 pval) (gb base) (priv-stor priv-stor-0 locn)
    (x y l rndx) (w expt) (x-0 l-0 rndx) (w-0 expt))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul (rec x) y w x-0))) (priv-stor priv-stor-0) (l l)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) (mul w x-0))) (priv-stor priv-stor) (l l-0) (y y))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) x-0) w))
  (defstrand init 3 (na na-0) (a b) (b b-0) (gb gb)
    (priv-stor priv-stor) (l l-0) (x x-0))
  (deflistener (cat (exp (gen) (mul (rec x) y w x-0 (rec w-0))) w-0))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 1) (6 0)) ((1 2) (0 1))
    ((2 3) (7 0)) ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0))
    ((5 1) (2 2)) ((6 2) (5 0)) ((7 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen x y x-0)
  (absent (x l) (y l-0) (x-0 l-0))
  (precur (3 0) (5 0) (7 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) (mul w x-0)))
    (neq (exp (gen) (mul w x-0)) (gen)) (neq self b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((1 1) (6 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener
      (cat (exp (gen) (mul (rec x) y w x-0 (rec w-0))) w-0))
    (exp (gen) (mul (rec x) y w x-0)) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y w x-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w x-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul w x-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w x-0)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) x-0) w)) (send (cat (exp (gen) x-0) w)))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 b b-0 (exp (gen) x-0))))
    ((recv (cat (exp (gen) (mul (rec x) y w x-0 (rec w-0))) w-0))
      (send (cat (exp (gen) (mul (rec x) y w x-0 (rec w-0))) w-0))))
  (label 201)
  (parent 161)
  (unrealized (7 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (b self b-0 name)
    (pt pt-0 pt-1 pt-2 pval) (gb base) (priv-stor priv-stor-0 locn)
    (l x x-0 l-0 y rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) y)) (priv-stor priv-stor-0) (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) x)) (priv-stor priv-stor) (l l-0) (y y))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) x-0) (mul x (rec x-0))))
  (defstrand init 3 (na na-0) (a self) (b b-0) (gb gb)
    (priv-stor priv-stor-0) (l l) (x x-0))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 1) (6 0)) ((4 2) (3 0))
    ((5 1) (2 2)) ((6 2) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen x x-0 y)
  (absent (x l) (x-0 l) (y l-0))
  (precur (3 0) (5 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) x)) (neq (exp (gen) x) (gen)) (neq self b)
    (undisclosed l) (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)) ((4 1) (6 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 7 2 resp 4) (exp (gen) y-0) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) x-0) (mul x (rec x-0))))
      (send (cat (exp (gen) x-0) (mul x (rec x-0)))))
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 self b-0 (exp (gen) x-0)))))
  (label 202)
  (parent 162)
  (unrealized (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (b self b-0 name)
    (pt pt-0 pt-1 pt-2 pval) (gb base) (priv-stor priv-stor-0 locn)
    (x y l rndx) (w expt) (x-0 l-0 rndx) (w-0 expt))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y w x-0))) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) (mul w x-0))) (priv-stor priv-stor) (l l) (y y))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) x-0) w))
  (defstrand init 3 (na na-0) (a self) (b b-0) (gb gb)
    (priv-stor priv-stor-0) (l l-0) (x x-0))
  (deflistener (cat (exp (gen) (mul (rec x) y w x-0 (rec w-0))) w-0))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (7 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 1) (6 0)) ((4 2) (3 0))
    ((5 1) (2 2)) ((6 2) (5 0)) ((7 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen x y x-0)
  (absent (x l-0) (y l) (x-0 l-0))
  (precur (3 0) (5 0) (7 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly (exp (gen) (mul w x-0)))
    (neq (exp (gen) (mul w x-0)) (gen)) (neq self b) (undisclosed l-0)
    (undisclosed l))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)) ((4 1) (6 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener
      (cat (exp (gen) (mul (rec x) y w x-0 (rec w-0))) w-0))
    (exp (gen) (mul (rec x) y w x-0)) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y w x-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w x-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul w x-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w x-0)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) x-0) w)) (send (cat (exp (gen) x-0) w)))
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 self b-0 (exp (gen) x-0))))
    ((recv (cat (exp (gen) (mul (rec x) y w x-0 (rec w-0))) w-0))
      (send (cat (exp (gen) (mul (rec x) y w x-0 (rec w-0))) w-0))))
  (label 203)
  (parent 162)
  (unrealized (7 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (b self a b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (gb base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 x x-0 l-1 y rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-1))
    (gy (exp (gen) y)) (priv-stor priv-stor-0) (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) x)) (priv-stor priv-stor) (l l-1) (y y))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) x-0) (mul x (rec x-0))))
  (defstrand init 3 (na na-0) (a a) (b b-0) (gb gb)
    (priv-stor priv-stor-1) (l l-0) (x x-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self a)
    (priv-stor priv-stor-1) (l l-0))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((5 1) (2 2))
    ((6 2) (5 0)) ((7 1) (6 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen x x-0 y)
  (absent (x l) (x-0 l-0) (y l-1))
  (precur (3 0) (5 0))
  (gen-st (pv b l-1) (pv self l) (pv a l-0))
  (facts (silly (exp (gen) x)) (neq (exp (gen) x) (gen)) (neq self b)
    (undisclosed l) (undisclosed l-1))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)) ((7 1) (6 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 8 2 resp 4) (exp (gen) y-0) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-1)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) x-0) (mul x (rec x-0))))
      (send (cat (exp (gen) x-0) (mul x (rec x-0)))))
    ((load priv-stor-1 (cat pt-3 (pv a l-0)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 a b-0 (exp (gen) x-0))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv a l-0)))))
  (label 204)
  (parent 163)
  (unrealized (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (b self a b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (gb base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y l l-0 rndx) (w expt)
    (x-0 l-1 rndx) (w-0 expt))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y w x-0))) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) (mul w x-0))) (priv-stor priv-stor) (l l) (y y))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) x-0) w))
  (defstrand init 3 (na na-0) (a a) (b b-0) (gb gb)
    (priv-stor priv-stor-1) (l l-1) (x x-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self a)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul (rec x) y w x-0 (rec w-0))) w-0))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (8 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((5 1) (2 2))
    ((6 2) (5 0)) ((7 1) (6 0)) ((8 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen x y x-0)
  (absent (x l-0) (y l) (x-0 l-1))
  (precur (3 0) (5 0) (8 0))
  (gen-st (pv b l) (pv self l-0) (pv a l-1))
  (facts (silly (exp (gen) (mul w x-0)))
    (neq (exp (gen) (mul w x-0)) (gen)) (neq self b) (undisclosed l-0)
    (undisclosed l))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)) ((7 1) (6 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener
      (cat (exp (gen) (mul (rec x) y w x-0 (rec w-0))) w-0))
    (exp (gen) (mul (rec x) y w x-0)) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y w x-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w x-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul w x-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w x-0)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) x-0) w)) (send (cat (exp (gen) x-0) w)))
    ((load priv-stor-1 (cat pt-3 (pv a l-1)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 a b-0 (exp (gen) x-0))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv a l-1))))
    ((recv (cat (exp (gen) (mul (rec x) y w x-0 (rec w-0))) w-0))
      (send (cat (exp (gen) (mul (rec x) y w x-0 (rec w-0))) w-0))))
  (label 205)
  (parent 163)
  (unrealized (8 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (l x rndx)
    (w expt) (l-0 y rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul w y))) (priv-stor priv-stor-0) (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) (mul x w))) (priv-stor priv-stor) (l l-0) (y y))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (gen) (mul x w)))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (6 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((5 1) (2 2))
    ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l) (y l-0))
  (precur (3 0) (5 0) (6 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) (mul x w))) (neq (exp (gen) (mul x w)) (gen))
    (neq self b) (undisclosed l) (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 7 2 resp 4) (exp (gen) y-0) (6 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul x w))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (gen) (mul x w))) (send (cat (gen) (mul x w))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 206)
  (parent 165)
  (unrealized (5 0))
  (comment "4 in cohort - 4 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (l x rndx)
    (w expt) (l-0 y rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul w y))) (priv-stor priv-stor-0) (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) (mul x w))) (priv-stor priv-stor) (l l-0) (y y))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-0) (mul x w (rec l-0))))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (6 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((5 1) (2 2))
    ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l) (y l-0))
  (precur (3 0) (5 0) (6 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) (mul x w))) (neq (exp (gen) (mul x w)) (gen))
    (neq self b) (undisclosed l) (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 7 2 resp 4) (exp (gen) y-0) (6 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul x w))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l-0) (mul x w (rec l-0))))
      (send (cat (exp (gen) l-0) (mul x w (rec l-0)))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 207)
  (parent 167)
  (unrealized (5 0))
  (comment "4 in cohort - 4 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (b self a name)
    (pt pt-0 pt-1 pt-2 pval) (ga gx base) (priv-stor priv-stor-0 locn)
    (l x y l-0 y-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) y-0)) (priv-stor priv-stor-0) (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) x)) (priv-stor priv-stor) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) y) (mul x (rec y))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b) (ga ga) (gx gx)
    (priv-stor priv-stor) (l l-0) (y y))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 1) (6 0)) ((1 2) (0 1))
    ((2 3) (0 3)) ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0))
    ((5 1) (2 2)) ((6 3) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen x y y-0)
  (absent (x l) (y l-0) (y-0 l-0))
  (precur (3 0) (5 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly gx) (silly (exp (gen) x)) (neq gx (gen))
    (neq (exp (gen) x) (gen)) (neq self b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((1 1) (6 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 7 2 resp 4) (exp (gen) y-1) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y-0)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x)))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y-0)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y) (mul x (rec y))))
      (send (cat (exp (gen) y) (mul x (rec y)))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b gx))
      (send
        (cat (exp (gen) y)
          (enc na-0 nb-0 a b (hash (exp ga l-0) (exp gx y)))))))
  (label 208)
  (parent 168)
  (unrealized (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (b self a name)
    (pt pt-0 pt-1 pt-2 pval) (ga gx base) (priv-stor priv-stor-0 locn)
    (x y l rndx) (w expt) (y-0 l-0 rndx) (w-0 expt))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul (rec x) y w y-0))) (priv-stor priv-stor-0) (l l)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) (mul w y-0))) (priv-stor priv-stor) (l l-0) (y y))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) y-0) w))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b) (ga ga) (gx gx)
    (priv-stor priv-stor) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) (mul (rec x) y w y-0 (rec w-0))) w-0))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 1) (6 0)) ((1 2) (0 1))
    ((2 3) (7 0)) ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0))
    ((5 1) (2 2)) ((6 3) (5 0)) ((7 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen x y y-0)
  (absent (x l) (y l-0) (y-0 l-0))
  (precur (3 0) (5 0) (7 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly gx) (silly (exp (gen) (mul w y-0))) (neq gx (gen))
    (neq (exp (gen) (mul w y-0)) (gen)) (neq self b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((1 1) (6 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener
      (cat (exp (gen) (mul (rec x) y w y-0 (rec w-0))) w-0))
    (exp (gen) (mul (rec x) y w y-0)) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y w y-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w y-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul w y-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w y-0)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y-0) w)) (send (cat (exp (gen) y-0) w)))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a b (hash (exp ga l-0) (exp gx y-0))))))
    ((recv (cat (exp (gen) (mul (rec x) y w y-0 (rec w-0))) w-0))
      (send (cat (exp (gen) (mul (rec x) y w y-0 (rec w-0))) w-0))))
  (label 209)
  (parent 168)
  (unrealized (7 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (b self a name)
    (pt pt-0 pt-1 pt-2 pval) (ga gx base) (priv-stor priv-stor-0 locn)
    (l x y l-0 y-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) y-0)) (priv-stor priv-stor-0) (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) x)) (priv-stor priv-stor) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) y) (mul x (rec y))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b self) (ga ga) (gx gx)
    (priv-stor priv-stor-0) (l l) (y y))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 1) (6 0)) ((4 2) (3 0))
    ((5 1) (2 2)) ((6 3) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen x y y-0)
  (absent (x l) (y l) (y-0 l-0))
  (precur (3 0) (5 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly gx) (silly (exp (gen) x)) (neq gx (gen))
    (neq (exp (gen) x) (gen)) (neq self b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)) ((4 1) (6 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 7 2 resp 4) (exp (gen) y-1) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y-0)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x)))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y-0)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y) (mul x (rec y))))
      (send (cat (exp (gen) y) (mul x (rec y)))))
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a self gx))
      (send
        (cat (exp (gen) y)
          (enc na-0 nb-0 a self (hash (exp ga l) (exp gx y)))))))
  (label 210)
  (parent 169)
  (unrealized (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (b self a name)
    (pt pt-0 pt-1 pt-2 pval) (ga gx base) (priv-stor priv-stor-0 locn)
    (x y l rndx) (w expt) (y-0 l-0 rndx) (w-0 expt))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y w y-0))) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) (mul w y-0))) (priv-stor priv-stor) (l l) (y y))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) y-0) w))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b self) (ga ga) (gx gx)
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) (mul (rec x) y w y-0 (rec w-0))) w-0))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (7 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 1) (6 0)) ((4 2) (3 0))
    ((5 1) (2 2)) ((6 3) (5 0)) ((7 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen x y y-0)
  (absent (x l-0) (y l) (y-0 l-0))
  (precur (3 0) (5 0) (7 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly gx) (silly (exp (gen) (mul w y-0))) (neq gx (gen))
    (neq (exp (gen) (mul w y-0)) (gen)) (neq self b) (undisclosed l-0)
    (undisclosed l))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)) ((4 1) (6 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener
      (cat (exp (gen) (mul (rec x) y w y-0 (rec w-0))) w-0))
    (exp (gen) (mul (rec x) y w y-0)) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y w y-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w y-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul w y-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w y-0)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y-0) w)) (send (cat (exp (gen) y-0) w)))
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a self gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a self (hash (exp ga l-0) (exp gx y-0))))))
    ((recv (cat (exp (gen) (mul (rec x) y w y-0 (rec w-0))) w-0))
      (send (cat (exp (gen) (mul (rec x) y w y-0 (rec w-0))) w-0))))
  (label 211)
  (parent 169)
  (unrealized (7 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (b self a b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (ga gx base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 x y l-1 y-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-1))
    (gy (exp (gen) y-0)) (priv-stor priv-stor-0) (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) x)) (priv-stor priv-stor) (l l-1) (y y-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) y) (mul x (rec y))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b-0) (ga ga) (gx gx)
    (priv-stor priv-stor-1) (l l-0) (y y))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b-0)
    (priv-stor priv-stor-1) (l l-0))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((5 1) (2 2))
    ((6 3) (5 0)) ((7 1) (6 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen x y y-0)
  (absent (x l) (y l-0) (y-0 l-1))
  (precur (3 0) (5 0))
  (gen-st (pv b l-1) (pv self l) (pv b-0 l-0))
  (facts (silly gx) (silly (exp (gen) x)) (neq gx (gen))
    (neq (exp (gen) x) (gen)) (neq self b) (undisclosed l)
    (undisclosed l-1))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)) ((7 1) (6 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 8 2 resp 4) (exp (gen) y-1) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y-0)
          (enc na nb self b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-1)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x)))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x y-0)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y) (mul x (rec y))))
      (send (cat (exp (gen) y) (mul x (rec y)))))
    ((load priv-stor-1 (cat pt-3 (pv b-0 l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b-0 gx))
      (send
        (cat (exp (gen) y)
          (enc na-0 nb-0 a b-0 (hash (exp ga l-0) (exp gx y))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b-0 l-0)))))
  (label 212)
  (parent 170)
  (unrealized (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (b self a b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (ga gx base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y l l-0 rndx) (w expt)
    (y-0 l-1 rndx) (w-0 expt))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul (rec x) y w y-0))) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) (mul w y-0))) (priv-stor priv-stor) (l l) (y y))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) y-0) w))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b-0) (ga ga) (gx gx)
    (priv-stor priv-stor-1) (l l-1) (y y-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b-0)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul (rec x) y w y-0 (rec w-0))) w-0))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (8 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((5 1) (2 2))
    ((6 3) (5 0)) ((7 1) (6 0)) ((8 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen x y y-0)
  (absent (x l-0) (y l) (y-0 l-1))
  (precur (3 0) (5 0) (8 0))
  (gen-st (pv b l) (pv self l-0) (pv b-0 l-1))
  (facts (silly gx) (silly (exp (gen) (mul w y-0))) (neq gx (gen))
    (neq (exp (gen) (mul w y-0)) (gen)) (neq self b) (undisclosed l-0)
    (undisclosed l))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)) ((7 1) (6 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener
      (cat (exp (gen) (mul (rec x) y w y-0 (rec w-0))) w-0))
    (exp (gen) (mul (rec x) y w y-0)) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y w y-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w y-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul w y-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y w y-0)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y-0) w)) (send (cat (exp (gen) y-0) w)))
    ((load priv-stor-1 (cat pt-3 (pv b-0 l-1)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b-0 gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a b-0 (hash (exp ga l-1) (exp gx y-0))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b-0 l-1))))
    ((recv (cat (exp (gen) (mul (rec x) y w y-0 (rec w-0))) w-0))
      (send (cat (exp (gen) (mul (rec x) y w y-0 (rec w-0))) w-0))))
  (label 213)
  (parent 170)
  (unrealized (8 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x l rndx)
    (w expt) (l-0 y rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul w y))) (priv-stor priv-stor-0) (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) (mul x w))) (priv-stor priv-stor) (l l-0) (y y))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l) (mul x (rec l) w)))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (6 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((4 2) (5 0))
    ((5 1) (2 2)) ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l) (y l-0))
  (precur (3 0) (5 0) (6 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) (mul x w))) (neq (exp (gen) (mul x w)) (gen))
    (neq self b) (undisclosed l) (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 7 2 resp 4) (exp (gen) y-0) (6 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul x w))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) (mul x (rec l) w)))
      (send (cat (exp (gen) l) (mul x (rec l) w))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 214)
  (parent 172)
  (unrealized (5 0))
  (comment "4 in cohort - 4 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data)
    (b self self-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l x l-0 rndx) (w expt)
    (l-1 y rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-1))
    (gy (exp (gen) (mul w y))) (priv-stor priv-stor-0) (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) (mul x w))) (priv-stor priv-stor) (l l-1) (y y))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-0) (mul x (rec l-0) w)))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self-0)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (7 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((5 1) (2 2))
    ((6 2) (5 0)) ((7 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (y l-1))
  (precur (3 0) (5 0) (7 0))
  (gen-st (pv b l-1) (pv self l))
  (facts (silly (exp (gen) (mul x w))) (neq (exp (gen) (mul x w)) (gen))
    (neq self b) (undisclosed l) (undisclosed l-1))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 8 2 resp 4) (exp (gen) y-0) (7 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb self b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x w y)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-1)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul x w))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x w y)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l-0) (mul x (rec l-0) w)))
      (send (cat (exp (gen) l-0) (mul x (rec l-0) w))))
    ((load priv-stor-1 (cat pt-3 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 215)
  (parent 174)
  (unrealized (5 0))
  (comment "5 in cohort - 5 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (b self b-0 name)
    (pt pt-0 pt-1 pt-2 pval) (gb base) (priv-stor priv-stor-0 locn)
    (l y x x-0 l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul y (rec x) x-0 l-0))) (priv-stor priv-stor-0)
    (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) (mul x-0 l-0))) (priv-stor priv-stor) (l l-0) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) x-0) l-0))
  (defstrand init 3 (na na-0) (a b) (b b-0) (gb gb)
    (priv-stor priv-stor) (l l-0) (x x-0))
  (deflistener (cat (exp (gen) y) (mul (rec x) x-0 l-0)))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 1) (5 0)) ((1 2) (0 1))
    ((2 3) (6 0)) ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (2 2))
    ((5 2) (4 0)) ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen y x x-0)
  (absent (y l-0) (x l) (x-0 l-0))
  (precur (4 0) (6 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) (mul x-0 l-0)))
    (neq (exp (gen) (mul x-0 l-0)) (gen)) (neq self b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((1 1) (5 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 7 1 ltx-gen 2) l-1 (4 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) x-0 l-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y x-0 l-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul x-0 l-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y x-0 l-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) x-0) l-0)) (send (cat (exp (gen) x-0) l-0)))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 b b-0 (exp (gen) x-0))))
    ((recv (cat (exp (gen) y) (mul (rec x) x-0 l-0)))
      (send (cat (exp (gen) y) (mul (rec x) x-0 l-0)))))
  (label 216)
  (parent 175)
  (unrealized (0 3) (4 0) (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (b self b-0 name)
    (pt pt-0 pt-1 pt-2 pval) (gb base) (priv-stor priv-stor-0 locn)
    (l l-0 y x x-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul y (rec x) x-0))) (priv-stor priv-stor-0) (l l)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) x-0)) (priv-stor priv-stor) (l l-0) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) x-0) (one)))
  (defstrand init 3 (na na-0) (a b) (b b-0) (gb gb)
    (priv-stor priv-stor) (l l-0) (x x-0))
  (deflistener (cat (exp (gen) y) (mul (rec x) x-0)))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 1) (5 0)) ((1 2) (0 1))
    ((2 3) (6 0)) ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (2 2))
    ((5 2) (4 0)) ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen y x x-0)
  (absent (y l-0) (x l) (x-0 l-0))
  (precur (4 0) (6 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) x-0)) (neq (exp (gen) x-0) (gen))
    (neq self b) (undisclosed l) (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((1 1) (5 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (contracted (x-1 x) (x-2 x-0) (w (mul (rec x) x-0))) (one) (4 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) x-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) x-0) (one)))
      (send (cat (exp (gen) x-0) (one))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 b b-0 (exp (gen) x-0))))
    ((recv (cat (exp (gen) y) (mul (rec x) x-0)))
      (send (cat (exp (gen) y) (mul (rec x) x-0)))))
  (label 217)
  (parent 175)
  (unrealized (0 3) (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (b self b-0 name)
    (pt pt-0 pt-1 pt-2 pval) (gb base) (priv-stor priv-stor-0 locn)
    (l y x x-0 l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul y (rec x) x-0 l-0))) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) (mul x-0 l-0))) (priv-stor priv-stor) (l l) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) x-0) l-0))
  (defstrand init 3 (na na-0) (a b) (b b-0) (gb gb)
    (priv-stor priv-stor) (l l) (x x-0))
  (deflistener (cat (exp (gen) y) (mul (rec x) x-0 l-0)))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 1) (5 0)) ((1 2) (0 1))
    ((2 3) (6 0)) ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (2 2))
    ((5 2) (4 0)) ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen y x x-0)
  (absent (y l) (x l-0) (x-0 l))
  (precur (4 0) (6 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly (exp (gen) (mul x-0 l-0)))
    (neq (exp (gen) (mul x-0 l-0)) (gen)) (neq self b) (undisclosed l-0)
    (undisclosed l))
  (leads-to ((1 1) (2 0)) ((1 1) (5 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 7 3 ltx-gen 2) l-1 (4 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) x-0 l-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y x-0 l-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul x-0 l-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y x-0 l-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) x-0) l-0)) (send (cat (exp (gen) x-0) l-0)))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 b b-0 (exp (gen) x-0))))
    ((recv (cat (exp (gen) y) (mul (rec x) x-0 l-0)))
      (send (cat (exp (gen) y) (mul (rec x) x-0 l-0)))))
  (label 218)
  (parent 175)
  (unrealized (0 3) (4 0) (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (b self b-0 self-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (gb base) (priv-stor priv-stor-0 priv-stor-1 locn)
    (l l-0 y x x-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul y (rec x) x-0 l-1))) (priv-stor priv-stor-0)
    (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) (mul x-0 l-1))) (priv-stor priv-stor) (l l-0) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) x-0) l-1))
  (defstrand init 3 (na na-0) (a b) (b b-0) (gb gb)
    (priv-stor priv-stor) (l l-0) (x x-0))
  (deflistener (cat (exp (gen) y) (mul (rec x) x-0 l-1)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self self-0)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 1) (5 0)) ((1 2) (0 1))
    ((2 3) (6 0)) ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (2 2))
    ((5 2) (4 0)) ((6 1) (0 3)) ((7 1) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen y x x-0)
  (absent (y l-0) (x l) (x-0 l-0))
  (precur (4 0) (6 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) (mul x-0 l-1)))
    (neq (exp (gen) (mul x-0 l-1)) (gen)) (neq self b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((1 1) (5 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 2) l-1 (4 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) x-0 l-1))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y x-0 l-1)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul x-0 l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y x-0 l-1)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) x-0) l-1)) (send (cat (exp (gen) x-0) l-1)))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 b b-0 (exp (gen) x-0))))
    ((recv (cat (exp (gen) y) (mul (rec x) x-0 l-1)))
      (send (cat (exp (gen) y) (mul (rec x) x-0 l-1))))
    ((load priv-stor-1 (cat pt-3 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv self-0 l-1)))))
  (label 219)
  (parent 175)
  (unrealized (0 3) (4 0) (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (b self b-0 name)
    (pt pt-0 pt-1 pt-2 pval) (gb base) (priv-stor priv-stor-0 locn)
    (l y x x-0 l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul y (rec x) x-0 l-0))) (priv-stor priv-stor-0)
    (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) (mul x-0 l-0))) (priv-stor priv-stor) (l l-0) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) x-0) l-0))
  (defstrand init 3 (na na-0) (a self) (b b-0) (gb gb)
    (priv-stor priv-stor-0) (l l) (x x-0))
  (deflistener (cat (exp (gen) y) (mul (rec x) x-0 l-0)))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (6 0))
    ((3 1) (0 0)) ((3 1) (5 0)) ((3 2) (2 1)) ((4 1) (2 2))
    ((5 2) (4 0)) ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen y x x-0)
  (absent (y l-0) (x l) (x-0 l))
  (precur (4 0) (6 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) (mul x-0 l-0)))
    (neq (exp (gen) (mul x-0 l-0)) (gen)) (neq self b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)) ((3 1) (5 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 7 1 ltx-gen 2) l-1 (4 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) x-0 l-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y x-0 l-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul x-0 l-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y x-0 l-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) x-0) l-0)) (send (cat (exp (gen) x-0) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 self b-0 (exp (gen) x-0))))
    ((recv (cat (exp (gen) y) (mul (rec x) x-0 l-0)))
      (send (cat (exp (gen) y) (mul (rec x) x-0 l-0)))))
  (label 220)
  (parent 176)
  (unrealized (0 3) (4 0) (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (b self b-0 name)
    (pt pt-0 pt-1 pt-2 pval) (gb base) (priv-stor priv-stor-0 locn)
    (l l-0 y x x-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul y (rec x) x-0))) (priv-stor priv-stor-0) (l l)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) x-0)) (priv-stor priv-stor) (l l-0) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) x-0) (one)))
  (defstrand init 3 (na na-0) (a self) (b b-0) (gb gb)
    (priv-stor priv-stor-0) (l l) (x x-0))
  (deflistener (cat (exp (gen) y) (mul (rec x) x-0)))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (6 0))
    ((3 1) (0 0)) ((3 1) (5 0)) ((3 2) (2 1)) ((4 1) (2 2))
    ((5 2) (4 0)) ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen y x x-0)
  (absent (y l-0) (x l) (x-0 l))
  (precur (4 0) (6 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) x-0)) (neq (exp (gen) x-0) (gen))
    (neq self b) (undisclosed l) (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)) ((3 1) (5 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (contracted (x-1 x) (x-2 x-0) (w (mul (rec x) x-0))) (one) (4 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) x-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) x-0) (one)))
      (send (cat (exp (gen) x-0) (one))))
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 self b-0 (exp (gen) x-0))))
    ((recv (cat (exp (gen) y) (mul (rec x) x-0)))
      (send (cat (exp (gen) y) (mul (rec x) x-0)))))
  (label 221)
  (parent 176)
  (unrealized (0 3) (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (b self b-0 name)
    (pt pt-0 pt-1 pt-2 pval) (gb base) (priv-stor priv-stor-0 locn)
    (l y x x-0 l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul y (rec x) x-0 l-0))) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) (mul x-0 l-0))) (priv-stor priv-stor) (l l) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) x-0) l-0))
  (defstrand init 3 (na na-0) (a self) (b b-0) (gb gb)
    (priv-stor priv-stor-0) (l l-0) (x x-0))
  (deflistener (cat (exp (gen) y) (mul (rec x) x-0 l-0)))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (6 0))
    ((3 1) (0 0)) ((3 1) (5 0)) ((3 2) (2 1)) ((4 1) (2 2))
    ((5 2) (4 0)) ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen y x x-0)
  (absent (y l) (x l-0) (x-0 l-0))
  (precur (4 0) (6 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly (exp (gen) (mul x-0 l-0)))
    (neq (exp (gen) (mul x-0 l-0)) (gen)) (neq self b) (undisclosed l-0)
    (undisclosed l))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)) ((3 1) (5 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 7 3 ltx-gen 2) l-1 (4 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) x-0 l-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y x-0 l-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul x-0 l-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y x-0 l-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) x-0) l-0)) (send (cat (exp (gen) x-0) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 self b-0 (exp (gen) x-0))))
    ((recv (cat (exp (gen) y) (mul (rec x) x-0 l-0)))
      (send (cat (exp (gen) y) (mul (rec x) x-0 l-0)))))
  (label 222)
  (parent 176)
  (unrealized (0 3) (4 0) (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (b self b-0 self-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (gb base) (priv-stor priv-stor-0 priv-stor-1 locn)
    (l l-0 y x x-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul y (rec x) x-0 l-1))) (priv-stor priv-stor-0)
    (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) (mul x-0 l-1))) (priv-stor priv-stor) (l l-0) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) x-0) l-1))
  (defstrand init 3 (na na-0) (a self) (b b-0) (gb gb)
    (priv-stor priv-stor-0) (l l) (x x-0))
  (deflistener (cat (exp (gen) y) (mul (rec x) x-0 l-1)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self self-0)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (6 0))
    ((3 1) (0 0)) ((3 1) (5 0)) ((3 2) (2 1)) ((4 1) (2 2))
    ((5 2) (4 0)) ((6 1) (0 3)) ((7 1) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen y x x-0)
  (absent (y l-0) (x l) (x-0 l))
  (precur (4 0) (6 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) (mul x-0 l-1)))
    (neq (exp (gen) (mul x-0 l-1)) (gen)) (neq self b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)) ((3 1) (5 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 2) l-1 (4 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) x-0 l-1))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y x-0 l-1)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul x-0 l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y x-0 l-1)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) x-0) l-1)) (send (cat (exp (gen) x-0) l-1)))
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 self b-0 (exp (gen) x-0))))
    ((recv (cat (exp (gen) y) (mul (rec x) x-0 l-1)))
      (send (cat (exp (gen) y) (mul (rec x) x-0 l-1))))
    ((load priv-stor-1 (cat pt-3 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv self-0 l-1)))))
  (label 223)
  (parent 176)
  (unrealized (0 3) (4 0) (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (b self a b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (gb base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 y x x-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-1))
    (gy (exp (gen) (mul y (rec x) x-0 l-1))) (priv-stor priv-stor-0)
    (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) (mul x-0 l-1))) (priv-stor priv-stor) (l l-1) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) x-0) l-1))
  (defstrand init 3 (na na-0) (a a) (b b-0) (gb gb)
    (priv-stor priv-stor-1) (l l-0) (x x-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self a)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) y) (mul (rec x) x-0 l-1)))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (7 0))
    ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (2 2)) ((5 2) (4 0))
    ((6 1) (5 0)) ((7 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen y x x-0)
  (absent (y l-1) (x l) (x-0 l-0))
  (precur (4 0) (7 0))
  (gen-st (pv b l-1) (pv self l) (pv a l-0))
  (facts (silly (exp (gen) (mul x-0 l-1)))
    (neq (exp (gen) (mul x-0 l-1)) (gen)) (neq self b) (undisclosed l)
    (undisclosed l-1))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)) ((6 1) (5 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 8 1 ltx-gen 2) l-2 (4 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) x-0 l-1))
          (enc na nb self b
            (hash (exp (gen) (mul l l-1))
              (exp (gen) (mul y x-0 l-1)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-1)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul x-0 l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-1))
              (exp (gen) (mul y x-0 l-1)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) x-0) l-1)) (send (cat (exp (gen) x-0) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv a l-0)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 a b-0 (exp (gen) x-0))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv a l-0))))
    ((recv (cat (exp (gen) y) (mul (rec x) x-0 l-1)))
      (send (cat (exp (gen) y) (mul (rec x) x-0 l-1)))))
  (label 224)
  (parent 177)
  (unrealized (0 3) (4 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (b self a b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (gb base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 l-1 y x x-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-1))
    (gy (exp (gen) (mul y (rec x) x-0))) (priv-stor priv-stor-0) (l l)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) x-0)) (priv-stor priv-stor) (l l-1) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) x-0) (one)))
  (defstrand init 3 (na na-0) (a a) (b b-0) (gb gb)
    (priv-stor priv-stor-1) (l l-0) (x x-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self a)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) y) (mul (rec x) x-0)))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (7 0))
    ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (2 2)) ((5 2) (4 0))
    ((6 1) (5 0)) ((7 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen y x x-0)
  (absent (y l-1) (x l) (x-0 l-0))
  (precur (4 0) (7 0))
  (gen-st (pv b l-1) (pv self l) (pv a l-0))
  (facts (silly (exp (gen) x-0)) (neq (exp (gen) x-0) (gen))
    (neq self b) (undisclosed l) (undisclosed l-1))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)) ((6 1) (5 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (contracted (x-1 x) (x-2 x-0) (w (mul (rec x) x-0))) (one) (4 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) x-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y x-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-1)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y x-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) x-0) (one)))
      (send (cat (exp (gen) x-0) (one))))
    ((load priv-stor-1 (cat pt-3 (pv a l-0)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 a b-0 (exp (gen) x-0))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv a l-0))))
    ((recv (cat (exp (gen) y) (mul (rec x) x-0)))
      (send (cat (exp (gen) y) (mul (rec x) x-0)))))
  (label 225)
  (parent 177)
  (unrealized (0 3) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (b self a b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (gb base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 y x x-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul y (rec x) x-0 l-1))) (priv-stor priv-stor-0)
    (l l-1) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-1))
    (gx (exp (gen) (mul x-0 l-1))) (priv-stor priv-stor) (l l-0) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-1))
  (deflistener (cat (exp (gen) x-0) l-1))
  (defstrand init 3 (na na-0) (a a) (b b-0) (gb gb)
    (priv-stor priv-stor-1) (l l) (x x-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self a)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) y) (mul (rec x) x-0 l-1)))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (7 0))
    ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (2 2)) ((5 2) (4 0))
    ((6 1) (5 0)) ((7 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen y x x-0)
  (absent (y l-0) (x l-1) (x-0 l))
  (precur (4 0) (7 0))
  (gen-st (pv b l-0) (pv self l-1) (pv a l))
  (facts (silly (exp (gen) (mul x-0 l-1)))
    (neq (exp (gen) (mul x-0 l-1)) (gen)) (neq self b) (undisclosed l-1)
    (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)) ((6 1) (5 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 8 3 ltx-gen 2) l-2 (4 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-1)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) x-0 l-1))
          (enc na nb self b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y x-0 l-1)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul x-0 l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y x-0 l-1)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) x-0) l-1)) (send (cat (exp (gen) x-0) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv a l)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 a b-0 (exp (gen) x-0))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv a l))))
    ((recv (cat (exp (gen) y) (mul (rec x) x-0 l-1)))
      (send (cat (exp (gen) y) (mul (rec x) x-0 l-1)))))
  (label 226)
  (parent 177)
  (unrealized (0 3) (4 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (b self a b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (gb base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 y x x-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul y (rec x) x-0 l-1))) (priv-stor priv-stor-0)
    (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) (mul x-0 l-1))) (priv-stor priv-stor) (l l-0) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) x-0) l-1))
  (defstrand init 3 (na na-0) (a a) (b b-0) (gb gb)
    (priv-stor priv-stor-1) (l l-1) (x x-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self a)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) y) (mul (rec x) x-0 l-1)))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (7 0))
    ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (2 2)) ((5 2) (4 0))
    ((6 1) (5 0)) ((7 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen y x x-0)
  (absent (y l-0) (x l) (x-0 l-1))
  (precur (4 0) (7 0))
  (gen-st (pv b l-0) (pv self l) (pv a l-1))
  (facts (silly (exp (gen) (mul x-0 l-1)))
    (neq (exp (gen) (mul x-0 l-1)) (gen)) (neq self b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)) ((6 1) (5 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 8 6 ltx-gen 2) l-2 (4 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) x-0 l-1))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y x-0 l-1)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul x-0 l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y x-0 l-1)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) x-0) l-1)) (send (cat (exp (gen) x-0) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv a l-1)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 a b-0 (exp (gen) x-0))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv a l-1))))
    ((recv (cat (exp (gen) y) (mul (rec x) x-0 l-1)))
      (send (cat (exp (gen) y) (mul (rec x) x-0 l-1)))))
  (label 227)
  (parent 177)
  (unrealized (0 3) (4 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 ignore-2 mesg) (na nb na-0 data)
    (b self a b-0 self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval) (gb base)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn)
    (l l-0 l-1 y x x-0 l-2 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-1))
    (gy (exp (gen) (mul y (rec x) x-0 l-2))) (priv-stor priv-stor-0)
    (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) (mul x-0 l-2))) (priv-stor priv-stor) (l l-1) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) x-0) l-2))
  (defstrand init 3 (na na-0) (a a) (b b-0) (gb gb)
    (priv-stor priv-stor-1) (l l-0) (x x-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self a)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) y) (mul (rec x) x-0 l-2)))
  (defstrand ltx-gen 2 (ignore ignore-2) (self self-0)
    (priv-stor priv-stor-2) (l l-2))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (7 0))
    ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (2 2)) ((5 2) (4 0))
    ((6 1) (5 0)) ((7 1) (0 3)) ((8 1) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1 l-2)
  (uniq-gen y x x-0)
  (absent (y l-1) (x l) (x-0 l-0))
  (precur (4 0) (7 0))
  (gen-st (pv b l-1) (pv self l) (pv a l-0))
  (facts (silly (exp (gen) (mul x-0 l-2)))
    (neq (exp (gen) (mul x-0 l-2)) (gen)) (neq self b) (undisclosed l)
    (undisclosed l-1))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)) ((6 1) (5 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 2) l-2 (4 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) x-0 l-2))
          (enc na nb self b
            (hash (exp (gen) (mul l l-1))
              (exp (gen) (mul y x-0 l-2)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-1)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul x-0 l-2))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-1))
              (exp (gen) (mul y x-0 l-2)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) x-0) l-2)) (send (cat (exp (gen) x-0) l-2)))
    ((load priv-stor-1 (cat pt-3 (pv a l-0)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 a b-0 (exp (gen) x-0))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv a l-0))))
    ((recv (cat (exp (gen) y) (mul (rec x) x-0 l-2)))
      (send (cat (exp (gen) y) (mul (rec x) x-0 l-2))))
    ((load priv-stor-2 (cat pt-5 ignore-2))
      (stor priv-stor-2 (cat pt-6 (pv self-0 l-2)))))
  (label 228)
  (parent 177)
  (unrealized (0 3) (4 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (l y x l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul y (rec x) l-0))) (priv-stor priv-stor-0) (l l)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) l-0)) (priv-stor priv-stor) (l l-0) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (gen) l-0))
  (deflistener (cat (exp (gen) y) (mul (rec x) l-0)))
  (deflistener x)
  (precedes ((0 2) (4 0)) ((0 2) (6 0)) ((1 1) (2 0)) ((1 2) (0 1))
    ((2 3) (5 0)) ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (2 2))
    ((5 1) (0 3)) ((6 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen y x)
  (absent (y l-0) (x l))
  (precur (4 0) (5 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) l-0)) (neq (exp (gen) l-0) (gen))
    (neq self b) (undisclosed l) (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener x) (mul (rec x) l-0) (5 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) l-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) l-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((recv (cat (exp (gen) y) (mul (rec x) l-0)))
      (send (cat (exp (gen) y) (mul (rec x) l-0)))) ((recv x) (send x)))
  (label 229)
  (parent 178)
  (unrealized (4 0) (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (l y x l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul y (rec x) l-0))) (priv-stor priv-stor-0) (l l-0)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) l-0)) (priv-stor priv-stor) (l l) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (gen) l-0))
  (deflistener (cat (exp (gen) y) (mul (rec x) l-0)))
  (deflistener x)
  (precedes ((0 2) (4 0)) ((0 2) (6 0)) ((1 1) (2 0)) ((1 2) (0 1))
    ((2 3) (5 0)) ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (2 2))
    ((5 1) (0 3)) ((6 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen y x)
  (absent (y l) (x l-0))
  (precur (4 0) (5 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly (exp (gen) l-0)) (neq (exp (gen) l-0) (gen))
    (neq self b) (undisclosed l-0) (undisclosed l))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener x) (mul (rec x) l-0) (5 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) l-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) l-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((recv (cat (exp (gen) y) (mul (rec x) l-0)))
      (send (cat (exp (gen) y) (mul (rec x) l-0)))) ((recv x) (send x)))
  (label 230)
  (parent 179)
  (unrealized (4 0) (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data)
    (b self self-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 y x l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul y (rec x) l-1))) (priv-stor priv-stor-0) (l l)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) l-1)) (priv-stor priv-stor) (l l-0) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (gen) l-1))
  (deflistener (cat (exp (gen) y) (mul (rec x) l-1)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self self-0)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener x)
  (precedes ((0 2) (4 0)) ((0 2) (7 0)) ((1 1) (2 0)) ((1 2) (0 1))
    ((2 3) (5 0)) ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (2 2))
    ((5 1) (0 3)) ((6 1) (4 0)) ((7 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y l-0) (x l))
  (precur (4 0) (5 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) l-1)) (neq (exp (gen) l-1) (gen))
    (neq self b) (undisclosed l) (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener x) (mul (rec x) l-1) (5 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) l-1))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-1)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) l-1)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-1)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (gen) l-1)) (send (cat (gen) l-1)))
    ((recv (cat (exp (gen) y) (mul (rec x) l-1)))
      (send (cat (exp (gen) y) (mul (rec x) l-1))))
    ((load priv-stor-1 (cat pt-3 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv self-0 l-1))))
    ((recv x) (send x)))
  (label 231)
  (parent 180)
  (unrealized (4 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (l y x l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul y (rec x) l-0 l-0))) (priv-stor priv-stor-0)
    (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) (mul l-0 l-0))) (priv-stor priv-stor) (l l-0) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-0) l-0))
  (deflistener (cat (exp (gen) y) (mul (rec x) l-0 l-0)))
  (deflistener x)
  (precedes ((0 2) (4 0)) ((0 2) (6 0)) ((1 1) (2 0)) ((1 2) (0 1))
    ((2 3) (5 0)) ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (2 2))
    ((5 1) (0 3)) ((6 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen y x)
  (absent (y l-0) (x l))
  (precur (4 0) (5 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) (mul l-0 l-0)))
    (neq (exp (gen) (mul l-0 l-0)) (gen)) (neq self b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener x) (mul (rec x) l-0 l-0) (5 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) l-0 l-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y l-0 l-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul l-0 l-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y l-0 l-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l-0) l-0)) (send (cat (exp (gen) l-0) l-0)))
    ((recv (cat (exp (gen) y) (mul (rec x) l-0 l-0)))
      (send (cat (exp (gen) y) (mul (rec x) l-0 l-0))))
    ((recv x) (send x)))
  (label 232)
  (parent 182)
  (unrealized (4 0) (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (b self a name)
    (pt pt-0 pt-1 pt-2 pval) (ga gx base) (priv-stor priv-stor-0 locn)
    (l y x y-0 l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul y (rec x) y-0 l-0))) (priv-stor priv-stor-0)
    (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) (mul y-0 l-0))) (priv-stor priv-stor) (l l-0) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) y-0) l-0))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b) (ga ga) (gx gx)
    (priv-stor priv-stor) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) y) (mul (rec x) y-0 l-0)))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 1) (5 0)) ((1 2) (0 1))
    ((2 3) (6 0)) ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (2 2))
    ((5 3) (4 0)) ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen y x y-0)
  (absent (y l-0) (x l) (y-0 l-0))
  (precur (4 0) (6 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly gx) (silly (exp (gen) (mul y-0 l-0))) (neq gx (gen))
    (neq (exp (gen) (mul y-0 l-0)) (gen)) (neq self b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((1 1) (5 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 7 1 ltx-gen 2) l-1 (4 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) y-0 l-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y y-0 l-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul y-0 l-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y y-0 l-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y-0) l-0)) (send (cat (exp (gen) y-0) l-0)))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a b (hash (exp ga l-0) (exp gx y-0))))))
    ((recv (cat (exp (gen) y) (mul (rec x) y-0 l-0)))
      (send (cat (exp (gen) y) (mul (rec x) y-0 l-0)))))
  (label 233)
  (parent 186)
  (unrealized (0 3) (4 0) (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (b self a name)
    (pt pt-0 pt-1 pt-2 pval) (ga gx base) (priv-stor priv-stor-0 locn)
    (l l-0 y x y-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul y (rec x) y-0))) (priv-stor priv-stor-0) (l l)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) y-0)) (priv-stor priv-stor) (l l-0) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) y-0) (one)))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b) (ga ga) (gx gx)
    (priv-stor priv-stor) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) y) (mul (rec x) y-0)))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 1) (5 0)) ((1 2) (0 1))
    ((2 3) (6 0)) ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (2 2))
    ((5 3) (4 0)) ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen y x y-0)
  (absent (y l-0) (x l) (y-0 l-0))
  (precur (4 0) (6 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly gx) (silly (exp (gen) y-0)) (neq gx (gen))
    (neq (exp (gen) y-0) (gen)) (neq self b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((1 1) (5 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (contracted (x-0 x) (y-1 y-0) (w (mul (rec x) y-0))) (one) (4 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) y-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y y-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) y-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y y-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y-0) (one)))
      (send (cat (exp (gen) y-0) (one))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a b (hash (exp ga l-0) (exp gx y-0))))))
    ((recv (cat (exp (gen) y) (mul (rec x) y-0)))
      (send (cat (exp (gen) y) (mul (rec x) y-0)))))
  (label 234)
  (parent 186)
  (unrealized (0 3) (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (b self a name)
    (pt pt-0 pt-1 pt-2 pval) (ga gx base) (priv-stor priv-stor-0 locn)
    (l y x y-0 l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul y (rec x) y-0 l-0))) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) (mul y-0 l-0))) (priv-stor priv-stor) (l l) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) y-0) l-0))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b) (ga ga) (gx gx)
    (priv-stor priv-stor) (l l) (y y-0))
  (deflistener (cat (exp (gen) y) (mul (rec x) y-0 l-0)))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 1) (5 0)) ((1 2) (0 1))
    ((2 3) (6 0)) ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (2 2))
    ((5 3) (4 0)) ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen y x y-0)
  (absent (y l) (x l-0) (y-0 l))
  (precur (4 0) (6 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly gx) (silly (exp (gen) (mul y-0 l-0))) (neq gx (gen))
    (neq (exp (gen) (mul y-0 l-0)) (gen)) (neq self b) (undisclosed l-0)
    (undisclosed l))
  (leads-to ((1 1) (2 0)) ((1 1) (5 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 7 3 ltx-gen 2) l-1 (4 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) y-0 l-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y y-0 l-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul y-0 l-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y y-0 l-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y-0) l-0)) (send (cat (exp (gen) y-0) l-0)))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a b (hash (exp ga l) (exp gx y-0))))))
    ((recv (cat (exp (gen) y) (mul (rec x) y-0 l-0)))
      (send (cat (exp (gen) y) (mul (rec x) y-0 l-0)))))
  (label 235)
  (parent 186)
  (unrealized (0 3) (4 0) (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (b self a self-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (ga gx base) (priv-stor priv-stor-0 priv-stor-1 locn)
    (l l-0 y x y-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul y (rec x) y-0 l-1))) (priv-stor priv-stor-0)
    (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) (mul y-0 l-1))) (priv-stor priv-stor) (l l-0) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) y-0) l-1))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b) (ga ga) (gx gx)
    (priv-stor priv-stor) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) y) (mul (rec x) y-0 l-1)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self self-0)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 1) (5 0)) ((1 2) (0 1))
    ((2 3) (6 0)) ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (2 2))
    ((5 3) (4 0)) ((6 1) (0 3)) ((7 1) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen y x y-0)
  (absent (y l-0) (x l) (y-0 l-0))
  (precur (4 0) (6 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly gx) (silly (exp (gen) (mul y-0 l-1))) (neq gx (gen))
    (neq (exp (gen) (mul y-0 l-1)) (gen)) (neq self b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((1 1) (5 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 2) l-1 (4 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) y-0 l-1))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y y-0 l-1)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul y-0 l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y y-0 l-1)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y-0) l-1)) (send (cat (exp (gen) y-0) l-1)))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a b (hash (exp ga l-0) (exp gx y-0))))))
    ((recv (cat (exp (gen) y) (mul (rec x) y-0 l-1)))
      (send (cat (exp (gen) y) (mul (rec x) y-0 l-1))))
    ((load priv-stor-1 (cat pt-3 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv self-0 l-1)))))
  (label 236)
  (parent 186)
  (unrealized (0 3) (4 0) (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (b self a name)
    (pt pt-0 pt-1 pt-2 pval) (ga gx base) (priv-stor priv-stor-0 locn)
    (l y x y-0 l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul y (rec x) y-0 l-0))) (priv-stor priv-stor-0)
    (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) (mul y-0 l-0))) (priv-stor priv-stor) (l l-0) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) y-0) l-0))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b self) (ga ga) (gx gx)
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) y) (mul (rec x) y-0 l-0)))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (6 0))
    ((3 1) (0 0)) ((3 1) (5 0)) ((3 2) (2 1)) ((4 1) (2 2))
    ((5 3) (4 0)) ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen y x y-0)
  (absent (y l-0) (x l) (y-0 l))
  (precur (4 0) (6 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly gx) (silly (exp (gen) (mul y-0 l-0))) (neq gx (gen))
    (neq (exp (gen) (mul y-0 l-0)) (gen)) (neq self b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)) ((3 1) (5 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 7 1 ltx-gen 2) l-1 (4 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) y-0 l-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y y-0 l-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul y-0 l-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y y-0 l-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y-0) l-0)) (send (cat (exp (gen) y-0) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a self gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a self (hash (exp ga l) (exp gx y-0))))))
    ((recv (cat (exp (gen) y) (mul (rec x) y-0 l-0)))
      (send (cat (exp (gen) y) (mul (rec x) y-0 l-0)))))
  (label 237)
  (parent 187)
  (unrealized (0 3) (4 0) (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (b self a name)
    (pt pt-0 pt-1 pt-2 pval) (ga gx base) (priv-stor priv-stor-0 locn)
    (l l-0 y x y-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul y (rec x) y-0))) (priv-stor priv-stor-0) (l l)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) y-0)) (priv-stor priv-stor) (l l-0) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) y-0) (one)))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b self) (ga ga) (gx gx)
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) y) (mul (rec x) y-0)))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (6 0))
    ((3 1) (0 0)) ((3 1) (5 0)) ((3 2) (2 1)) ((4 1) (2 2))
    ((5 3) (4 0)) ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen y x y-0)
  (absent (y l-0) (x l) (y-0 l))
  (precur (4 0) (6 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly gx) (silly (exp (gen) y-0)) (neq gx (gen))
    (neq (exp (gen) y-0) (gen)) (neq self b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)) ((3 1) (5 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (contracted (x-0 x) (y-1 y-0) (w (mul (rec x) y-0))) (one) (4 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) y-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y y-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) y-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y y-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y-0) (one)))
      (send (cat (exp (gen) y-0) (one))))
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a self gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a self (hash (exp ga l) (exp gx y-0))))))
    ((recv (cat (exp (gen) y) (mul (rec x) y-0)))
      (send (cat (exp (gen) y) (mul (rec x) y-0)))))
  (label 238)
  (parent 187)
  (unrealized (0 3) (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (b self a name)
    (pt pt-0 pt-1 pt-2 pval) (ga gx base) (priv-stor priv-stor-0 locn)
    (l y x y-0 l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul y (rec x) y-0 l-0))) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) (mul y-0 l-0))) (priv-stor priv-stor) (l l) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) y-0) l-0))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b self) (ga ga) (gx gx)
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) y) (mul (rec x) y-0 l-0)))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (6 0))
    ((3 1) (0 0)) ((3 1) (5 0)) ((3 2) (2 1)) ((4 1) (2 2))
    ((5 3) (4 0)) ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen y x y-0)
  (absent (y l) (x l-0) (y-0 l-0))
  (precur (4 0) (6 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly gx) (silly (exp (gen) (mul y-0 l-0))) (neq gx (gen))
    (neq (exp (gen) (mul y-0 l-0)) (gen)) (neq self b) (undisclosed l-0)
    (undisclosed l))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)) ((3 1) (5 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 7 3 ltx-gen 2) l-1 (4 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) y-0 l-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y y-0 l-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul y-0 l-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y y-0 l-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y-0) l-0)) (send (cat (exp (gen) y-0) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a self gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a self (hash (exp ga l-0) (exp gx y-0))))))
    ((recv (cat (exp (gen) y) (mul (rec x) y-0 l-0)))
      (send (cat (exp (gen) y) (mul (rec x) y-0 l-0)))))
  (label 239)
  (parent 187)
  (unrealized (0 3) (4 0) (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (b self a self-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (ga gx base) (priv-stor priv-stor-0 priv-stor-1 locn)
    (l l-0 y x y-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul y (rec x) y-0 l-1))) (priv-stor priv-stor-0)
    (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) (mul y-0 l-1))) (priv-stor priv-stor) (l l-0) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) y-0) l-1))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b self) (ga ga) (gx gx)
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) y) (mul (rec x) y-0 l-1)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self self-0)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (6 0))
    ((3 1) (0 0)) ((3 1) (5 0)) ((3 2) (2 1)) ((4 1) (2 2))
    ((5 3) (4 0)) ((6 1) (0 3)) ((7 1) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen y x y-0)
  (absent (y l-0) (x l) (y-0 l))
  (precur (4 0) (6 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly gx) (silly (exp (gen) (mul y-0 l-1))) (neq gx (gen))
    (neq (exp (gen) (mul y-0 l-1)) (gen)) (neq self b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)) ((3 1) (5 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 2) l-1 (4 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) y-0 l-1))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y y-0 l-1)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul y-0 l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y y-0 l-1)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y-0) l-1)) (send (cat (exp (gen) y-0) l-1)))
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a self gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a self (hash (exp ga l) (exp gx y-0))))))
    ((recv (cat (exp (gen) y) (mul (rec x) y-0 l-1)))
      (send (cat (exp (gen) y) (mul (rec x) y-0 l-1))))
    ((load priv-stor-1 (cat pt-3 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv self-0 l-1)))))
  (label 240)
  (parent 187)
  (unrealized (0 3) (4 0) (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (b self a b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (ga gx base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 y x y-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-1))
    (gy (exp (gen) (mul y (rec x) y-0 l-1))) (priv-stor priv-stor-0)
    (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) (mul y-0 l-1))) (priv-stor priv-stor) (l l-1) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) y-0) l-1))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b-0) (ga ga) (gx gx)
    (priv-stor priv-stor-1) (l l-0) (y y-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b-0)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) y) (mul (rec x) y-0 l-1)))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (7 0))
    ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (2 2)) ((5 3) (4 0))
    ((6 1) (5 0)) ((7 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen y x y-0)
  (absent (y l-1) (x l) (y-0 l-0))
  (precur (4 0) (7 0))
  (gen-st (pv b l-1) (pv self l) (pv b-0 l-0))
  (facts (silly gx) (silly (exp (gen) (mul y-0 l-1))) (neq gx (gen))
    (neq (exp (gen) (mul y-0 l-1)) (gen)) (neq self b) (undisclosed l)
    (undisclosed l-1))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)) ((6 1) (5 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 8 1 ltx-gen 2) l-2 (4 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) y-0 l-1))
          (enc na nb self b
            (hash (exp (gen) (mul l l-1))
              (exp (gen) (mul y y-0 l-1)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-1)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul y-0 l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-1))
              (exp (gen) (mul y y-0 l-1)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y-0) l-1)) (send (cat (exp (gen) y-0) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b-0 l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b-0 gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a b-0 (hash (exp ga l-0) (exp gx y-0))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b-0 l-0))))
    ((recv (cat (exp (gen) y) (mul (rec x) y-0 l-1)))
      (send (cat (exp (gen) y) (mul (rec x) y-0 l-1)))))
  (label 241)
  (parent 188)
  (unrealized (0 3) (4 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (b self a b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (ga gx base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 l-1 y x y-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-1))
    (gy (exp (gen) (mul y (rec x) y-0))) (priv-stor priv-stor-0) (l l)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) y-0)) (priv-stor priv-stor) (l l-1) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) y-0) (one)))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b-0) (ga ga) (gx gx)
    (priv-stor priv-stor-1) (l l-0) (y y-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b-0)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) y) (mul (rec x) y-0)))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (7 0))
    ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (2 2)) ((5 3) (4 0))
    ((6 1) (5 0)) ((7 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen y x y-0)
  (absent (y l-1) (x l) (y-0 l-0))
  (precur (4 0) (7 0))
  (gen-st (pv b l-1) (pv self l) (pv b-0 l-0))
  (facts (silly gx) (silly (exp (gen) y-0)) (neq gx (gen))
    (neq (exp (gen) y-0) (gen)) (neq self b) (undisclosed l)
    (undisclosed l-1))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)) ((6 1) (5 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (contracted (x-0 x) (y-1 y-0) (w (mul (rec x) y-0))) (one) (4 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) y-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y y-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-1)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) y-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y y-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y-0) (one)))
      (send (cat (exp (gen) y-0) (one))))
    ((load priv-stor-1 (cat pt-3 (pv b-0 l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b-0 gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a b-0 (hash (exp ga l-0) (exp gx y-0))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b-0 l-0))))
    ((recv (cat (exp (gen) y) (mul (rec x) y-0)))
      (send (cat (exp (gen) y) (mul (rec x) y-0)))))
  (label 242)
  (parent 188)
  (unrealized (0 3) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (b self a b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (ga gx base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 y x y-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul y (rec x) y-0 l-1))) (priv-stor priv-stor-0)
    (l l-1) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-1))
    (gx (exp (gen) (mul y-0 l-1))) (priv-stor priv-stor) (l l-0) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-1))
  (deflistener (cat (exp (gen) y-0) l-1))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b-0) (ga ga) (gx gx)
    (priv-stor priv-stor-1) (l l) (y y-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b-0)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) y) (mul (rec x) y-0 l-1)))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (7 0))
    ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (2 2)) ((5 3) (4 0))
    ((6 1) (5 0)) ((7 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen y x y-0)
  (absent (y l-0) (x l-1) (y-0 l))
  (precur (4 0) (7 0))
  (gen-st (pv b l-0) (pv self l-1) (pv b-0 l))
  (facts (silly gx) (silly (exp (gen) (mul y-0 l-1))) (neq gx (gen))
    (neq (exp (gen) (mul y-0 l-1)) (gen)) (neq self b) (undisclosed l-1)
    (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)) ((6 1) (5 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 8 3 ltx-gen 2) l-2 (4 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-1)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) y-0 l-1))
          (enc na nb self b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y y-0 l-1)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul y-0 l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y y-0 l-1)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y-0) l-1)) (send (cat (exp (gen) y-0) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b-0 l)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b-0 gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a b-0 (hash (exp ga l) (exp gx y-0))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b-0 l))))
    ((recv (cat (exp (gen) y) (mul (rec x) y-0 l-1)))
      (send (cat (exp (gen) y) (mul (rec x) y-0 l-1)))))
  (label 243)
  (parent 188)
  (unrealized (0 3) (4 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (b self a b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (ga gx base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 y x y-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul y (rec x) y-0 l-1))) (priv-stor priv-stor-0)
    (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) (mul y-0 l-1))) (priv-stor priv-stor) (l l-0) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) y-0) l-1))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b-0) (ga ga) (gx gx)
    (priv-stor priv-stor-1) (l l-1) (y y-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b-0)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) y) (mul (rec x) y-0 l-1)))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (7 0))
    ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (2 2)) ((5 3) (4 0))
    ((6 1) (5 0)) ((7 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen y x y-0)
  (absent (y l-0) (x l) (y-0 l-1))
  (precur (4 0) (7 0))
  (gen-st (pv b l-0) (pv self l) (pv b-0 l-1))
  (facts (silly gx) (silly (exp (gen) (mul y-0 l-1))) (neq gx (gen))
    (neq (exp (gen) (mul y-0 l-1)) (gen)) (neq self b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)) ((6 1) (5 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 8 6 ltx-gen 2) l-2 (4 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) y-0 l-1))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y y-0 l-1)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul y-0 l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y y-0 l-1)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y-0) l-1)) (send (cat (exp (gen) y-0) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b-0 l-1)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b-0 gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a b-0 (hash (exp ga l-1) (exp gx y-0))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b-0 l-1))))
    ((recv (cat (exp (gen) y) (mul (rec x) y-0 l-1)))
      (send (cat (exp (gen) y) (mul (rec x) y-0 l-1)))))
  (label 244)
  (parent 188)
  (unrealized (0 3) (4 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 ignore-2 mesg) (na nb na-0 nb-0 data)
    (b self a b-0 self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval) (ga gx base)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn)
    (l l-0 l-1 y x y-0 l-2 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-1))
    (gy (exp (gen) (mul y (rec x) y-0 l-2))) (priv-stor priv-stor-0)
    (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) (mul y-0 l-2))) (priv-stor priv-stor) (l l-1) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) y-0) l-2))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b-0) (ga ga) (gx gx)
    (priv-stor priv-stor-1) (l l-0) (y y-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b-0)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) y) (mul (rec x) y-0 l-2)))
  (defstrand ltx-gen 2 (ignore ignore-2) (self self-0)
    (priv-stor priv-stor-2) (l l-2))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (7 0))
    ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (2 2)) ((5 3) (4 0))
    ((6 1) (5 0)) ((7 1) (0 3)) ((8 1) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1 l-2)
  (uniq-gen y x y-0)
  (absent (y l-1) (x l) (y-0 l-0))
  (precur (4 0) (7 0))
  (gen-st (pv b l-1) (pv self l) (pv b-0 l-0))
  (facts (silly gx) (silly (exp (gen) (mul y-0 l-2))) (neq gx (gen))
    (neq (exp (gen) (mul y-0 l-2)) (gen)) (neq self b) (undisclosed l)
    (undisclosed l-1))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)) ((6 1) (5 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 2) l-2 (4 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) y-0 l-2))
          (enc na nb self b
            (hash (exp (gen) (mul l l-1))
              (exp (gen) (mul y y-0 l-2)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-1)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul y-0 l-2))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-1))
              (exp (gen) (mul y y-0 l-2)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y-0) l-2)) (send (cat (exp (gen) y-0) l-2)))
    ((load priv-stor-1 (cat pt-3 (pv b-0 l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b-0 gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a b-0 (hash (exp ga l-0) (exp gx y-0))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b-0 l-0))))
    ((recv (cat (exp (gen) y) (mul (rec x) y-0 l-2)))
      (send (cat (exp (gen) y) (mul (rec x) y-0 l-2))))
    ((load priv-stor-2 (cat pt-5 ignore-2))
      (stor priv-stor-2 (cat pt-6 (pv self-0 l-2)))))
  (label 245)
  (parent 188)
  (unrealized (0 3) (4 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (l y x l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul y (rec x) l-0 l-0))) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) (mul l-0 l-0))) (priv-stor priv-stor) (l l) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l-0) l-0))
  (deflistener (cat (exp (gen) y) (mul (rec x) l-0 l-0)))
  (deflistener x)
  (precedes ((0 2) (4 0)) ((0 2) (6 0)) ((1 1) (2 0)) ((1 2) (0 1))
    ((2 3) (5 0)) ((3 1) (0 0)) ((3 2) (2 1)) ((3 2) (4 0))
    ((4 1) (2 2)) ((5 1) (0 3)) ((6 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen y x)
  (absent (y l) (x l-0))
  (precur (4 0) (5 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly (exp (gen) (mul l-0 l-0)))
    (neq (exp (gen) (mul l-0 l-0)) (gen)) (neq self b) (undisclosed l-0)
    (undisclosed l))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener x) (mul (rec x) l-0 l-0) (5 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) l-0 l-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y l-0 l-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul l-0 l-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y l-0 l-0)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l-0) l-0)) (send (cat (exp (gen) l-0) l-0)))
    ((recv (cat (exp (gen) y) (mul (rec x) l-0 l-0)))
      (send (cat (exp (gen) y) (mul (rec x) l-0 l-0))))
    ((recv x) (send x)))
  (label 246)
  (parent 191)
  (unrealized (4 0) (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data)
    (b self self-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 y x l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul y (rec x) l-1 l-1))) (priv-stor priv-stor-0)
    (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) (mul l-1 l-1))) (priv-stor priv-stor) (l l-0) (y y))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-1) l-1))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self-0)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) y) (mul (rec x) l-1 l-1)))
  (deflistener x)
  (precedes ((0 2) (4 0)) ((0 2) (7 0)) ((1 1) (2 0)) ((1 2) (0 1))
    ((2 3) (6 0)) ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (2 2))
    ((5 2) (4 0)) ((6 1) (0 3)) ((7 1) (6 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y l-0) (x l))
  (precur (4 0) (6 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) (mul l-1 l-1)))
    (neq (exp (gen) (mul l-1 l-1)) (gen)) (neq self b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener x) (mul (rec x) l-1 l-1) (6 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) l-1 l-1))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y l-1 l-1)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul l-1 l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y l-1 l-1)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l-1) l-1)) (send (cat (exp (gen) l-1) l-1)))
    ((load priv-stor-1 (cat pt-3 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv self-0 l-1)))
      (send
        (sig (body self-0 (exp (gen) l-1) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) y) (mul (rec x) l-1 l-1)))
      (send (cat (exp (gen) y) (mul (rec x) l-1 l-1))))
    ((recv x) (send x)))
  (label 247)
  (parent 196)
  (unrealized (4 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (b self b-0 name)
    (pt pt-0 pt-1 pt-2 pval) (gb base) (priv-stor priv-stor-0 locn)
    (l x x-0 rndx) (w expt) (l-0 y rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul w y))) (priv-stor priv-stor-0) (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) (mul x w))) (priv-stor priv-stor) (l l-0) (y y))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) x-0) (mul x (rec x-0) w)))
  (defstrand init 3 (na na-0) (a b) (b b-0) (gb gb)
    (priv-stor priv-stor) (l l-0) (x x-0))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 1) (6 0)) ((1 2) (0 1))
    ((2 3) (7 0)) ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0))
    ((5 1) (2 2)) ((6 2) (5 0)) ((7 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen x x-0 y)
  (absent (x l) (x-0 l-0) (y l-0))
  (precur (3 0) (5 0) (7 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) (mul x w))) (neq (exp (gen) (mul x w)) (gen))
    (neq self b) (undisclosed l) (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((1 1) (6 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 8 2 resp 4) (exp (gen) y-0) (7 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul x w))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) x-0) (mul x (rec x-0) w)))
      (send (cat (exp (gen) x-0) (mul x (rec x-0) w))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 b b-0 (exp (gen) x-0))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 248)
  (parent 201)
  (unrealized (5 0))
  (comment "4 in cohort - 4 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (b self b-0 name)
    (pt pt-0 pt-1 pt-2 pval) (gb base) (priv-stor priv-stor-0 locn)
    (l x x-0 rndx) (w expt) (l-0 y rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul w y))) (priv-stor priv-stor-0) (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) (mul x w))) (priv-stor priv-stor) (l l-0) (y y))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) x-0) (mul x (rec x-0) w)))
  (defstrand init 3 (na na-0) (a self) (b b-0) (gb gb)
    (priv-stor priv-stor-0) (l l) (x x-0))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (7 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 1) (6 0)) ((4 2) (3 0))
    ((5 1) (2 2)) ((6 2) (5 0)) ((7 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen x x-0 y)
  (absent (x l) (x-0 l) (y l-0))
  (precur (3 0) (5 0) (7 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) (mul x w))) (neq (exp (gen) (mul x w)) (gen))
    (neq self b) (undisclosed l) (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)) ((4 1) (6 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 8 2 resp 4) (exp (gen) y-0) (7 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul x w))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) x-0) (mul x (rec x-0) w)))
      (send (cat (exp (gen) x-0) (mul x (rec x-0) w))))
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 self b-0 (exp (gen) x-0))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 249)
  (parent 203)
  (unrealized (5 0))
  (comment "4 in cohort - 4 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (b self a b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (gb base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 x x-0 rndx) (w expt)
    (l-1 y rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-1))
    (gy (exp (gen) (mul w y))) (priv-stor priv-stor-0) (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) (mul x w))) (priv-stor priv-stor) (l l-1) (y y))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) x-0) (mul x (rec x-0) w)))
  (defstrand init 3 (na na-0) (a a) (b b-0) (gb gb)
    (priv-stor priv-stor-1) (l l-0) (x x-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self a)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (8 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((5 1) (2 2))
    ((6 2) (5 0)) ((7 1) (6 0)) ((8 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen x x-0 y)
  (absent (x l) (x-0 l-0) (y l-1))
  (precur (3 0) (5 0) (8 0))
  (gen-st (pv b l-1) (pv self l) (pv a l-0))
  (facts (silly (exp (gen) (mul x w))) (neq (exp (gen) (mul x w)) (gen))
    (neq self b) (undisclosed l) (undisclosed l-1))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)) ((7 1) (6 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 9 2 resp 4) (exp (gen) y-0) (8 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb self b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x w y)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-1)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul x w))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x w y)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) x-0) (mul x (rec x-0) w)))
      (send (cat (exp (gen) x-0) (mul x (rec x-0) w))))
    ((load priv-stor-1 (cat pt-3 (pv a l-0)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 a b-0 (exp (gen) x-0))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv a l-0))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 250)
  (parent 205)
  (unrealized (5 0))
  (comment "5 in cohort - 5 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (l y x l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul y (rec x) l-0))) (priv-stor priv-stor-0) (l l)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) l-0)) (priv-stor priv-stor) (l l-0) (y y))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (gen) l-0))
  (deflistener (cat (exp (gen) y) (mul (rec x) l-0)))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (6 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((5 1) (2 2))
    ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen y x)
  (absent (y l-0) (x l))
  (precur (3 0) (5 0) (6 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) l-0)) (neq (exp (gen) l-0) (gen))
    (neq self b) (undisclosed l) (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 7 1 ltx-gen 2) l-1 (5 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) l-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) l-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-0)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((recv (cat (exp (gen) y) (mul (rec x) l-0)))
      (send (cat (exp (gen) y) (mul (rec x) l-0)))))
  (label 251)
  (parent 206)
  (unrealized (0 3) (5 0) (6 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (l y x l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul y (rec x) l-0))) (priv-stor priv-stor-0) (l l-0)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) l-0)) (priv-stor priv-stor) (l l) (y y))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (gen) l-0))
  (deflistener (cat (exp (gen) y) (mul (rec x) l-0)))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (6 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((5 1) (2 2))
    ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen y x)
  (absent (y l) (x l-0))
  (precur (3 0) (5 0) (6 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly (exp (gen) l-0)) (neq (exp (gen) l-0) (gen))
    (neq self b) (undisclosed l-0) (undisclosed l))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 7 4 ltx-gen 2) l-1 (5 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) l-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) l-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-0)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((recv (cat (exp (gen) y) (mul (rec x) l-0)))
      (send (cat (exp (gen) y) (mul (rec x) l-0)))))
  (label 252)
  (parent 206)
  (unrealized (0 3) (5 0) (6 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data)
    (b self self-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 y x l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul y (rec x) l-1))) (priv-stor priv-stor-0) (l l)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) l-1)) (priv-stor priv-stor) (l l-0) (y y))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (gen) l-1))
  (deflistener (cat (exp (gen) y) (mul (rec x) l-1)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self self-0)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (6 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((5 1) (2 2))
    ((6 1) (0 3)) ((7 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y l-0) (x l))
  (precur (3 0) (5 0) (6 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) l-1)) (neq (exp (gen) l-1) (gen))
    (neq self b) (undisclosed l) (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 2) l-1 (5 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) l-1))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-1)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) l-1)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-1)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (gen) l-1)) (send (cat (gen) l-1)))
    ((recv (cat (exp (gen) y) (mul (rec x) l-1)))
      (send (cat (exp (gen) y) (mul (rec x) l-1))))
    ((load priv-stor-1 (cat pt-3 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv self-0 l-1)))))
  (label 253)
  (parent 206)
  (unrealized (0 3) (5 0) (6 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (l x rndx)
    (w expt) (l-0 y rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul w y))) (priv-stor priv-stor-0) (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) (mul x w))) (priv-stor priv-stor) (l l-0) (y y))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (gen) (mul x w)))
  (deflistener (cat (exp (gen) y) w))
  (deflistener x)
  (precedes ((0 2) (7 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (6 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((5 1) (2 2))
    ((6 1) (0 3)) ((7 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l) (y l-0))
  (precur (3 0) (5 0) (6 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) (mul x w))) (neq (exp (gen) (mul x w)) (gen))
    (neq self b) (undisclosed l) (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener x) (mul x w) (5 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul x w))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (gen) (mul x w))) (send (cat (gen) (mul x w))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w)))
    ((recv x) (send x)))
  (label 254)
  (parent 206)
  (unrealized (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (l y x l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul y (rec x) l-0 l-0))) (priv-stor priv-stor-0)
    (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) (mul l-0 l-0))) (priv-stor priv-stor) (l l-0) (y y))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-0) l-0))
  (deflistener (cat (exp (gen) y) (mul (rec x) l-0 l-0)))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (6 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((5 1) (2 2))
    ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen y x)
  (absent (y l-0) (x l))
  (precur (3 0) (5 0) (6 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) (mul l-0 l-0)))
    (neq (exp (gen) (mul l-0 l-0)) (gen)) (neq self b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 7 1 ltx-gen 2) l-1 (5 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) l-0 l-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y l-0 l-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul l-0 l-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y l-0 l-0)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l-0) l-0)) (send (cat (exp (gen) l-0) l-0)))
    ((recv (cat (exp (gen) y) (mul (rec x) l-0 l-0)))
      (send (cat (exp (gen) y) (mul (rec x) l-0 l-0)))))
  (label 255)
  (parent 207)
  (unrealized (0 3) (5 0) (6 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (l y x l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul y (rec x) l-0))) (priv-stor priv-stor-0) (l l)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) l-0)) (priv-stor priv-stor) (l l-0) (y y))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (deflistener (cat (exp (gen) y) (mul (rec x) l-0)))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (6 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((5 1) (2 2))
    ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen y x)
  (absent (y l-0) (x l))
  (precur (3 0) (5 0) (6 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) l-0)) (neq (exp (gen) l-0) (gen))
    (neq self b) (undisclosed l) (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (contracted (x-0 x) (w (mul (rec x) l-0)) (l-1 l-0)) (one) (5 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) l-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) l-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-0)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((recv (cat (exp (gen) y) (mul (rec x) l-0)))
      (send (cat (exp (gen) y) (mul (rec x) l-0)))))
  (label 256)
  (parent 207)
  (unrealized (0 3) (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (y x l l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul y (rec x) l l-0))) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) (mul l l-0))) (priv-stor priv-stor) (l l) (y y))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (exp (gen) y) (mul (rec x) l l-0)))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (6 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((5 1) (2 2))
    ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen y x)
  (absent (y l) (x l-0))
  (precur (3 0) (5 0) (6 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly (exp (gen) (mul l l-0)))
    (neq (exp (gen) (mul l l-0)) (gen)) (neq self b) (undisclosed l-0)
    (undisclosed l))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 7 4 ltx-gen 2) l-1 (5 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) l l-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l l-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul l l-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l l-0)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (exp (gen) y) (mul (rec x) l l-0)))
      (send (cat (exp (gen) y) (mul (rec x) l l-0)))))
  (label 257)
  (parent 207)
  (unrealized (0 3) (5 0) (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data)
    (b self self-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l y x l-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul y (rec x) l-0 l-1))) (priv-stor priv-stor-0)
    (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) (mul l-0 l-1))) (priv-stor priv-stor) (l l-0) (y y))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-0) l-1))
  (deflistener (cat (exp (gen) y) (mul (rec x) l-0 l-1)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self self-0)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (6 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((5 1) (2 2))
    ((6 1) (0 3)) ((7 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y l-0) (x l))
  (precur (3 0) (5 0) (6 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) (mul l-0 l-1)))
    (neq (exp (gen) (mul l-0 l-1)) (gen)) (neq self b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 2) l-1 (5 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) l-0 l-1))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y l-0 l-1)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul l-0 l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y l-0 l-1)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l-0) l-1)) (send (cat (exp (gen) l-0) l-1)))
    ((recv (cat (exp (gen) y) (mul (rec x) l-0 l-1)))
      (send (cat (exp (gen) y) (mul (rec x) l-0 l-1))))
    ((load priv-stor-1 (cat pt-3 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv self-0 l-1)))))
  (label 258)
  (parent 207)
  (unrealized (0 3) (5 0) (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (b self a name)
    (pt pt-0 pt-1 pt-2 pval) (ga gx base) (priv-stor priv-stor-0 locn)
    (l x y rndx) (w expt) (l-0 y-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul w y-0))) (priv-stor priv-stor-0) (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) (mul x w))) (priv-stor priv-stor) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) y) (mul x (rec y) w)))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b) (ga ga) (gx gx)
    (priv-stor priv-stor) (l l-0) (y y))
  (deflistener (cat (exp (gen) y-0) w))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 1) (6 0)) ((1 2) (0 1))
    ((2 3) (7 0)) ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0))
    ((5 1) (2 2)) ((6 3) (5 0)) ((7 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen x y y-0)
  (absent (x l) (y l-0) (y-0 l-0))
  (precur (3 0) (5 0) (7 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly gx) (silly (exp (gen) (mul x w))) (neq gx (gen))
    (neq (exp (gen) (mul x w)) (gen)) (neq self b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((1 1) (6 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 8 2 resp 4) (exp (gen) y-1) (7 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul x w))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y-0)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y) (mul x (rec y) w)))
      (send (cat (exp (gen) y) (mul x (rec y) w))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b gx))
      (send
        (cat (exp (gen) y)
          (enc na-0 nb-0 a b (hash (exp ga l-0) (exp gx y))))))
    ((recv (cat (exp (gen) y-0) w)) (send (cat (exp (gen) y-0) w))))
  (label 259)
  (parent 209)
  (unrealized (5 0))
  (comment "4 in cohort - 4 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (b self a name)
    (pt pt-0 pt-1 pt-2 pval) (ga gx base) (priv-stor priv-stor-0 locn)
    (l x y rndx) (w expt) (l-0 y-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul w y-0))) (priv-stor priv-stor-0) (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) (mul x w))) (priv-stor priv-stor) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) y) (mul x (rec y) w)))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b self) (ga ga) (gx gx)
    (priv-stor priv-stor-0) (l l) (y y))
  (deflistener (cat (exp (gen) y-0) w))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (7 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 1) (6 0)) ((4 2) (3 0))
    ((5 1) (2 2)) ((6 3) (5 0)) ((7 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen x y y-0)
  (absent (x l) (y l) (y-0 l-0))
  (precur (3 0) (5 0) (7 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly gx) (silly (exp (gen) (mul x w))) (neq gx (gen))
    (neq (exp (gen) (mul x w)) (gen)) (neq self b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)) ((4 1) (6 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 8 2 resp 4) (exp (gen) y-1) (7 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul x w))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y-0)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y) (mul x (rec y) w)))
      (send (cat (exp (gen) y) (mul x (rec y) w))))
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a self gx))
      (send
        (cat (exp (gen) y)
          (enc na-0 nb-0 a self (hash (exp ga l) (exp gx y))))))
    ((recv (cat (exp (gen) y-0) w)) (send (cat (exp (gen) y-0) w))))
  (label 260)
  (parent 211)
  (unrealized (5 0))
  (comment "4 in cohort - 4 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (b self a b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (ga gx base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 x y rndx) (w expt)
    (l-1 y-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-1))
    (gy (exp (gen) (mul w y-0))) (priv-stor priv-stor-0) (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) (mul x w))) (priv-stor priv-stor) (l l-1) (y y-0))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) y) (mul x (rec y) w)))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b-0) (ga ga) (gx gx)
    (priv-stor priv-stor-1) (l l-0) (y y))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b-0)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) y-0) w))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (8 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((5 1) (2 2))
    ((6 3) (5 0)) ((7 1) (6 0)) ((8 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen x y y-0)
  (absent (x l) (y l-0) (y-0 l-1))
  (precur (3 0) (5 0) (8 0))
  (gen-st (pv b l-1) (pv self l) (pv b-0 l-0))
  (facts (silly gx) (silly (exp (gen) (mul x w))) (neq gx (gen))
    (neq (exp (gen) (mul x w)) (gen)) (neq self b) (undisclosed l)
    (undisclosed l-1))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)) ((7 1) (6 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 9 2 resp 4) (exp (gen) y-1) (8 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x w y-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-1)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul x w))))
      (send
        (cat (exp (gen) y-0)
          (enc na nb self b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul x w y-0)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y) (mul x (rec y) w)))
      (send (cat (exp (gen) y) (mul x (rec y) w))))
    ((load priv-stor-1 (cat pt-3 (pv b-0 l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b-0 gx))
      (send
        (cat (exp (gen) y)
          (enc na-0 nb-0 a b-0 (hash (exp ga l-0) (exp gx y))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b-0 l-0))))
    ((recv (cat (exp (gen) y-0) w)) (send (cat (exp (gen) y-0) w))))
  (label 261)
  (parent 213)
  (unrealized (5 0))
  (comment "5 in cohort - 5 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (y x l l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul y (rec x) l l-0))) (priv-stor priv-stor-0) (l l)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) (mul l l-0))) (priv-stor priv-stor) (l l-0) (y y))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l) l-0))
  (deflistener (cat (exp (gen) y) (mul (rec x) l l-0)))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (6 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((4 2) (5 0))
    ((5 1) (2 2)) ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen y x)
  (absent (y l-0) (x l))
  (precur (3 0) (5 0) (6 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) (mul l l-0)))
    (neq (exp (gen) (mul l l-0)) (gen)) (neq self b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 7 1 ltx-gen 2) l-1 (5 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) l l-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l l-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul l l-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l l-0)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((recv (cat (exp (gen) y) (mul (rec x) l l-0)))
      (send (cat (exp (gen) y) (mul (rec x) l l-0)))))
  (label 262)
  (parent 214)
  (unrealized (0 3) (5 0) (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (l y x l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul y (rec x) l-0))) (priv-stor priv-stor-0) (l l-0)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) l-0)) (priv-stor priv-stor) (l l) (y y))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l-0) (one)))
  (deflistener (cat (exp (gen) y) (mul (rec x) l-0)))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (6 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((4 2) (5 0))
    ((5 1) (2 2)) ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen y x)
  (absent (y l) (x l-0))
  (precur (3 0) (5 0) (6 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly (exp (gen) l-0)) (neq (exp (gen) l-0) (gen))
    (neq self b) (undisclosed l-0) (undisclosed l))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (contracted (x-0 x) (l-1 l-0) (w (mul (rec x) l-0))) (one) (5 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) l-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) l-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-0)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((recv (cat (exp (gen) y) (mul (rec x) l-0)))
      (send (cat (exp (gen) y) (mul (rec x) l-0)))))
  (label 263)
  (parent 214)
  (unrealized (0 3) (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (l y x l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul y (rec x) l-0 l-0))) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) (mul l-0 l-0))) (priv-stor priv-stor) (l l) (y y))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l-0) l-0))
  (deflistener (cat (exp (gen) y) (mul (rec x) l-0 l-0)))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (6 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((4 2) (5 0))
    ((5 1) (2 2)) ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen y x)
  (absent (y l) (x l-0))
  (precur (3 0) (5 0) (6 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly (exp (gen) (mul l-0 l-0)))
    (neq (exp (gen) (mul l-0 l-0)) (gen)) (neq self b) (undisclosed l-0)
    (undisclosed l))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 7 4 ltx-gen 2) l-1 (5 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) l-0 l-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y l-0 l-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul l-0 l-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y l-0 l-0)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l-0) l-0)) (send (cat (exp (gen) l-0) l-0)))
    ((recv (cat (exp (gen) y) (mul (rec x) l-0 l-0)))
      (send (cat (exp (gen) y) (mul (rec x) l-0 l-0)))))
  (label 264)
  (parent 214)
  (unrealized (0 3) (5 0) (6 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data)
    (b self self-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l y x l-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul y (rec x) l-0 l-1))) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) (mul l-0 l-1))) (priv-stor priv-stor) (l l) (y y))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l-0) l-1))
  (deflistener (cat (exp (gen) y) (mul (rec x) l-0 l-1)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self self-0)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (6 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((4 2) (5 0))
    ((5 1) (2 2)) ((6 1) (0 3)) ((7 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y l) (x l-0))
  (precur (3 0) (5 0) (6 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly (exp (gen) (mul l-0 l-1)))
    (neq (exp (gen) (mul l-0 l-1)) (gen)) (neq self b) (undisclosed l-0)
    (undisclosed l))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 2) l-1 (5 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) l-0 l-1))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y l-0 l-1)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul l-0 l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y l-0 l-1)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l-0) l-1)) (send (cat (exp (gen) l-0) l-1)))
    ((recv (cat (exp (gen) y) (mul (rec x) l-0 l-1)))
      (send (cat (exp (gen) y) (mul (rec x) l-0 l-1))))
    ((load priv-stor-1 (cat pt-3 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv self-0 l-1)))))
  (label 265)
  (parent 214)
  (unrealized (0 3) (5 0) (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data)
    (b self self-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l y x l-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-1))
    (gy (exp (gen) (mul y (rec x) l-0 l-1))) (priv-stor priv-stor-0)
    (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) (mul l-0 l-1))) (priv-stor priv-stor) (l l-1) (y y))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-0) l-1))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self-0)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) y) (mul (rec x) l-0 l-1)))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (7 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((5 1) (2 2))
    ((6 2) (5 0)) ((7 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y l-1) (x l))
  (precur (3 0) (5 0) (7 0))
  (gen-st (pv b l-1) (pv self l))
  (facts (silly (exp (gen) (mul l-0 l-1)))
    (neq (exp (gen) (mul l-0 l-1)) (gen)) (neq self b) (undisclosed l)
    (undisclosed l-1))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 8 1 ltx-gen 2) l-2 (5 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) l-0 l-1))
          (enc na nb self b
            (hash (exp (gen) (mul l l-1))
              (exp (gen) (mul y l-0 l-1)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-1)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul l-0 l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-1))
              (exp (gen) (mul y l-0 l-1)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l-0) l-1)) (send (cat (exp (gen) l-0) l-1)))
    ((load priv-stor-1 (cat pt-3 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) y) (mul (rec x) l-0 l-1)))
      (send (cat (exp (gen) y) (mul (rec x) l-0 l-1)))))
  (label 266)
  (parent 215)
  (unrealized (0 3) (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data)
    (b self self-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 y x l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul y (rec x) l-1))) (priv-stor priv-stor-0) (l l)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) l-1)) (priv-stor priv-stor) (l l-0) (y y))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-1) (one)))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self-0)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) y) (mul (rec x) l-1)))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (7 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((5 1) (2 2))
    ((6 2) (5 0)) ((7 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y l-0) (x l))
  (precur (3 0) (5 0) (7 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) l-1)) (neq (exp (gen) l-1) (gen))
    (neq self b) (undisclosed l) (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (contracted (x-0 x) (l-2 l-1) (w (mul (rec x) l-1))) (one) (5 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) l-1))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-1)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) l-1)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-1)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l-1) (one)))
      (send (cat (exp (gen) l-1) (one))))
    ((load priv-stor-1 (cat pt-3 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv self-0 l-1)))
      (send
        (sig (body self-0 (exp (gen) l-1) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) y) (mul (rec x) l-1)))
      (send (cat (exp (gen) y) (mul (rec x) l-1)))))
  (label 267)
  (parent 215)
  (unrealized (0 3) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data)
    (b self self-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l y x l-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul y (rec x) l-0 l-1))) (priv-stor priv-stor-0)
    (l l-1) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-1))
    (gx (exp (gen) (mul l-0 l-1))) (priv-stor priv-stor) (l l) (y y))
  (deflistener (cat (exp (gen) l-1) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-1))
  (deflistener (cat (exp (gen) l-0) l-1))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self-0)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) y) (mul (rec x) l-0 l-1)))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (7 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((5 1) (2 2))
    ((6 2) (5 0)) ((7 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y l) (x l-1))
  (precur (3 0) (5 0) (7 0))
  (gen-st (pv b l) (pv self l-1))
  (facts (silly (exp (gen) (mul l-0 l-1)))
    (neq (exp (gen) (mul l-0 l-1)) (gen)) (neq self b) (undisclosed l-1)
    (undisclosed l))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 8 4 ltx-gen 2) l-2 (5 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-1)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) l-0 l-1))
          (enc na nb self b
            (hash (exp (gen) (mul l l-1))
              (exp (gen) (mul y l-0 l-1)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul l-0 l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-1))
              (exp (gen) (mul y l-0 l-1)))))))
    ((recv (cat (exp (gen) l-1) (one)))
      (send (cat (exp (gen) l-1) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l-0) l-1)) (send (cat (exp (gen) l-0) l-1)))
    ((load priv-stor-1 (cat pt-3 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv self-0 l-0)))
      (send
        (sig (body self-0 (exp (gen) l-0) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) y) (mul (rec x) l-0 l-1)))
      (send (cat (exp (gen) y) (mul (rec x) l-0 l-1)))))
  (label 268)
  (parent 215)
  (unrealized (0 3) (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data)
    (b self self-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 y x l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul y (rec x) l-1 l-1))) (priv-stor priv-stor-0)
    (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) (mul l-1 l-1))) (priv-stor priv-stor) (l l-0) (y y))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-1) l-1))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self-0)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) y) (mul (rec x) l-1 l-1)))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (7 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((5 1) (2 2))
    ((6 2) (5 0)) ((7 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y l-0) (x l))
  (precur (3 0) (5 0) (7 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) (mul l-1 l-1)))
    (neq (exp (gen) (mul l-1 l-1)) (gen)) (neq self b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 8 6 ltx-gen 2) l-2 (5 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) l-1 l-1))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y l-1 l-1)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul l-1 l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y l-1 l-1)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l-1) l-1)) (send (cat (exp (gen) l-1) l-1)))
    ((load priv-stor-1 (cat pt-3 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv self-0 l-1)))
      (send
        (sig (body self-0 (exp (gen) l-1) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) y) (mul (rec x) l-1 l-1)))
      (send (cat (exp (gen) y) (mul (rec x) l-1 l-1)))))
  (label 269)
  (parent 215)
  (unrealized (0 3) (5 0) (7 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 ignore-2 mesg) (na nb data)
    (b self self-0 self-1 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn)
    (l l-0 y x l-1 l-2 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul y (rec x) l-1 l-2))) (priv-stor priv-stor-0)
    (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) (mul l-1 l-2))) (priv-stor priv-stor) (l l-0) (y y))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-1) l-2))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self-0)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) y) (mul (rec x) l-1 l-2)))
  (defstrand ltx-gen 2 (ignore ignore-2) (self self-1)
    (priv-stor priv-stor-2) (l l-2))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (7 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((5 1) (2 2))
    ((6 2) (5 0)) ((7 1) (0 3)) ((8 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1 l-2)
  (uniq-gen y x)
  (absent (y l-0) (x l))
  (precur (3 0) (5 0) (7 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) (mul l-1 l-2)))
    (neq (exp (gen) (mul l-1 l-2)) (gen)) (neq self b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 2) l-2 (5 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) l-1 l-2))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y l-1 l-2)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul l-1 l-2))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y l-1 l-2)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l-1) l-2)) (send (cat (exp (gen) l-1) l-2)))
    ((load priv-stor-1 (cat pt-3 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv self-0 l-1)))
      (send
        (sig (body self-0 (exp (gen) l-1) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) y) (mul (rec x) l-1 l-2)))
      (send (cat (exp (gen) y) (mul (rec x) l-1 l-2))))
    ((load priv-stor-2 (cat pt-5 ignore-2))
      (stor priv-stor-2 (cat pt-6 (pv self-1 l-2)))))
  (label 270)
  (parent 215)
  (unrealized (0 3) (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (b self b-0 name)
    (pt pt-0 pt-1 pt-2 pval) (gb base) (priv-stor priv-stor-0 locn)
    (l y x x-0 l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul y (rec x) x-0 l-0))) (priv-stor priv-stor-0)
    (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) (mul x-0 l-0))) (priv-stor priv-stor) (l l-0) (y y))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) x-0) l-0))
  (defstrand init 3 (na na-0) (a b) (b b-0) (gb gb)
    (priv-stor priv-stor) (l l-0) (x x-0))
  (deflistener (cat (exp (gen) y) (mul (rec x) x-0 l-0)))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 1) (6 0)) ((1 2) (0 1))
    ((2 3) (7 0)) ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0))
    ((5 1) (2 2)) ((6 2) (5 0)) ((7 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen y x x-0)
  (absent (y l-0) (x l) (x-0 l-0))
  (precur (3 0) (5 0) (7 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) (mul x-0 l-0)))
    (neq (exp (gen) (mul x-0 l-0)) (gen)) (neq self b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((1 1) (6 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 8 1 ltx-gen 2) l-1 (5 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) x-0 l-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y x-0 l-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul x-0 l-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y x-0 l-0)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) x-0) l-0)) (send (cat (exp (gen) x-0) l-0)))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 b b-0 (exp (gen) x-0))))
    ((recv (cat (exp (gen) y) (mul (rec x) x-0 l-0)))
      (send (cat (exp (gen) y) (mul (rec x) x-0 l-0)))))
  (label 271)
  (parent 248)
  (unrealized (0 3) (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (b self b-0 name)
    (pt pt-0 pt-1 pt-2 pval) (gb base) (priv-stor priv-stor-0 locn)
    (l l-0 y x x-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul y (rec x) x-0))) (priv-stor priv-stor-0) (l l)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) x-0)) (priv-stor priv-stor) (l l-0) (y y))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) x-0) (one)))
  (defstrand init 3 (na na-0) (a b) (b b-0) (gb gb)
    (priv-stor priv-stor) (l l-0) (x x-0))
  (deflistener (cat (exp (gen) y) (mul (rec x) x-0)))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 1) (6 0)) ((1 2) (0 1))
    ((2 3) (7 0)) ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0))
    ((5 1) (2 2)) ((6 2) (5 0)) ((7 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen y x x-0)
  (absent (y l-0) (x l) (x-0 l-0))
  (precur (3 0) (5 0) (7 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) x-0)) (neq (exp (gen) x-0) (gen))
    (neq self b) (undisclosed l) (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((1 1) (6 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (contracted (x-1 x) (x-2 x-0) (w (mul (rec x) x-0))) (one) (5 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) x-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x-0)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) x-0) (one)))
      (send (cat (exp (gen) x-0) (one))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 b b-0 (exp (gen) x-0))))
    ((recv (cat (exp (gen) y) (mul (rec x) x-0)))
      (send (cat (exp (gen) y) (mul (rec x) x-0)))))
  (label 272)
  (parent 248)
  (unrealized (0 3) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (b self b-0 name)
    (pt pt-0 pt-1 pt-2 pval) (gb base) (priv-stor priv-stor-0 locn)
    (l y x x-0 l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul y (rec x) x-0 l-0))) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) (mul x-0 l-0))) (priv-stor priv-stor) (l l) (y y))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) x-0) l-0))
  (defstrand init 3 (na na-0) (a b) (b b-0) (gb gb)
    (priv-stor priv-stor) (l l) (x x-0))
  (deflistener (cat (exp (gen) y) (mul (rec x) x-0 l-0)))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 1) (6 0)) ((1 2) (0 1))
    ((2 3) (7 0)) ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0))
    ((5 1) (2 2)) ((6 2) (5 0)) ((7 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen y x x-0)
  (absent (y l) (x l-0) (x-0 l))
  (precur (3 0) (5 0) (7 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly (exp (gen) (mul x-0 l-0)))
    (neq (exp (gen) (mul x-0 l-0)) (gen)) (neq self b) (undisclosed l-0)
    (undisclosed l))
  (leads-to ((1 1) (2 0)) ((1 1) (6 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 8 4 ltx-gen 2) l-1 (5 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) x-0 l-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y x-0 l-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul x-0 l-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y x-0 l-0)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) x-0) l-0)) (send (cat (exp (gen) x-0) l-0)))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 b b-0 (exp (gen) x-0))))
    ((recv (cat (exp (gen) y) (mul (rec x) x-0 l-0)))
      (send (cat (exp (gen) y) (mul (rec x) x-0 l-0)))))
  (label 273)
  (parent 248)
  (unrealized (0 3) (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (b self b-0 self-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (gb base) (priv-stor priv-stor-0 priv-stor-1 locn)
    (l l-0 y x x-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul y (rec x) x-0 l-1))) (priv-stor priv-stor-0)
    (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) (mul x-0 l-1))) (priv-stor priv-stor) (l l-0) (y y))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) x-0) l-1))
  (defstrand init 3 (na na-0) (a b) (b b-0) (gb gb)
    (priv-stor priv-stor) (l l-0) (x x-0))
  (deflistener (cat (exp (gen) y) (mul (rec x) x-0 l-1)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self self-0)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 1) (6 0)) ((1 2) (0 1))
    ((2 3) (7 0)) ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0))
    ((5 1) (2 2)) ((6 2) (5 0)) ((7 1) (0 3)) ((8 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen y x x-0)
  (absent (y l-0) (x l) (x-0 l-0))
  (precur (3 0) (5 0) (7 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) (mul x-0 l-1)))
    (neq (exp (gen) (mul x-0 l-1)) (gen)) (neq self b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((1 1) (6 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 2) l-1 (5 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) x-0 l-1))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y x-0 l-1)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul x-0 l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y x-0 l-1)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) x-0) l-1)) (send (cat (exp (gen) x-0) l-1)))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 b b-0 (exp (gen) x-0))))
    ((recv (cat (exp (gen) y) (mul (rec x) x-0 l-1)))
      (send (cat (exp (gen) y) (mul (rec x) x-0 l-1))))
    ((load priv-stor-1 (cat pt-3 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv self-0 l-1)))))
  (label 274)
  (parent 248)
  (unrealized (0 3) (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (b self b-0 name)
    (pt pt-0 pt-1 pt-2 pval) (gb base) (priv-stor priv-stor-0 locn)
    (l y x x-0 l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul y (rec x) x-0 l-0))) (priv-stor priv-stor-0)
    (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) (mul x-0 l-0))) (priv-stor priv-stor) (l l-0) (y y))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) x-0) l-0))
  (defstrand init 3 (na na-0) (a self) (b b-0) (gb gb)
    (priv-stor priv-stor-0) (l l) (x x-0))
  (deflistener (cat (exp (gen) y) (mul (rec x) x-0 l-0)))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (7 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 1) (6 0)) ((4 2) (3 0))
    ((5 1) (2 2)) ((6 2) (5 0)) ((7 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen y x x-0)
  (absent (y l-0) (x l) (x-0 l))
  (precur (3 0) (5 0) (7 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) (mul x-0 l-0)))
    (neq (exp (gen) (mul x-0 l-0)) (gen)) (neq self b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)) ((4 1) (6 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 8 1 ltx-gen 2) l-1 (5 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) x-0 l-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y x-0 l-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul x-0 l-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y x-0 l-0)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) x-0) l-0)) (send (cat (exp (gen) x-0) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 self b-0 (exp (gen) x-0))))
    ((recv (cat (exp (gen) y) (mul (rec x) x-0 l-0)))
      (send (cat (exp (gen) y) (mul (rec x) x-0 l-0)))))
  (label 275)
  (parent 249)
  (unrealized (0 3) (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (b self b-0 name)
    (pt pt-0 pt-1 pt-2 pval) (gb base) (priv-stor priv-stor-0 locn)
    (l l-0 y x x-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul y (rec x) x-0))) (priv-stor priv-stor-0) (l l)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) x-0)) (priv-stor priv-stor) (l l-0) (y y))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) x-0) (one)))
  (defstrand init 3 (na na-0) (a self) (b b-0) (gb gb)
    (priv-stor priv-stor-0) (l l) (x x-0))
  (deflistener (cat (exp (gen) y) (mul (rec x) x-0)))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (7 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 1) (6 0)) ((4 2) (3 0))
    ((5 1) (2 2)) ((6 2) (5 0)) ((7 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen y x x-0)
  (absent (y l-0) (x l) (x-0 l))
  (precur (3 0) (5 0) (7 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) x-0)) (neq (exp (gen) x-0) (gen))
    (neq self b) (undisclosed l) (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)) ((4 1) (6 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (contracted (x-1 x) (x-2 x-0) (w (mul (rec x) x-0))) (one) (5 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) x-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y x-0)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) x-0) (one)))
      (send (cat (exp (gen) x-0) (one))))
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 self b-0 (exp (gen) x-0))))
    ((recv (cat (exp (gen) y) (mul (rec x) x-0)))
      (send (cat (exp (gen) y) (mul (rec x) x-0)))))
  (label 276)
  (parent 249)
  (unrealized (0 3) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (b self b-0 name)
    (pt pt-0 pt-1 pt-2 pval) (gb base) (priv-stor priv-stor-0 locn)
    (l y x x-0 l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul y (rec x) x-0 l-0))) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) (mul x-0 l-0))) (priv-stor priv-stor) (l l) (y y))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) x-0) l-0))
  (defstrand init 3 (na na-0) (a self) (b b-0) (gb gb)
    (priv-stor priv-stor-0) (l l-0) (x x-0))
  (deflistener (cat (exp (gen) y) (mul (rec x) x-0 l-0)))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (7 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 1) (6 0)) ((4 2) (3 0))
    ((5 1) (2 2)) ((6 2) (5 0)) ((7 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen y x x-0)
  (absent (y l) (x l-0) (x-0 l-0))
  (precur (3 0) (5 0) (7 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly (exp (gen) (mul x-0 l-0)))
    (neq (exp (gen) (mul x-0 l-0)) (gen)) (neq self b) (undisclosed l-0)
    (undisclosed l))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)) ((4 1) (6 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 8 4 ltx-gen 2) l-1 (5 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) x-0 l-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y x-0 l-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul x-0 l-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y x-0 l-0)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) x-0) l-0)) (send (cat (exp (gen) x-0) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 self b-0 (exp (gen) x-0))))
    ((recv (cat (exp (gen) y) (mul (rec x) x-0 l-0)))
      (send (cat (exp (gen) y) (mul (rec x) x-0 l-0)))))
  (label 277)
  (parent 249)
  (unrealized (0 3) (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (b self b-0 self-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (gb base) (priv-stor priv-stor-0 priv-stor-1 locn)
    (l l-0 y x x-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul y (rec x) x-0 l-1))) (priv-stor priv-stor-0)
    (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) (mul x-0 l-1))) (priv-stor priv-stor) (l l-0) (y y))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) x-0) l-1))
  (defstrand init 3 (na na-0) (a self) (b b-0) (gb gb)
    (priv-stor priv-stor-0) (l l) (x x-0))
  (deflistener (cat (exp (gen) y) (mul (rec x) x-0 l-1)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self self-0)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (7 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 1) (6 0)) ((4 2) (3 0))
    ((5 1) (2 2)) ((6 2) (5 0)) ((7 1) (0 3)) ((8 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen y x x-0)
  (absent (y l-0) (x l) (x-0 l))
  (precur (3 0) (5 0) (7 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) (mul x-0 l-1)))
    (neq (exp (gen) (mul x-0 l-1)) (gen)) (neq self b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)) ((4 1) (6 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 2) l-1 (5 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) x-0 l-1))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y x-0 l-1)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul x-0 l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y x-0 l-1)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) x-0) l-1)) (send (cat (exp (gen) x-0) l-1)))
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 self b-0 (exp (gen) x-0))))
    ((recv (cat (exp (gen) y) (mul (rec x) x-0 l-1)))
      (send (cat (exp (gen) y) (mul (rec x) x-0 l-1))))
    ((load priv-stor-1 (cat pt-3 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv self-0 l-1)))))
  (label 278)
  (parent 249)
  (unrealized (0 3) (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (b self a b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (gb base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 y x x-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-1))
    (gy (exp (gen) (mul y (rec x) x-0 l-1))) (priv-stor priv-stor-0)
    (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) (mul x-0 l-1))) (priv-stor priv-stor) (l l-1) (y y))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) x-0) l-1))
  (defstrand init 3 (na na-0) (a a) (b b-0) (gb gb)
    (priv-stor priv-stor-1) (l l-0) (x x-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self a)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) y) (mul (rec x) x-0 l-1)))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (8 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((5 1) (2 2))
    ((6 2) (5 0)) ((7 1) (6 0)) ((8 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen y x x-0)
  (absent (y l-1) (x l) (x-0 l-0))
  (precur (3 0) (5 0) (8 0))
  (gen-st (pv b l-1) (pv self l) (pv a l-0))
  (facts (silly (exp (gen) (mul x-0 l-1)))
    (neq (exp (gen) (mul x-0 l-1)) (gen)) (neq self b) (undisclosed l)
    (undisclosed l-1))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)) ((7 1) (6 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 9 1 ltx-gen 2) l-2 (5 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) x-0 l-1))
          (enc na nb self b
            (hash (exp (gen) (mul l l-1))
              (exp (gen) (mul y x-0 l-1)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-1)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul x-0 l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-1))
              (exp (gen) (mul y x-0 l-1)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) x-0) l-1)) (send (cat (exp (gen) x-0) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv a l-0)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 a b-0 (exp (gen) x-0))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv a l-0))))
    ((recv (cat (exp (gen) y) (mul (rec x) x-0 l-1)))
      (send (cat (exp (gen) y) (mul (rec x) x-0 l-1)))))
  (label 279)
  (parent 250)
  (unrealized (0 3) (5 0) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (b self a b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (gb base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 l-1 y x x-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-1))
    (gy (exp (gen) (mul y (rec x) x-0))) (priv-stor priv-stor-0) (l l)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) x-0)) (priv-stor priv-stor) (l l-1) (y y))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) x-0) (one)))
  (defstrand init 3 (na na-0) (a a) (b b-0) (gb gb)
    (priv-stor priv-stor-1) (l l-0) (x x-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self a)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) y) (mul (rec x) x-0)))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (8 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((5 1) (2 2))
    ((6 2) (5 0)) ((7 1) (6 0)) ((8 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen y x x-0)
  (absent (y l-1) (x l) (x-0 l-0))
  (precur (3 0) (5 0) (8 0))
  (gen-st (pv b l-1) (pv self l) (pv a l-0))
  (facts (silly (exp (gen) x-0)) (neq (exp (gen) x-0) (gen))
    (neq self b) (undisclosed l) (undisclosed l-1))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)) ((7 1) (6 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (contracted (x-1 x) (x-2 x-0) (w (mul (rec x) x-0))) (one) (5 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) x-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y x-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-1)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y x-0)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) x-0) (one)))
      (send (cat (exp (gen) x-0) (one))))
    ((load priv-stor-1 (cat pt-3 (pv a l-0)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 a b-0 (exp (gen) x-0))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv a l-0))))
    ((recv (cat (exp (gen) y) (mul (rec x) x-0)))
      (send (cat (exp (gen) y) (mul (rec x) x-0)))))
  (label 280)
  (parent 250)
  (unrealized (0 3) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (b self a b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (gb base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 y x x-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul y (rec x) x-0 l-1))) (priv-stor priv-stor-0)
    (l l-1) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-1))
    (gx (exp (gen) (mul x-0 l-1))) (priv-stor priv-stor) (l l-0) (y y))
  (deflistener (cat (exp (gen) l-1) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-1))
  (deflistener (cat (exp (gen) x-0) l-1))
  (defstrand init 3 (na na-0) (a a) (b b-0) (gb gb)
    (priv-stor priv-stor-1) (l l) (x x-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self a)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) y) (mul (rec x) x-0 l-1)))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (8 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((5 1) (2 2))
    ((6 2) (5 0)) ((7 1) (6 0)) ((8 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen y x x-0)
  (absent (y l-0) (x l-1) (x-0 l))
  (precur (3 0) (5 0) (8 0))
  (gen-st (pv b l-0) (pv self l-1) (pv a l))
  (facts (silly (exp (gen) (mul x-0 l-1)))
    (neq (exp (gen) (mul x-0 l-1)) (gen)) (neq self b) (undisclosed l-1)
    (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)) ((7 1) (6 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 9 4 ltx-gen 2) l-2 (5 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-1)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) x-0 l-1))
          (enc na nb self b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y x-0 l-1)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul x-0 l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y x-0 l-1)))))))
    ((recv (cat (exp (gen) l-1) (one)))
      (send (cat (exp (gen) l-1) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) x-0) l-1)) (send (cat (exp (gen) x-0) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv a l)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 a b-0 (exp (gen) x-0))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv a l))))
    ((recv (cat (exp (gen) y) (mul (rec x) x-0 l-1)))
      (send (cat (exp (gen) y) (mul (rec x) x-0 l-1)))))
  (label 281)
  (parent 250)
  (unrealized (0 3) (5 0) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (b self a b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (gb base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 y x x-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul y (rec x) x-0 l-1))) (priv-stor priv-stor-0)
    (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) (mul x-0 l-1))) (priv-stor priv-stor) (l l-0) (y y))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) x-0) l-1))
  (defstrand init 3 (na na-0) (a a) (b b-0) (gb gb)
    (priv-stor priv-stor-1) (l l-1) (x x-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self a)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) y) (mul (rec x) x-0 l-1)))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (8 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((5 1) (2 2))
    ((6 2) (5 0)) ((7 1) (6 0)) ((8 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen y x x-0)
  (absent (y l-0) (x l) (x-0 l-1))
  (precur (3 0) (5 0) (8 0))
  (gen-st (pv b l-0) (pv self l) (pv a l-1))
  (facts (silly (exp (gen) (mul x-0 l-1)))
    (neq (exp (gen) (mul x-0 l-1)) (gen)) (neq self b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)) ((7 1) (6 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 9 7 ltx-gen 2) l-2 (5 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) x-0 l-1))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y x-0 l-1)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul x-0 l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y x-0 l-1)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) x-0) l-1)) (send (cat (exp (gen) x-0) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv a l-1)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 a b-0 (exp (gen) x-0))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv a l-1))))
    ((recv (cat (exp (gen) y) (mul (rec x) x-0 l-1)))
      (send (cat (exp (gen) y) (mul (rec x) x-0 l-1)))))
  (label 282)
  (parent 250)
  (unrealized (0 3) (5 0) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 ignore-2 mesg) (na nb na-0 data)
    (b self a b-0 self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval) (gb base)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn)
    (l l-0 l-1 y x x-0 l-2 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-1))
    (gy (exp (gen) (mul y (rec x) x-0 l-2))) (priv-stor priv-stor-0)
    (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) (mul x-0 l-2))) (priv-stor priv-stor) (l l-1) (y y))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) x-0) l-2))
  (defstrand init 3 (na na-0) (a a) (b b-0) (gb gb)
    (priv-stor priv-stor-1) (l l-0) (x x-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self a)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) y) (mul (rec x) x-0 l-2)))
  (defstrand ltx-gen 2 (ignore ignore-2) (self self-0)
    (priv-stor priv-stor-2) (l l-2))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (8 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((5 1) (2 2))
    ((6 2) (5 0)) ((7 1) (6 0)) ((8 1) (0 3)) ((9 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1 l-2)
  (uniq-gen y x x-0)
  (absent (y l-1) (x l) (x-0 l-0))
  (precur (3 0) (5 0) (8 0))
  (gen-st (pv b l-1) (pv self l) (pv a l-0))
  (facts (silly (exp (gen) (mul x-0 l-2)))
    (neq (exp (gen) (mul x-0 l-2)) (gen)) (neq self b) (undisclosed l)
    (undisclosed l-1))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)) ((7 1) (6 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 2) l-2 (5 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) x-0 l-2))
          (enc na nb self b
            (hash (exp (gen) (mul l l-1))
              (exp (gen) (mul y x-0 l-2)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-1)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul x-0 l-2))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-1))
              (exp (gen) (mul y x-0 l-2)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) x-0) l-2)) (send (cat (exp (gen) x-0) l-2)))
    ((load priv-stor-1 (cat pt-3 (pv a l-0)))
      (recv (sig (body b-0 gb (pubk "sig" b-0)) (privk "sig" b-0)))
      (send (cat na-0 a b-0 (exp (gen) x-0))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv a l-0))))
    ((recv (cat (exp (gen) y) (mul (rec x) x-0 l-2)))
      (send (cat (exp (gen) y) (mul (rec x) x-0 l-2))))
    ((load priv-stor-2 (cat pt-5 ignore-2))
      (stor priv-stor-2 (cat pt-6 (pv self-0 l-2)))))
  (label 283)
  (parent 250)
  (unrealized (0 3) (5 0) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (l y x l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul y (rec x) l-0))) (priv-stor priv-stor-0) (l l)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) l-0)) (priv-stor priv-stor) (l l-0) (y y))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (gen) l-0))
  (deflistener (cat (exp (gen) y) (mul (rec x) l-0)))
  (deflistener x)
  (precedes ((0 2) (5 0)) ((0 2) (7 0)) ((1 1) (2 0)) ((1 2) (0 1))
    ((2 3) (6 0)) ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0))
    ((5 1) (2 2)) ((6 1) (0 3)) ((7 1) (6 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen y x)
  (absent (y l-0) (x l))
  (precur (3 0) (5 0) (6 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) l-0)) (neq (exp (gen) l-0) (gen))
    (neq self b) (undisclosed l) (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener x) (mul (rec x) l-0) (6 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) l-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) l-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-0)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((recv (cat (exp (gen) y) (mul (rec x) l-0)))
      (send (cat (exp (gen) y) (mul (rec x) l-0)))) ((recv x) (send x)))
  (label 284)
  (parent 251)
  (unrealized (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (l y x l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul y (rec x) l-0))) (priv-stor priv-stor-0) (l l-0)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) l-0)) (priv-stor priv-stor) (l l) (y y))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (gen) l-0))
  (deflistener (cat (exp (gen) y) (mul (rec x) l-0)))
  (deflistener x)
  (precedes ((0 2) (5 0)) ((0 2) (7 0)) ((1 1) (2 0)) ((1 2) (0 1))
    ((2 3) (6 0)) ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0))
    ((5 1) (2 2)) ((6 1) (0 3)) ((7 1) (6 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen y x)
  (absent (y l) (x l-0))
  (precur (3 0) (5 0) (6 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly (exp (gen) l-0)) (neq (exp (gen) l-0) (gen))
    (neq self b) (undisclosed l-0) (undisclosed l))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener x) (mul (rec x) l-0) (6 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) l-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) l-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-0)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((recv (cat (exp (gen) y) (mul (rec x) l-0)))
      (send (cat (exp (gen) y) (mul (rec x) l-0)))) ((recv x) (send x)))
  (label 285)
  (parent 252)
  (unrealized (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data)
    (b self self-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 y x l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul y (rec x) l-1))) (priv-stor priv-stor-0) (l l)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) l-1)) (priv-stor priv-stor) (l l-0) (y y))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (gen) l-1))
  (deflistener (cat (exp (gen) y) (mul (rec x) l-1)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self self-0)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener x)
  (precedes ((0 2) (5 0)) ((0 2) (8 0)) ((1 1) (2 0)) ((1 2) (0 1))
    ((2 3) (6 0)) ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0))
    ((5 1) (2 2)) ((6 1) (0 3)) ((7 1) (5 0)) ((8 1) (6 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y l-0) (x l))
  (precur (3 0) (5 0) (6 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) l-1)) (neq (exp (gen) l-1) (gen))
    (neq self b) (undisclosed l) (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener x) (mul (rec x) l-1) (6 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) l-1))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-1)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) l-1)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y l-1)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (gen) l-1)) (send (cat (gen) l-1)))
    ((recv (cat (exp (gen) y) (mul (rec x) l-1)))
      (send (cat (exp (gen) y) (mul (rec x) l-1))))
    ((load priv-stor-1 (cat pt-3 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv self-0 l-1))))
    ((recv x) (send x)))
  (label 286)
  (parent 253)
  (unrealized (5 0) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (l y x l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul y (rec x) l-0 l-0))) (priv-stor priv-stor-0)
    (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) (mul l-0 l-0))) (priv-stor priv-stor) (l l-0) (y y))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-0) l-0))
  (deflistener (cat (exp (gen) y) (mul (rec x) l-0 l-0)))
  (deflistener x)
  (precedes ((0 2) (5 0)) ((0 2) (7 0)) ((1 1) (2 0)) ((1 2) (0 1))
    ((2 3) (6 0)) ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0))
    ((5 1) (2 2)) ((6 1) (0 3)) ((7 1) (6 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen y x)
  (absent (y l-0) (x l))
  (precur (3 0) (5 0) (6 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) (mul l-0 l-0)))
    (neq (exp (gen) (mul l-0 l-0)) (gen)) (neq self b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener x) (mul (rec x) l-0 l-0) (6 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) l-0 l-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y l-0 l-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul l-0 l-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y l-0 l-0)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l-0) l-0)) (send (cat (exp (gen) l-0) l-0)))
    ((recv (cat (exp (gen) y) (mul (rec x) l-0 l-0)))
      (send (cat (exp (gen) y) (mul (rec x) l-0 l-0))))
    ((recv x) (send x)))
  (label 287)
  (parent 255)
  (unrealized (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (b self a name)
    (pt pt-0 pt-1 pt-2 pval) (ga gx base) (priv-stor priv-stor-0 locn)
    (l y x y-0 l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul y (rec x) y-0 l-0))) (priv-stor priv-stor-0)
    (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) (mul y-0 l-0))) (priv-stor priv-stor) (l l-0) (y y))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) y-0) l-0))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b) (ga ga) (gx gx)
    (priv-stor priv-stor) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) y) (mul (rec x) y-0 l-0)))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 1) (6 0)) ((1 2) (0 1))
    ((2 3) (7 0)) ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0))
    ((5 1) (2 2)) ((6 3) (5 0)) ((7 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen y x y-0)
  (absent (y l-0) (x l) (y-0 l-0))
  (precur (3 0) (5 0) (7 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly gx) (silly (exp (gen) (mul y-0 l-0))) (neq gx (gen))
    (neq (exp (gen) (mul y-0 l-0)) (gen)) (neq self b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((1 1) (6 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 8 1 ltx-gen 2) l-1 (5 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) y-0 l-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y y-0 l-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul y-0 l-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y y-0 l-0)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y-0) l-0)) (send (cat (exp (gen) y-0) l-0)))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a b (hash (exp ga l-0) (exp gx y-0))))))
    ((recv (cat (exp (gen) y) (mul (rec x) y-0 l-0)))
      (send (cat (exp (gen) y) (mul (rec x) y-0 l-0)))))
  (label 288)
  (parent 259)
  (unrealized (0 3) (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (b self a name)
    (pt pt-0 pt-1 pt-2 pval) (ga gx base) (priv-stor priv-stor-0 locn)
    (l l-0 y x y-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul y (rec x) y-0))) (priv-stor priv-stor-0) (l l)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) y-0)) (priv-stor priv-stor) (l l-0) (y y))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) y-0) (one)))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b) (ga ga) (gx gx)
    (priv-stor priv-stor) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) y) (mul (rec x) y-0)))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 1) (6 0)) ((1 2) (0 1))
    ((2 3) (7 0)) ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0))
    ((5 1) (2 2)) ((6 3) (5 0)) ((7 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen y x y-0)
  (absent (y l-0) (x l) (y-0 l-0))
  (precur (3 0) (5 0) (7 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly gx) (silly (exp (gen) y-0)) (neq gx (gen))
    (neq (exp (gen) y-0) (gen)) (neq self b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((1 1) (6 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (contracted (x-0 x) (y-1 y-0) (w (mul (rec x) y-0))) (one) (5 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) y-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y y-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) y-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y y-0)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y-0) (one)))
      (send (cat (exp (gen) y-0) (one))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a b (hash (exp ga l-0) (exp gx y-0))))))
    ((recv (cat (exp (gen) y) (mul (rec x) y-0)))
      (send (cat (exp (gen) y) (mul (rec x) y-0)))))
  (label 289)
  (parent 259)
  (unrealized (0 3) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (b self a name)
    (pt pt-0 pt-1 pt-2 pval) (ga gx base) (priv-stor priv-stor-0 locn)
    (l y x y-0 l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul y (rec x) y-0 l-0))) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) (mul y-0 l-0))) (priv-stor priv-stor) (l l) (y y))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) y-0) l-0))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b) (ga ga) (gx gx)
    (priv-stor priv-stor) (l l) (y y-0))
  (deflistener (cat (exp (gen) y) (mul (rec x) y-0 l-0)))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 1) (6 0)) ((1 2) (0 1))
    ((2 3) (7 0)) ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0))
    ((5 1) (2 2)) ((6 3) (5 0)) ((7 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen y x y-0)
  (absent (y l) (x l-0) (y-0 l))
  (precur (3 0) (5 0) (7 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly gx) (silly (exp (gen) (mul y-0 l-0))) (neq gx (gen))
    (neq (exp (gen) (mul y-0 l-0)) (gen)) (neq self b) (undisclosed l-0)
    (undisclosed l))
  (leads-to ((1 1) (2 0)) ((1 1) (6 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 8 4 ltx-gen 2) l-1 (5 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) y-0 l-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y y-0 l-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul y-0 l-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y y-0 l-0)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y-0) l-0)) (send (cat (exp (gen) y-0) l-0)))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a b (hash (exp ga l) (exp gx y-0))))))
    ((recv (cat (exp (gen) y) (mul (rec x) y-0 l-0)))
      (send (cat (exp (gen) y) (mul (rec x) y-0 l-0)))))
  (label 290)
  (parent 259)
  (unrealized (0 3) (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (b self a self-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (ga gx base) (priv-stor priv-stor-0 priv-stor-1 locn)
    (l l-0 y x y-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul y (rec x) y-0 l-1))) (priv-stor priv-stor-0)
    (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) (mul y-0 l-1))) (priv-stor priv-stor) (l l-0) (y y))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) y-0) l-1))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b) (ga ga) (gx gx)
    (priv-stor priv-stor) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) y) (mul (rec x) y-0 l-1)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self self-0)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 1) (6 0)) ((1 2) (0 1))
    ((2 3) (7 0)) ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0))
    ((5 1) (2 2)) ((6 3) (5 0)) ((7 1) (0 3)) ((8 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen y x y-0)
  (absent (y l-0) (x l) (y-0 l-0))
  (precur (3 0) (5 0) (7 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly gx) (silly (exp (gen) (mul y-0 l-1))) (neq gx (gen))
    (neq (exp (gen) (mul y-0 l-1)) (gen)) (neq self b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((1 1) (6 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 2) l-1 (5 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) y-0 l-1))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y y-0 l-1)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul y-0 l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y y-0 l-1)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y-0) l-1)) (send (cat (exp (gen) y-0) l-1)))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a b (hash (exp ga l-0) (exp gx y-0))))))
    ((recv (cat (exp (gen) y) (mul (rec x) y-0 l-1)))
      (send (cat (exp (gen) y) (mul (rec x) y-0 l-1))))
    ((load priv-stor-1 (cat pt-3 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv self-0 l-1)))))
  (label 291)
  (parent 259)
  (unrealized (0 3) (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (b self a name)
    (pt pt-0 pt-1 pt-2 pval) (ga gx base) (priv-stor priv-stor-0 locn)
    (l y x y-0 l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul y (rec x) y-0 l-0))) (priv-stor priv-stor-0)
    (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) (mul y-0 l-0))) (priv-stor priv-stor) (l l-0) (y y))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) y-0) l-0))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b self) (ga ga) (gx gx)
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) y) (mul (rec x) y-0 l-0)))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (7 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 1) (6 0)) ((4 2) (3 0))
    ((5 1) (2 2)) ((6 3) (5 0)) ((7 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen y x y-0)
  (absent (y l-0) (x l) (y-0 l))
  (precur (3 0) (5 0) (7 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly gx) (silly (exp (gen) (mul y-0 l-0))) (neq gx (gen))
    (neq (exp (gen) (mul y-0 l-0)) (gen)) (neq self b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)) ((4 1) (6 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 8 1 ltx-gen 2) l-1 (5 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) y-0 l-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y y-0 l-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul y-0 l-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y y-0 l-0)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y-0) l-0)) (send (cat (exp (gen) y-0) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a self gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a self (hash (exp ga l) (exp gx y-0))))))
    ((recv (cat (exp (gen) y) (mul (rec x) y-0 l-0)))
      (send (cat (exp (gen) y) (mul (rec x) y-0 l-0)))))
  (label 292)
  (parent 260)
  (unrealized (0 3) (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (b self a name)
    (pt pt-0 pt-1 pt-2 pval) (ga gx base) (priv-stor priv-stor-0 locn)
    (l l-0 y x y-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul y (rec x) y-0))) (priv-stor priv-stor-0) (l l)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) y-0)) (priv-stor priv-stor) (l l-0) (y y))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) y-0) (one)))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b self) (ga ga) (gx gx)
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) y) (mul (rec x) y-0)))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (7 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 1) (6 0)) ((4 2) (3 0))
    ((5 1) (2 2)) ((6 3) (5 0)) ((7 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen y x y-0)
  (absent (y l-0) (x l) (y-0 l))
  (precur (3 0) (5 0) (7 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly gx) (silly (exp (gen) y-0)) (neq gx (gen))
    (neq (exp (gen) y-0) (gen)) (neq self b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)) ((4 1) (6 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (contracted (x-0 x) (y-1 y-0) (w (mul (rec x) y-0))) (one) (5 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) y-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y y-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) y-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y y-0)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y-0) (one)))
      (send (cat (exp (gen) y-0) (one))))
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a self gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a self (hash (exp ga l) (exp gx y-0))))))
    ((recv (cat (exp (gen) y) (mul (rec x) y-0)))
      (send (cat (exp (gen) y) (mul (rec x) y-0)))))
  (label 293)
  (parent 260)
  (unrealized (0 3) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (b self a name)
    (pt pt-0 pt-1 pt-2 pval) (ga gx base) (priv-stor priv-stor-0 locn)
    (l y x y-0 l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul y (rec x) y-0 l-0))) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) (mul y-0 l-0))) (priv-stor priv-stor) (l l) (y y))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) y-0) l-0))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b self) (ga ga) (gx gx)
    (priv-stor priv-stor-0) (l l-0) (y y-0))
  (deflistener (cat (exp (gen) y) (mul (rec x) y-0 l-0)))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (7 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 1) (6 0)) ((4 2) (3 0))
    ((5 1) (2 2)) ((6 3) (5 0)) ((7 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen y x y-0)
  (absent (y l) (x l-0) (y-0 l-0))
  (precur (3 0) (5 0) (7 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly gx) (silly (exp (gen) (mul y-0 l-0))) (neq gx (gen))
    (neq (exp (gen) (mul y-0 l-0)) (gen)) (neq self b) (undisclosed l-0)
    (undisclosed l))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)) ((4 1) (6 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 8 4 ltx-gen 2) l-1 (5 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) y-0 l-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y y-0 l-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul y-0 l-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y y-0 l-0)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y-0) l-0)) (send (cat (exp (gen) y-0) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a self gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a self (hash (exp ga l-0) (exp gx y-0))))))
    ((recv (cat (exp (gen) y) (mul (rec x) y-0 l-0)))
      (send (cat (exp (gen) y) (mul (rec x) y-0 l-0)))))
  (label 294)
  (parent 260)
  (unrealized (0 3) (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (b self a self-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (ga gx base) (priv-stor priv-stor-0 priv-stor-1 locn)
    (l l-0 y x y-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul y (rec x) y-0 l-1))) (priv-stor priv-stor-0)
    (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) (mul y-0 l-1))) (priv-stor priv-stor) (l l-0) (y y))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) y-0) l-1))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b self) (ga ga) (gx gx)
    (priv-stor priv-stor-0) (l l) (y y-0))
  (deflistener (cat (exp (gen) y) (mul (rec x) y-0 l-1)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self self-0)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (7 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 1) (6 0)) ((4 2) (3 0))
    ((5 1) (2 2)) ((6 3) (5 0)) ((7 1) (0 3)) ((8 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen y x y-0)
  (absent (y l-0) (x l) (y-0 l))
  (precur (3 0) (5 0) (7 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly gx) (silly (exp (gen) (mul y-0 l-1))) (neq gx (gen))
    (neq (exp (gen) (mul y-0 l-1)) (gen)) (neq self b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)) ((4 1) (6 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 2) l-1 (5 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) y-0 l-1))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y y-0 l-1)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul y-0 l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y y-0 l-1)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y-0) l-1)) (send (cat (exp (gen) y-0) l-1)))
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a self gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a self (hash (exp ga l) (exp gx y-0))))))
    ((recv (cat (exp (gen) y) (mul (rec x) y-0 l-1)))
      (send (cat (exp (gen) y) (mul (rec x) y-0 l-1))))
    ((load priv-stor-1 (cat pt-3 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv self-0 l-1)))))
  (label 295)
  (parent 260)
  (unrealized (0 3) (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (b self a b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (ga gx base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 y x y-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-1))
    (gy (exp (gen) (mul y (rec x) y-0 l-1))) (priv-stor priv-stor-0)
    (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) (mul y-0 l-1))) (priv-stor priv-stor) (l l-1) (y y))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) y-0) l-1))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b-0) (ga ga) (gx gx)
    (priv-stor priv-stor-1) (l l-0) (y y-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b-0)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) y) (mul (rec x) y-0 l-1)))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (8 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((5 1) (2 2))
    ((6 3) (5 0)) ((7 1) (6 0)) ((8 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen y x y-0)
  (absent (y l-1) (x l) (y-0 l-0))
  (precur (3 0) (5 0) (8 0))
  (gen-st (pv b l-1) (pv self l) (pv b-0 l-0))
  (facts (silly gx) (silly (exp (gen) (mul y-0 l-1))) (neq gx (gen))
    (neq (exp (gen) (mul y-0 l-1)) (gen)) (neq self b) (undisclosed l)
    (undisclosed l-1))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)) ((7 1) (6 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 9 1 ltx-gen 2) l-2 (5 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) y-0 l-1))
          (enc na nb self b
            (hash (exp (gen) (mul l l-1))
              (exp (gen) (mul y y-0 l-1)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-1)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul y-0 l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-1))
              (exp (gen) (mul y y-0 l-1)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y-0) l-1)) (send (cat (exp (gen) y-0) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b-0 l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b-0 gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a b-0 (hash (exp ga l-0) (exp gx y-0))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b-0 l-0))))
    ((recv (cat (exp (gen) y) (mul (rec x) y-0 l-1)))
      (send (cat (exp (gen) y) (mul (rec x) y-0 l-1)))))
  (label 296)
  (parent 261)
  (unrealized (0 3) (5 0) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (b self a b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (ga gx base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 l-1 y x y-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-1))
    (gy (exp (gen) (mul y (rec x) y-0))) (priv-stor priv-stor-0) (l l)
    (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) y-0)) (priv-stor priv-stor) (l l-1) (y y))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) y-0) (one)))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b-0) (ga ga) (gx gx)
    (priv-stor priv-stor-1) (l l-0) (y y-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b-0)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) y) (mul (rec x) y-0)))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (8 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((5 1) (2 2))
    ((6 3) (5 0)) ((7 1) (6 0)) ((8 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen y x y-0)
  (absent (y l-1) (x l) (y-0 l-0))
  (precur (3 0) (5 0) (8 0))
  (gen-st (pv b l-1) (pv self l) (pv b-0 l-0))
  (facts (silly gx) (silly (exp (gen) y-0)) (neq gx (gen))
    (neq (exp (gen) y-0) (gen)) (neq self b) (undisclosed l)
    (undisclosed l-1))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)) ((7 1) (6 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test
    (contracted (x-0 x) (y-1 y-0) (w (mul (rec x) y-0))) (one) (5 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) y-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y y-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-1)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) y-0)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y y-0)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y-0) (one)))
      (send (cat (exp (gen) y-0) (one))))
    ((load priv-stor-1 (cat pt-3 (pv b-0 l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b-0 gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a b-0 (hash (exp ga l-0) (exp gx y-0))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b-0 l-0))))
    ((recv (cat (exp (gen) y) (mul (rec x) y-0)))
      (send (cat (exp (gen) y) (mul (rec x) y-0)))))
  (label 297)
  (parent 261)
  (unrealized (0 3) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (b self a b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (ga gx base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 y x y-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul y (rec x) y-0 l-1))) (priv-stor priv-stor-0)
    (l l-1) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-1))
    (gx (exp (gen) (mul y-0 l-1))) (priv-stor priv-stor) (l l-0) (y y))
  (deflistener (cat (exp (gen) l-1) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-1))
  (deflistener (cat (exp (gen) y-0) l-1))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b-0) (ga ga) (gx gx)
    (priv-stor priv-stor-1) (l l) (y y-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b-0)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) y) (mul (rec x) y-0 l-1)))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (8 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((5 1) (2 2))
    ((6 3) (5 0)) ((7 1) (6 0)) ((8 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen y x y-0)
  (absent (y l-0) (x l-1) (y-0 l))
  (precur (3 0) (5 0) (8 0))
  (gen-st (pv b l-0) (pv self l-1) (pv b-0 l))
  (facts (silly gx) (silly (exp (gen) (mul y-0 l-1))) (neq gx (gen))
    (neq (exp (gen) (mul y-0 l-1)) (gen)) (neq self b) (undisclosed l-1)
    (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)) ((7 1) (6 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 9 4 ltx-gen 2) l-2 (5 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-1)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) y-0 l-1))
          (enc na nb self b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y y-0 l-1)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul y-0 l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y y-0 l-1)))))))
    ((recv (cat (exp (gen) l-1) (one)))
      (send (cat (exp (gen) l-1) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y-0) l-1)) (send (cat (exp (gen) y-0) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b-0 l)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b-0 gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a b-0 (hash (exp ga l) (exp gx y-0))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b-0 l))))
    ((recv (cat (exp (gen) y) (mul (rec x) y-0 l-1)))
      (send (cat (exp (gen) y) (mul (rec x) y-0 l-1)))))
  (label 298)
  (parent 261)
  (unrealized (0 3) (5 0) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (b self a b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (ga gx base)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 y x y-0 l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul y (rec x) y-0 l-1))) (priv-stor priv-stor-0)
    (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) (mul y-0 l-1))) (priv-stor priv-stor) (l l-0) (y y))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) y-0) l-1))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b-0) (ga ga) (gx gx)
    (priv-stor priv-stor-1) (l l-1) (y y-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b-0)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) y) (mul (rec x) y-0 l-1)))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (8 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((5 1) (2 2))
    ((6 3) (5 0)) ((7 1) (6 0)) ((8 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen y x y-0)
  (absent (y l-0) (x l) (y-0 l-1))
  (precur (3 0) (5 0) (8 0))
  (gen-st (pv b l-0) (pv self l) (pv b-0 l-1))
  (facts (silly gx) (silly (exp (gen) (mul y-0 l-1))) (neq gx (gen))
    (neq (exp (gen) (mul y-0 l-1)) (gen)) (neq self b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)) ((7 1) (6 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 9 7 ltx-gen 2) l-2 (5 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) y-0 l-1))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y y-0 l-1)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul y-0 l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y y-0 l-1)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y-0) l-1)) (send (cat (exp (gen) y-0) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b-0 l-1)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b-0 gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a b-0 (hash (exp ga l-1) (exp gx y-0))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b-0 l-1))))
    ((recv (cat (exp (gen) y) (mul (rec x) y-0 l-1)))
      (send (cat (exp (gen) y) (mul (rec x) y-0 l-1)))))
  (label 299)
  (parent 261)
  (unrealized (0 3) (5 0) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 ignore-2 mesg) (na nb na-0 nb-0 data)
    (b self a b-0 self-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval) (ga gx base)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn)
    (l l-0 l-1 y x y-0 l-2 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-1))
    (gy (exp (gen) (mul y (rec x) y-0 l-2))) (priv-stor priv-stor-0)
    (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) (mul y-0 l-2))) (priv-stor priv-stor) (l l-1) (y y))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) y-0) l-2))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a) (b b-0) (ga ga) (gx gx)
    (priv-stor priv-stor-1) (l l-0) (y y-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b-0)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) y) (mul (rec x) y-0 l-2)))
  (defstrand ltx-gen 2 (ignore ignore-2) (self self-0)
    (priv-stor priv-stor-2) (l l-2))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (8 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((5 1) (2 2))
    ((6 3) (5 0)) ((7 1) (6 0)) ((8 1) (0 3)) ((9 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1 l-2)
  (uniq-gen y x y-0)
  (absent (y l-1) (x l) (y-0 l-0))
  (precur (3 0) (5 0) (8 0))
  (gen-st (pv b l-1) (pv self l) (pv b-0 l-0))
  (facts (silly gx) (silly (exp (gen) (mul y-0 l-2))) (neq gx (gen))
    (neq (exp (gen) (mul y-0 l-2)) (gen)) (neq self b) (undisclosed l)
    (undisclosed l-1))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)) ((7 1) (6 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 2) l-2 (5 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) y-0 l-2))
          (enc na nb self b
            (hash (exp (gen) (mul l l-1))
              (exp (gen) (mul y y-0 l-2)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-1)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul y-0 l-2))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-1))
              (exp (gen) (mul y y-0 l-2)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y-0) l-2)) (send (cat (exp (gen) y-0) l-2)))
    ((load priv-stor-1 (cat pt-3 (pv b-0 l-0)))
      (recv (sig (body a ga (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na-0 a b-0 gx))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a b-0 (hash (exp ga l-0) (exp gx y-0))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b-0 l-0))))
    ((recv (cat (exp (gen) y) (mul (rec x) y-0 l-2)))
      (send (cat (exp (gen) y) (mul (rec x) y-0 l-2))))
    ((load priv-stor-2 (cat pt-5 ignore-2))
      (stor priv-stor-2 (cat pt-6 (pv self-0 l-2)))))
  (label 300)
  (parent 261)
  (unrealized (0 3) (5 0) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (l y x l-0 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l))
    (gy (exp (gen) (mul y (rec x) l-0 l-0))) (priv-stor priv-stor-0)
    (l l-0) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l-0))
    (gx (exp (gen) (mul l-0 l-0))) (priv-stor priv-stor) (l l) (y y))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l-0) l-0))
  (deflistener (cat (exp (gen) y) (mul (rec x) l-0 l-0)))
  (deflistener x)
  (precedes ((0 2) (5 0)) ((0 2) (7 0)) ((1 1) (2 0)) ((1 2) (0 1))
    ((2 3) (6 0)) ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0))
    ((4 2) (5 0)) ((5 1) (2 2)) ((6 1) (0 3)) ((7 1) (6 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen y x)
  (absent (y l) (x l-0))
  (precur (3 0) (5 0) (6 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (silly (exp (gen) (mul l-0 l-0)))
    (neq (exp (gen) (mul l-0 l-0)) (gen)) (neq self b) (undisclosed l-0)
    (undisclosed l))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener x) (mul (rec x) l-0 l-0) (6 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) l-0 l-0))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y l-0 l-0)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul l-0 l-0))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y l-0 l-0)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l-0) l-0)) (send (cat (exp (gen) l-0) l-0)))
    ((recv (cat (exp (gen) y) (mul (rec x) l-0 l-0)))
      (send (cat (exp (gen) y) (mul (rec x) l-0 l-0))))
    ((recv x) (send x)))
  (label 301)
  (parent 264)
  (unrealized (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data)
    (b self self-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 y x l-1 rndx))
  (defstrand init 4 (na na) (nb nb) (a self) (b b) (gb (exp (gen) l-0))
    (gy (exp (gen) (mul y (rec x) l-1 l-1))) (priv-stor priv-stor-0)
    (l l) (x x))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (ga (exp (gen) l))
    (gx (exp (gen) (mul l-1 l-1))) (priv-stor priv-stor) (l l-0) (y y))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-1) l-1))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self-0)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) y) (mul (rec x) l-1 l-1)))
  (deflistener x)
  (precedes ((0 2) (5 0)) ((0 2) (8 0)) ((1 1) (2 0)) ((1 2) (0 1))
    ((2 3) (7 0)) ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0))
    ((5 1) (2 2)) ((6 2) (5 0)) ((7 1) (0 3)) ((8 1) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y l-0) (x l))
  (precur (3 0) (5 0) (7 0))
  (gen-st (pv b l-0) (pv self l))
  (facts (silly (exp (gen) (mul l-1 l-1)))
    (neq (exp (gen) (mul l-1 l-1)) (gen)) (neq self b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule fact-resp-neq0 fact-resp-silly trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener x) (mul (rec x) l-1 l-1) (7 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y (rec x) l-1 l-1))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y l-1 l-1)))))))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul l-1 l-1))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul y l-1 l-1)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) l-1) l-1)) (send (cat (exp (gen) l-1) l-1)))
    ((load priv-stor-1 (cat pt-3 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv self-0 l-1)))
      (send
        (sig (body self-0 (exp (gen) l-1) (pubk "sig" self-0))
          (privk "sig" self-0))))
    ((recv (cat (exp (gen) y) (mul (rec x) l-1 l-1)))
      (send (cat (exp (gen) y) (mul (rec x) l-1 l-1))))
    ((recv x) (send x)))
  (label 302)
  (parent 269)
  (unrealized (5 0) (8 0))
  (dead)
  (comment "empty cohort"))

(comment "Nothing left to do")
