(herald "DHCR: unified model (UM) original" (bound 20) (limit 12000)
  (algebra diffie-hellman))

(comment "CPSA 4.4.2")
(comment "All input read from tst/dhcr_um_expt_assume.scm")
(comment "Step count limited to 12000")
(comment "Strand count bounded at 20")

(defprotocol dhcr-um diffie-hellman
  (defrole init
    (vars (la x rndx) (beta upsilon expt) (a b name) (na nb data)
      (priv-stor locn))
    (trace (load priv-stor (pv a la))
      (recv
        (sig (body b (exp (gen) beta) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul la beta))
              (exp (gen) (mul x upsilon)))))) (send nb))
    (uniq-orig na)
    (uniq-gen x)
    (absent (x la) (x beta))
    (assume (fact neq (exp (gen) upsilon) (gen)))
    (gen-st (pv a la)))
  (defrole resp
    (vars (lb y rndx) (alpha zeta expt) (a b name) (na nb data)
      (priv-stor locn))
    (trace (load priv-stor (pv b lb))
      (recv
        (sig (body a (exp (gen) alpha) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul lb alpha))
              (exp (gen) (mul y zeta)))))) (recv nb))
    (uniq-orig nb)
    (uniq-gen y)
    (absent (y lb) (y alpha) (y zeta))
    (assume (fact neq (exp (gen) zeta) (gen)))
    (gen-st (pv b lb)))
  (defrole ltx-gen
    (vars (self name) (l rndx) (priv-stor locn) (ignore mesg))
    (trace (load priv-stor ignore) (stor priv-stor (pv self l))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    (uniq-orig l))
  (defrole ltx-disclose
    (vars (self name) (l rndx) (priv-stor locn))
    (trace (load priv-stor (pv self l)) (stor priv-stor "nil") (send l))
    (gen-st (pv self l)))
  (defrule undisclosed-not-disclosed
    (forall ((z strd) (l rndx))
      (implies
        (and (fact undisclosed l) (p "ltx-disclose" z (idx 2))
          (p "ltx-disclose" "l" z l))
        (false))))
  (defgenrule neqRl_indx
    (forall ((x indx)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_strd
    (forall ((x strd)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_mesg
    (forall ((x mesg)) (implies (fact neq x x) (false))))
  (defgenrule scissorsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (trans z2 i2)
          (leads-to z0 i0 z1 i1) (leads-to z0 i0 z2 i2))
        (and (= z1 z2) (= i1 i2)))))
  (defgenrule cakeRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (leads-to z0 i0 z1 i1)
          (leads-to z0 i0 z2 i2) (prec z1 i1 z2 i2)) (false))))
  (defgenrule no-interruption
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (leads-to z0 i0 z2 i2) (trans z1 i1)
          (same-locn z0 i0 z1 i1) (prec z0 i0 z1 i1) (prec z1 i1 z2 i2))
        (false))))
  (defgenrule shearsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (trans z2 i2)
          (leads-to z0 i0 z1 i1) (same-locn z0 i0 z2 i2)
          (prec z0 i0 z2 i2))
        (or (and (= z1 z2) (= i1 i2)) (prec z1 i1 z2 i2)))))
  (defgenrule invShearsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (same-locn z0 i0 z1 i1)
          (leads-to z1 i1 z2 i2) (prec z0 i0 z2 i2))
        (or (and (= z0 z1) (= i0 i1)) (prec z0 i0 z1 i1)))))
  (defgenrule assume-init-0
    (forall ((z strd) (upsilon expt))
      (implies (and (p "init" z (idx 4)) (p "init" "upsilon" z upsilon))
        (fact neq (exp (gen) upsilon) (gen)))))
  (defgenrule assume-resp-0
    (forall ((z strd) (zeta expt))
      (implies (and (p "resp" z (idx 3)) (p "resp" "zeta" z zeta))
        (fact neq (exp (gen) zeta) (gen)))))
  (defgenrule trRl_ltx-gen-at-1
    (forall ((z strd))
      (implies (p "ltx-gen" z (idx 2)) (trans z (idx 1)))))
  (defgenrule trRl_ltx-gen-at-0
    (forall ((z strd))
      (implies (p "ltx-gen" z (idx 2)) (trans z (idx 0)))))
  (defgenrule trRl_ltx-disclose-at-1
    (forall ((z strd))
      (implies (p "ltx-disclose" z (idx 2)) (trans z (idx 1)))))
  (defgenrule trRl_ltx-disclose-at-0
    (forall ((z strd))
      (implies (p "ltx-disclose" z (idx 2)) (trans z (idx 0)))))
  (defgenrule gen-st-init-0
    (forall ((z strd) (a name) (la rndx))
      (implies
        (and (p "init" z (idx 1)) (p "init" "la" z la)
          (p "init" "a" z a)) (gen-st (pv a la)))))
  (defgenrule gen-st-resp-0
    (forall ((z strd) (b name) (lb rndx))
      (implies
        (and (p "resp" z (idx 1)) (p "resp" "lb" z lb)
          (p "resp" "b" z b)) (gen-st (pv b lb)))))
  (defgenrule gen-st-ltx-disclose-0
    (forall ((z strd) (self name) (l rndx))
      (implies
        (and (p "ltx-disclose" z (idx 1)) (p "ltx-disclose" "l" z l)
          (p "ltx-disclose" "self" z self)) (gen-st (pv self l)))))
  (lang (sig sign) (body (tuple 3)) (pv (tuple 2))))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (pt pval) (priv-stor locn) (la rndx)
    (beta expt) (x rndx) (upsilon expt))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la la) (x x) (beta beta) (upsilon upsilon))
  (non-orig (privk "sig" b))
  (uniq-orig na)
  (uniq-gen x)
  (absent (x la) (x beta))
  (facts (neq a b) (undisclosed la) (undisclosed beta))
  (traces
    ((load priv-stor (cat pt (pv a la)))
      (recv
        (sig (body b (exp (gen) beta) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul la beta))
              (exp (gen) (mul x upsilon)))))) (send nb)))
  (label 0)
  (unrealized (0 1))
  (origs (na (0 2)))
  (ugens (x (0 2)))
  (comment "Not closed under rules"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (pt pval) (priv-stor locn) (la rndx)
    (beta expt) (x rndx) (upsilon expt))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la la) (x x) (beta beta) (upsilon upsilon))
  (non-orig (privk "sig" b))
  (uniq-orig na)
  (uniq-gen x)
  (absent (x la) (x beta))
  (gen-st (pv a la))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b) (undisclosed la)
    (undisclosed beta))
  (rule assume-init-0 gen-st-ltx-disclose-0)
  (traces
    ((load priv-stor (cat pt (pv a la)))
      (recv
        (sig (body b (exp (gen) beta) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul la beta))
              (exp (gen) (mul x upsilon)))))) (send nb)))
  (label 1)
  (parent 0)
  (unrealized (0 0) (0 1))
  (origs (na (0 2)))
  (ugens (x (0 2)))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (a b name) (pt pt-0 pval)
    (priv-stor locn) (beta expt) (x rndx) (upsilon expt) (l rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta beta) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (precedes ((1 1) (0 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l)
  (uniq-gen x)
  (absent (x beta) (x l))
  (gen-st (pv a l))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b) (undisclosed l)
    (undisclosed beta))
  (leads-to ((1 1) (0 0)))
  (rule assume-init-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor (cat pt (pv a l))) (0 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) beta) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul beta l))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l)))))
  (label 2)
  (parent 1)
  (unrealized (0 1) (0 3))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((1 1) (0 0)) ((2 2) (0 1)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (0 0)))
  (rule assume-init-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation encryption-test (added-strand ltx-gen 3)
    (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)) (0 1))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))))
  (label 3)
  (parent 2)
  (unrealized (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx)
    (zeta expt))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb lb) (y y) (alpha (mul l l-0 (rec lb))) (zeta zeta))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 2) (0 1)) ((3 3) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec lb))) (y lb) (y zeta))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (0 0)))
  (rule assume-init-0 assume-resp-0 gen-st-ltx-disclose-0
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation encryption-test (added-strand resp 4)
    (enc na nb a b
      (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))) (0 3))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec lb))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))))
  (label 4)
  (parent 3)
  (unrealized (0 3) (3 0) (3 1))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (precedes ((0 2) (3 0)) ((1 1) (0 0)) ((2 2) (0 1)) ((3 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (0 0)))
  (rule assume-init-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation encryption-test
    (added-listener
      (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
    (enc na nb a b
      (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))) (0 3))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send
        (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))))
  (label 5)
  (parent 3)
  (unrealized (3 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (l x y rndx)
    (zeta expt) (l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (lb l-0) (y y) (alpha l) (zeta zeta))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (3 0)) ((2 2) (0 1))
    ((3 3) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y l) (y zeta) (y l-0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((2 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 4 2 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv b l-1))) (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))))
  (label 6)
  (parent 4)
  (unrealized (0 3) (3 1))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 x y rndx)
    (zeta expt) (l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-1) (y y) (alpha (mul l l-0 (rec l-1))) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 2) (0 1)) ((3 3) (0 3))
    ((4 1) (3 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec l-1))) (y zeta) (y l-1))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((4 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv b l-1))) (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1)))))
  (label 7)
  (parent 4)
  (unrealized (0 3) (3 1))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((2 2) (0 1)) ((3 1) (0 3))
    ((4 1) (3 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (0 0)))
  (rule assume-init-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation encryption-test
    (added-listener
      (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))) (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))))
  (label 8)
  (parent 5)
  (unrealized (4 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x y rndx)
    (zeta expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (la l-0) (x x) (beta l)
    (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (0 0)) ((3 2) (2 1)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y zeta) (y l) (y l-0))
  (gen-st (pv b l) (pv self l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq self b) (undisclosed l-0)
    (undisclosed l))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 1 4 ltx-gen 3) (exp (gen) l-0) (3 1))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 9)
  (parent 6)
  (unrealized (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (l x y rndx)
    (zeta expt) (l-0 rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (lb l-0) (y y) (alpha l) (zeta zeta))
  (deflistener (cat (exp (gen) (mul l (rec w))) w))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (3 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 1)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y l) (y zeta) (y l-0))
  (precur (4 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((2 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul l (rec w))) w)) (exp (gen) l)
    (3 1))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((recv (cat (exp (gen) (mul l (rec w))) w))
      (send (cat (exp (gen) (mul l (rec w))) w))))
  (label 10)
  (parent 6)
  (unrealized (0 3) (4 0))
  (comment "7 in cohort - 7 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 x y rndx)
    (zeta expt) (l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-1) (y y) (alpha (mul l l-0 (rec l-1))) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l l-0)) l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 2) (0 1)) ((3 3) (0 3))
    ((4 1) (3 0)) ((4 1) (5 0)) ((5 1) (3 1)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec l-1))) (y zeta) (y l-1))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((4 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul l l-0)) l-1))
    (exp (gen) (mul l l-0 (rec l-1))) (3 1))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l l-0)) l-1))
      (send (cat (exp (gen) (mul l l-0)) l-1))))
  (label 11)
  (parent 7)
  (unrealized (0 3) (5 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 x y rndx)
    (zeta expt) (l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-1) (y y) (alpha (mul l l-0 (rec l-1))) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l (rec l-1))) l-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (5 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((5 1) (3 1)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec l-1))) (y zeta) (y l-1))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((4 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul l (rec l-1))) l-0))
    (exp (gen) (mul l l-0 (rec l-1))) (3 1))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l (rec l-1))) l-0))
      (send (cat (exp (gen) (mul l (rec l-1))) l-0))))
  (label 12)
  (parent 7)
  (unrealized (0 3) (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 x y rndx)
    (zeta expt) (l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-1) (y y) (alpha (mul l l-0 (rec l-1))) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l-0 (rec l-1))) l))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (5 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((5 1) (3 1)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec l-1))) (y zeta) (y l-1))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((4 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul l-0 (rec l-1))) l))
    (exp (gen) (mul l l-0 (rec l-1))) (3 1))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l-0 (rec l-1))) l))
      (send (cat (exp (gen) (mul l-0 (rec l-1))) l))))
  (label 13)
  (parent 7)
  (unrealized (0 3) (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener (cat (exp (gen) l) l-0))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((2 1) (5 0)) ((2 2) (0 1))
    ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (0 0)))
  (rule assume-init-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l) l-0))
    (exp (gen) (mul l l-0)) (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0))))
  (label 14)
  (parent 8)
  (unrealized (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener (cat (exp (gen) l-0) l))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((1 1) (5 0)) ((2 2) (0 1))
    ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (0 0)))
  (rule assume-init-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l-0) l))
    (exp (gen) (mul l l-0)) (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l))))
  (label 15)
  (parent 8)
  (unrealized (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (lb l x y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (la l) (x x) (beta lb) (upsilon y))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l lb))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (priv-stor priv-stor)
    (lb lb) (y y) (alpha l) (zeta x))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (0 0)) ((3 2) (2 1)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb lb l)
  (uniq-gen x y)
  (absent (x lb) (x l) (y lb) (y l) (y x))
  (gen-st (pv b lb) (pv self l))
  (facts (neq (exp (gen) y) (gen)) (neq (exp (gen) x) (gen))
    (neq self b) (undisclosed l) (undisclosed lb))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 4 2 resp 4) (exp (gen) y-0) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) lb) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul lb l)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b lb)))
      (send
        (sig (body b (exp (gen) lb) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b lb)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul lb l)) (exp (gen) (mul x y)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))))
  (label 16)
  (parent 9)
  (realized)
  (shape)
  (maps
    ((0)
      ((a self) (b b) (la l) (beta lb) (x x) (upsilon y) (na na) (nb nb)
        (priv-stor priv-stor-0))))
  (origs (nb (2 3)) (l (3 1)) (pt-2 (3 1)) (lb (1 1)) (pt-0 (1 1))
    (na (0 2)))
  (ugens (y (2 3)) (x (0 2))))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x y rndx)
    (zeta expt) (l l-0 rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (la l-0) (x x) (beta l)
    (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (4 0))
    ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y zeta) (y l) (y l-0))
  (precur (4 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq self b) (undisclosed l-0)
    (undisclosed l))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
    (exp (gen) (mul (rec x) y zeta)) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
      (send (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))))
  (label 17)
  (parent 9)
  (unrealized (4 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (a b a-0 b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l la rndx) (beta expt) (l-0 x-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (deflistener (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
  (defstrand init 3 (na na-0) (a a-0) (b b-0) (priv-stor priv-stor-1)
    (la la) (x x-0) (beta beta))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (3 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 1)) ((5 2) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen x y x-0)
  (absent (x l) (x l-0) (y zeta) (y l) (y l-0) (x-0 la) (x-0 beta))
  (precur (4 0))
  (gen-st (pv a l-0) (pv b l) (pv a-0 la))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-0)
    (undisclosed l))
  (leads-to ((1 1) (0 0)) ((2 1) (3 0)))
  (rule assume-init-0 assume-resp-0 gen-st-ltx-disclose-0
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand init 3) (exp (gen) x-0) (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((recv (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-0 (rec x-0)))))
    ((load priv-stor-1 (cat pt-3 (pv a-0 la)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0)))
      (send (cat na-0 a-0 b-0 (exp (gen) x-0)))))
  (label 18)
  (parent 10)
  (unrealized (0 3) (3 1) (4 0) (5 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta expt) (l l-0 x rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul y zeta (rec x))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (lb l-0) (y y) (alpha l) (zeta zeta))
  (deflistener (cat (exp (gen) x) (mul l (rec x))))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((2 1) (3 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 1)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen y x)
  (absent (y zeta) (y l) (y l-0) (x l) (x l-0))
  (precur (4 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq (exp (gen) (mul y zeta (rec x))) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((2 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 5 0 init 3) (exp (gen) x-0) (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y zeta (rec x)))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((recv (cat (exp (gen) x) (mul l (rec x))))
      (send (cat (exp (gen) x) (mul l (rec x))))))
  (label 19)
  (parent 10)
  (unrealized (0 3) (3 1) (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x y rndx)
    (zeta expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (deflistener (cat (gen) l-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (4 0)) ((2 1) (3 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 1)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y zeta) (y l) (y l-0))
  (precur (4 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-0)
    (undisclosed l))
  (leads-to ((1 1) (0 0)) ((2 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (contracted (l-1 l-0) (w l-0)) (gen) (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0))))
  (label 20)
  (parent 10)
  (unrealized (0 3) (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x y rndx)
    (zeta expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (la l-0) (x x) (beta l)
    (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y zeta) (y l) (y l-0))
  (precur (3 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq self b) (undisclosed l-0)
    (undisclosed l))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 1 5 ltx-gen 3) (exp (gen) l-1) (4 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 21)
  (parent 10)
  (unrealized (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (a b a-0 b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l lb rndx) (alpha zeta-0 expt) (l-0 y-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (deflistener (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b-0)
    (priv-stor priv-stor-1) (lb lb) (y y-0) (alpha alpha) (zeta zeta-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (3 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 1)) ((5 3) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen x y y-0)
  (absent (x l) (x l-0) (y zeta) (y l) (y l-0) (y-0 lb) (y-0 alpha)
    (y-0 zeta-0))
  (precur (4 0))
  (gen-st (pv a l-0) (pv b l) (pv b-0 lb))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta-0) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b) (undisclosed l-0) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((2 1) (3 0)))
  (rule assume-init-0 assume-resp-0 gen-st-ltx-disclose-0
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand resp 4) (exp (gen) y-0) (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((recv (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-0 (rec y-0)))))
    ((load priv-stor-1 (cat pt-3 (pv b-0 lb)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0)))
      (recv (cat na-0 a-0 b-0 (exp (gen) zeta-0)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul lb alpha))
              (exp (gen) (mul zeta-0 y-0))))))))
  (label 22)
  (parent 10)
  (unrealized (0 3) (3 1) (4 0) (5 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x y rndx)
    (zeta expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (lb l-0) (y y) (alpha l) (zeta zeta))
  (deflistener (cat (exp (gen) l-0) (mul l (rec l-0))))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (3 0)) ((2 2) (0 1))
    ((2 2) (4 0)) ((3 3) (0 3)) ((4 1) (3 1)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y zeta) (y l) (y l-0))
  (precur (4 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((2 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 5 2 ltx-gen 3) (exp (gen) l-1) (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((recv (cat (exp (gen) l-0) (mul l (rec l-0))))
      (send (cat (exp (gen) l-0) (mul l (rec l-0))))))
  (label 23)
  (parent 10)
  (unrealized (0 3) (3 1) (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (deflistener (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (3 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 1)) ((5 2) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y zeta) (y l) (y l-0))
  (precur (4 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-0)
    (undisclosed l))
  (leads-to ((1 1) (0 0)) ((2 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 3) (exp (gen) l-1) (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((recv (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
      (send (cat (exp (gen) l-1) (mul l-0 (rec l-1)))))
    ((load priv-stor-1 (cat pt-3 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))))
  (label 24)
  (parent 10)
  (unrealized (0 3) (3 1) (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 x y rndx)
    (zeta expt) (l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-1) (y y) (alpha (mul l l-0 (rec l-1))) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l l-0)) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 2) (0 1)) ((3 3) (0 3))
    ((4 1) (3 0)) ((4 1) (6 0)) ((5 1) (3 1)) ((6 2) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec l-1))) (y zeta) (y l-1))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-disclose 3) l-1 (5 0)
    (ch-msg priv-stor-1 (cat pt-3 (pv b l-1))))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l l-0)) l-1))
      (send (cat (exp (gen) (mul l l-0)) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l-1)))
  (label 25)
  (parent 11)
  (unrealized (0 3) (5 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (lb l x rndx)
    (w expt) (y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (la l) (x x) (beta lb) (upsilon (mul w y)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l lb))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (priv-stor priv-stor)
    (lb lb) (y y) (alpha l) (zeta (mul x w)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (4 0))
    ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb lb l)
  (uniq-gen x y)
  (absent (x lb) (x l) (y lb) (y l) (y (mul x w)))
  (precur (4 0))
  (gen-st (pv b lb) (pv self l))
  (facts (neq (exp (gen) (mul w y)) (gen))
    (neq (exp (gen) (mul x w)) (gen)) (neq self b) (undisclosed l)
    (undisclosed lb))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 5 2 resp 4) (exp (gen) y-0) (4 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) lb) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb self b
            (hash (exp (gen) (mul lb l)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b lb)))
      (send
        (sig (body b (exp (gen) lb) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b lb)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul x w))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul lb l)) (exp (gen) (mul x w y)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 26)
  (parent 17)
  (seen 9)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x y rndx)
    (zeta expt) (l rndx) (beta expt) (x-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (deflistener (cat (exp (gen) x-0) (mul (rec x-0) l-0)))
  (defstrand init 3 (na na-0) (a a) (b b-0) (priv-stor priv-stor)
    (la l-0) (x x-0) (beta beta))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (5 0)) ((2 1) (3 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 1)) ((5 2) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen x y x-0)
  (absent (x l) (x l-0) (y zeta) (y l) (y l-0) (x-0 beta) (x-0 l-0))
  (precur (4 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-0)
    (undisclosed l))
  (leads-to ((1 1) (0 0)) ((1 1) (5 0)) ((2 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 6 1 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv a-0 l-1))) (5 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((recv (cat (exp (gen) x-0) (mul (rec x-0) l-0)))
      (send (cat (exp (gen) x-0) (mul (rec x-0) l-0))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a b-0 (exp (gen) x-0)))))
  (label 27)
  (parent 18)
  (unrealized (0 3) (3 1) (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x y rndx)
    (zeta beta expt) (l x-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (lb l-0) (y y) (alpha l) (zeta zeta))
  (deflistener (cat (exp (gen) x-0) (mul l (rec x-0))))
  (defstrand init 3 (na na-0) (a b) (b b-0) (priv-stor priv-stor-0)
    (la l-0) (x x-0) (beta beta))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (3 0)) ((2 1) (5 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 1)) ((5 2) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen x y x-0)
  (absent (x l) (x l-0) (y zeta) (y l) (y l-0) (x-0 beta) (x-0 l-0))
  (precur (4 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((2 1) (3 0)) ((2 1) (5 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 6 2 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv a-0 l-1))) (5 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((recv (cat (exp (gen) x-0) (mul l (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l (rec x-0)))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 b b-0 (exp (gen) x-0)))))
  (label 28)
  (parent 18)
  (unrealized (0 3) (3 1) (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (a b a-0 b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l rndx) (beta expt) (l-0 x-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (deflistener (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
  (defstrand init 3 (na na-0) (a a-0) (b b-0) (priv-stor priv-stor-1)
    (la l-1) (x x-0) (beta beta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self a-0)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (3 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 1)) ((5 2) (4 0)) ((6 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen x y x-0)
  (absent (x l) (x l-0) (y zeta) (y l) (y l-0) (x-0 beta) (x-0 l-1))
  (precur (4 0))
  (gen-st (pv a l-0) (pv b l) (pv a-0 l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-0)
    (undisclosed l))
  (leads-to ((1 1) (0 0)) ((2 1) (3 0)) ((6 1) (5 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv a-0 l-1))) (5 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((recv (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-0 (rec x-0)))))
    ((load priv-stor-1 (cat pt-3 (pv a-0 l-1)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a-0 b-0 (exp (gen) x-0))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv a-0 l-1)))))
  (label 29)
  (parent 18)
  (unrealized (0 3) (3 1) (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (lb l x y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (la l) (x x) (beta lb) (upsilon y))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l lb))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (priv-stor priv-stor)
    (lb lb) (y y) (alpha l) (zeta x))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb lb l)
  (uniq-gen x y)
  (absent (x lb) (x l) (y lb) (y l) (y x))
  (precur (3 0))
  (gen-st (pv b lb) (pv self l))
  (facts (neq (exp (gen) y) (gen)) (neq (exp (gen) x) (gen))
    (neq self b) (undisclosed l) (undisclosed lb))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 5 2 resp 4) (exp (gen) y-0) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) lb) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul lb l)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b lb)))
      (send
        (sig (body b (exp (gen) lb) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b lb)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul lb l)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))))
  (label 30)
  (parent 21)
  (seen 16)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x y rndx)
    (zeta expt) (l l-0 rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (la l-0) (x x) (beta l)
    (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (5 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((5 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y zeta) (y l) (y l-0))
  (precur (3 0) (5 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq self b) (undisclosed l-0)
    (undisclosed l))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
    (exp (gen) (mul (rec x) y zeta)) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
      (send (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))))
  (label 31)
  (parent 21)
  (unrealized (5 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (a b a-0 name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x y rndx)
    (zeta expt) (l rndx) (alpha zeta-0 expt) (y-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (deflistener (cat (exp (gen) y-0) (mul (rec y-0) l-0)))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b a)
    (priv-stor priv-stor) (lb l-0) (y y-0) (alpha alpha) (zeta zeta-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (5 0)) ((2 1) (3 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 1)) ((5 3) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen x y y-0)
  (absent (x l) (x l-0) (y zeta) (y l) (y l-0) (y-0 alpha) (y-0 zeta-0)
    (y-0 l-0))
  (precur (4 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta-0) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b) (undisclosed l-0) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((1 1) (5 0)) ((2 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 6 1 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv b-0 l-1))) (5 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((recv (cat (exp (gen) y-0) (mul (rec y-0) l-0)))
      (send (cat (exp (gen) y-0) (mul (rec y-0) l-0))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 a (exp (gen) zeta-0)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 a
            (hash (exp (gen) (mul alpha l-0))
              (exp (gen) (mul zeta-0 y-0))))))))
  (label 32)
  (parent 22)
  (unrealized (0 3) (3 1) (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (a b a-0 name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x y rndx)
    (zeta alpha zeta-0 expt) (l y-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (lb l-0) (y y) (alpha l) (zeta zeta))
  (deflistener (cat (exp (gen) y-0) (mul l (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b)
    (priv-stor priv-stor-0) (lb l-0) (y y-0) (alpha alpha)
    (zeta zeta-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (3 0)) ((2 1) (5 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 1)) ((5 3) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen x y y-0)
  (absent (x l) (x l-0) (y zeta) (y l) (y l-0) (y-0 alpha) (y-0 zeta-0)
    (y-0 l-0))
  (precur (4 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta-0) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b) (undisclosed l) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((2 1) (3 0)) ((2 1) (5 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 6 2 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv b-0 l-1))) (5 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((recv (cat (exp (gen) y-0) (mul l (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l (rec y-0)))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b (exp (gen) zeta-0)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b
            (hash (exp (gen) (mul alpha l-0))
              (exp (gen) (mul zeta-0 y-0))))))))
  (label 33)
  (parent 22)
  (unrealized (0 3) (3 1) (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l rndx) (alpha zeta-0 expt) (l-0 y-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (deflistener (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b-0)
    (priv-stor priv-stor-1) (lb l-1) (y y-0) (alpha alpha)
    (zeta zeta-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b-0)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (3 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 1)) ((5 3) (4 0)) ((6 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen x y y-0)
  (absent (x l) (x l-0) (y zeta) (y l) (y l-0) (y-0 alpha) (y-0 zeta-0)
    (y-0 l-1))
  (precur (4 0))
  (gen-st (pv a l-0) (pv b l) (pv b-0 l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta-0) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b) (undisclosed l-0) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((2 1) (3 0)) ((6 1) (5 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv b-0 l-1))) (5 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((recv (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-0 (rec y-0)))))
    ((load priv-stor-1 (cat pt-3 (pv b-0 l-1)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0)))
      (recv (cat na-0 a-0 b-0 (exp (gen) zeta-0)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul alpha l-1))
              (exp (gen) (mul zeta-0 y-0)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b-0 l-1)))))
  (label 34)
  (parent 22)
  (unrealized (0 3) (3 1) (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 x y rndx)
    (zeta expt) (l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-1) (y y) (alpha (mul l l-0 (rec l-1))) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l l-0)) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) l) l-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (7 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec l-1))) (y zeta) (y l-1))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l) l-0))
    (exp (gen) (mul l l-0)) (5 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l l-0)) l-1))
      (send (cat (exp (gen) (mul l l-0)) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l-1))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0))))
  (label 35)
  (parent 25)
  (unrealized (0 3) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 x y rndx)
    (zeta expt) (l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-1) (y y) (alpha (mul l l-0 (rec l-1))) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l l-0)) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) l-0) l))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (7 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec l-1))) (y zeta) (y l-1))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l-0) l))
    (exp (gen) (mul l l-0)) (5 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l l-0)) l-1))
      (send (cat (exp (gen) (mul l l-0)) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l-1))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l))))
  (label 36)
  (parent 25)
  (unrealized (0 3) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (lb l x rndx)
    (w expt) (y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (la l) (x x) (beta lb) (upsilon (mul w y)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l lb))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (priv-stor priv-stor)
    (lb lb) (y y) (alpha l) (zeta (mul x w)))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (5 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((5 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb lb l)
  (uniq-gen x y)
  (absent (x lb) (x l) (y lb) (y l) (y (mul x w)))
  (precur (3 0) (5 0))
  (gen-st (pv b lb) (pv self l))
  (facts (neq (exp (gen) (mul w y)) (gen))
    (neq (exp (gen) (mul x w)) (gen)) (neq self b) (undisclosed l)
    (undisclosed lb))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 6 2 resp 4) (exp (gen) y-0) (5 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) lb) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb self b
            (hash (exp (gen) (mul lb l)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b lb)))
      (send
        (sig (body b (exp (gen) lb) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b lb)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul x w))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul lb l)) (exp (gen) (mul x w y)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 37)
  (parent 31)
  (seen 26)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(comment "Nothing left to do")

(defprotocol dhcr-um diffie-hellman
  (defrole init
    (vars (la x rndx) (beta upsilon expt) (a b name) (na nb data)
      (priv-stor locn))
    (trace (load priv-stor (pv a la))
      (recv
        (sig (body b (exp (gen) beta) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul la beta))
              (exp (gen) (mul x upsilon)))))) (send nb))
    (uniq-orig na)
    (uniq-gen x)
    (absent (x la) (x beta))
    (assume (fact neq (exp (gen) upsilon) (gen)))
    (gen-st (pv a la)))
  (defrole resp
    (vars (lb y rndx) (alpha zeta expt) (a b name) (na nb data)
      (priv-stor locn))
    (trace (load priv-stor (pv b lb))
      (recv
        (sig (body a (exp (gen) alpha) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul lb alpha))
              (exp (gen) (mul y zeta)))))) (recv nb))
    (uniq-orig nb)
    (uniq-gen y)
    (absent (y lb) (y alpha) (y zeta))
    (assume (fact neq (exp (gen) zeta) (gen)))
    (gen-st (pv b lb)))
  (defrole ltx-gen
    (vars (self name) (l rndx) (priv-stor locn) (ignore mesg))
    (trace (load priv-stor ignore) (stor priv-stor (pv self l))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    (uniq-orig l))
  (defrole ltx-disclose
    (vars (self name) (l rndx) (priv-stor locn))
    (trace (load priv-stor (pv self l)) (stor priv-stor "nil") (send l))
    (gen-st (pv self l)))
  (defrule undisclosed-not-disclosed
    (forall ((z strd) (l rndx))
      (implies
        (and (fact undisclosed l) (p "ltx-disclose" z (idx 2))
          (p "ltx-disclose" "l" z l))
        (false))))
  (defgenrule neqRl_indx
    (forall ((x indx)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_strd
    (forall ((x strd)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_mesg
    (forall ((x mesg)) (implies (fact neq x x) (false))))
  (defgenrule scissorsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (trans z2 i2)
          (leads-to z0 i0 z1 i1) (leads-to z0 i0 z2 i2))
        (and (= z1 z2) (= i1 i2)))))
  (defgenrule cakeRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (leads-to z0 i0 z1 i1)
          (leads-to z0 i0 z2 i2) (prec z1 i1 z2 i2)) (false))))
  (defgenrule no-interruption
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (leads-to z0 i0 z2 i2) (trans z1 i1)
          (same-locn z0 i0 z1 i1) (prec z0 i0 z1 i1) (prec z1 i1 z2 i2))
        (false))))
  (defgenrule shearsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (trans z2 i2)
          (leads-to z0 i0 z1 i1) (same-locn z0 i0 z2 i2)
          (prec z0 i0 z2 i2))
        (or (and (= z1 z2) (= i1 i2)) (prec z1 i1 z2 i2)))))
  (defgenrule invShearsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (same-locn z0 i0 z1 i1)
          (leads-to z1 i1 z2 i2) (prec z0 i0 z2 i2))
        (or (and (= z0 z1) (= i0 i1)) (prec z0 i0 z1 i1)))))
  (defgenrule assume-init-0
    (forall ((z strd) (upsilon expt))
      (implies (and (p "init" z (idx 4)) (p "init" "upsilon" z upsilon))
        (fact neq (exp (gen) upsilon) (gen)))))
  (defgenrule assume-resp-0
    (forall ((z strd) (zeta expt))
      (implies (and (p "resp" z (idx 3)) (p "resp" "zeta" z zeta))
        (fact neq (exp (gen) zeta) (gen)))))
  (defgenrule trRl_ltx-gen-at-1
    (forall ((z strd))
      (implies (p "ltx-gen" z (idx 2)) (trans z (idx 1)))))
  (defgenrule trRl_ltx-gen-at-0
    (forall ((z strd))
      (implies (p "ltx-gen" z (idx 2)) (trans z (idx 0)))))
  (defgenrule trRl_ltx-disclose-at-1
    (forall ((z strd))
      (implies (p "ltx-disclose" z (idx 2)) (trans z (idx 1)))))
  (defgenrule trRl_ltx-disclose-at-0
    (forall ((z strd))
      (implies (p "ltx-disclose" z (idx 2)) (trans z (idx 0)))))
  (defgenrule gen-st-init-0
    (forall ((z strd) (a name) (la rndx))
      (implies
        (and (p "init" z (idx 1)) (p "init" "la" z la)
          (p "init" "a" z a)) (gen-st (pv a la)))))
  (defgenrule gen-st-resp-0
    (forall ((z strd) (b name) (lb rndx))
      (implies
        (and (p "resp" z (idx 1)) (p "resp" "lb" z lb)
          (p "resp" "b" z b)) (gen-st (pv b lb)))))
  (defgenrule gen-st-ltx-disclose-0
    (forall ((z strd) (self name) (l rndx))
      (implies
        (and (p "ltx-disclose" z (idx 1)) (p "ltx-disclose" "l" z l)
          (p "ltx-disclose" "self" z self)) (gen-st (pv self l)))))
  (lang (sig sign) (body (tuple 3)) (pv (tuple 2))))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (pt pval) (priv-stor locn) (la rndx)
    (beta expt) (x rndx) (upsilon expt))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la la) (x x) (beta beta) (upsilon upsilon))
  (non-orig (privk "sig" b))
  (uniq-orig na)
  (uniq-gen x)
  (absent (x la) (x beta))
  (facts (neq a b) (undisclosed beta))
  (traces
    ((load priv-stor (cat pt (pv a la)))
      (recv
        (sig (body b (exp (gen) beta) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul la beta))
              (exp (gen) (mul x upsilon)))))) (send nb)))
  (label 38)
  (unrealized (0 1))
  (origs (na (0 2)))
  (ugens (x (0 2)))
  (comment "Not closed under rules"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (pt pval) (priv-stor locn) (la rndx)
    (beta expt) (x rndx) (upsilon expt))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la la) (x x) (beta beta) (upsilon upsilon))
  (non-orig (privk "sig" b))
  (uniq-orig na)
  (uniq-gen x)
  (absent (x la) (x beta))
  (gen-st (pv a la))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b) (undisclosed beta))
  (rule assume-init-0 gen-st-ltx-disclose-0)
  (traces
    ((load priv-stor (cat pt (pv a la)))
      (recv
        (sig (body b (exp (gen) beta) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul la beta))
              (exp (gen) (mul x upsilon)))))) (send nb)))
  (label 39)
  (parent 38)
  (unrealized (0 0) (0 1))
  (origs (na (0 2)))
  (ugens (x (0 2)))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (a b name) (pt pt-0 pval)
    (priv-stor locn) (beta expt) (x rndx) (upsilon expt) (l rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta beta) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (precedes ((1 1) (0 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l)
  (uniq-gen x)
  (absent (x beta) (x l))
  (gen-st (pv a l))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b) (undisclosed beta))
  (leads-to ((1 1) (0 0)))
  (rule assume-init-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor (cat pt (pv a l))) (0 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) beta) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul beta l))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l)))))
  (label 40)
  (parent 39)
  (unrealized (0 1) (0 3))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((1 1) (0 0)) ((2 2) (0 1)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)))
  (rule assume-init-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation encryption-test (added-strand ltx-gen 3)
    (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)) (0 1))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))))
  (label 41)
  (parent 40)
  (unrealized (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx)
    (zeta expt))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb lb) (y y) (alpha (mul l l-0 (rec lb))) (zeta zeta))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 2) (0 1)) ((3 3) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec lb))) (y lb) (y zeta))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)))
  (rule assume-init-0 assume-resp-0 gen-st-ltx-disclose-0
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation encryption-test (added-strand resp 4)
    (enc na nb a b
      (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))) (0 3))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec lb))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))))
  (label 42)
  (parent 41)
  (unrealized (0 3) (3 0) (3 1))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (precedes ((0 2) (3 0)) ((1 1) (0 0)) ((2 2) (0 1)) ((3 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)))
  (rule assume-init-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation encryption-test
    (added-listener
      (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
    (enc na nb a b
      (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))) (0 3))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send
        (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))))
  (label 43)
  (parent 41)
  (unrealized (3 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (l x y rndx)
    (zeta expt) (l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (lb l-0) (y y) (alpha l) (zeta zeta))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (3 0)) ((2 2) (0 1))
    ((3 3) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y l) (y zeta) (y l-0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((2 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 4 2 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv b l-1))) (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))))
  (label 44)
  (parent 42)
  (unrealized (0 3) (3 1))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 x y rndx)
    (zeta expt) (l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-1) (y y) (alpha (mul l l-0 (rec l-1))) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 2) (0 1)) ((3 3) (0 3))
    ((4 1) (3 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec l-1))) (y zeta) (y l-1))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((4 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv b l-1))) (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1)))))
  (label 45)
  (parent 42)
  (unrealized (0 3) (3 1))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((2 2) (0 1)) ((3 1) (0 3))
    ((4 1) (3 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)))
  (rule assume-init-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation encryption-test
    (added-listener
      (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))) (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))))
  (label 46)
  (parent 43)
  (unrealized (4 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x y rndx)
    (zeta expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (la l-0) (x x) (beta l)
    (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (0 0)) ((3 2) (2 1)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y zeta) (y l) (y l-0))
  (gen-st (pv b l) (pv self l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq self b) (undisclosed l))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 1 4 ltx-gen 3) (exp (gen) l-0) (3 1))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 47)
  (parent 44)
  (unrealized (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (l x y rndx)
    (zeta expt) (l-0 rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (lb l-0) (y y) (alpha l) (zeta zeta))
  (deflistener (cat (exp (gen) (mul l (rec w))) w))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (3 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 1)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y l) (y zeta) (y l-0))
  (precur (4 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((2 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul l (rec w))) w)) (exp (gen) l)
    (3 1))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((recv (cat (exp (gen) (mul l (rec w))) w))
      (send (cat (exp (gen) (mul l (rec w))) w))))
  (label 48)
  (parent 44)
  (unrealized (0 3) (4 0))
  (comment "7 in cohort - 7 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 x y rndx)
    (zeta expt) (l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-1) (y y) (alpha (mul l l-0 (rec l-1))) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l l-0)) l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 2) (0 1)) ((3 3) (0 3))
    ((4 1) (3 0)) ((4 1) (5 0)) ((5 1) (3 1)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec l-1))) (y zeta) (y l-1))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((4 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul l l-0)) l-1))
    (exp (gen) (mul l l-0 (rec l-1))) (3 1))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l l-0)) l-1))
      (send (cat (exp (gen) (mul l l-0)) l-1))))
  (label 49)
  (parent 45)
  (unrealized (0 3) (5 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 x y rndx)
    (zeta expt) (l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-1) (y y) (alpha (mul l l-0 (rec l-1))) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l (rec l-1))) l-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (5 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((5 1) (3 1)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec l-1))) (y zeta) (y l-1))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((4 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul l (rec l-1))) l-0))
    (exp (gen) (mul l l-0 (rec l-1))) (3 1))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l (rec l-1))) l-0))
      (send (cat (exp (gen) (mul l (rec l-1))) l-0))))
  (label 50)
  (parent 45)
  (unrealized (0 3) (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 x y rndx)
    (zeta expt) (l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-1) (y y) (alpha (mul l l-0 (rec l-1))) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l-0 (rec l-1))) l))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (5 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((5 1) (3 1)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec l-1))) (y zeta) (y l-1))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((4 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul l-0 (rec l-1))) l))
    (exp (gen) (mul l l-0 (rec l-1))) (3 1))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l-0 (rec l-1))) l))
      (send (cat (exp (gen) (mul l-0 (rec l-1))) l))))
  (label 51)
  (parent 45)
  (unrealized (0 3) (5 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener (cat (exp (gen) l) l-0))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((2 1) (5 0)) ((2 2) (0 1))
    ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)))
  (rule assume-init-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l) l-0))
    (exp (gen) (mul l l-0)) (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0))))
  (label 52)
  (parent 46)
  (unrealized (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener (cat (exp (gen) l-0) l))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((1 1) (5 0)) ((2 2) (0 1))
    ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)))
  (rule assume-init-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l-0) l))
    (exp (gen) (mul l l-0)) (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l))))
  (label 53)
  (parent 46)
  (unrealized (5 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (lb l x y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (la l) (x x) (beta lb) (upsilon y))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l lb))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (priv-stor priv-stor)
    (lb lb) (y y) (alpha l) (zeta x))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (0 0)) ((3 2) (2 1)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb lb l)
  (uniq-gen x y)
  (absent (x lb) (x l) (y lb) (y l) (y x))
  (gen-st (pv b lb) (pv self l))
  (facts (neq (exp (gen) y) (gen)) (neq (exp (gen) x) (gen))
    (neq self b) (undisclosed lb))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 4 2 resp 4) (exp (gen) y-0) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) lb) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul lb l)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b lb)))
      (send
        (sig (body b (exp (gen) lb) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b lb)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul lb l)) (exp (gen) (mul x y)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))))
  (label 54)
  (parent 47)
  (realized)
  (shape)
  (maps
    ((0)
      ((a self) (b b) (la l) (beta lb) (x x) (upsilon y) (na na) (nb nb)
        (priv-stor priv-stor-0))))
  (origs (nb (2 3)) (l (3 1)) (pt-2 (3 1)) (lb (1 1)) (pt-0 (1 1))
    (na (0 2)))
  (ugens (y (2 3)) (x (0 2))))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x y rndx)
    (zeta expt) (l l-0 rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (la l-0) (x x) (beta l)
    (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (4 0))
    ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y zeta) (y l) (y l-0))
  (precur (4 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq self b) (undisclosed l))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
    (exp (gen) (mul (rec x) y zeta)) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
      (send (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))))
  (label 55)
  (parent 47)
  (unrealized (4 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (a b a-0 b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l la rndx) (beta expt) (l-0 x-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (deflistener (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
  (defstrand init 3 (na na-0) (a a-0) (b b-0) (priv-stor priv-stor-1)
    (la la) (x x-0) (beta beta))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (3 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 1)) ((5 2) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen x y x-0)
  (absent (x l) (x l-0) (y zeta) (y l) (y l-0) (x-0 la) (x-0 beta))
  (precur (4 0))
  (gen-st (pv a l-0) (pv b l) (pv a-0 la))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((2 1) (3 0)))
  (rule assume-init-0 assume-resp-0 gen-st-ltx-disclose-0
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand init 3) (exp (gen) x-0) (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((recv (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-0 (rec x-0)))))
    ((load priv-stor-1 (cat pt-3 (pv a-0 la)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0)))
      (send (cat na-0 a-0 b-0 (exp (gen) x-0)))))
  (label 56)
  (parent 48)
  (unrealized (0 3) (3 1) (4 0) (5 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta expt) (l l-0 x rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul y zeta (rec x))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (lb l-0) (y y) (alpha l) (zeta zeta))
  (deflistener (cat (exp (gen) x) (mul l (rec x))))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((2 1) (3 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 1)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen y x)
  (absent (y zeta) (y l) (y l-0) (x l) (x l-0))
  (precur (4 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq (exp (gen) (mul y zeta (rec x))) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((2 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 5 0 init 3) (exp (gen) x-0) (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y zeta (rec x)))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((recv (cat (exp (gen) x) (mul l (rec x))))
      (send (cat (exp (gen) x) (mul l (rec x))))))
  (label 57)
  (parent 48)
  (unrealized (0 3) (3 1) (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x y rndx)
    (zeta expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (deflistener (cat (gen) l-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (4 0)) ((2 1) (3 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 1)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y zeta) (y l) (y l-0))
  (precur (4 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((2 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (contracted (l-1 l-0) (w l-0)) (gen) (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0))))
  (label 58)
  (parent 48)
  (unrealized (0 3) (4 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x y rndx)
    (zeta expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (la l-0) (x x) (beta l)
    (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y zeta) (y l) (y l-0))
  (precur (3 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq self b) (undisclosed l))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 1 5 ltx-gen 3) (exp (gen) l-1) (4 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 59)
  (parent 48)
  (unrealized (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (a b a-0 b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l lb rndx) (alpha zeta-0 expt) (l-0 y-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (deflistener (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b-0)
    (priv-stor priv-stor-1) (lb lb) (y y-0) (alpha alpha) (zeta zeta-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (3 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 1)) ((5 3) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen x y y-0)
  (absent (x l) (x l-0) (y zeta) (y l) (y l-0) (y-0 lb) (y-0 alpha)
    (y-0 zeta-0))
  (precur (4 0))
  (gen-st (pv a l-0) (pv b l) (pv b-0 lb))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta-0) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((2 1) (3 0)))
  (rule assume-init-0 assume-resp-0 gen-st-ltx-disclose-0
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand resp 4) (exp (gen) y-0) (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((recv (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-0 (rec y-0)))))
    ((load priv-stor-1 (cat pt-3 (pv b-0 lb)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0)))
      (recv (cat na-0 a-0 b-0 (exp (gen) zeta-0)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul lb alpha))
              (exp (gen) (mul zeta-0 y-0))))))))
  (label 60)
  (parent 48)
  (unrealized (0 3) (3 1) (4 0) (5 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x y rndx)
    (zeta expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (lb l-0) (y y) (alpha l) (zeta zeta))
  (deflistener (cat (exp (gen) l-0) (mul l (rec l-0))))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (3 0)) ((2 2) (0 1))
    ((2 2) (4 0)) ((3 3) (0 3)) ((4 1) (3 1)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y zeta) (y l) (y l-0))
  (precur (4 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((2 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 5 2 ltx-gen 3) (exp (gen) l-1) (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((recv (cat (exp (gen) l-0) (mul l (rec l-0))))
      (send (cat (exp (gen) l-0) (mul l (rec l-0))))))
  (label 61)
  (parent 48)
  (unrealized (0 3) (3 1) (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (deflistener (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (3 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 1)) ((5 2) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y zeta) (y l) (y l-0))
  (precur (4 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((2 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 3) (exp (gen) l-1) (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((recv (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
      (send (cat (exp (gen) l-1) (mul l-0 (rec l-1)))))
    ((load priv-stor-1 (cat pt-3 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))))
  (label 62)
  (parent 48)
  (unrealized (0 3) (3 1) (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 x y rndx)
    (zeta expt) (l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-1) (y y) (alpha (mul l l-0 (rec l-1))) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l l-0)) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 2) (0 1)) ((3 3) (0 3))
    ((4 1) (3 0)) ((4 1) (6 0)) ((5 1) (3 1)) ((6 2) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec l-1))) (y zeta) (y l-1))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-disclose 3) l-1 (5 0)
    (ch-msg priv-stor-1 (cat pt-3 (pv b l-1))))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l l-0)) l-1))
      (send (cat (exp (gen) (mul l l-0)) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l-1)))
  (label 63)
  (parent 49)
  (unrealized (0 3) (5 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l x y rndx) (zeta expt)
    (l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-1) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-0) (y y) (alpha (mul l (rec l-0) l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul l (rec l-0))) l-1))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((5 1) (3 1)) ((6 2) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-1) (y (mul l (rec l-0) l-1)) (y zeta) (y l-0))
  (gen-st (pv a l-1) (pv b l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((4 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-disclose 3) l-1 (5 0)
    (ch-msg priv-stor (cat pt (pv a l-1))))
  (traces
    ((load priv-stor (cat pt (pv a l-1)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul l (rec l-0))) l-1))
      (send (cat (exp (gen) (mul l (rec l-0))) l-1)))
    ((load priv-stor (cat pt (pv a l-1)))
      (stor priv-stor (cat pt-5 "nil")) (send l-1)))
  (label 64)
  (parent 51)
  (unrealized (0 3) (5 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0)) ((6 2) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l-0))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-disclose 3) l-0 (5 0)
    (ch-msg priv-stor (cat pt (pv a l-0))))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-3 "nil")) (send l-0)))
  (label 65)
  (parent 53)
  (unrealized (5 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (lb l x rndx)
    (w expt) (y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (la l) (x x) (beta lb) (upsilon (mul w y)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l lb))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (priv-stor priv-stor)
    (lb lb) (y y) (alpha l) (zeta (mul x w)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (4 0))
    ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb lb l)
  (uniq-gen x y)
  (absent (x lb) (x l) (y lb) (y l) (y (mul x w)))
  (precur (4 0))
  (gen-st (pv b lb) (pv self l))
  (facts (neq (exp (gen) (mul w y)) (gen))
    (neq (exp (gen) (mul x w)) (gen)) (neq self b) (undisclosed lb))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 5 2 resp 4) (exp (gen) y-0) (4 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) lb) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb self b
            (hash (exp (gen) (mul lb l)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b lb)))
      (send
        (sig (body b (exp (gen) lb) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b lb)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul x w))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul lb l)) (exp (gen) (mul x w y)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 66)
  (parent 55)
  (seen 47)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x y rndx)
    (zeta expt) (l rndx) (beta expt) (x-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (deflistener (cat (exp (gen) x-0) (mul (rec x-0) l-0)))
  (defstrand init 3 (na na-0) (a a) (b b-0) (priv-stor priv-stor)
    (la l-0) (x x-0) (beta beta))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (5 0)) ((2 1) (3 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 1)) ((5 2) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen x y x-0)
  (absent (x l) (x l-0) (y zeta) (y l) (y l-0) (x-0 beta) (x-0 l-0))
  (precur (4 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((1 1) (5 0)) ((2 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 6 1 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv a-0 l-1))) (5 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((recv (cat (exp (gen) x-0) (mul (rec x-0) l-0)))
      (send (cat (exp (gen) x-0) (mul (rec x-0) l-0))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a b-0 (exp (gen) x-0)))))
  (label 67)
  (parent 56)
  (unrealized (0 3) (3 1) (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x y rndx)
    (zeta beta expt) (l x-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (lb l-0) (y y) (alpha l) (zeta zeta))
  (deflistener (cat (exp (gen) x-0) (mul l (rec x-0))))
  (defstrand init 3 (na na-0) (a b) (b b-0) (priv-stor priv-stor-0)
    (la l-0) (x x-0) (beta beta))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (3 0)) ((2 1) (5 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 1)) ((5 2) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen x y x-0)
  (absent (x l) (x l-0) (y zeta) (y l) (y l-0) (x-0 beta) (x-0 l-0))
  (precur (4 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((2 1) (3 0)) ((2 1) (5 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 6 2 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv a-0 l-1))) (5 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((recv (cat (exp (gen) x-0) (mul l (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l (rec x-0)))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 b b-0 (exp (gen) x-0)))))
  (label 68)
  (parent 56)
  (unrealized (0 3) (3 1) (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (a b a-0 b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l rndx) (beta expt) (l-0 x-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (deflistener (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
  (defstrand init 3 (na na-0) (a a-0) (b b-0) (priv-stor priv-stor-1)
    (la l-1) (x x-0) (beta beta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self a-0)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (3 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 1)) ((5 2) (4 0)) ((6 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen x y x-0)
  (absent (x l) (x l-0) (y zeta) (y l) (y l-0) (x-0 beta) (x-0 l-1))
  (precur (4 0))
  (gen-st (pv a l-0) (pv b l) (pv a-0 l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((2 1) (3 0)) ((6 1) (5 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv a-0 l-1))) (5 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((recv (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-0 (rec x-0)))))
    ((load priv-stor-1 (cat pt-3 (pv a-0 l-1)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a-0 b-0 (exp (gen) x-0))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv a-0 l-1)))))
  (label 69)
  (parent 56)
  (unrealized (0 3) (3 1) (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn)
    (x y rndx) (zeta expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (5 0)) ((2 1) (3 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 1)) ((5 2) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y zeta) (y l) (y l-0))
  (precur (4 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((1 1) (5 0)) ((2 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-disclose 3) l-0 (4 0)
    (ch-msg priv-stor (cat pt (pv a l-0))))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-3 "nil")) (send l-0)))
  (label 70)
  (parent 58)
  (unrealized (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (lb l x y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (la l) (x x) (beta lb) (upsilon y))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l lb))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (priv-stor priv-stor)
    (lb lb) (y y) (alpha l) (zeta x))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb lb l)
  (uniq-gen x y)
  (absent (x lb) (x l) (y lb) (y l) (y x))
  (precur (3 0))
  (gen-st (pv b lb) (pv self l))
  (facts (neq (exp (gen) y) (gen)) (neq (exp (gen) x) (gen))
    (neq self b) (undisclosed lb))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 5 2 resp 4) (exp (gen) y-0) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) lb) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul lb l)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b lb)))
      (send
        (sig (body b (exp (gen) lb) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b lb)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul lb l)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))))
  (label 71)
  (parent 59)
  (seen 54)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x y rndx)
    (zeta expt) (l l-0 rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (la l-0) (x x) (beta l)
    (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (5 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((5 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y zeta) (y l) (y l-0))
  (precur (3 0) (5 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq self b) (undisclosed l))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
    (exp (gen) (mul (rec x) y zeta)) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
      (send (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))))
  (label 72)
  (parent 59)
  (unrealized (5 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (a b a-0 name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x y rndx)
    (zeta expt) (l rndx) (alpha zeta-0 expt) (y-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (deflistener (cat (exp (gen) y-0) (mul (rec y-0) l-0)))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b a)
    (priv-stor priv-stor) (lb l-0) (y y-0) (alpha alpha) (zeta zeta-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (5 0)) ((2 1) (3 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 1)) ((5 3) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen x y y-0)
  (absent (x l) (x l-0) (y zeta) (y l) (y l-0) (y-0 alpha) (y-0 zeta-0)
    (y-0 l-0))
  (precur (4 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta-0) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((1 1) (5 0)) ((2 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 6 1 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv b-0 l-1))) (5 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((recv (cat (exp (gen) y-0) (mul (rec y-0) l-0)))
      (send (cat (exp (gen) y-0) (mul (rec y-0) l-0))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 a (exp (gen) zeta-0)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 a
            (hash (exp (gen) (mul alpha l-0))
              (exp (gen) (mul zeta-0 y-0))))))))
  (label 73)
  (parent 60)
  (unrealized (0 3) (3 1) (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (a b a-0 name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x y rndx)
    (zeta alpha zeta-0 expt) (l y-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (lb l-0) (y y) (alpha l) (zeta zeta))
  (deflistener (cat (exp (gen) y-0) (mul l (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b)
    (priv-stor priv-stor-0) (lb l-0) (y y-0) (alpha alpha)
    (zeta zeta-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (3 0)) ((2 1) (5 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 1)) ((5 3) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen x y y-0)
  (absent (x l) (x l-0) (y zeta) (y l) (y l-0) (y-0 alpha) (y-0 zeta-0)
    (y-0 l-0))
  (precur (4 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta-0) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((2 1) (3 0)) ((2 1) (5 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 6 2 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv b-0 l-1))) (5 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((recv (cat (exp (gen) y-0) (mul l (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l (rec y-0)))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b (exp (gen) zeta-0)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b
            (hash (exp (gen) (mul alpha l-0))
              (exp (gen) (mul zeta-0 y-0))))))))
  (label 74)
  (parent 60)
  (unrealized (0 3) (3 1) (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l rndx) (alpha zeta-0 expt) (l-0 y-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (deflistener (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b-0)
    (priv-stor priv-stor-1) (lb l-1) (y y-0) (alpha alpha)
    (zeta zeta-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b-0)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (3 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 1)) ((5 3) (4 0)) ((6 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen x y y-0)
  (absent (x l) (x l-0) (y zeta) (y l) (y l-0) (y-0 alpha) (y-0 zeta-0)
    (y-0 l-1))
  (precur (4 0))
  (gen-st (pv a l-0) (pv b l) (pv b-0 l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta-0) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((2 1) (3 0)) ((6 1) (5 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv b-0 l-1))) (5 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((recv (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-0 (rec y-0)))))
    ((load priv-stor-1 (cat pt-3 (pv b-0 l-1)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0)))
      (recv (cat na-0 a-0 b-0 (exp (gen) zeta-0)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul alpha l-1))
              (exp (gen) (mul zeta-0 y-0)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b-0 l-1)))))
  (label 75)
  (parent 60)
  (unrealized (0 3) (3 1) (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 x y rndx)
    (zeta expt) (l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-1) (y y) (alpha (mul l l-0 (rec l-1))) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l l-0)) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) l) l-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (7 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec l-1))) (y zeta) (y l-1))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l) l-0))
    (exp (gen) (mul l l-0)) (5 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l l-0)) l-1))
      (send (cat (exp (gen) (mul l l-0)) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l-1))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0))))
  (label 76)
  (parent 63)
  (unrealized (0 3) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 x y rndx)
    (zeta expt) (l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-1) (y y) (alpha (mul l l-0 (rec l-1))) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l l-0)) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) l-0) l))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (7 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec l-1))) (y zeta) (y l-1))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l-0) l))
    (exp (gen) (mul l l-0)) (5 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l l-0)) l-1))
      (send (cat (exp (gen) (mul l l-0)) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l-1))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l))))
  (label 77)
  (parent 63)
  (unrealized (0 3) (7 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l x y rndx) (zeta expt)
    (l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-1) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-0) (y y) (alpha (mul l (rec l-0) l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul l (rec l-0))) l-1))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-1))
  (deflistener (cat (exp (gen) l) l-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (7 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-1) (y (mul l (rec l-0) l-1)) (y zeta) (y l-0))
  (gen-st (pv a l-1) (pv b l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((4 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l) l-0))
    (exp (gen) (mul l (rec l-0))) (5 0))
  (traces
    ((load priv-stor (cat pt (pv a l-1)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul l (rec l-0))) l-1))
      (send (cat (exp (gen) (mul l (rec l-0))) l-1)))
    ((load priv-stor (cat pt (pv a l-1)))
      (stor priv-stor (cat pt-5 "nil")) (send l-1))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0))))
  (label 78)
  (parent 64)
  (unrealized (0 3) (7 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l x y rndx) (zeta expt)
    (l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-1) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-0) (y y) (alpha (mul l (rec l-0) l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul l (rec l-0))) l-1))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-1))
  (deflistener (cat (exp (gen) (rec l-0)) l))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (7 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-1) (y (mul l (rec l-0) l-1)) (y zeta) (y l-0))
  (gen-st (pv a l-1) (pv b l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((4 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) (rec l-0)) l))
    (exp (gen) (mul l (rec l-0))) (5 0))
  (traces
    ((load priv-stor (cat pt (pv a l-1)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul l (rec l-0))) l-1))
      (send (cat (exp (gen) (mul l (rec l-0))) l-1)))
    ((load priv-stor (cat pt (pv a l-1)))
      (stor priv-stor (cat pt-5 "nil")) (send l-1))
    ((recv (cat (exp (gen) (rec l-0)) l))
      (send (cat (exp (gen) (rec l-0)) l))))
  (label 79)
  (parent 64)
  (unrealized (0 3) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((2 2) (5 0)) ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0))
    ((6 2) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 7 2 ltx-gen 3) (exp (gen) l-0) (5 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l)))
  (label 80)
  (parent 65)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon expt) (l l-0 rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) (mul l (rec w))) w))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0)) ((6 2) (5 0))
    ((7 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (7 0))
  (gen-st (pv a l-0))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul l (rec w))) w)) (exp (gen) l)
    (5 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-3 "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul l (rec w))) w))
      (send (cat (exp (gen) (mul l (rec w))) w))))
  (label 81)
  (parent 65)
  (unrealized (7 0))
  (comment "7 in cohort - 7 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn)
    (lb l x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta lb) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (lb lb) (y y) (alpha l) (zeta x))
  (deflistener (cat (gen) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (5 0)) ((2 1) (3 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 1)) ((5 2) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb lb l)
  (uniq-gen x y)
  (absent (x lb) (x l) (y lb) (y l) (y x))
  (precur (4 0))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) y) (gen)) (neq (exp (gen) x) (gen)) (neq a b)
    (undisclosed lb))
  (leads-to ((1 1) (0 0)) ((1 1) (5 0)) ((2 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 6 3 resp 4) (exp (gen) y-0) (0 3))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) lb) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul lb l)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b lb)))
      (send
        (sig (body b (exp (gen) lb) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b lb)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul lb l)) (exp (gen) (mul x y)))))))
    ((recv (cat (gen) l)) (send (cat (gen) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l)))
  (label 82)
  (parent 70)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn)
    (x y rndx) (zeta expt) (l l-0 rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (5 0)) ((2 1) (3 0))
    ((2 2) (0 1)) ((3 3) (6 0)) ((4 1) (3 1)) ((5 2) (4 0))
    ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y zeta) (y l) (y l-0))
  (precur (4 0) (6 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((1 1) (5 0)) ((2 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
    (exp (gen) (mul (rec x) y zeta)) (0 3))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-3 "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
      (send (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))))
  (label 83)
  (parent 70)
  (unrealized (6 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (lb l x rndx)
    (w expt) (y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (la l) (x x) (beta lb) (upsilon (mul w y)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l lb))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (priv-stor priv-stor)
    (lb lb) (y y) (alpha l) (zeta (mul x w)))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (5 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((5 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb lb l)
  (uniq-gen x y)
  (absent (x lb) (x l) (y lb) (y l) (y (mul x w)))
  (precur (3 0) (5 0))
  (gen-st (pv b lb) (pv self l))
  (facts (neq (exp (gen) (mul w y)) (gen))
    (neq (exp (gen) (mul x w)) (gen)) (neq self b) (undisclosed lb))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 6 2 resp 4) (exp (gen) y-0) (5 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) lb) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb self b
            (hash (exp (gen) (mul lb l)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b lb)))
      (send
        (sig (body b (exp (gen) lb) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b lb)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul x w))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul lb l)) (exp (gen) (mul x w y)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 84)
  (parent 72)
  (seen 66)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l x y rndx) (zeta expt)
    (l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-1) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-0) (y y) (alpha (mul l (rec l-0) l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul l l-1)) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) l) l-1))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-1) (y (mul l (rec l-0) l-1)) (y zeta) (y l-0))
  (gen-st (pv a l-1) (pv b l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-disclose 3) l-1 (7 0)
    (ch-msg priv-stor (cat pt (pv a l-1))))
  (traces
    ((load priv-stor (cat pt (pv a l-1)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul l l-1)) l-0))
      (send (cat (exp (gen) (mul l l-1)) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l-0))
    ((recv (cat (exp (gen) l) l-1)) (send (cat (exp (gen) l) l-1)))
    ((load priv-stor (cat pt (pv a l-1)))
      (stor priv-stor (cat pt-6 "nil")) (send l-1)))
  (label 85)
  (parent 77)
  (unrealized (0 3) (7 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l x y rndx) (zeta expt)
    (l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-1) (y y) (alpha (mul l l-0 (rec l-1))) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l (rec l-1))) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) l) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec l-1))) (y zeta) (y l-1))
  (gen-st (pv a l-0) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-disclose 3) l-1 (7 0)
    (ch-msg priv-stor-1 (cat pt-3 (pv b l-1))))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l (rec l-1))) l-0))
      (send (cat (exp (gen) (mul l (rec l-1))) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-5 "nil")) (send l-0))
    ((recv (cat (exp (gen) l) l-1)) (send (cat (exp (gen) l) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-1)))
  (label 86)
  (parent 78)
  (unrealized (0 3) (7 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (precedes ((0 2) (3 0)) ((1 1) (0 0)) ((1 1) (5 0)) ((2 2) (0 1))
    ((2 2) (4 0)) ((3 1) (0 3)) ((4 1) (3 0)) ((5 2) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (5 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l)))
  (label 87)
  (parent 80)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (a b a-0 b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (upsilon expt)
    (l la rndx) (beta expt) (l-0 x-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
  (defstrand init 3 (na na-0) (a a-0) (b b-0) (priv-stor priv-stor-1)
    (la la) (x x-0) (beta beta))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0)) ((6 2) (5 0))
    ((7 1) (5 0)) ((8 2) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na na-0 l l-0)
  (uniq-gen x x-0)
  (absent (x l) (x l-0) (x-0 la) (x-0 beta))
  (precur (7 0))
  (gen-st (pv a l) (pv a-0 la))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)))
  (rule assume-init-0 gen-st-ltx-disclose-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand init 3) (exp (gen) x-0) (7 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-0 (rec x-0)))))
    ((load priv-stor-1 (cat pt-4 (pv a-0 la)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0)))
      (send (cat na-0 a-0 b-0 (exp (gen) x-0)))))
  (label 88)
  (parent 81)
  (unrealized (5 0) (7 0) (8 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn)
    (upsilon expt) (la l x rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la la) (x x) (beta l) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l la))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) (mul la l)) (exp (gen) (mul upsilon x))))
  (deflistener (cat (exp (gen) (mul la l)) (exp (gen) (mul upsilon x))))
  (deflistener (cat (exp (gen) l) la))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l la))
  (deflistener (cat (exp (gen) x) (mul l (rec x))))
  (precedes ((0 2) (7 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0)) ((6 2) (5 0))
    ((7 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na la l)
  (uniq-gen x)
  (absent (x la) (x l))
  (precur (7 0))
  (gen-st (pv a la))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 8 0 init 3) (exp (gen) x-0) (7 0))
  (traces
    ((load priv-stor (cat pt (pv a la)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul la l)) (exp (gen) (mul upsilon x))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a la))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul la l)) (exp (gen) (mul upsilon x))))
      (send (hash (exp (gen) (mul la l)) (exp (gen) (mul upsilon x)))))
    ((recv (cat (exp (gen) (mul la l)) (exp (gen) (mul upsilon x))))
      (send (cat (exp (gen) (mul la l)) (exp (gen) (mul upsilon x)))))
    ((recv (cat (exp (gen) l) la)) (send (cat (exp (gen) l) la)))
    ((load priv-stor (cat pt (pv a la)))
      (stor priv-stor (cat pt-3 "nil")) (send la))
    ((recv (cat (exp (gen) x) (mul l (rec x))))
      (send (cat (exp (gen) x) (mul l (rec x))))))
  (label 89)
  (parent 81)
  (unrealized (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (gen) l-0))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (7 0))
    ((2 2) (0 1)) ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0))
    ((6 2) (5 0)) ((7 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (7 0))
  (gen-st (pv a l))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (contracted (l-1 l-0) (w l-0)) (gen) (7 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0))))
  (label 90)
  (parent 81)
  (unrealized (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (la l-0) (x x) (beta l) (upsilon upsilon))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (deflistener
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l-0) (mul l (rec l-0))))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (3 0)) ((1 2) (0 1)) ((2 1) (0 3)) ((3 1) (2 0))
    ((4 1) (3 0)) ((5 2) (4 0)) ((6 1) (4 0)) ((7 1) (0 0))
    ((7 1) (5 0)) ((7 2) (6 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (6 0))
  (gen-st (pv self l-0))
  (facts (neq (exp (gen) upsilon) (gen)) (neq self b) (undisclosed l))
  (leads-to ((7 1) (0 0)) ((7 1) (5 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 1 8 ltx-gen 3) (exp (gen) l-1) (7 0))
  (traces
    ((load priv-stor-0 (cat pt-3 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor-0 (cat pt-3 (pv self l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((recv (cat (exp (gen) l-0) (mul l (rec l-0))))
      (send (cat (exp (gen) l-0) (mul l (rec l-0)))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-3 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 91)
  (parent 81)
  (unrealized (4 0) (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (a b a-0 b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (upsilon expt)
    (l lb rndx) (alpha zeta expt) (l-0 y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) y) (mul l-0 (rec y))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b-0)
    (priv-stor priv-stor-1) (lb lb) (y y) (alpha alpha) (zeta zeta))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0)) ((6 2) (5 0))
    ((7 1) (5 0)) ((8 3) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb-0 l l-0)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y lb) (y alpha) (y zeta))
  (precur (7 0))
  (gen-st (pv a l) (pv b-0 lb))
  (facts (neq (exp (gen) upsilon) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)))
  (rule assume-init-0 assume-resp-0 gen-st-ltx-disclose-0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand resp 4) (exp (gen) y) (7 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) y) (mul l-0 (rec y))))
      (send (cat (exp (gen) y) (mul l-0 (rec y)))))
    ((load priv-stor-1 (cat pt-4 (pv b-0 lb)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b-0 (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul lb alpha))
              (exp (gen) (mul zeta y))))))))
  (label 92)
  (parent 81)
  (unrealized (5 0) (7 0) (8 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((2 2) (7 0)) ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0))
    ((6 2) (5 0)) ((7 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (7 0))
  (gen-st (pv a l))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 8 2 ltx-gen 3) (exp (gen) l-1) (7 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one)))))
  (label 93)
  (parent 81)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (upsilon expt)
    (l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0)) ((6 2) (5 0))
    ((7 1) (5 0)) ((8 2) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0 l-1)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (7 0))
  (gen-st (pv a l))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 3) (exp (gen) l-1) (7 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
      (send (cat (exp (gen) l-1) (mul l-0 (rec l-1)))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-5 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))))
  (label 94)
  (parent 81)
  (unrealized (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn)
    (lb l x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta lb) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (gen) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (precedes ((1 1) (0 0)) ((1 1) (4 0)) ((2 2) (0 1)) ((3 1) (0 3))
    ((4 2) (3 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb lb l)
  (uniq-gen x)
  (absent (x lb) (x l))
  (precur (3 0))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) y) (gen)) (neq a b) (undisclosed lb))
  (leads-to ((1 1) (0 0)) ((1 1) (4 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) lb) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul lb l)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b lb)))
      (send
        (sig (body b (exp (gen) lb) (pubk "sig" b)) (privk "sig" b))))
    ((recv (cat (gen) l)) (send (cat (gen) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l)))
  (label 95)
  (parent 82)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn)
    (lb l x rndx) (w expt) (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta lb) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (lb lb) (y y) (alpha l) (zeta (mul x w)))
  (deflistener (cat (gen) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (5 0)) ((2 1) (3 0))
    ((2 2) (0 1)) ((3 3) (6 0)) ((4 1) (3 1)) ((5 2) (4 0))
    ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb lb l)
  (uniq-gen x y)
  (absent (x lb) (x l) (y lb) (y l) (y (mul x w)))
  (precur (4 0) (6 0))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) (mul w y)) (gen))
    (neq (exp (gen) (mul x w)) (gen)) (neq a b) (undisclosed lb))
  (leads-to ((1 1) (0 0)) ((1 1) (5 0)) ((2 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 7 3 resp 4) (exp (gen) y-0) (6 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) lb) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul lb l)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b lb)))
      (send
        (sig (body b (exp (gen) lb) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b lb)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x w))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul lb l)) (exp (gen) (mul x w y)))))))
    ((recv (cat (gen) l)) (send (cat (gen) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 96)
  (parent 83)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l-1) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l) (y y) (alpha (mul (rec l) l-0 l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 2) (0 1))
    ((2 2) (7 0)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l-0) (x l-1) (y zeta) (y (mul (rec l) l-0 l-1)) (y l))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-1))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 9 2 ltx-gen 3) (exp (gen) l-1) (7 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0)))
  (label 97)
  (parent 85)
  (unrealized (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l x y rndx) (zeta expt)
    (l-0 l-1 rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-1) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-0) (y y) (alpha (mul l (rec l-0) l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul l l-1)) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) l) l-1))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-1))
  (deflistener (cat (exp (gen) (mul l (rec w))) w))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-1) (y (mul l (rec l-0) l-1)) (y zeta) (y l-0))
  (precur (9 0))
  (gen-st (pv a l-1) (pv b l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul l (rec w))) w)) (exp (gen) l)
    (7 0))
  (traces
    ((load priv-stor (cat pt (pv a l-1)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul l l-1)) l-0))
      (send (cat (exp (gen) (mul l l-1)) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l-0))
    ((recv (cat (exp (gen) l) l-1)) (send (cat (exp (gen) l) l-1)))
    ((load priv-stor (cat pt (pv a l-1)))
      (stor priv-stor (cat pt-6 "nil")) (send l-1))
    ((recv (cat (exp (gen) (mul l (rec w))) w))
      (send (cat (exp (gen) (mul l (rec w))) w))))
  (label 98)
  (parent 85)
  (unrealized (0 3) (9 0))
  (comment "8 in cohort - 8 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-1) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-0) (y y) (alpha (mul l (rec l-0) l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((2 2) (7 0)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-1) (y zeta) (y (mul l (rec l-0) l-1)) (y l-0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-1))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 9 2 ltx-gen 3) (exp (gen) l-1) (7 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-0)))
  (label 99)
  (parent 86)
  (unrealized (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l x y rndx) (zeta expt)
    (l-0 l-1 rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-1) (y y) (alpha (mul l l-0 (rec l-1))) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l (rec l-1))) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) l) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l (rec w))) w))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec l-1))) (y zeta) (y l-1))
  (precur (9 0))
  (gen-st (pv a l-0) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul l (rec w))) w)) (exp (gen) l)
    (7 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l (rec l-1))) l-0))
      (send (cat (exp (gen) (mul l (rec l-1))) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-5 "nil")) (send l-0))
    ((recv (cat (exp (gen) l) l-1)) (send (cat (exp (gen) l) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-1))
    ((recv (cat (exp (gen) (mul l (rec w))) w))
      (send (cat (exp (gen) (mul l (rec w))) w))))
  (label 100)
  (parent 86)
  (unrealized (0 3) (9 0))
  (comment "8 in cohort - 8 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (precedes ((1 1) (0 0)) ((1 1) (4 0)) ((2 2) (0 1)) ((2 2) (3 0))
    ((3 1) (0 3)) ((4 2) (3 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (4 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l)))
  (label 101)
  (parent 87)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon beta expt) (l x-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) x-0) (mul l (rec x-0))))
  (defstrand init 3 (na na-0) (a a) (b b-0) (priv-stor priv-stor)
    (la l-0) (x x-0) (beta beta))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((1 1) (8 0))
    ((2 2) (0 1)) ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na na-0 l l-0)
  (uniq-gen x x-0)
  (absent (x l) (x l-0) (x-0 beta) (x-0 l-0))
  (precur (7 0))
  (gen-st (pv a l-0))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((1 1) (8 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 9 1 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-4 (pv a-0 l-1))) (8 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-3 "nil")) (send l-0))
    ((recv (cat (exp (gen) x-0) (mul l (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l (rec x-0)))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a b-0 (exp (gen) x-0)))))
  (label 102)
  (parent 88)
  (unrealized (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon expt) (l rndx) (beta expt) (x-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) x-0) (mul (rec x-0) l-0)))
  (defstrand init 3 (na na-0) (a b) (b b-0) (priv-stor priv-stor-0)
    (la l-0) (x x-0) (beta beta))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (8 0))
    ((2 2) (0 1)) ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na na-0 l l-0)
  (uniq-gen x x-0)
  (absent (x l) (x l-0) (x-0 beta) (x-0 l-0))
  (precur (7 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (8 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 9 2 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-4 (pv a-0 l-1))) (8 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) x-0) (mul (rec x-0) l-0)))
      (send (cat (exp (gen) x-0) (mul (rec x-0) l-0))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 b b-0 (exp (gen) x-0)))))
  (label 103)
  (parent 88)
  (unrealized (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (a b a-0 b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (upsilon expt)
    (l rndx) (beta expt) (l-0 x-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
  (defstrand init 3 (na na-0) (a a-0) (b b-0) (priv-stor priv-stor-1)
    (la l-1) (x x-0) (beta beta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self a-0)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0)) ((6 2) (5 0))
    ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (8 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na na-0 l l-0 l-1)
  (uniq-gen x x-0)
  (absent (x l) (x l-0) (x-0 beta) (x-0 l-1))
  (precur (7 0))
  (gen-st (pv a l) (pv a-0 l-1))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((9 1) (8 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-4 (pv a-0 l-1))) (8 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-0 (rec x-0)))))
    ((load priv-stor-1 (cat pt-4 (pv a-0 l-1)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a-0 b-0 (exp (gen) x-0))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv a-0 l-1)))))
  (label 104)
  (parent 88)
  (unrealized (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (a b a-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon alpha zeta expt) (l y l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) y) (mul l (rec y))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b a)
    (priv-stor priv-stor) (lb l-0) (y y) (alpha alpha) (zeta zeta))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((1 1) (8 0))
    ((2 2) (0 1)) ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 3) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb-0 l l-0)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y alpha) (y zeta) (y l-0))
  (precur (7 0))
  (gen-st (pv a l-0))
  (facts (neq (exp (gen) upsilon) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((1 1) (8 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 9 1 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-4 (pv b-0 l-1))) (8 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-3 "nil")) (send l-0))
    ((recv (cat (exp (gen) y) (mul l (rec y))))
      (send (cat (exp (gen) y) (mul l (rec y)))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 a (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na-0 nb-0 a-0 a
            (hash (exp (gen) (mul alpha l-0))
              (exp (gen) (mul zeta y))))))))
  (label 105)
  (parent 92)
  (unrealized (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (a b a-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon expt) (l rndx) (alpha zeta expt) (y l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) y) (mul (rec y) l-0)))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b)
    (priv-stor priv-stor-0) (lb l-0) (y y) (alpha alpha) (zeta zeta))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (8 0))
    ((2 2) (0 1)) ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 3) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb-0 l l-0)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y alpha) (y zeta) (y l-0))
  (precur (7 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq (exp (gen) upsilon) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (8 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 9 2 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-4 (pv b-0 l-1))) (8 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) y) (mul (rec y) l-0)))
      (send (cat (exp (gen) y) (mul (rec y) l-0))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na-0 nb-0 a-0 b
            (hash (exp (gen) (mul alpha l-0))
              (exp (gen) (mul zeta y))))))))
  (label 106)
  (parent 92)
  (unrealized (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (upsilon expt)
    (l rndx) (alpha zeta expt) (l-0 y l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) y) (mul l-0 (rec y))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b-0)
    (priv-stor priv-stor-1) (lb l-1) (y y) (alpha alpha) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b-0)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0)) ((6 2) (5 0))
    ((7 1) (5 0)) ((8 3) (7 0)) ((9 1) (8 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb-0 l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y alpha) (y zeta) (y l-1))
  (precur (7 0))
  (gen-st (pv a l) (pv b-0 l-1))
  (facts (neq (exp (gen) upsilon) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((9 1) (8 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-4 (pv b-0 l-1))) (8 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) y) (mul l-0 (rec y))))
      (send (cat (exp (gen) y) (mul l-0 (rec y)))))
    ((load priv-stor-1 (cat pt-4 (pv b-0 l-1)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b-0 (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul alpha l-1))
              (exp (gen) (mul zeta y)))))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv b-0 l-1)))))
  (label 107)
  (parent 92)
  (unrealized (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (precedes ((0 2) (3 0)) ((1 1) (0 0)) ((1 1) (5 0)) ((2 2) (0 1))
    ((2 2) (6 0)) ((3 1) (0 3)) ((4 1) (3 0)) ((5 2) (4 0))
    ((6 1) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (6 0))
  (gen-st (pv a l))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (5 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one)))))
  (label 108)
  (parent 93)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn)
    (lb l x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta lb) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (precedes ((1 1) (0 0)) ((1 1) (3 0)) ((2 2) (0 1)) ((3 2) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb lb l)
  (uniq-gen x)
  (absent (x lb) (x l))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) y) (gen)) (neq a b) (undisclosed lb))
  (leads-to ((1 1) (0 0)) ((1 1) (3 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) lb) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul lb l)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b lb)))
      (send
        (sig (body b (exp (gen) lb) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l)))
  (label 109)
  (parent 95)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn)
    (lb l x rndx) (w expt) (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta lb) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (gen) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (5 0)) ((1 1) (0 0)) ((1 1) (4 0)) ((2 2) (0 1))
    ((3 1) (5 0)) ((4 2) (3 0)) ((5 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb lb l)
  (uniq-gen x)
  (absent (x lb) (x l))
  (precur (3 0) (5 0))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a b) (undisclosed lb))
  (leads-to ((1 1) (0 0)) ((1 1) (4 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) lb) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul lb l)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b lb)))
      (send
        (sig (body b (exp (gen) lb) (pubk "sig" b)) (privk "sig" b))))
    ((recv (cat (gen) l)) (send (cat (gen) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 110)
  (parent 96)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb lb) (y y) (alpha (mul l l-0 (rec lb))) (zeta x))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) (mul l l-0)) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 2) (0 1))
    ((2 2) (7 0)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec lb))) (y lb) (y x))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) y) (gen)) (neq (exp (gen) x) (gen)) (neq a b)
    (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 9 3 resp 4) (exp (gen) y-0) (0 3))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec lb))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((recv (cat (exp (gen) (mul l l-0)) lb))
      (send (cat (exp (gen) (mul l l-0)) lb)))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-6 "nil")) (send l)))
  (label 111)
  (parent 97)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l-1) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l) (y y) (alpha (mul (rec l) l-0 l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 2) (0 1))
    ((2 2) (7 0)) ((3 3) (9 0)) ((4 1) (3 0)) ((4 1) (6 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l-0) (x l-1) (y zeta) (y (mul (rec l) l-0 l-1)) (y l))
  (precur (9 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-1))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
    (exp (gen) (mul (rec x) y zeta)) (0 3))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
      (send (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))))
  (label 112)
  (parent 97)
  (unrealized (9 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn) (x y rndx)
    (zeta expt) (l l-0 lb rndx) (alpha zeta-0 expt) (l-1 y-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l-1) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l) (y y) (alpha (mul (rec l) l-0 l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) y-0) (mul l-1 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b-0)
    (priv-stor priv-stor-2) (lb lb) (y y-0) (alpha alpha) (zeta zeta-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0))
    ((10 3) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen x y y-0)
  (absent (x l-0) (x l-1) (y zeta) (y (mul (rec l) l-0 l-1)) (y l)
    (y-0 lb) (y-0 alpha) (y-0 zeta-0))
  (precur (9 0))
  (gen-st (pv a l-0) (pv b l) (pv b-0 lb))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta-0) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b) (undisclosed l-1))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule assume-init-0 assume-resp-0 gen-st-ltx-disclose-0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand resp 4) (exp (gen) y-0) (9 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) y-0) (mul l-1 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-1 (rec y-0)))))
    ((load priv-stor-2 (cat pt-7 (pv b-0 lb)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0)))
      (recv (cat na-0 a-0 b-0 (exp (gen) zeta-0)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul lb alpha))
              (exp (gen) (mul zeta-0 y-0))))))))
  (label 113)
  (parent 98)
  (unrealized (0 3) (7 0) (9 0) (10 0))
  (comment "4 in cohort - 4 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (a b a-0 b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn) (x y rndx)
    (zeta expt) (l l-0 la rndx) (beta expt) (l-1 x-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l-1) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l) (y y) (alpha (mul (rec l) l-0 l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
  (defstrand init 3 (na na-0) (a a-0) (b b-0) (priv-stor priv-stor-2)
    (la la) (x x-0) (beta beta))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0))
    ((10 2) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen x y x-0)
  (absent (x l-0) (x l-1) (y zeta) (y (mul (rec l) l-0 l-1)) (y l)
    (x-0 la) (x-0 beta))
  (precur (9 0))
  (gen-st (pv a l-0) (pv b l) (pv a-0 la))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-1))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule assume-init-0 assume-resp-0 gen-st-ltx-disclose-0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand init 3) (exp (gen) x-0) (9 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-1 (rec x-0)))))
    ((load priv-stor-2 (cat pt-7 (pv a-0 la)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0)))
      (send (cat na-0 a-0 b-0 (exp (gen) x-0)))))
  (label 114)
  (parent 98)
  (unrealized (0 3) (7 0) (9 0) (10 0))
  (comment "4 in cohort - 4 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l-1) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l) (y y) (alpha (mul (rec l) l-0 l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (gen) l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (9 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l-0) (x l-1) (y zeta) (y (mul (rec l) l-0 l-1)) (y l))
  (precur (9 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-1))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (contracted (l-2 l-1) (w l-1)) (gen) (9 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0))
    ((recv (cat (gen) l-1)) (send (cat (gen) l-1))))
  (label 115)
  (parent 98)
  (unrealized (0 3) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y rndx) (zeta expt)
    (l la l-0 x rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la la) (x x) (beta l-0) (upsilon (mul y zeta (rec x))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l la))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l) (y y) (alpha (mul (rec l) la l-0)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul la l-0)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-0) la))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l la))
  (deflistener (cat (exp (gen) x) (mul l-0 (rec x))))
  (precedes ((0 2) (9 0)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l la l-0)
  (uniq-gen y x)
  (absent (y zeta) (y (mul (rec l) la l-0)) (y l) (x la) (x l-0))
  (precur (9 0))
  (gen-st (pv a la) (pv b l))
  (facts (neq (exp (gen) (mul y zeta (rec x))) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 10 0 init 3) (exp (gen) x-0) (9 0))
  (traces
    ((load priv-stor (cat pt (pv a la)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y zeta (rec x)))
          (enc na nb a b
            (hash (exp (gen) (mul la l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a la))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) la l-0)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul la l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul la l-0)) l))
      (send (cat (exp (gen) (mul la l-0)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) la)) (send (cat (exp (gen) l-0) la)))
    ((load priv-stor (cat pt (pv a la)))
      (stor priv-stor (cat pt-6 "nil")) (send la))
    ((recv (cat (exp (gen) x) (mul l-0 (rec x))))
      (send (cat (exp (gen) x) (mul l-0 (rec x))))))
  (label 116)
  (parent 98)
  (unrealized (0 3) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l-1) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l) (y y) (alpha (mul (rec l) l-0 l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) l-1) (one)))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 2) (0 1))
    ((2 2) (9 0)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l-0) (x l-1) (y zeta) (y (mul (rec l) l-0 l-1)) (y l))
  (precur (9 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-1))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 10 2 ltx-gen 3) (exp (gen) l-2)
    (9 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) l-1) (one)))
      (send (cat (exp (gen) l-1) (one)))))
  (label 117)
  (parent 98)
  (unrealized (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-1) (x x) (beta l-0)
    (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (lb l) (y y) (alpha (mul (rec l) l-0 l-1))
    (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-0) l-1))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (2 2)) ((1 2) (0 1)) ((2 3) (0 3)) ((3 1) (2 0))
    ((3 1) (5 0)) ((4 1) (2 1)) ((5 2) (4 0)) ((6 1) (4 0))
    ((7 2) (6 0)) ((8 1) (6 0)) ((9 1) (0 0)) ((9 1) (7 0))
    ((9 2) (8 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l-0) (x l-1) (y zeta) (y (mul (rec l) l-0 l-1)) (y l))
  (precur (8 0))
  (gen-st (pv b l) (pv self l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq self b) (undisclosed l-0))
  (leads-to ((3 1) (2 0)) ((3 1) (5 0)) ((9 1) (0 0)) ((9 1) (7 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 1 10 ltx-gen 3) (exp (gen) l-2)
    (9 0))
  (traces
    ((load priv-stor-1 (cat pt-6 (pv self l-1)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb self b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-1 (pv b l)))
      (recv
        (sig
          (body self (exp (gen) (mul (rec l) l-0 l-1))
            (pubk "sig" self)) (privk "sig" self)))
      (recv (cat na self b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-0 (cat pt-1 (pv b l)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) l-1)) (send (cat (exp (gen) l-0) l-1)))
    ((load priv-stor-1 (cat pt-6 (pv self l-1)))
      (stor priv-stor-1 (cat pt-4 "nil")) (send l-1))
    ((recv (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
      (send (cat (exp (gen) l-1) (mul l-0 (rec l-1)))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))))
  (label 118)
  (parent 98)
  (unrealized (0 3) (6 0) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b self) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b self)
    (priv-stor priv-stor-1) (lb l-1) (y y) (alpha (mul l l-0 (rec l-1)))
    (zeta zeta))
  (deflistener (cat (exp (gen) (mul l l-0)) l-1))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (7 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 1)) ((5 2) (4 0)) ((6 1) (4 0))
    ((7 2) (6 0)) ((8 1) (6 0)) ((9 1) (3 0)) ((9 1) (5 0))
    ((9 2) (8 0)))
  (non-orig (privk "sig" self))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y zeta) (y (mul l l-0 (rec l-1))) (y l-1))
  (precur (8 0))
  (gen-st (pv a l) (pv self l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a self) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (7 0)) ((9 1) (3 0)) ((9 1) (5 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 4 10 ltx-gen 3) (exp (gen) l-2)
    (9 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (send (cat na a self (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-1 (cat pt-6 (pv self l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a self (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((recv (cat (exp (gen) (mul l l-0)) l-1))
      (send (cat (exp (gen) (mul l l-0)) l-1)))
    ((load priv-stor-1 (cat pt-6 (pv self l-1)))
      (stor priv-stor-1 (cat pt-3 "nil")) (send l-1))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-4 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
      (send (cat (exp (gen) l-1) (mul l-0 (rec l-1)))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))))
  (label 119)
  (parent 98)
  (unrealized (0 3) (6 0) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 ignore-2 mesg) (na nb data)
    (a b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pt-8 pval)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn) (x y rndx)
    (zeta expt) (l l-0 l-1 l-2 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l-1) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l) (y y) (alpha (mul (rec l) l-0 l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) l-2) (mul l-1 (rec l-2))))
  (defstrand ltx-gen 3 (ignore ignore-2) (self self)
    (priv-stor priv-stor-2) (l l-2))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0))
    ((10 2) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1 l-2)
  (uniq-gen x y)
  (absent (x l-0) (x l-1) (y zeta) (y (mul (rec l) l-0 l-1)) (y l))
  (precur (9 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-1))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 3) (exp (gen) l-2) (9 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) l-2) (mul l-1 (rec l-2))))
      (send (cat (exp (gen) l-2) (mul l-1 (rec l-2)))))
    ((load priv-stor-2 (cat pt-7 ignore-2))
      (stor priv-stor-2 (cat pt-8 (pv self l-2)))
      (send
        (sig (body self (exp (gen) l-2) (pubk "sig" self))
          (privk "sig" self)))))
  (label 120)
  (parent 98)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb lb) (y y) (alpha (mul l l-0 (rec lb))) (zeta x))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) (mul l-0 (rec lb))) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((2 2) (7 0)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec lb))) (y lb) (y x))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) y) (gen)) (neq (exp (gen) x) (gen)) (neq a b)
    (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 9 3 resp 4) (exp (gen) y-0) (0 3))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec lb))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((recv (cat (exp (gen) (mul l-0 (rec lb))) l))
      (send (cat (exp (gen) (mul l-0 (rec lb))) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) lb)) (send (cat (exp (gen) l-0) lb)))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send lb)))
  (label 121)
  (parent 99)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-1) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-0) (y y) (alpha (mul l (rec l-0) l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((2 2) (7 0)) ((3 3) (9 0)) ((4 1) (3 0)) ((4 1) (8 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-1) (y zeta) (y (mul l (rec l-0) l-1)) (y l-0))
  (precur (9 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-1))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
    (exp (gen) (mul (rec x) y zeta)) (0 3))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
      (send (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))))
  (label 122)
  (parent 99)
  (unrealized (9 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn) (x y rndx)
    (zeta expt) (l l-0 lb rndx) (alpha zeta-0 expt) (l-1 y-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-1) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-0) (y y) (alpha (mul l (rec l-0) l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) y-0) (mul l-1 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b-0)
    (priv-stor priv-stor-2) (lb lb) (y y-0) (alpha alpha) (zeta zeta-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0))
    ((10 3) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen x y y-0)
  (absent (x l) (x l-1) (y zeta) (y (mul l (rec l-0) l-1)) (y l-0)
    (y-0 lb) (y-0 alpha) (y-0 zeta-0))
  (precur (9 0))
  (gen-st (pv a l) (pv b l-0) (pv b-0 lb))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta-0) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b) (undisclosed l-1))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0)))
  (rule assume-init-0 assume-resp-0 gen-st-ltx-disclose-0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand resp 4) (exp (gen) y-0) (9 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) y-0) (mul l-1 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-1 (rec y-0)))))
    ((load priv-stor-2 (cat pt-7 (pv b-0 lb)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0)))
      (recv (cat na-0 a-0 b-0 (exp (gen) zeta-0)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul lb alpha))
              (exp (gen) (mul zeta-0 y-0))))))))
  (label 123)
  (parent 100)
  (unrealized (0 3) (7 0) (9 0) (10 0))
  (comment "4 in cohort - 4 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (a b a-0 b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn) (x y rndx)
    (zeta expt) (l l-0 la rndx) (beta expt) (l-1 x-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-1) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-0) (y y) (alpha (mul l (rec l-0) l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
  (defstrand init 3 (na na-0) (a a-0) (b b-0) (priv-stor priv-stor-2)
    (la la) (x x-0) (beta beta))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0))
    ((10 2) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen x y x-0)
  (absent (x l) (x l-1) (y zeta) (y (mul l (rec l-0) l-1)) (y l-0)
    (x-0 la) (x-0 beta))
  (precur (9 0))
  (gen-st (pv a l) (pv b l-0) (pv a-0 la))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-1))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0)))
  (rule assume-init-0 assume-resp-0 gen-st-ltx-disclose-0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand init 3) (exp (gen) x-0) (9 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-1 (rec x-0)))))
    ((load priv-stor-2 (cat pt-7 (pv a-0 la)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0)))
      (send (cat na-0 a-0 b-0 (exp (gen) x-0)))))
  (label 124)
  (parent 100)
  (unrealized (0 3) (7 0) (9 0) (10 0))
  (comment "4 in cohort - 4 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-1) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-0) (y y) (alpha (mul l (rec l-0) l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (gen) l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (9 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-1) (y zeta) (y (mul l (rec l-0) l-1)) (y l-0))
  (precur (9 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-1))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (contracted (l-2 l-1) (w l-1)) (gen) (9 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (gen) l-1)) (send (cat (gen) l-1))))
  (label 125)
  (parent 100)
  (unrealized (0 3) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y rndx) (zeta expt)
    (l la l-0 x rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la la) (x x) (beta l-0) (upsilon (mul y zeta (rec x))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l la))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l) (y y) (alpha (mul (rec l) la l-0)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul (rec l) l-0)) la))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l la))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) x) (mul l-0 (rec x))))
  (precedes ((0 2) (9 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l la l-0)
  (uniq-gen y x)
  (absent (y zeta) (y (mul (rec l) la l-0)) (y l) (x la) (x l-0))
  (precur (9 0))
  (gen-st (pv a la) (pv b l))
  (facts (neq (exp (gen) (mul y zeta (rec x))) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 10 0 init 3) (exp (gen) x-0) (9 0))
  (traces
    ((load priv-stor (cat pt (pv a la)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y zeta (rec x)))
          (enc na nb a b
            (hash (exp (gen) (mul la l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a la))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) la l-0)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul la l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul (rec l) l-0)) la))
      (send (cat (exp (gen) (mul (rec l) l-0)) la)))
    ((load priv-stor (cat pt (pv a la)))
      (stor priv-stor (cat pt-5 "nil")) (send la))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l))
    ((recv (cat (exp (gen) x) (mul l-0 (rec x))))
      (send (cat (exp (gen) x) (mul l-0 (rec x))))))
  (label 126)
  (parent 100)
  (unrealized (0 3) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-1) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-0) (y y) (alpha (mul l (rec l-0) l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) l-1) (one)))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((2 2) (9 0)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-1) (y zeta) (y (mul l (rec l-0) l-1)) (y l-0))
  (precur (9 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-1))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 10 2 ltx-gen 3) (exp (gen) l-2)
    (9 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) l-1) (one)))
      (send (cat (exp (gen) l-1) (one)))))
  (label 127)
  (parent 100)
  (unrealized (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-1) (x x) (beta l-0)
    (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (lb l) (y y) (alpha (mul (rec l) l-0 l-1))
    (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul (rec l) l-0)) l-1))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (2 2)) ((1 2) (0 1)) ((2 3) (0 3)) ((3 1) (2 0))
    ((3 1) (7 0)) ((4 1) (2 1)) ((5 2) (4 0)) ((6 1) (4 0))
    ((7 2) (6 0)) ((8 1) (6 0)) ((9 1) (0 0)) ((9 1) (5 0))
    ((9 2) (8 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l-0) (x l-1) (y zeta) (y (mul (rec l) l-0 l-1)) (y l))
  (precur (8 0))
  (gen-st (pv b l) (pv self l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq self b) (undisclosed l-0))
  (leads-to ((3 1) (2 0)) ((3 1) (7 0)) ((9 1) (0 0)) ((9 1) (5 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 1 10 ltx-gen 3) (exp (gen) l-2)
    (9 0))
  (traces
    ((load priv-stor-1 (cat pt-6 (pv self l-1)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb self b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-1 (pv b l)))
      (recv
        (sig
          (body self (exp (gen) (mul (rec l) l-0 l-1))
            (pubk "sig" self)) (privk "sig" self)))
      (recv (cat na self b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b l))))
    ((recv (cat (exp (gen) (mul (rec l) l-0)) l-1))
      (send (cat (exp (gen) (mul (rec l) l-0)) l-1)))
    ((load priv-stor-1 (cat pt-6 (pv self l-1)))
      (stor priv-stor-1 (cat pt-3 "nil")) (send l-1))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-1 (pv b l)))
      (stor priv-stor-0 (cat pt-4 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
      (send (cat (exp (gen) l-1) (mul l-0 (rec l-1)))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))))
  (label 128)
  (parent 100)
  (unrealized (0 3) (6 0) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b self) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b self)
    (priv-stor priv-stor-1) (lb l-1) (y y) (alpha (mul l l-0 (rec l-1)))
    (zeta zeta))
  (deflistener (cat (exp (gen) (mul l-0 (rec l-1))) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) l-1))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (5 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 1)) ((5 2) (4 0)) ((6 1) (4 0))
    ((7 2) (6 0)) ((8 1) (6 0)) ((9 1) (3 0)) ((9 1) (7 0))
    ((9 2) (8 0)))
  (non-orig (privk "sig" self))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y zeta) (y (mul l l-0 (rec l-1))) (y l-1))
  (precur (8 0))
  (gen-st (pv a l) (pv self l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a self) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (5 0)) ((9 1) (3 0)) ((9 1) (7 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 4 10 ltx-gen 3) (exp (gen) l-2)
    (9 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (send (cat na a self (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-1 (cat pt-6 (pv self l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a self (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((recv (cat (exp (gen) (mul l-0 (rec l-1))) l))
      (send (cat (exp (gen) (mul l-0 (rec l-1))) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) l-1)) (send (cat (exp (gen) l-0) l-1)))
    ((load priv-stor-1 (cat pt-6 (pv self l-1)))
      (stor priv-stor-1 (cat pt-4 "nil")) (send l-1))
    ((recv (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
      (send (cat (exp (gen) l-1) (mul l-0 (rec l-1)))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))))
  (label 129)
  (parent 100)
  (unrealized (0 3) (6 0) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 ignore-2 mesg) (na nb data)
    (a b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pt-8 pval)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn) (x y rndx)
    (zeta expt) (l l-0 l-1 l-2 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-1) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-0) (y y) (alpha (mul l (rec l-0) l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) l-2) (mul l-1 (rec l-2))))
  (defstrand ltx-gen 3 (ignore ignore-2) (self self)
    (priv-stor priv-stor-2) (l l-2))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0))
    ((10 2) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1 l-2)
  (uniq-gen x y)
  (absent (x l) (x l-1) (y zeta) (y (mul l (rec l-0) l-1)) (y l-0))
  (precur (9 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-1))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 3) (exp (gen) l-2) (9 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) l-2) (mul l-1 (rec l-2))))
      (send (cat (exp (gen) l-2) (mul l-1 (rec l-2)))))
    ((load priv-stor-2 (cat pt-7 ignore-2))
      (stor priv-stor-2 (cat pt-8 (pv self l-2)))
      (send
        (sig (body self (exp (gen) l-2) (pubk "sig" self))
          (privk "sig" self)))))
  (label 130)
  (parent 100)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (precedes ((1 1) (0 0)) ((1 1) (3 0)) ((2 2) (0 1)) ((3 2) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (3 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l)))
  (label 131)
  (parent 101)
  (realized)
  (shape)
  (maps
    ((0)
      ((a a) (b b) (la l) (beta l-0) (x x) (upsilon upsilon) (na na)
        (nb nb) (priv-stor priv-stor))))
  (origs (l-0 (2 1)) (pt-2 (2 1)) (pt-3 (3 1)) (l (1 1)) (pt (1 1))
    (na (0 2)))
  (ugens (x (0 2))))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (precedes ((1 1) (0 0)) ((1 1) (4 0)) ((2 2) (0 1)) ((2 2) (5 0))
    ((3 1) (0 3)) ((4 2) (3 0)) ((5 1) (3 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (5 0))
  (gen-st (pv a l))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (4 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one)))))
  (label 132)
  (parent 108)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn)
    (lb l x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta lb) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (precedes ((1 1) (0 0)) ((1 1) (3 0)) ((2 2) (0 1)) ((3 2) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na lb l)
  (uniq-gen x)
  (absent (x lb) (x l))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) y) (gen)) (neq a b) (undisclosed lb))
  (leads-to ((1 1) (0 0)) ((1 1) (3 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization forgot nb)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) lb) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul lb l)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b lb)))
      (send
        (sig (body b (exp (gen) lb) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l)))
  (label 133)
  (parent 109)
  (realized)
  (shape)
  (maps
    ((0)
      ((a a) (b b) (la l) (beta lb) (x x) (upsilon y) (na na) (nb nb)
        (priv-stor priv-stor))))
  (origs (pt-3 (3 1)) (lb (2 1)) (pt-2 (2 1)) (l (1 1)) (pt (1 1))
    (na (0 2)))
  (ugens (x (0 2))))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn)
    (lb l x rndx) (w expt) (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta lb) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((1 1) (3 0)) ((2 2) (0 1))
    ((3 2) (4 0)) ((4 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb lb l)
  (uniq-gen x)
  (absent (x lb) (x l))
  (precur (4 0))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a b) (undisclosed lb))
  (leads-to ((1 1) (0 0)) ((1 1) (3 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) lb) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul lb l)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b lb)))
      (send
        (sig (body b (exp (gen) lb) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 134)
  (parent 110)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) (mul l l-0)) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (precedes ((1 1) (0 0)) ((1 1) (7 0)) ((2 2) (0 1)) ((2 2) (6 0))
    ((3 1) (5 0)) ((4 1) (0 3)) ((5 2) (4 0)) ((6 1) (4 0))
    ((7 2) (6 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) y) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (7 0)) ((3 1) (5 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((recv (cat (exp (gen) (mul l l-0)) lb))
      (send (cat (exp (gen) (mul l l-0)) lb)))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-6 "nil")) (send l)))
  (label 135)
  (parent 111)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb lb) (y y) (alpha (mul l l-0 (rec lb))) (zeta (mul x w)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) (mul l l-0)) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 2) (0 1))
    ((2 2) (7 0)) ((3 3) (9 0)) ((4 1) (3 0)) ((4 1) (6 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec lb))) (y lb) (y (mul x w)))
  (precur (9 0))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) (mul w y)) (gen))
    (neq (exp (gen) (mul x w)) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 10 3 resp 4) (exp (gen) y-0) (9 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec lb))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) (mul x w))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((recv (cat (exp (gen) (mul l l-0)) lb))
      (send (cat (exp (gen) (mul l l-0)) lb)))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-6 "nil")) (send l))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 136)
  (parent 112)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 rndx) (alpha zeta-0 expt) (y-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l-1) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l) (y y) (alpha (mul (rec l) l-0 l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) y-0) (mul (rec y-0) l-1)))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b)
    (priv-stor priv-stor-0) (lb l-1) (y y-0) (alpha alpha)
    (zeta zeta-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (10 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 3) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen x y y-0)
  (absent (x l-0) (x l-1) (y zeta) (y (mul (rec l) l-0 l-1)) (y l)
    (y-0 alpha) (y-0 zeta-0) (y-0 l-1))
  (precur (9 0))
  (gen-st (pv a l-0) (pv b l) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta-0) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b) (undisclosed l-1))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (10 0)) ((4 1) (3 0))
    ((4 1) (6 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 2 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv b-0 l-2))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) y-0) (mul (rec y-0) l-1)))
      (send (cat (exp (gen) y-0) (mul (rec y-0) l-1))))
    ((load priv-stor-0 (cat pt-2 (pv b l-1)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b (exp (gen) zeta-0)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b
            (hash (exp (gen) (mul alpha l-1))
              (exp (gen) (mul zeta-0 y-0))))))))
  (label 137)
  (parent 113)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l rndx) (alpha zeta-0 expt) (l-0 y-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-1) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l) (y y) (alpha (mul (rec l) l-0 l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-0) l-1))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-1))
  (deflistener (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b a)
    (priv-stor priv-stor) (lb l-1) (y y-0) (alpha alpha) (zeta zeta-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((1 1) (10 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 3) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen x y y-0)
  (absent (x l-0) (x l-1) (y zeta) (y (mul (rec l) l-0 l-1)) (y l)
    (y-0 alpha) (y-0 zeta-0) (y-0 l-1))
  (precur (9 0))
  (gen-st (pv a l-1) (pv b l))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta-0) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((1 1) (10 0)) ((4 1) (3 0))
    ((4 1) (6 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 1 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv b-0 l-2))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l-1)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) l-1)) (send (cat (exp (gen) l-0) l-1)))
    ((load priv-stor (cat pt (pv a l-1)))
      (stor priv-stor (cat pt-6 "nil")) (send l-1))
    ((recv (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-0 (rec y-0)))))
    ((load priv-stor (cat pt (pv a l-1)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 a (exp (gen) zeta-0)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 a
            (hash (exp (gen) (mul alpha l-1))
              (exp (gen) (mul zeta-0 y-0))))))))
  (label 138)
  (parent 113)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l rndx) (alpha zeta-0 expt) (l-0 y-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-1) (y y) (alpha (mul l l-0 (rec l-1))) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l l-0)) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b)
    (priv-stor priv-stor-1) (lb l-1) (y y-0) (alpha alpha)
    (zeta zeta-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0)) ((4 1) (10 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 3) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen x y y-0)
  (absent (x l) (x l-0) (y zeta) (y (mul l l-0 (rec l-1))) (y l-1)
    (y-0 alpha) (y-0 zeta-0) (y-0 l-1))
  (precur (9 0))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta-0) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0))
    ((4 1) (10 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 4 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv b-0 l-2))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l l-0)) l-1))
      (send (cat (exp (gen) (mul l l-0)) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l-1))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-6 "nil")) (send l))
    ((recv (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-0 (rec y-0)))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b (exp (gen) zeta-0)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b
            (hash (exp (gen) (mul alpha l-1))
              (exp (gen) (mul zeta-0 y-0))))))))
  (label 139)
  (parent 113)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 ignore-2 mesg) (na nb na-0 nb-0 data)
    (a b a-0 b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pt-8 pval)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn) (x y rndx)
    (zeta expt) (l l-0 rndx) (alpha zeta-0 expt) (l-1 y-0 l-2 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l-1) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l) (y y) (alpha (mul (rec l) l-0 l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) y-0) (mul l-1 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b-0)
    (priv-stor priv-stor-2) (lb l-2) (y y-0) (alpha alpha)
    (zeta zeta-0))
  (defstrand ltx-gen 2 (ignore ignore-2) (self b-0)
    (priv-stor priv-stor-2) (l l-2))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0))
    ((10 3) (9 0)) ((11 1) (10 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1 l-2)
  (uniq-gen x y y-0)
  (absent (x l-0) (x l-1) (y zeta) (y (mul (rec l) l-0 l-1)) (y l)
    (y-0 alpha) (y-0 zeta-0) (y-0 l-2))
  (precur (9 0))
  (gen-st (pv a l-0) (pv b l) (pv b-0 l-2))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta-0) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b) (undisclosed l-1))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0))
    ((11 1) (10 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv b-0 l-2))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) y-0) (mul l-1 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-1 (rec y-0)))))
    ((load priv-stor-2 (cat pt-7 (pv b-0 l-2)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0)))
      (recv (cat na-0 a-0 b-0 (exp (gen) zeta-0)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul alpha l-2))
              (exp (gen) (mul zeta-0 y-0)))))))
    ((load priv-stor-2 (cat pt-8 ignore-2))
      (stor priv-stor-2 (cat pt-7 (pv b-0 l-2)))))
  (label 140)
  (parent 113)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 rndx) (beta expt) (x-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l-1) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l) (y y) (alpha (mul (rec l) l-0 l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) x-0) (mul (rec x-0) l-1)))
  (defstrand init 3 (na na-0) (a b) (b b-0) (priv-stor priv-stor-0)
    (la l-1) (x x-0) (beta beta))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (10 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 2) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen x y x-0)
  (absent (x l-0) (x l-1) (y zeta) (y (mul (rec l) l-0 l-1)) (y l)
    (x-0 beta) (x-0 l-1))
  (precur (9 0))
  (gen-st (pv a l-0) (pv b l) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-1))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (10 0)) ((4 1) (3 0))
    ((4 1) (6 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 2 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv a-0 l-2))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) x-0) (mul (rec x-0) l-1)))
      (send (cat (exp (gen) x-0) (mul (rec x-0) l-1))))
    ((load priv-stor-0 (cat pt-2 (pv b l-1)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 b b-0 (exp (gen) x-0)))))
  (label 141)
  (parent 114)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l rndx) (beta expt) (l-0 x-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-1) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l) (y y) (alpha (mul (rec l) l-0 l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-0) l-1))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-1))
  (deflistener (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
  (defstrand init 3 (na na-0) (a a) (b b-0) (priv-stor priv-stor)
    (la l-1) (x x-0) (beta beta))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((1 1) (10 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 2) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen x y x-0)
  (absent (x l-0) (x l-1) (y zeta) (y (mul (rec l) l-0 l-1)) (y l)
    (x-0 beta) (x-0 l-1))
  (precur (9 0))
  (gen-st (pv a l-1) (pv b l))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((1 1) (10 0)) ((4 1) (3 0))
    ((4 1) (6 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 1 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv a-0 l-2))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l-1)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) l-1)) (send (cat (exp (gen) l-0) l-1)))
    ((load priv-stor (cat pt (pv a l-1)))
      (stor priv-stor (cat pt-6 "nil")) (send l-1))
    ((recv (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-0 (rec x-0)))))
    ((load priv-stor (cat pt (pv a l-1)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a b-0 (exp (gen) x-0)))))
  (label 142)
  (parent 114)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l rndx) (beta expt) (l-0 x-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-1) (y y) (alpha (mul l l-0 (rec l-1))) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l l-0)) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
  (defstrand init 3 (na na-0) (a b) (b b-0) (priv-stor priv-stor-1)
    (la l-1) (x x-0) (beta beta))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0)) ((4 1) (10 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 2) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen x y x-0)
  (absent (x l) (x l-0) (y zeta) (y (mul l l-0 (rec l-1))) (y l-1)
    (x-0 beta) (x-0 l-1))
  (precur (9 0))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0))
    ((4 1) (10 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 4 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv a-0 l-2))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l l-0)) l-1))
      (send (cat (exp (gen) (mul l l-0)) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l-1))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-6 "nil")) (send l))
    ((recv (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-0 (rec x-0)))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 b b-0 (exp (gen) x-0)))))
  (label 143)
  (parent 114)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 ignore-2 mesg) (na nb na-0 data)
    (a b a-0 b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pt-8 pval)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn) (x y rndx)
    (zeta expt) (l l-0 rndx) (beta expt) (l-1 x-0 l-2 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l-1) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l) (y y) (alpha (mul (rec l) l-0 l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
  (defstrand init 3 (na na-0) (a a-0) (b b-0) (priv-stor priv-stor-2)
    (la l-2) (x x-0) (beta beta))
  (defstrand ltx-gen 2 (ignore ignore-2) (self a-0)
    (priv-stor priv-stor-2) (l l-2))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0))
    ((10 2) (9 0)) ((11 1) (10 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1 l-2)
  (uniq-gen x y x-0)
  (absent (x l-0) (x l-1) (y zeta) (y (mul (rec l) l-0 l-1)) (y l)
    (x-0 beta) (x-0 l-2))
  (precur (9 0))
  (gen-st (pv a l-0) (pv b l) (pv a-0 l-2))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-1))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0))
    ((11 1) (10 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv a-0 l-2))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-1 (rec x-0)))))
    ((load priv-stor-2 (cat pt-7 (pv a-0 l-2)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a-0 b-0 (exp (gen) x-0))))
    ((load priv-stor-2 (cat pt-8 ignore-2))
      (stor priv-stor-2 (cat pt-7 (pv a-0 l-2)))))
  (label 144)
  (parent 114)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb lb) (y y) (alpha (mul l l-0 (rec lb))) (zeta x))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) (mul l l-0)) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 2) (0 1))
    ((2 2) (9 0)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec lb))) (y lb) (y x))
  (precur (9 0))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) y) (gen)) (neq (exp (gen) x) (gen)) (neq a b)
    (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 10 3 resp 4) (exp (gen) y-0) (0 3))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec lb))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((recv (cat (exp (gen) (mul l l-0)) lb))
      (send (cat (exp (gen) (mul l l-0)) lb)))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-6 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one)))))
  (label 145)
  (parent 117)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l-1) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l) (y y) (alpha (mul (rec l) l-0 l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) l-1) (one)))
  (deflistener (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 2) (0 1))
    ((2 2) (9 0)) ((3 3) (10 0)) ((4 1) (3 0)) ((4 1) (6 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l-0) (x l-1) (y zeta) (y (mul (rec l) l-0 l-1)) (y l))
  (precur (9 0) (10 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-1))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
    (exp (gen) (mul (rec x) y zeta)) (0 3))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) l-1) (one)))
      (send (cat (exp (gen) l-1) (one))))
    ((recv (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
      (send (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))))
  (label 146)
  (parent 117)
  (unrealized (10 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) (mul l-0 (rec lb))) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (precedes ((1 1) (0 0)) ((1 1) (5 0)) ((2 2) (0 1)) ((2 2) (6 0))
    ((3 1) (7 0)) ((4 1) (0 3)) ((5 2) (4 0)) ((6 1) (4 0))
    ((7 2) (6 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) y) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (5 0)) ((3 1) (7 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((recv (cat (exp (gen) (mul l-0 (rec lb))) l))
      (send (cat (exp (gen) (mul l-0 (rec lb))) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) lb)) (send (cat (exp (gen) l-0) lb)))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send lb)))
  (label 147)
  (parent 121)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb lb) (y y) (alpha (mul l l-0 (rec lb))) (zeta (mul x w)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) (mul l-0 (rec lb))) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((2 2) (7 0)) ((3 3) (9 0)) ((4 1) (3 0)) ((4 1) (8 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec lb))) (y lb) (y (mul x w)))
  (precur (9 0))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) (mul w y)) (gen))
    (neq (exp (gen) (mul x w)) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 10 3 resp 4) (exp (gen) y-0) (9 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec lb))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) (mul x w))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((recv (cat (exp (gen) (mul l-0 (rec lb))) l))
      (send (cat (exp (gen) (mul l-0 (rec lb))) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) lb)) (send (cat (exp (gen) l-0) lb)))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send lb))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 148)
  (parent 122)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 rndx) (alpha zeta-0 expt) (y-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-1) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-0) (y y) (alpha (mul l (rec l-0) l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) y-0) (mul (rec y-0) l-1)))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b)
    (priv-stor priv-stor-0) (lb l-1) (y y-0) (alpha alpha)
    (zeta zeta-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (10 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 3) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen x y y-0)
  (absent (x l) (x l-1) (y zeta) (y (mul l (rec l-0) l-1)) (y l-0)
    (y-0 alpha) (y-0 zeta-0) (y-0 l-1))
  (precur (9 0))
  (gen-st (pv a l) (pv b l-0) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta-0) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b) (undisclosed l-1))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (10 0)) ((4 1) (3 0))
    ((4 1) (8 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 2 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv b-0 l-2))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) y-0) (mul (rec y-0) l-1)))
      (send (cat (exp (gen) y-0) (mul (rec y-0) l-1))))
    ((load priv-stor-0 (cat pt-2 (pv b l-1)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b (exp (gen) zeta-0)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b
            (hash (exp (gen) (mul alpha l-1))
              (exp (gen) (mul zeta-0 y-0))))))))
  (label 149)
  (parent 123)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l rndx) (alpha zeta-0 expt) (l-0 y-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-1) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l) (y y) (alpha (mul (rec l) l-0 l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul (rec l) l-0)) l-1))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-1))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b a)
    (priv-stor priv-stor) (lb l-1) (y y-0) (alpha alpha) (zeta zeta-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((1 1) (10 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 3) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen x y y-0)
  (absent (x l-0) (x l-1) (y zeta) (y (mul (rec l) l-0 l-1)) (y l)
    (y-0 alpha) (y-0 zeta-0) (y-0 l-1))
  (precur (9 0))
  (gen-st (pv a l-1) (pv b l))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta-0) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((1 1) (10 0)) ((4 1) (3 0))
    ((4 1) (8 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 1 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv b-0 l-2))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l-1)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul (rec l) l-0)) l-1))
      (send (cat (exp (gen) (mul (rec l) l-0)) l-1)))
    ((load priv-stor (cat pt (pv a l-1)))
      (stor priv-stor (cat pt-5 "nil")) (send l-1))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l))
    ((recv (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-0 (rec y-0)))))
    ((load priv-stor (cat pt (pv a l-1)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 a (exp (gen) zeta-0)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 a
            (hash (exp (gen) (mul alpha l-1))
              (exp (gen) (mul zeta-0 y-0))))))))
  (label 150)
  (parent 123)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l rndx) (alpha zeta-0 expt) (l-0 y-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-1) (y y) (alpha (mul l l-0 (rec l-1))) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l-0 (rec l-1))) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b)
    (priv-stor priv-stor-1) (lb l-1) (y y-0) (alpha alpha)
    (zeta zeta-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0)) ((4 1) (10 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 3) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen x y y-0)
  (absent (x l) (x l-0) (y zeta) (y (mul l l-0 (rec l-1))) (y l-1)
    (y-0 alpha) (y-0 zeta-0) (y-0 l-1))
  (precur (9 0))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta-0) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0))
    ((4 1) (10 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 4 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv b-0 l-2))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l-0 (rec l-1))) l))
      (send (cat (exp (gen) (mul l-0 (rec l-1))) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) l-1)) (send (cat (exp (gen) l-0) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-1))
    ((recv (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-0 (rec y-0)))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b (exp (gen) zeta-0)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b
            (hash (exp (gen) (mul alpha l-1))
              (exp (gen) (mul zeta-0 y-0))))))))
  (label 151)
  (parent 123)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 ignore-2 mesg) (na nb na-0 nb-0 data)
    (a b a-0 b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pt-8 pval)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn) (x y rndx)
    (zeta expt) (l l-0 rndx) (alpha zeta-0 expt) (l-1 y-0 l-2 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-1) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-0) (y y) (alpha (mul l (rec l-0) l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) y-0) (mul l-1 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b-0)
    (priv-stor priv-stor-2) (lb l-2) (y y-0) (alpha alpha)
    (zeta zeta-0))
  (defstrand ltx-gen 2 (ignore ignore-2) (self b-0)
    (priv-stor priv-stor-2) (l l-2))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0))
    ((10 3) (9 0)) ((11 1) (10 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1 l-2)
  (uniq-gen x y y-0)
  (absent (x l) (x l-1) (y zeta) (y (mul l (rec l-0) l-1)) (y l-0)
    (y-0 alpha) (y-0 zeta-0) (y-0 l-2))
  (precur (9 0))
  (gen-st (pv a l) (pv b l-0) (pv b-0 l-2))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta-0) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b) (undisclosed l-1))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0))
    ((11 1) (10 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv b-0 l-2))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) y-0) (mul l-1 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-1 (rec y-0)))))
    ((load priv-stor-2 (cat pt-7 (pv b-0 l-2)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0)))
      (recv (cat na-0 a-0 b-0 (exp (gen) zeta-0)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul alpha l-2))
              (exp (gen) (mul zeta-0 y-0)))))))
    ((load priv-stor-2 (cat pt-8 ignore-2))
      (stor priv-stor-2 (cat pt-7 (pv b-0 l-2)))))
  (label 152)
  (parent 123)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 rndx) (beta expt) (x-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-1) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-0) (y y) (alpha (mul l (rec l-0) l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) x-0) (mul (rec x-0) l-1)))
  (defstrand init 3 (na na-0) (a b) (b b-0) (priv-stor priv-stor-0)
    (la l-1) (x x-0) (beta beta))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (10 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 2) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen x y x-0)
  (absent (x l) (x l-1) (y zeta) (y (mul l (rec l-0) l-1)) (y l-0)
    (x-0 beta) (x-0 l-1))
  (precur (9 0))
  (gen-st (pv a l) (pv b l-0) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-1))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (10 0)) ((4 1) (3 0))
    ((4 1) (8 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 2 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv a-0 l-2))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) x-0) (mul (rec x-0) l-1)))
      (send (cat (exp (gen) x-0) (mul (rec x-0) l-1))))
    ((load priv-stor-0 (cat pt-2 (pv b l-1)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 b b-0 (exp (gen) x-0)))))
  (label 153)
  (parent 124)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l rndx) (beta expt) (l-0 x-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-1) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l) (y y) (alpha (mul (rec l) l-0 l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul (rec l) l-0)) l-1))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-1))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
  (defstrand init 3 (na na-0) (a a) (b b-0) (priv-stor priv-stor)
    (la l-1) (x x-0) (beta beta))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((1 1) (10 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 2) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen x y x-0)
  (absent (x l-0) (x l-1) (y zeta) (y (mul (rec l) l-0 l-1)) (y l)
    (x-0 beta) (x-0 l-1))
  (precur (9 0))
  (gen-st (pv a l-1) (pv b l))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((1 1) (10 0)) ((4 1) (3 0))
    ((4 1) (8 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 1 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv a-0 l-2))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l-1)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul (rec l) l-0)) l-1))
      (send (cat (exp (gen) (mul (rec l) l-0)) l-1)))
    ((load priv-stor (cat pt (pv a l-1)))
      (stor priv-stor (cat pt-5 "nil")) (send l-1))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l))
    ((recv (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-0 (rec x-0)))))
    ((load priv-stor (cat pt (pv a l-1)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a b-0 (exp (gen) x-0)))))
  (label 154)
  (parent 124)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l rndx) (beta expt) (l-0 x-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-1) (y y) (alpha (mul l l-0 (rec l-1))) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l-0 (rec l-1))) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
  (defstrand init 3 (na na-0) (a b) (b b-0) (priv-stor priv-stor-1)
    (la l-1) (x x-0) (beta beta))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0)) ((4 1) (10 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 2) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen x y x-0)
  (absent (x l) (x l-0) (y zeta) (y (mul l l-0 (rec l-1))) (y l-1)
    (x-0 beta) (x-0 l-1))
  (precur (9 0))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0))
    ((4 1) (10 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 4 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv a-0 l-2))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l-0 (rec l-1))) l))
      (send (cat (exp (gen) (mul l-0 (rec l-1))) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) l-1)) (send (cat (exp (gen) l-0) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-1))
    ((recv (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-0 (rec x-0)))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 b b-0 (exp (gen) x-0)))))
  (label 155)
  (parent 124)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 ignore-2 mesg) (na nb na-0 data)
    (a b a-0 b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pt-8 pval)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn) (x y rndx)
    (zeta expt) (l l-0 rndx) (beta expt) (l-1 x-0 l-2 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-1) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-0) (y y) (alpha (mul l (rec l-0) l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
  (defstrand init 3 (na na-0) (a a-0) (b b-0) (priv-stor priv-stor-2)
    (la l-2) (x x-0) (beta beta))
  (defstrand ltx-gen 2 (ignore ignore-2) (self a-0)
    (priv-stor priv-stor-2) (l l-2))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0))
    ((10 2) (9 0)) ((11 1) (10 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1 l-2)
  (uniq-gen x y x-0)
  (absent (x l) (x l-1) (y zeta) (y (mul l (rec l-0) l-1)) (y l-0)
    (x-0 beta) (x-0 l-2))
  (precur (9 0))
  (gen-st (pv a l) (pv b l-0) (pv a-0 l-2))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-1))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0))
    ((11 1) (10 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv a-0 l-2))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-1 (rec x-0)))))
    ((load priv-stor-2 (cat pt-7 (pv a-0 l-2)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a-0 b-0 (exp (gen) x-0))))
    ((load priv-stor-2 (cat pt-8 ignore-2))
      (stor priv-stor-2 (cat pt-7 (pv a-0 l-2)))))
  (label 156)
  (parent 124)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb lb) (y y) (alpha (mul l l-0 (rec lb))) (zeta x))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) (mul l-0 (rec lb))) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) l-0) (one)))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((2 2) (9 0)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec lb))) (y lb) (y x))
  (precur (9 0))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) y) (gen)) (neq (exp (gen) x) (gen)) (neq a b)
    (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 10 3 resp 4) (exp (gen) y-0) (0 3))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec lb))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((recv (cat (exp (gen) (mul l-0 (rec lb))) l))
      (send (cat (exp (gen) (mul l-0 (rec lb))) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) lb)) (send (cat (exp (gen) l-0) lb)))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one)))))
  (label 157)
  (parent 127)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-1) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-0) (y y) (alpha (mul l (rec l-0) l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) l-1) (one)))
  (deflistener (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((2 2) (9 0)) ((3 3) (10 0)) ((4 1) (3 0)) ((4 1) (8 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-1) (y zeta) (y (mul l (rec l-0) l-1)) (y l-0))
  (precur (9 0) (10 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-1))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
    (exp (gen) (mul (rec x) y zeta)) (0 3))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) l-1) (one)))
      (send (cat (exp (gen) l-1) (one))))
    ((recv (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
      (send (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))))
  (label 158)
  (parent 127)
  (unrealized (10 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (precedes ((1 1) (0 0)) ((1 1) (3 0)) ((2 2) (0 1)) ((2 2) (4 0))
    ((3 2) (0 3)) ((4 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (4 0))
  (gen-st (pv a l))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (3 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one)))))
  (label 159)
  (parent 132)
  (seen 131)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn)
    (lb l x rndx) (w expt) (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta lb) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (precedes ((1 1) (0 0)) ((1 1) (3 0)) ((2 2) (0 1)) ((3 2) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb lb l)
  (uniq-gen x)
  (absent (x lb) (x l))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a b) (undisclosed lb))
  (leads-to ((1 1) (0 0)) ((1 1) (3 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) lb) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul lb l)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b lb)))
      (send
        (sig (body b (exp (gen) lb) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l)))
  (label 160)
  (parent 134)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (precedes ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1)) ((2 2) (5 0))
    ((3 1) (4 0)) ((4 2) (0 3)) ((5 1) (0 3)) ((6 2) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) y) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((3 1) (4 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-6 "nil")) (send l)))
  (label 161)
  (parent 135)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) (mul l l-0)) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (8 0)) ((1 1) (0 0)) ((1 1) (7 0)) ((2 2) (0 1))
    ((2 2) (6 0)) ((3 1) (5 0)) ((4 1) (8 0)) ((5 2) (4 0))
    ((6 1) (4 0)) ((7 2) (6 0)) ((8 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (8 0))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (7 0)) ((3 1) (5 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((recv (cat (exp (gen) (mul l l-0)) lb))
      (send (cat (exp (gen) (mul l l-0)) lb)))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-6 "nil")) (send l))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 162)
  (parent 136)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) (mul l l-0)) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (precedes ((1 1) (0 0)) ((1 1) (7 0)) ((2 2) (0 1)) ((2 2) (8 0))
    ((3 1) (5 0)) ((4 1) (0 3)) ((5 2) (4 0)) ((6 1) (4 0))
    ((7 2) (6 0)) ((8 1) (6 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (8 0))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) y) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (7 0)) ((3 1) (5 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((recv (cat (exp (gen) (mul l l-0)) lb))
      (send (cat (exp (gen) (mul l l-0)) lb)))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-6 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one)))))
  (label 163)
  (parent 145)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb lb) (y y) (alpha (mul l l-0 (rec lb))) (zeta (mul x w)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) (mul l l-0)) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 2) (0 1))
    ((2 2) (9 0)) ((3 3) (10 0)) ((4 1) (3 0)) ((4 1) (6 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec lb))) (y lb) (y (mul x w)))
  (precur (9 0) (10 0))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) (mul w y)) (gen))
    (neq (exp (gen) (mul x w)) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 11 3 resp 4) (exp (gen) y-0) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec lb))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) (mul x w))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((recv (cat (exp (gen) (mul l l-0)) lb))
      (send (cat (exp (gen) (mul l l-0)) lb)))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-6 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 164)
  (parent 146)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (precedes ((1 1) (0 0)) ((1 1) (4 0)) ((2 2) (0 1)) ((2 2) (5 0))
    ((3 1) (6 0)) ((4 2) (0 3)) ((5 1) (0 3)) ((6 2) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) y) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (4 0)) ((3 1) (6 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) lb)) (send (cat (exp (gen) l-0) lb)))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send lb)))
  (label 165)
  (parent 147)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) (mul l-0 (rec lb))) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (8 0)) ((1 1) (0 0)) ((1 1) (5 0)) ((2 2) (0 1))
    ((2 2) (6 0)) ((3 1) (7 0)) ((4 1) (8 0)) ((5 2) (4 0))
    ((6 1) (4 0)) ((7 2) (6 0)) ((8 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (8 0))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (5 0)) ((3 1) (7 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((recv (cat (exp (gen) (mul l-0 (rec lb))) l))
      (send (cat (exp (gen) (mul l-0 (rec lb))) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) lb)) (send (cat (exp (gen) l-0) lb)))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send lb))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 166)
  (parent 148)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) (mul l-0 (rec lb))) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) l-0) (one)))
  (precedes ((1 1) (0 0)) ((1 1) (5 0)) ((2 2) (0 1)) ((2 2) (8 0))
    ((3 1) (7 0)) ((4 1) (0 3)) ((5 2) (4 0)) ((6 1) (4 0))
    ((7 2) (6 0)) ((8 1) (6 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (8 0))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) y) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (5 0)) ((3 1) (7 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((recv (cat (exp (gen) (mul l-0 (rec lb))) l))
      (send (cat (exp (gen) (mul l-0 (rec lb))) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) lb)) (send (cat (exp (gen) l-0) lb)))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one)))))
  (label 167)
  (parent 157)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb lb) (y y) (alpha (mul l l-0 (rec lb))) (zeta (mul x w)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) (mul l-0 (rec lb))) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) l-0) (one)))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((2 2) (9 0)) ((3 3) (10 0)) ((4 1) (3 0)) ((4 1) (8 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec lb))) (y lb) (y (mul x w)))
  (precur (9 0) (10 0))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) (mul w y)) (gen))
    (neq (exp (gen) (mul x w)) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 11 3 resp 4) (exp (gen) y-0) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec lb))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) (mul x w))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((recv (cat (exp (gen) (mul l-0 (rec lb))) l))
      (send (cat (exp (gen) (mul l-0 (rec lb))) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) lb)) (send (cat (exp (gen) l-0) lb)))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 168)
  (parent 158)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn)
    (lb l x rndx) (w expt) (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta lb) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (precedes ((1 1) (0 0)) ((1 1) (3 0)) ((2 2) (0 1)) ((3 2) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na lb l)
  (uniq-gen x)
  (absent (x lb) (x l))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a b) (undisclosed lb))
  (leads-to ((1 1) (0 0)) ((1 1) (3 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization forgot nb)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) lb) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul lb l)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b lb)))
      (send
        (sig (body b (exp (gen) lb) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l)))
  (label 169)
  (parent 160)
  (realized)
  (shape)
  (maps
    ((0)
      ((a a) (b b) (la l) (beta lb) (x x) (upsilon (mul w y)) (na na)
        (nb nb) (priv-stor priv-stor))))
  (origs (pt-3 (3 1)) (lb (2 1)) (pt-2 (2 1)) (l (1 1)) (pt (1 1))
    (na (0 2)))
  (ugens (x (0 2))))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (precedes ((1 1) (0 0)) ((1 1) (5 0)) ((2 2) (0 1)) ((2 2) (4 0))
    ((3 1) (0 3)) ((4 1) (0 3)) ((5 2) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) y) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (5 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l)))
  (label 170)
  (parent 161)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (7 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((2 2) (5 0)) ((3 1) (4 0)) ((4 2) (7 0)) ((5 1) (7 0))
    ((6 2) (5 0)) ((7 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (7 0))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((3 1) (4 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-6 "nil")) (send l))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 171)
  (parent 162)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (precedes ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1)) ((2 2) (7 0))
    ((3 1) (4 0)) ((4 2) (0 3)) ((5 1) (0 3)) ((6 2) (5 0))
    ((7 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (7 0))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) y) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((3 1) (4 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-6 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one)))))
  (label 172)
  (parent 163)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) (mul l l-0)) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (9 0)) ((1 1) (0 0)) ((1 1) (7 0)) ((2 2) (0 1))
    ((2 2) (8 0)) ((3 1) (5 0)) ((4 1) (9 0)) ((5 2) (4 0))
    ((6 1) (4 0)) ((7 2) (6 0)) ((8 1) (6 0)) ((9 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (8 0) (9 0))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (7 0)) ((3 1) (5 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((recv (cat (exp (gen) (mul l l-0)) lb))
      (send (cat (exp (gen) (mul l l-0)) lb)))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-6 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 173)
  (parent 164)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (precedes ((1 1) (0 0)) ((1 1) (4 0)) ((2 2) (0 1)) ((3 1) (5 0))
    ((4 2) (0 3)) ((5 2) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) y) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (4 0)) ((3 1) (5 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (5 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send lb)))
  (label 174)
  (parent 165)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (7 0)) ((1 1) (0 0)) ((1 1) (4 0)) ((2 2) (0 1))
    ((2 2) (5 0)) ((3 1) (6 0)) ((4 2) (7 0)) ((5 1) (7 0))
    ((6 2) (5 0)) ((7 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (7 0))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (4 0)) ((3 1) (6 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) lb)) (send (cat (exp (gen) l-0) lb)))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send lb))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 175)
  (parent 166)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) l-0) (one)))
  (precedes ((1 1) (0 0)) ((1 1) (4 0)) ((2 2) (0 1)) ((2 2) (7 0))
    ((3 1) (6 0)) ((4 2) (0 3)) ((5 1) (0 3)) ((6 2) (5 0))
    ((7 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (7 0))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) y) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (4 0)) ((3 1) (6 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) lb)) (send (cat (exp (gen) l-0) lb)))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one)))))
  (label 176)
  (parent 167)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) (mul l-0 (rec lb))) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) l-0) (one)))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (9 0)) ((1 1) (0 0)) ((1 1) (5 0)) ((2 2) (0 1))
    ((2 2) (8 0)) ((3 1) (7 0)) ((4 1) (9 0)) ((5 2) (4 0))
    ((6 1) (4 0)) ((7 2) (6 0)) ((8 1) (6 0)) ((9 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (8 0) (9 0))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (5 0)) ((3 1) (7 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((recv (cat (exp (gen) (mul l-0 (rec lb))) l))
      (send (cat (exp (gen) (mul l-0 (rec lb))) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) lb)) (send (cat (exp (gen) l-0) lb)))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 177)
  (parent 168)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn)
    (l l-0 x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (precedes ((1 1) (0 0)) ((1 1) (4 0)) ((2 2) (0 1)) ((2 2) (3 0))
    ((3 1) (0 3)) ((4 2) (3 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l))
  (facts (neq (exp (gen) y) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (4 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l)))
  (label 178)
  (parent 170)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (6 0)) ((1 1) (0 0)) ((1 1) (5 0)) ((2 2) (0 1))
    ((2 2) (4 0)) ((3 1) (6 0)) ((4 1) (6 0)) ((5 2) (4 0))
    ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (6 0))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (5 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 179)
  (parent 171)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (precedes ((1 1) (0 0)) ((1 1) (5 0)) ((2 2) (0 1)) ((2 2) (6 0))
    ((3 1) (0 3)) ((4 1) (0 3)) ((5 2) (4 0)) ((6 1) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (6 0))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) y) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (5 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one)))))
  (label 180)
  (parent 172)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (8 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((2 2) (7 0)) ((3 1) (4 0)) ((4 2) (8 0)) ((5 1) (8 0))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (7 0) (8 0))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((3 1) (4 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-6 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 181)
  (parent 173)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (precedes ((1 1) (0 0)) ((1 1) (4 0)) ((2 2) (0 1)) ((3 1) (0 3))
    ((4 2) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) y) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (4 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (5 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l)))
  (label 182)
  (parent 174)
  (seen 186)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (6 0)) ((1 1) (0 0)) ((1 1) (4 0)) ((2 2) (0 1))
    ((3 1) (5 0)) ((4 2) (6 0)) ((5 2) (6 0)) ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (6 0))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (4 0)) ((3 1) (5 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (5 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send lb))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 183)
  (parent 175)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) l-0) (one)))
  (precedes ((1 1) (0 0)) ((1 1) (4 0)) ((2 2) (0 1)) ((2 2) (6 0))
    ((3 1) (5 0)) ((4 2) (0 3)) ((5 2) (0 3)) ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (6 0))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) y) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (4 0)) ((3 1) (5 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (5 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one)))))
  (label 184)
  (parent 176)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) l-0) (one)))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (8 0)) ((1 1) (0 0)) ((1 1) (4 0)) ((2 2) (0 1))
    ((2 2) (7 0)) ((3 1) (6 0)) ((4 2) (8 0)) ((5 1) (8 0))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (7 0) (8 0))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (4 0)) ((3 1) (6 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) lb)) (send (cat (exp (gen) l-0) lb)))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 185)
  (parent 177)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn)
    (l l-0 x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (precedes ((1 1) (0 0)) ((1 1) (3 0)) ((2 2) (0 1)) ((3 2) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l))
  (facts (neq (exp (gen) y) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (3 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l)))
  (label 186)
  (parent 178)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn)
    (l l-0 x rndx) (w expt) (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (5 0)) ((1 1) (0 0)) ((1 1) (4 0)) ((2 2) (0 1))
    ((2 2) (3 0)) ((3 1) (5 0)) ((4 2) (3 0)) ((5 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (5 0))
  (gen-st (pv a l))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (4 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 187)
  (parent 179)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn)
    (l l-0 x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (precedes ((1 1) (0 0)) ((1 1) (4 0)) ((2 2) (0 1)) ((2 2) (5 0))
    ((3 1) (0 3)) ((4 2) (3 0)) ((5 1) (3 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (5 0))
  (gen-st (pv a l))
  (facts (neq (exp (gen) y) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (4 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one)))))
  (label 188)
  (parent 180)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (7 0)) ((1 1) (0 0)) ((1 1) (5 0)) ((2 2) (0 1))
    ((2 2) (6 0)) ((3 1) (7 0)) ((4 1) (7 0)) ((5 2) (4 0))
    ((6 1) (4 0)) ((7 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (6 0) (7 0))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (5 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 189)
  (parent 181)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (5 0)) ((1 1) (0 0)) ((1 1) (4 0)) ((2 2) (0 1))
    ((3 1) (5 0)) ((4 2) (5 0)) ((5 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (5 0))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (4 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (5 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 190)
  (parent 183)
  (seen 194)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (precedes ((1 1) (0 0)) ((1 1) (4 0)) ((2 2) (0 1)) ((2 2) (5 0))
    ((3 1) (0 3)) ((4 2) (0 3)) ((5 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (5 0))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) y) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (4 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (5 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one)))))
  (label 191)
  (parent 184)
  (seen 195)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) l-0) (one)))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (7 0)) ((1 1) (0 0)) ((1 1) (4 0)) ((2 2) (0 1))
    ((2 2) (6 0)) ((3 1) (5 0)) ((4 2) (7 0)) ((5 2) (7 0))
    ((6 1) (7 0)) ((7 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (6 0) (7 0))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (4 0)) ((3 1) (5 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (5 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 192)
  (parent 185)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn)
    (l l-0 x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (precedes ((1 1) (0 0)) ((1 1) (3 0)) ((2 2) (0 1)) ((3 2) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l))
  (facts (neq (exp (gen) y) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (3 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization forgot nb)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l)))
  (label 193)
  (parent 186)
  (realized)
  (shape)
  (maps
    ((0)
      ((a a) (b b) (la l) (beta l-0) (x x) (upsilon y) (na na) (nb nb)
        (priv-stor priv-stor))))
  (origs (l-0 (2 1)) (pt-2 (2 1)) (pt-3 (3 1)) (l (1 1)) (pt (1 1))
    (na (0 2)))
  (ugens (x (0 2))))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn)
    (l l-0 x rndx) (w expt) (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((1 1) (3 0)) ((2 2) (0 1))
    ((3 2) (4 0)) ((4 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (4 0))
  (gen-st (pv a l))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (3 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 194)
  (parent 187)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn)
    (l l-0 x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (precedes ((1 1) (0 0)) ((1 1) (3 0)) ((2 2) (0 1)) ((2 2) (4 0))
    ((3 2) (0 3)) ((4 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (4 0))
  (gen-st (pv a l))
  (facts (neq (exp (gen) y) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (3 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one)))))
  (label 195)
  (parent 188)
  (seen 186)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn)
    (l l-0 x rndx) (w expt) (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (6 0)) ((1 1) (0 0)) ((1 1) (4 0)) ((2 2) (0 1))
    ((2 2) (5 0)) ((3 1) (6 0)) ((4 2) (3 0)) ((5 1) (3 0))
    ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (5 0) (6 0))
  (gen-st (pv a l))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (4 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 196)
  (parent 189)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (6 0)) ((1 1) (0 0)) ((1 1) (4 0)) ((2 2) (0 1))
    ((2 2) (5 0)) ((3 1) (6 0)) ((4 2) (6 0)) ((5 1) (6 0))
    ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (5 0) (6 0))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (4 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (5 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 197)
  (parent 192)
  (seen 199)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn)
    (l l-0 x rndx) (w expt) (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (precedes ((1 1) (0 0)) ((1 1) (3 0)) ((2 2) (0 1)) ((3 2) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (3 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l)))
  (label 198)
  (parent 194)
  (seen 131)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn)
    (l l-0 x rndx) (w expt) (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (5 0)) ((1 1) (0 0)) ((1 1) (3 0)) ((2 2) (0 1))
    ((2 2) (4 0)) ((3 2) (5 0)) ((4 1) (5 0)) ((5 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (4 0) (5 0))
  (gen-st (pv a l))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (3 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 199)
  (parent 196)
  (seen 194)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(comment "Nothing left to do")

(defprotocol dhcr-um diffie-hellman
  (defrole init
    (vars (la x rndx) (beta upsilon expt) (a b name) (na nb data)
      (priv-stor locn))
    (trace (load priv-stor (pv a la))
      (recv
        (sig (body b (exp (gen) beta) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul la beta))
              (exp (gen) (mul x upsilon)))))) (send nb))
    (uniq-orig na)
    (uniq-gen x)
    (absent (x la) (x beta))
    (assume (fact neq (exp (gen) upsilon) (gen)))
    (gen-st (pv a la)))
  (defrole resp
    (vars (lb y rndx) (alpha zeta expt) (a b name) (na nb data)
      (priv-stor locn))
    (trace (load priv-stor (pv b lb))
      (recv
        (sig (body a (exp (gen) alpha) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul lb alpha))
              (exp (gen) (mul y zeta)))))) (recv nb))
    (uniq-orig nb)
    (uniq-gen y)
    (absent (y lb) (y alpha) (y zeta))
    (assume (fact neq (exp (gen) zeta) (gen)))
    (gen-st (pv b lb)))
  (defrole ltx-gen
    (vars (self name) (l rndx) (priv-stor locn) (ignore mesg))
    (trace (load priv-stor ignore) (stor priv-stor (pv self l))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    (uniq-orig l))
  (defrole ltx-disclose
    (vars (self name) (l rndx) (priv-stor locn))
    (trace (load priv-stor (pv self l)) (stor priv-stor "nil") (send l))
    (gen-st (pv self l)))
  (defrule undisclosed-not-disclosed
    (forall ((z strd) (l rndx))
      (implies
        (and (fact undisclosed l) (p "ltx-disclose" z (idx 2))
          (p "ltx-disclose" "l" z l))
        (false))))
  (defgenrule neqRl_indx
    (forall ((x indx)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_strd
    (forall ((x strd)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_mesg
    (forall ((x mesg)) (implies (fact neq x x) (false))))
  (defgenrule scissorsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (trans z2 i2)
          (leads-to z0 i0 z1 i1) (leads-to z0 i0 z2 i2))
        (and (= z1 z2) (= i1 i2)))))
  (defgenrule cakeRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (leads-to z0 i0 z1 i1)
          (leads-to z0 i0 z2 i2) (prec z1 i1 z2 i2)) (false))))
  (defgenrule no-interruption
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (leads-to z0 i0 z2 i2) (trans z1 i1)
          (same-locn z0 i0 z1 i1) (prec z0 i0 z1 i1) (prec z1 i1 z2 i2))
        (false))))
  (defgenrule shearsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (trans z2 i2)
          (leads-to z0 i0 z1 i1) (same-locn z0 i0 z2 i2)
          (prec z0 i0 z2 i2))
        (or (and (= z1 z2) (= i1 i2)) (prec z1 i1 z2 i2)))))
  (defgenrule invShearsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (same-locn z0 i0 z1 i1)
          (leads-to z1 i1 z2 i2) (prec z0 i0 z2 i2))
        (or (and (= z0 z1) (= i0 i1)) (prec z0 i0 z1 i1)))))
  (defgenrule assume-init-0
    (forall ((z strd) (upsilon expt))
      (implies (and (p "init" z (idx 4)) (p "init" "upsilon" z upsilon))
        (fact neq (exp (gen) upsilon) (gen)))))
  (defgenrule assume-resp-0
    (forall ((z strd) (zeta expt))
      (implies (and (p "resp" z (idx 3)) (p "resp" "zeta" z zeta))
        (fact neq (exp (gen) zeta) (gen)))))
  (defgenrule trRl_ltx-gen-at-1
    (forall ((z strd))
      (implies (p "ltx-gen" z (idx 2)) (trans z (idx 1)))))
  (defgenrule trRl_ltx-gen-at-0
    (forall ((z strd))
      (implies (p "ltx-gen" z (idx 2)) (trans z (idx 0)))))
  (defgenrule trRl_ltx-disclose-at-1
    (forall ((z strd))
      (implies (p "ltx-disclose" z (idx 2)) (trans z (idx 1)))))
  (defgenrule trRl_ltx-disclose-at-0
    (forall ((z strd))
      (implies (p "ltx-disclose" z (idx 2)) (trans z (idx 0)))))
  (defgenrule gen-st-init-0
    (forall ((z strd) (a name) (la rndx))
      (implies
        (and (p "init" z (idx 1)) (p "init" "la" z la)
          (p "init" "a" z a)) (gen-st (pv a la)))))
  (defgenrule gen-st-resp-0
    (forall ((z strd) (b name) (lb rndx))
      (implies
        (and (p "resp" z (idx 1)) (p "resp" "lb" z lb)
          (p "resp" "b" z b)) (gen-st (pv b lb)))))
  (defgenrule gen-st-ltx-disclose-0
    (forall ((z strd) (self name) (l rndx))
      (implies
        (and (p "ltx-disclose" z (idx 1)) (p "ltx-disclose" "l" z l)
          (p "ltx-disclose" "self" z self)) (gen-st (pv self l)))))
  (lang (sig sign) (body (tuple 3)) (pv (tuple 2))))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (pt pval) (priv-stor locn) (la x rndx)
    (beta upsilon expt))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la la) (x x) (beta beta) (upsilon upsilon))
  (non-orig (privk "sig" b))
  (uniq-orig na)
  (uniq-gen x)
  (absent (x la) (x beta))
  (facts (neq a b) (undisclosed la))
  (traces
    ((load priv-stor (cat pt (pv a la)))
      (recv
        (sig (body b (exp (gen) beta) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul la beta))
              (exp (gen) (mul x upsilon)))))) (send nb)))
  (label 200)
  (unrealized (0 1))
  (origs (na (0 2)))
  (ugens (x (0 2)))
  (comment "Not closed under rules"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (pt pval) (priv-stor locn) (la x rndx)
    (beta upsilon expt))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la la) (x x) (beta beta) (upsilon upsilon))
  (non-orig (privk "sig" b))
  (uniq-orig na)
  (uniq-gen x)
  (absent (x la) (x beta))
  (gen-st (pv a la))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b) (undisclosed la))
  (rule assume-init-0 gen-st-ltx-disclose-0)
  (traces
    ((load priv-stor (cat pt (pv a la)))
      (recv
        (sig (body b (exp (gen) beta) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul la beta))
              (exp (gen) (mul x upsilon)))))) (send nb)))
  (label 201)
  (parent 200)
  (unrealized (0 0) (0 1))
  (origs (na (0 2)))
  (ugens (x (0 2)))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (a b name) (pt pt-0 pval)
    (priv-stor locn) (x rndx) (beta upsilon expt) (l rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta beta) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (precedes ((1 1) (0 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l)
  (uniq-gen x)
  (absent (x beta) (x l))
  (gen-st (pv a l))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)))
  (rule assume-init-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor (cat pt (pv a l))) (0 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) beta) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul beta l))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l)))))
  (label 202)
  (parent 201)
  (unrealized (0 1) (0 3))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((1 1) (0 0)) ((2 2) (0 1)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)))
  (rule assume-init-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation encryption-test (added-strand ltx-gen 3)
    (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)) (0 1))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))))
  (label 203)
  (parent 202)
  (unrealized (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx)
    (zeta expt))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb lb) (y y) (alpha (mul l l-0 (rec lb))) (zeta zeta))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 2) (0 1)) ((3 3) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec lb))) (y lb) (y zeta))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)))
  (rule assume-init-0 assume-resp-0 gen-st-ltx-disclose-0
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation encryption-test (added-strand resp 4)
    (enc na nb a b
      (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))) (0 3))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec lb))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))))
  (label 204)
  (parent 203)
  (unrealized (0 3) (3 0) (3 1))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (precedes ((0 2) (3 0)) ((1 1) (0 0)) ((2 2) (0 1)) ((3 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)))
  (rule assume-init-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation encryption-test
    (added-listener
      (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
    (enc na nb a b
      (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))) (0 3))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send
        (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))))
  (label 205)
  (parent 203)
  (unrealized (3 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (l x y rndx)
    (zeta expt) (l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (lb l-0) (y y) (alpha l) (zeta zeta))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (3 0)) ((2 2) (0 1))
    ((3 3) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y l) (y zeta) (y l-0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((2 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 4 2 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv b l-1))) (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))))
  (label 206)
  (parent 204)
  (unrealized (0 3) (3 1))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 x y rndx)
    (zeta expt) (l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-1) (y y) (alpha (mul l l-0 (rec l-1))) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 2) (0 1)) ((3 3) (0 3))
    ((4 1) (3 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec l-1))) (y zeta) (y l-1))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((4 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv b l-1))) (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1)))))
  (label 207)
  (parent 204)
  (unrealized (0 3) (3 1))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((2 2) (0 1)) ((3 1) (0 3))
    ((4 1) (3 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)))
  (rule assume-init-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation encryption-test
    (added-listener
      (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))) (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))))
  (label 208)
  (parent 205)
  (unrealized (4 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x y rndx)
    (zeta expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (la l-0) (x x) (beta l)
    (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (0 0)) ((3 2) (2 1)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y zeta) (y l) (y l-0))
  (gen-st (pv b l) (pv self l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq self b) (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 1 4 ltx-gen 3) (exp (gen) l-0) (3 1))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 209)
  (parent 206)
  (unrealized (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (l x y rndx)
    (zeta expt) (l-0 rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (lb l-0) (y y) (alpha l) (zeta zeta))
  (deflistener (cat (exp (gen) (mul l (rec w))) w))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (3 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 1)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y l) (y zeta) (y l-0))
  (precur (4 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((2 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul l (rec w))) w)) (exp (gen) l)
    (3 1))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((recv (cat (exp (gen) (mul l (rec w))) w))
      (send (cat (exp (gen) (mul l (rec w))) w))))
  (label 210)
  (parent 206)
  (unrealized (0 3) (4 0))
  (comment "7 in cohort - 7 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 x y rndx)
    (zeta expt) (l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-1) (y y) (alpha (mul l l-0 (rec l-1))) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l l-0)) l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 2) (0 1)) ((3 3) (0 3))
    ((4 1) (3 0)) ((4 1) (5 0)) ((5 1) (3 1)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec l-1))) (y zeta) (y l-1))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((4 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul l l-0)) l-1))
    (exp (gen) (mul l l-0 (rec l-1))) (3 1))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l l-0)) l-1))
      (send (cat (exp (gen) (mul l l-0)) l-1))))
  (label 211)
  (parent 207)
  (unrealized (0 3) (5 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 x y rndx)
    (zeta expt) (l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-1) (y y) (alpha (mul l l-0 (rec l-1))) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l (rec l-1))) l-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (5 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((5 1) (3 1)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec l-1))) (y zeta) (y l-1))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((4 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul l (rec l-1))) l-0))
    (exp (gen) (mul l l-0 (rec l-1))) (3 1))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l (rec l-1))) l-0))
      (send (cat (exp (gen) (mul l (rec l-1))) l-0))))
  (label 212)
  (parent 207)
  (unrealized (0 3) (5 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 x y rndx)
    (zeta expt) (l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-1) (y y) (alpha (mul l l-0 (rec l-1))) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l-0 (rec l-1))) l))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (5 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((5 1) (3 1)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec l-1))) (y zeta) (y l-1))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((4 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul l-0 (rec l-1))) l))
    (exp (gen) (mul l l-0 (rec l-1))) (3 1))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l-0 (rec l-1))) l))
      (send (cat (exp (gen) (mul l-0 (rec l-1))) l))))
  (label 213)
  (parent 207)
  (unrealized (0 3) (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener (cat (exp (gen) l) l-0))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((2 1) (5 0)) ((2 2) (0 1))
    ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)))
  (rule assume-init-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l) l-0))
    (exp (gen) (mul l l-0)) (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0))))
  (label 214)
  (parent 208)
  (unrealized (5 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener (cat (exp (gen) l-0) l))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((1 1) (5 0)) ((2 2) (0 1))
    ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)))
  (rule assume-init-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l-0) l))
    (exp (gen) (mul l l-0)) (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l))))
  (label 215)
  (parent 208)
  (unrealized (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (lb l x y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (la l) (x x) (beta lb) (upsilon y))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l lb))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (priv-stor priv-stor)
    (lb lb) (y y) (alpha l) (zeta x))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (0 0)) ((3 2) (2 1)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb lb l)
  (uniq-gen x y)
  (absent (x lb) (x l) (y lb) (y l) (y x))
  (gen-st (pv b lb) (pv self l))
  (facts (neq (exp (gen) y) (gen)) (neq (exp (gen) x) (gen))
    (neq self b) (undisclosed l))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 4 2 resp 4) (exp (gen) y-0) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) lb) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul lb l)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b lb)))
      (send
        (sig (body b (exp (gen) lb) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b lb)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul lb l)) (exp (gen) (mul x y)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))))
  (label 216)
  (parent 209)
  (realized)
  (shape)
  (maps
    ((0)
      ((a self) (b b) (la l) (x x) (beta lb) (upsilon y) (na na) (nb nb)
        (priv-stor priv-stor-0))))
  (origs (nb (2 3)) (l (3 1)) (pt-2 (3 1)) (lb (1 1)) (pt-0 (1 1))
    (na (0 2)))
  (ugens (y (2 3)) (x (0 2))))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x y rndx)
    (zeta expt) (l l-0 rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (la l-0) (x x) (beta l)
    (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (4 0))
    ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y zeta) (y l) (y l-0))
  (precur (4 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq self b) (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
    (exp (gen) (mul (rec x) y zeta)) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
      (send (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))))
  (label 217)
  (parent 209)
  (unrealized (4 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (a b a-0 b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l la rndx) (beta expt) (l-0 x-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (deflistener (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
  (defstrand init 3 (na na-0) (a a-0) (b b-0) (priv-stor priv-stor-1)
    (la la) (x x-0) (beta beta))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (3 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 1)) ((5 2) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen x y x-0)
  (absent (x l) (x l-0) (y zeta) (y l) (y l-0) (x-0 la) (x-0 beta))
  (precur (4 0))
  (gen-st (pv a l-0) (pv b l) (pv a-0 la))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((2 1) (3 0)))
  (rule assume-init-0 assume-resp-0 gen-st-ltx-disclose-0
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand init 3) (exp (gen) x-0) (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((recv (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-0 (rec x-0)))))
    ((load priv-stor-1 (cat pt-3 (pv a-0 la)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0)))
      (send (cat na-0 a-0 b-0 (exp (gen) x-0)))))
  (label 218)
  (parent 210)
  (unrealized (0 3) (3 1) (4 0) (5 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta expt) (l l-0 x rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul y zeta (rec x))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (lb l-0) (y y) (alpha l) (zeta zeta))
  (deflistener (cat (exp (gen) x) (mul l (rec x))))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((2 1) (3 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 1)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen y x)
  (absent (y zeta) (y l) (y l-0) (x l) (x l-0))
  (precur (4 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq (exp (gen) (mul y zeta (rec x))) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((2 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 5 0 init 3) (exp (gen) x-0) (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y zeta (rec x)))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((recv (cat (exp (gen) x) (mul l (rec x))))
      (send (cat (exp (gen) x) (mul l (rec x))))))
  (label 219)
  (parent 210)
  (unrealized (0 3) (3 1) (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x y rndx)
    (zeta expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (deflistener (cat (gen) l-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (4 0)) ((2 1) (3 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 1)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y zeta) (y l) (y l-0))
  (precur (4 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((2 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (contracted (l-1 l-0) (w l-0)) (gen) (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0))))
  (label 220)
  (parent 210)
  (unrealized (0 3) (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x y rndx)
    (zeta expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (la l-0) (x x) (beta l)
    (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y zeta) (y l) (y l-0))
  (precur (3 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq self b) (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 1 5 ltx-gen 3) (exp (gen) l-1) (4 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 221)
  (parent 210)
  (unrealized (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (a b a-0 b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l lb rndx) (alpha zeta-0 expt) (l-0 y-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (deflistener (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b-0)
    (priv-stor priv-stor-1) (lb lb) (y y-0) (alpha alpha) (zeta zeta-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (3 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 1)) ((5 3) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen x y y-0)
  (absent (x l) (x l-0) (y zeta) (y l) (y l-0) (y-0 lb) (y-0 alpha)
    (y-0 zeta-0))
  (precur (4 0))
  (gen-st (pv a l-0) (pv b l) (pv b-0 lb))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta-0) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((2 1) (3 0)))
  (rule assume-init-0 assume-resp-0 gen-st-ltx-disclose-0
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand resp 4) (exp (gen) y-0) (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((recv (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-0 (rec y-0)))))
    ((load priv-stor-1 (cat pt-3 (pv b-0 lb)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0)))
      (recv (cat na-0 a-0 b-0 (exp (gen) zeta-0)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul lb alpha))
              (exp (gen) (mul zeta-0 y-0))))))))
  (label 222)
  (parent 210)
  (unrealized (0 3) (3 1) (4 0) (5 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x y rndx)
    (zeta expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (lb l-0) (y y) (alpha l) (zeta zeta))
  (deflistener (cat (exp (gen) l-0) (mul l (rec l-0))))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (3 0)) ((2 2) (0 1))
    ((2 2) (4 0)) ((3 3) (0 3)) ((4 1) (3 1)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y zeta) (y l) (y l-0))
  (precur (4 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((2 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 5 2 ltx-gen 3) (exp (gen) l-1) (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((recv (cat (exp (gen) l-0) (mul l (rec l-0))))
      (send (cat (exp (gen) l-0) (mul l (rec l-0))))))
  (label 223)
  (parent 210)
  (unrealized (0 3) (3 1) (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (deflistener (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (3 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 1)) ((5 2) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y zeta) (y l) (y l-0))
  (precur (4 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((2 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 3) (exp (gen) l-1) (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((recv (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
      (send (cat (exp (gen) l-1) (mul l-0 (rec l-1)))))
    ((load priv-stor-1 (cat pt-3 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))))
  (label 224)
  (parent 210)
  (unrealized (0 3) (3 1) (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 x y rndx)
    (zeta expt) (l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-1) (y y) (alpha (mul l l-0 (rec l-1))) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l l-0)) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 2) (0 1)) ((3 3) (0 3))
    ((4 1) (3 0)) ((4 1) (6 0)) ((5 1) (3 1)) ((6 2) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec l-1))) (y zeta) (y l-1))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-disclose 3) l-1 (5 0)
    (ch-msg priv-stor-1 (cat pt-3 (pv b l-1))))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l l-0)) l-1))
      (send (cat (exp (gen) (mul l l-0)) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l-1)))
  (label 225)
  (parent 211)
  (unrealized (0 3) (5 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l x y rndx) (zeta expt)
    (l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-1) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-0) (y y) (alpha (mul l (rec l-0) l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul l (rec l-0))) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (6 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((5 1) (3 1)) ((6 2) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-1) (y (mul l (rec l-0) l-1)) (y zeta) (y l-0))
  (gen-st (pv a l) (pv b l-0) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)) ((4 1) (3 0)))
  (rule assume-init-0 assume-resp-0 gen-st-ltx-disclose-0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-disclose 3) l-1 (5 0)
    (ch-msg priv-stor-0 (cat pt-2 (pv b l-1))))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul l (rec l-0))) l-1))
      (send (cat (exp (gen) (mul l (rec l-0))) l-1)))
    ((load priv-stor-0 (cat pt-2 (pv b l-1)))
      (stor priv-stor-0 (cat pt-5 "nil")) (send l-1)))
  (label 226)
  (parent 212)
  (unrealized (0 3) (5 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((2 1) (6 0)) ((2 2) (0 1))
    ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0)) ((6 2) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)))
  (rule assume-init-0 gen-st-ltx-disclose-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-disclose 3) l-0 (5 0)
    (ch-msg priv-stor-0 (cat pt-2 (pv b l-0))))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l-0)))
  (label 227)
  (parent 214)
  (unrealized (5 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (lb l x rndx)
    (w expt) (y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (la l) (x x) (beta lb) (upsilon (mul w y)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l lb))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (priv-stor priv-stor)
    (lb lb) (y y) (alpha l) (zeta (mul x w)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (4 0))
    ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb lb l)
  (uniq-gen x y)
  (absent (x lb) (x l) (y lb) (y l) (y (mul x w)))
  (precur (4 0))
  (gen-st (pv b lb) (pv self l))
  (facts (neq (exp (gen) (mul w y)) (gen))
    (neq (exp (gen) (mul x w)) (gen)) (neq self b) (undisclosed l))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 5 2 resp 4) (exp (gen) y-0) (4 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) lb) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb self b
            (hash (exp (gen) (mul lb l)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b lb)))
      (send
        (sig (body b (exp (gen) lb) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b lb)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul x w))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul lb l)) (exp (gen) (mul x w y)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 228)
  (parent 217)
  (seen 209)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x y rndx)
    (zeta expt) (l rndx) (beta expt) (x-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (deflistener (cat (exp (gen) x-0) (mul (rec x-0) l-0)))
  (defstrand init 3 (na na-0) (a a) (b b-0) (priv-stor priv-stor)
    (la l-0) (x x-0) (beta beta))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (5 0)) ((2 1) (3 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 1)) ((5 2) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen x y x-0)
  (absent (x l) (x l-0) (y zeta) (y l) (y l-0) (x-0 beta) (x-0 l-0))
  (precur (4 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (5 0)) ((2 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 6 1 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv a-0 l-1))) (5 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((recv (cat (exp (gen) x-0) (mul (rec x-0) l-0)))
      (send (cat (exp (gen) x-0) (mul (rec x-0) l-0))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a b-0 (exp (gen) x-0)))))
  (label 229)
  (parent 218)
  (unrealized (0 3) (3 1) (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x y rndx)
    (zeta beta expt) (l x-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (lb l-0) (y y) (alpha l) (zeta zeta))
  (deflistener (cat (exp (gen) x-0) (mul l (rec x-0))))
  (defstrand init 3 (na na-0) (a b) (b b-0) (priv-stor priv-stor-0)
    (la l-0) (x x-0) (beta beta))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (3 0)) ((2 1) (5 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 1)) ((5 2) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen x y x-0)
  (absent (x l) (x l-0) (y zeta) (y l) (y l-0) (x-0 beta) (x-0 l-0))
  (precur (4 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((2 1) (3 0)) ((2 1) (5 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 6 2 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv a-0 l-1))) (5 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((recv (cat (exp (gen) x-0) (mul l (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l (rec x-0)))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 b b-0 (exp (gen) x-0)))))
  (label 230)
  (parent 218)
  (unrealized (0 3) (3 1) (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (a b a-0 b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l rndx) (beta expt) (l-0 x-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (deflistener (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
  (defstrand init 3 (na na-0) (a a-0) (b b-0) (priv-stor priv-stor-1)
    (la l-1) (x x-0) (beta beta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self a-0)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (3 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 1)) ((5 2) (4 0)) ((6 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen x y x-0)
  (absent (x l) (x l-0) (y zeta) (y l) (y l-0) (x-0 beta) (x-0 l-1))
  (precur (4 0))
  (gen-st (pv a l-0) (pv b l) (pv a-0 l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((2 1) (3 0)) ((6 1) (5 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv a-0 l-1))) (5 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((recv (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-0 (rec x-0)))))
    ((load priv-stor-1 (cat pt-3 (pv a-0 l-1)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a-0 b-0 (exp (gen) x-0))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv a-0 l-1)))))
  (label 231)
  (parent 218)
  (unrealized (0 3) (3 1) (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (lb l x y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (la l) (x x) (beta lb) (upsilon y))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l lb))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (priv-stor priv-stor)
    (lb lb) (y y) (alpha l) (zeta x))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb lb l)
  (uniq-gen x y)
  (absent (x lb) (x l) (y lb) (y l) (y x))
  (precur (3 0))
  (gen-st (pv b lb) (pv self l))
  (facts (neq (exp (gen) y) (gen)) (neq (exp (gen) x) (gen))
    (neq self b) (undisclosed l))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 5 2 resp 4) (exp (gen) y-0) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) lb) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul lb l)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b lb)))
      (send
        (sig (body b (exp (gen) lb) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b lb)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul lb l)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))))
  (label 232)
  (parent 221)
  (seen 216)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x y rndx)
    (zeta expt) (l l-0 rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (la l-0) (x x) (beta l)
    (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (5 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((5 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y zeta) (y l) (y l-0))
  (precur (3 0) (5 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq self b) (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
    (exp (gen) (mul (rec x) y zeta)) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
      (send (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))))
  (label 233)
  (parent 221)
  (unrealized (5 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (a b a-0 name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x y rndx)
    (zeta expt) (l rndx) (alpha zeta-0 expt) (y-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (deflistener (cat (exp (gen) y-0) (mul (rec y-0) l-0)))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b a)
    (priv-stor priv-stor) (lb l-0) (y y-0) (alpha alpha) (zeta zeta-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (5 0)) ((2 1) (3 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 1)) ((5 3) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen x y y-0)
  (absent (x l) (x l-0) (y zeta) (y l) (y l-0) (y-0 alpha) (y-0 zeta-0)
    (y-0 l-0))
  (precur (4 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta-0) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (5 0)) ((2 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 6 1 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv b-0 l-1))) (5 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((recv (cat (exp (gen) y-0) (mul (rec y-0) l-0)))
      (send (cat (exp (gen) y-0) (mul (rec y-0) l-0))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 a (exp (gen) zeta-0)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 a
            (hash (exp (gen) (mul alpha l-0))
              (exp (gen) (mul zeta-0 y-0))))))))
  (label 234)
  (parent 222)
  (unrealized (0 3) (3 1) (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (a b a-0 name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x y rndx)
    (zeta alpha zeta-0 expt) (l y-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (lb l-0) (y y) (alpha l) (zeta zeta))
  (deflistener (cat (exp (gen) y-0) (mul l (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b)
    (priv-stor priv-stor-0) (lb l-0) (y y-0) (alpha alpha)
    (zeta zeta-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (3 0)) ((2 1) (5 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 1)) ((5 3) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen x y y-0)
  (absent (x l) (x l-0) (y zeta) (y l) (y l-0) (y-0 alpha) (y-0 zeta-0)
    (y-0 l-0))
  (precur (4 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta-0) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((2 1) (3 0)) ((2 1) (5 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 6 2 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv b-0 l-1))) (5 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((recv (cat (exp (gen) y-0) (mul l (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l (rec y-0)))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b (exp (gen) zeta-0)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b
            (hash (exp (gen) (mul alpha l-0))
              (exp (gen) (mul zeta-0 y-0))))))))
  (label 235)
  (parent 222)
  (unrealized (0 3) (3 1) (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l rndx) (alpha zeta-0 expt) (l-0 y-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (deflistener (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b-0)
    (priv-stor priv-stor-1) (lb l-1) (y y-0) (alpha alpha)
    (zeta zeta-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b-0)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (3 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 1)) ((5 3) (4 0)) ((6 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen x y y-0)
  (absent (x l) (x l-0) (y zeta) (y l) (y l-0) (y-0 alpha) (y-0 zeta-0)
    (y-0 l-1))
  (precur (4 0))
  (gen-st (pv a l-0) (pv b l) (pv b-0 l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta-0) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((2 1) (3 0)) ((6 1) (5 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv b-0 l-1))) (5 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((recv (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-0 (rec y-0)))))
    ((load priv-stor-1 (cat pt-3 (pv b-0 l-1)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0)))
      (recv (cat na-0 a-0 b-0 (exp (gen) zeta-0)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul alpha l-1))
              (exp (gen) (mul zeta-0 y-0)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b-0 l-1)))))
  (label 236)
  (parent 222)
  (unrealized (0 3) (3 1) (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 x y rndx)
    (zeta expt) (l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-1) (y y) (alpha (mul l l-0 (rec l-1))) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l l-0)) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) l) l-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (7 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec l-1))) (y zeta) (y l-1))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l) l-0))
    (exp (gen) (mul l l-0)) (5 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l l-0)) l-1))
      (send (cat (exp (gen) (mul l l-0)) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l-1))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0))))
  (label 237)
  (parent 225)
  (unrealized (0 3) (7 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 x y rndx)
    (zeta expt) (l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-1) (y y) (alpha (mul l l-0 (rec l-1))) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l l-0)) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) l-0) l))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (7 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec l-1))) (y zeta) (y l-1))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l-0) l))
    (exp (gen) (mul l l-0)) (5 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l l-0)) l-1))
      (send (cat (exp (gen) (mul l l-0)) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l-1))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l))))
  (label 238)
  (parent 225)
  (unrealized (0 3) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l x y rndx) (zeta expt)
    (l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-1) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-0) (y y) (alpha (mul l (rec l-0) l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul l (rec l-0))) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-1))
  (deflistener (cat (exp (gen) l) l-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (6 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (7 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-1) (y (mul l (rec l-0) l-1)) (y zeta) (y l-0))
  (gen-st (pv a l) (pv b l-0) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)) ((4 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l) l-0))
    (exp (gen) (mul l (rec l-0))) (5 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul l (rec l-0))) l-1))
      (send (cat (exp (gen) (mul l (rec l-0))) l-1)))
    ((load priv-stor-0 (cat pt-2 (pv b l-1)))
      (stor priv-stor-0 (cat pt-5 "nil")) (send l-1))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0))))
  (label 239)
  (parent 226)
  (unrealized (0 3) (7 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l x y rndx) (zeta expt)
    (l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-1) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-0) (y y) (alpha (mul l (rec l-0) l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul l (rec l-0))) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-1))
  (deflistener (cat (exp (gen) (rec l-0)) l))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (7 0)) ((2 1) (6 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-1) (y (mul l (rec l-0) l-1)) (y zeta) (y l-0))
  (gen-st (pv a l) (pv b l-0) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)) ((4 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) (rec l-0)) l))
    (exp (gen) (mul l (rec l-0))) (5 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul l (rec l-0))) l-1))
      (send (cat (exp (gen) (mul l (rec l-0))) l-1)))
    ((load priv-stor-0 (cat pt-2 (pv b l-1)))
      (stor priv-stor-0 (cat pt-5 "nil")) (send l-1))
    ((recv (cat (exp (gen) (rec l-0)) l))
      (send (cat (exp (gen) (rec l-0)) l))))
  (label 240)
  (parent 226)
  (unrealized (0 3) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (la l-0) (x x) (beta l) (upsilon upsilon))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (deflistener
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (3 0)) ((1 1) (5 0)) ((1 2) (0 1)) ((2 1) (0 3))
    ((3 1) (2 0)) ((4 1) (3 0)) ((5 2) (4 0)) ((6 1) (0 0))
    ((6 2) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv b l) (pv self l-0))
  (facts (neq (exp (gen) upsilon) (gen)) (neq self b) (undisclosed l-0))
  (leads-to ((1 1) (5 0)) ((6 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 1 7 ltx-gen 3) (exp (gen) l-0) (5 0))
  (traces
    ((load priv-stor-0 (cat pt-3 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-1 "nil")) (send l))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-3 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 241)
  (parent 227)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon expt) (l l-0 rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) (mul l (rec w))) w))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((2 1) (6 0)) ((2 2) (0 1))
    ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0)) ((6 2) (5 0))
    ((7 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (7 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul l (rec w))) w)) (exp (gen) l)
    (5 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul l (rec w))) w))
      (send (cat (exp (gen) (mul l (rec w))) w))))
  (label 242)
  (parent 227)
  (unrealized (7 0))
  (comment "7 in cohort - 7 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (lb l x rndx)
    (w expt) (y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (la l) (x x) (beta lb) (upsilon (mul w y)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l lb))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (priv-stor priv-stor)
    (lb lb) (y y) (alpha l) (zeta (mul x w)))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (5 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((5 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb lb l)
  (uniq-gen x y)
  (absent (x lb) (x l) (y lb) (y l) (y (mul x w)))
  (precur (3 0) (5 0))
  (gen-st (pv b lb) (pv self l))
  (facts (neq (exp (gen) (mul w y)) (gen))
    (neq (exp (gen) (mul x w)) (gen)) (neq self b) (undisclosed l))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 6 2 resp 4) (exp (gen) y-0) (5 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) lb) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb self b
            (hash (exp (gen) (mul lb l)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b lb)))
      (send
        (sig (body b (exp (gen) lb) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b lb)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul x w))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul lb l)) (exp (gen) (mul x w y)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 243)
  (parent 233)
  (seen 228)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l x y rndx) (zeta expt)
    (l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-1) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-0) (y y) (alpha (mul l (rec l-0) l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul l l-1)) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) l) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (8 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-1) (y (mul l (rec l-0) l-1)) (y zeta) (y l-0))
  (gen-st (pv a l) (pv b l-0) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((2 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule assume-init-0 assume-resp-0 gen-st-ltx-disclose-0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-disclose 3) l-1 (7 0)
    (ch-msg priv-stor-0 (cat pt-2 (pv b l-1))))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul l l-1)) l-0))
      (send (cat (exp (gen) (mul l l-1)) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l-0))
    ((recv (cat (exp (gen) l) l-1)) (send (cat (exp (gen) l) l-1)))
    ((load priv-stor-0 (cat pt-2 (pv b l-1)))
      (stor priv-stor-0 (cat pt-6 "nil")) (send l-1)))
  (label 244)
  (parent 237)
  (unrealized (0 3) (7 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l x y rndx) (zeta expt)
    (l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-1) (y y) (alpha (mul l l-0 (rec l-1))) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l (rec l-1))) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (6 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec l-1))) (y zeta) (y l-1))
  (gen-st (pv a l) (pv b l-0) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-disclose 3) l-1 (7 0)
    (ch-msg priv-stor-1 (cat pt-3 (pv b l-1))))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l (rec l-1))) l-0))
      (send (cat (exp (gen) (mul l (rec l-1))) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-5 "nil")) (send l-0))
    ((recv (cat (exp (gen) l) l-1)) (send (cat (exp (gen) l) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-1)))
  (label 245)
  (parent 239)
  (unrealized (0 3) (7 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (la l-0) (x x) (beta l) (upsilon upsilon))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (2 0)) ((1 1) (4 0)) ((1 2) (0 1)) ((2 1) (0 3))
    ((3 1) (2 0)) ((4 2) (3 0)) ((5 1) (0 0)) ((5 2) (3 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv b l) (pv self l-0))
  (facts (neq (exp (gen) upsilon) (gen)) (neq self b) (undisclosed l-0))
  (leads-to ((1 1) (4 0)) ((5 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (2 0))
  (traces
    ((load priv-stor-0 (cat pt-3 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-1 "nil")) (send l))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-3 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 246)
  (parent 241)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (a b a-0 b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (upsilon expt)
    (l la rndx) (beta expt) (l-0 x-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
  (defstrand init 3 (na na-0) (a a-0) (b b-0) (priv-stor priv-stor-1)
    (la la) (x x-0) (beta beta))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((2 1) (6 0)) ((2 2) (0 1))
    ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0)) ((6 2) (5 0))
    ((7 1) (5 0)) ((8 2) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na na-0 l l-0)
  (uniq-gen x x-0)
  (absent (x l) (x l-0) (x-0 la) (x-0 beta))
  (precur (7 0))
  (gen-st (pv a l-0) (pv b l) (pv a-0 la))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)))
  (rule assume-init-0 gen-st-ltx-disclose-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand init 3) (exp (gen) x-0) (7 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-0 (rec x-0)))))
    ((load priv-stor-1 (cat pt-4 (pv a-0 la)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0)))
      (send (cat na-0 a-0 b-0 (exp (gen) x-0)))))
  (label 247)
  (parent 242)
  (unrealized (5 0) (7 0) (8 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn)
    (upsilon expt) (l l-0 x rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul upsilon x))))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul upsilon x))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) x) (mul l (rec x))))
  (precedes ((0 2) (7 0)) ((1 1) (0 0)) ((2 1) (6 0)) ((2 2) (0 1))
    ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0)) ((6 2) (5 0))
    ((7 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (7 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 8 0 init 3) (exp (gen) x-0) (7 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul upsilon x)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul upsilon x))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul upsilon x)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul upsilon x))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul upsilon x)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l-0))
    ((recv (cat (exp (gen) x) (mul l (rec x))))
      (send (cat (exp (gen) x) (mul l (rec x))))))
  (label 248)
  (parent 242)
  (unrealized (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (gen) l-0))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((1 1) (7 0)) ((2 1) (6 0))
    ((2 2) (0 1)) ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0))
    ((6 2) (5 0)) ((7 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (7 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (contracted (l-1 l-0) (w l-0)) (gen) (7 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0))))
  (label 249)
  (parent 242)
  (unrealized (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (la l-0) (x x) (beta l) (upsilon upsilon))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (deflistener
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (3 0)) ((1 1) (5 0)) ((1 2) (0 1)) ((2 1) (0 3))
    ((3 1) (2 0)) ((4 1) (3 0)) ((5 2) (4 0)) ((6 1) (4 0))
    ((7 1) (0 0)) ((7 2) (6 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (6 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (neq (exp (gen) upsilon) (gen)) (neq self b) (undisclosed l-0))
  (leads-to ((1 1) (5 0)) ((7 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 1 8 ltx-gen 3) (exp (gen) l-1) (7 0))
  (traces
    ((load priv-stor-0 (cat pt-3 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-1 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-3 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 250)
  (parent 242)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (a b a-0 b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (upsilon expt)
    (l lb rndx) (alpha zeta expt) (l-0 y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) y) (mul l-0 (rec y))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b-0)
    (priv-stor priv-stor-1) (lb lb) (y y) (alpha alpha) (zeta zeta))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((2 1) (6 0)) ((2 2) (0 1))
    ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0)) ((6 2) (5 0))
    ((7 1) (5 0)) ((8 3) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb-0 l l-0)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y lb) (y alpha) (y zeta))
  (precur (7 0))
  (gen-st (pv a l-0) (pv b l) (pv b-0 lb))
  (facts (neq (exp (gen) upsilon) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)))
  (rule assume-init-0 assume-resp-0 gen-st-ltx-disclose-0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand resp 4) (exp (gen) y) (7 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) y) (mul l-0 (rec y))))
      (send (cat (exp (gen) y) (mul l-0 (rec y)))))
    ((load priv-stor-1 (cat pt-4 (pv b-0 lb)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b-0 (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul lb alpha))
              (exp (gen) (mul zeta y))))))))
  (label 251)
  (parent 242)
  (unrealized (5 0) (7 0) (8 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l-0) (mul l (rec l-0))))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((2 1) (6 0)) ((2 2) (0 1))
    ((2 2) (7 0)) ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0))
    ((6 2) (5 0)) ((7 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (7 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 8 2 ltx-gen 3) (exp (gen) l-1) (7 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l-0))
    ((recv (cat (exp (gen) l-0) (mul l (rec l-0))))
      (send (cat (exp (gen) l-0) (mul l (rec l-0))))))
  (label 252)
  (parent 242)
  (unrealized (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (upsilon expt)
    (l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((2 1) (6 0)) ((2 2) (0 1))
    ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0)) ((6 2) (5 0))
    ((7 1) (5 0)) ((8 2) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0 l-1)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (7 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 3) (exp (gen) l-1) (7 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
      (send (cat (exp (gen) l-1) (mul l-0 (rec l-1)))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-5 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))))
  (label 253)
  (parent 242)
  (unrealized (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-1) (x x) (beta l-0)
    (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (lb l) (y y) (alpha (mul (rec l) l-0 l-1))
    (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (2 2)) ((1 1) (7 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (2 0)) ((3 1) (5 0)) ((4 1) (2 1)) ((5 2) (4 0))
    ((6 1) (4 0)) ((7 2) (6 0)) ((8 1) (0 0)) ((8 2) (6 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l-0) (x l-1) (y zeta) (y (mul (rec l) l-0 l-1)) (y l))
  (gen-st (pv b l) (pv b l-0) (pv self l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq self b) (undisclosed l-1))
  (leads-to ((1 1) (7 0)) ((3 1) (2 0)) ((3 1) (5 0)) ((8 1) (0 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 1 9 ltx-gen 3) (exp (gen) l-1) (7 0))
  (traces
    ((load priv-stor-1 (cat pt-6 (pv self l-1)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb self b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-1 (pv b l)))
      (recv
        (sig
          (body self (exp (gen) (mul (rec l) l-0 l-1))
            (pubk "sig" self)) (privk "sig" self)))
      (recv (cat na self b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-0 (cat pt-1 (pv b l)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (stor priv-stor (cat pt-4 "nil")) (send l-0))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))))
  (label 254)
  (parent 244)
  (unrealized (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l x y rndx) (zeta expt)
    (l-0 l-1 rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-1) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-0) (y y) (alpha (mul l (rec l-0) l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul l l-1)) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) l) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-1))
  (deflistener (cat (exp (gen) (mul l (rec w))) w))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (8 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-1) (y (mul l (rec l-0) l-1)) (y zeta) (y l-0))
  (precur (9 0))
  (gen-st (pv a l) (pv b l-0) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((2 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul l (rec w))) w)) (exp (gen) l)
    (7 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul l l-1)) l-0))
      (send (cat (exp (gen) (mul l l-1)) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l-0))
    ((recv (cat (exp (gen) l) l-1)) (send (cat (exp (gen) l) l-1)))
    ((load priv-stor-0 (cat pt-2 (pv b l-1)))
      (stor priv-stor-0 (cat pt-6 "nil")) (send l-1))
    ((recv (cat (exp (gen) (mul l (rec w))) w))
      (send (cat (exp (gen) (mul l (rec w))) w))))
  (label 255)
  (parent 244)
  (unrealized (0 3) (9 0))
  (comment "8 in cohort - 8 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-1) (x x) (beta l)
    (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (lb l-0) (y y) (alpha (mul l (rec l-0) l-1))
    (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (2 2)) ((1 1) (5 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (2 0)) ((3 1) (7 0)) ((4 1) (2 1)) ((5 2) (4 0))
    ((6 1) (4 0)) ((7 2) (6 0)) ((8 1) (0 0)) ((8 2) (6 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-1) (y zeta) (y (mul l (rec l-0) l-1)) (y l-0))
  (gen-st (pv b l) (pv b l-0) (pv self l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq self b) (undisclosed l-1))
  (leads-to ((1 1) (5 0)) ((3 1) (2 0)) ((3 1) (7 0)) ((8 1) (0 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 1 9 ltx-gen 3) (exp (gen) l-1) (7 0))
  (traces
    ((load priv-stor-1 (cat pt-6 (pv self l-1)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb self b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-1 (pv b l-0)))
      (recv
        (sig
          (body self (exp (gen) (mul l (rec l-0) l-1))
            (pubk "sig" self)) (privk "sig" self)))
      (recv (cat na self b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-0 (cat pt-1 (pv b l-0)))
      (stor priv-stor-0 (cat pt-4 "nil")) (send l-0))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))))
  (label 256)
  (parent 245)
  (unrealized (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l x y rndx) (zeta expt)
    (l-0 l-1 rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-1) (y y) (alpha (mul l l-0 (rec l-1))) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l (rec l-1))) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l (rec w))) w))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (6 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec l-1))) (y zeta) (y l-1))
  (precur (9 0))
  (gen-st (pv a l) (pv b l-0) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul l (rec w))) w)) (exp (gen) l)
    (7 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l (rec l-1))) l-0))
      (send (cat (exp (gen) (mul l (rec l-1))) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-5 "nil")) (send l-0))
    ((recv (cat (exp (gen) l) l-1)) (send (cat (exp (gen) l) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-1))
    ((recv (cat (exp (gen) (mul l (rec w))) w))
      (send (cat (exp (gen) (mul l (rec w))) w))))
  (label 257)
  (parent 245)
  (unrealized (0 3) (9 0))
  (comment "8 in cohort - 8 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (la l-0) (x x) (beta l) (upsilon upsilon))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((1 1) (3 0)) ((1 2) (0 1)) ((2 1) (0 3)) ((3 2) (2 0))
    ((4 1) (0 0)) ((4 2) (2 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv b l) (pv self l-0))
  (facts (neq (exp (gen) upsilon) (gen)) (neq self b) (undisclosed l-0))
  (leads-to ((1 1) (3 0)) ((4 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (2 0))
  (traces
    ((load priv-stor-0 (cat pt-3 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-1 "nil")) (send l))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-3 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 258)
  (parent 246)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon expt) (l rndx) (beta expt) (x-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) x-0) (mul (rec x-0) l-0)))
  (defstrand init 3 (na na-0) (a a) (b b-0) (priv-stor priv-stor)
    (la l-0) (x x-0) (beta beta))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (6 0))
    ((2 2) (0 1)) ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na na-0 l l-0)
  (uniq-gen x x-0)
  (absent (x l) (x l-0) (x-0 beta) (x-0 l-0))
  (precur (7 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (6 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 9 1 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-4 (pv a-0 l-1))) (8 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) x-0) (mul (rec x-0) l-0)))
      (send (cat (exp (gen) x-0) (mul (rec x-0) l-0))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a b-0 (exp (gen) x-0)))))
  (label 259)
  (parent 247)
  (unrealized (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon beta expt) (l x-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) x-0) (mul l (rec x-0))))
  (defstrand init 3 (na na-0) (a b) (b b-0) (priv-stor priv-stor-0)
    (la l-0) (x x-0) (beta beta))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((2 1) (6 0)) ((2 1) (8 0))
    ((2 2) (0 1)) ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na na-0 l l-0)
  (uniq-gen x x-0)
  (absent (x l) (x l-0) (x-0 beta) (x-0 l-0))
  (precur (7 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)) ((2 1) (8 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 9 2 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-4 (pv a-0 l-1))) (8 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l-0))
    ((recv (cat (exp (gen) x-0) (mul l (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l (rec x-0)))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 b b-0 (exp (gen) x-0)))))
  (label 260)
  (parent 247)
  (unrealized (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (a b a-0 b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (upsilon expt)
    (l rndx) (beta expt) (l-0 x-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
  (defstrand init 3 (na na-0) (a a-0) (b b-0) (priv-stor priv-stor-1)
    (la l-1) (x x-0) (beta beta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self a-0)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((2 1) (6 0)) ((2 2) (0 1))
    ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0)) ((6 2) (5 0))
    ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (8 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na na-0 l l-0 l-1)
  (uniq-gen x x-0)
  (absent (x l) (x l-0) (x-0 beta) (x-0 l-1))
  (precur (7 0))
  (gen-st (pv a l-0) (pv b l) (pv a-0 l-1))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)) ((9 1) (8 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-4 (pv a-0 l-1))) (8 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-0 (rec x-0)))))
    ((load priv-stor-1 (cat pt-4 (pv a-0 l-1)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a-0 b-0 (exp (gen) x-0))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv a-0 l-1)))))
  (label 261)
  (parent 247)
  (unrealized (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (la l-0) (x x) (beta l) (upsilon upsilon))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (2 0)) ((1 1) (4 0)) ((1 2) (0 1)) ((2 1) (0 3))
    ((3 1) (2 0)) ((4 2) (3 0)) ((5 1) (3 0)) ((6 1) (0 0))
    ((6 2) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (5 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (neq (exp (gen) upsilon) (gen)) (neq self b) (undisclosed l-0))
  (leads-to ((1 1) (4 0)) ((6 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (2 0))
  (traces
    ((load priv-stor-0 (cat pt-3 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-1 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-3 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 262)
  (parent 250)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (a b a-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon expt) (l rndx) (alpha zeta expt) (y l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) y) (mul (rec y) l-0)))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b a)
    (priv-stor priv-stor) (lb l-0) (y y) (alpha alpha) (zeta zeta))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (6 0))
    ((2 2) (0 1)) ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 3) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb-0 l l-0)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y alpha) (y zeta) (y l-0))
  (precur (7 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq (exp (gen) upsilon) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (6 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 9 1 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-4 (pv b-0 l-1))) (8 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) y) (mul (rec y) l-0)))
      (send (cat (exp (gen) y) (mul (rec y) l-0))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 a (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na-0 nb-0 a-0 a
            (hash (exp (gen) (mul alpha l-0))
              (exp (gen) (mul zeta y))))))))
  (label 263)
  (parent 251)
  (unrealized (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (a b a-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon alpha zeta expt) (l y l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) y) (mul l (rec y))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b)
    (priv-stor priv-stor-0) (lb l-0) (y y) (alpha alpha) (zeta zeta))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((2 1) (6 0)) ((2 1) (8 0))
    ((2 2) (0 1)) ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 3) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb-0 l l-0)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y alpha) (y zeta) (y l-0))
  (precur (7 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq (exp (gen) upsilon) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)) ((2 1) (8 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 9 2 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-4 (pv b-0 l-1))) (8 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l-0))
    ((recv (cat (exp (gen) y) (mul l (rec y))))
      (send (cat (exp (gen) y) (mul l (rec y)))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na-0 nb-0 a-0 b
            (hash (exp (gen) (mul alpha l-0))
              (exp (gen) (mul zeta y))))))))
  (label 264)
  (parent 251)
  (unrealized (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (upsilon expt)
    (l rndx) (alpha zeta expt) (l-0 y l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) y) (mul l-0 (rec y))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b-0)
    (priv-stor priv-stor-1) (lb l-1) (y y) (alpha alpha) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b-0)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((2 1) (6 0)) ((2 2) (0 1))
    ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0)) ((6 2) (5 0))
    ((7 1) (5 0)) ((8 3) (7 0)) ((9 1) (8 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb-0 l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y alpha) (y zeta) (y l-1))
  (precur (7 0))
  (gen-st (pv a l-0) (pv b l) (pv b-0 l-1))
  (facts (neq (exp (gen) upsilon) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)) ((9 1) (8 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-4 (pv b-0 l-1))) (8 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) y) (mul l-0 (rec y))))
      (send (cat (exp (gen) y) (mul l-0 (rec y)))))
    ((load priv-stor-1 (cat pt-4 (pv b-0 l-1)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b-0 (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul alpha l-1))
              (exp (gen) (mul zeta y)))))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv b-0 l-1)))))
  (label 265)
  (parent 251)
  (unrealized (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-0) (x x) (beta l) (upsilon y))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (lb lb) (y y) (alpha (mul l l-0 (rec lb)))
    (zeta x))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (exp (gen) (mul l l-0)) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-0))
  (precedes ((0 2) (2 2)) ((1 1) (7 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (2 0)) ((3 1) (5 0)) ((4 1) (2 1)) ((5 2) (4 0))
    ((6 1) (4 0)) ((7 2) (6 0)) ((8 1) (0 0)) ((8 2) (6 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec lb))) (y lb) (y x))
  (gen-st (pv b l) (pv b lb) (pv self l-0))
  (facts (neq (exp (gen) y) (gen)) (neq (exp (gen) x) (gen))
    (neq self b) (undisclosed l-0))
  (leads-to ((1 1) (7 0)) ((3 1) (2 0)) ((3 1) (5 0)) ((8 1) (0 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 9 2 resp 4) (exp (gen) y-0) (0 3))
  (traces
    ((load priv-stor-1 (cat pt-6 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-1 (pv b lb)))
      (recv
        (sig
          (body self (exp (gen) (mul l l-0 (rec lb))) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b lb))))
    ((recv (cat (exp (gen) (mul l l-0)) lb))
      (send (cat (exp (gen) (mul l l-0)) lb)))
    ((load priv-stor-0 (cat pt-1 (pv b lb)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-4 "nil")) (send l))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 266)
  (parent 254)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-1) (x x) (beta l-0)
    (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (lb l) (y y) (alpha (mul (rec l) l-0 l-1))
    (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
  (precedes ((0 2) (2 2)) ((1 1) (7 0)) ((1 2) (0 1)) ((2 3) (9 0))
    ((3 1) (2 0)) ((3 1) (5 0)) ((4 1) (2 1)) ((5 2) (4 0))
    ((6 1) (4 0)) ((7 2) (6 0)) ((8 1) (0 0)) ((8 2) (6 0))
    ((9 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l-0) (x l-1) (y zeta) (y (mul (rec l) l-0 l-1)) (y l))
  (precur (9 0))
  (gen-st (pv b l) (pv b l-0) (pv self l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq self b) (undisclosed l-1))
  (leads-to ((1 1) (7 0)) ((3 1) (2 0)) ((3 1) (5 0)) ((8 1) (0 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
    (exp (gen) (mul (rec x) y zeta)) (0 3))
  (traces
    ((load priv-stor-1 (cat pt-6 (pv self l-1)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb self b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-1 (pv b l)))
      (recv
        (sig
          (body self (exp (gen) (mul (rec l) l-0 l-1))
            (pubk "sig" self)) (privk "sig" self)))
      (recv (cat na self b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-0 (cat pt-1 (pv b l)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (stor priv-stor (cat pt-4 "nil")) (send l-0))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
      (send (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))))
  (label 267)
  (parent 254)
  (unrealized (9 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn) (x y rndx)
    (zeta expt) (l l-0 lb rndx) (alpha zeta-0 expt) (l-1 y-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-1) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l) (y y) (alpha (mul (rec l) l-0 l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) y-0) (mul l-1 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b-0)
    (priv-stor priv-stor-2) (lb lb) (y y-0) (alpha alpha) (zeta zeta-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (8 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0))
    ((10 3) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen x y y-0)
  (absent (x l-0) (x l-1) (y zeta) (y (mul (rec l) l-0 l-1)) (y l)
    (y-0 lb) (y-0 alpha) (y-0 zeta-0))
  (precur (9 0))
  (gen-st (pv a l-1) (pv b l) (pv b l-0) (pv b-0 lb))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta-0) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b) (undisclosed l-1))
  (leads-to ((1 1) (0 0)) ((2 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule assume-init-0 assume-resp-0 gen-st-ltx-disclose-0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand resp 4) (exp (gen) y-0) (9 0))
  (traces
    ((load priv-stor (cat pt (pv a l-1)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) y-0) (mul l-1 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-1 (rec y-0)))))
    ((load priv-stor-2 (cat pt-7 (pv b-0 lb)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0)))
      (recv (cat na-0 a-0 b-0 (exp (gen) zeta-0)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul lb alpha))
              (exp (gen) (mul zeta-0 y-0))))))))
  (label 268)
  (parent 255)
  (unrealized (0 3) (7 0) (9 0) (10 0))
  (comment "4 in cohort - 4 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (a b a-0 b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn) (x y rndx)
    (zeta expt) (l l-0 la rndx) (beta expt) (l-1 x-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-1) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l) (y y) (alpha (mul (rec l) l-0 l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
  (defstrand init 3 (na na-0) (a a-0) (b b-0) (priv-stor priv-stor-2)
    (la la) (x x-0) (beta beta))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (8 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0))
    ((10 2) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen x y x-0)
  (absent (x l-0) (x l-1) (y zeta) (y (mul (rec l) l-0 l-1)) (y l)
    (x-0 la) (x-0 beta))
  (precur (9 0))
  (gen-st (pv a l-1) (pv b l) (pv b l-0) (pv a-0 la))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-1))
  (leads-to ((1 1) (0 0)) ((2 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule assume-init-0 assume-resp-0 gen-st-ltx-disclose-0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand init 3) (exp (gen) x-0) (9 0))
  (traces
    ((load priv-stor (cat pt (pv a l-1)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-1 (rec x-0)))))
    ((load priv-stor-2 (cat pt-7 (pv a-0 la)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0)))
      (send (cat na-0 a-0 b-0 (exp (gen) x-0)))))
  (label 269)
  (parent 255)
  (unrealized (0 3) (7 0) (9 0) (10 0))
  (comment "4 in cohort - 4 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-1) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l) (y y) (alpha (mul (rec l) l-0 l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (gen) l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (9 0)) ((2 1) (8 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l-0) (x l-1) (y zeta) (y (mul (rec l) l-0 l-1)) (y l))
  (precur (9 0))
  (gen-st (pv a l-1) (pv b l) (pv b l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-1))
  (leads-to ((1 1) (0 0)) ((2 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (contracted (l-2 l-1) (w l-1)) (gen) (9 0))
  (traces
    ((load priv-stor (cat pt (pv a l-1)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (gen) l-1)) (send (cat (gen) l-1))))
  (label 270)
  (parent 255)
  (unrealized (0 3) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y rndx) (zeta expt)
    (l l-0 l-1 x rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l-1) (upsilon (mul y zeta (rec x))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l) (y y) (alpha (mul (rec l) l-0 l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-0) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-1))
  (deflistener (cat (exp (gen) x) (mul l-0 (rec x))))
  (precedes ((0 2) (9 0)) ((1 1) (0 0)) ((2 1) (8 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y zeta) (y (mul (rec l) l-0 l-1)) (y l) (x l-0) (x l-1))
  (precur (9 0))
  (gen-st (pv a l-0) (pv b l) (pv b l-1))
  (facts (neq (exp (gen) (mul y zeta (rec x))) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((2 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 10 0 init 3) (exp (gen) x-0) (9 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y zeta (rec x)))
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) l-1)) (send (cat (exp (gen) l-0) l-1)))
    ((load priv-stor-0 (cat pt-2 (pv b l-1)))
      (stor priv-stor-0 (cat pt-6 "nil")) (send l-1))
    ((recv (cat (exp (gen) x) (mul l-0 (rec x))))
      (send (cat (exp (gen) x) (mul l-0 (rec x))))))
  (label 271)
  (parent 255)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l-1) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l) (y y) (alpha (mul (rec l) l-0 l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-0) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-1))
  (deflistener (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (8 0)) ((2 2) (0 1))
    ((2 2) (9 0)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l-0) (x l-1) (y zeta) (y (mul (rec l) l-0 l-1)) (y l))
  (precur (9 0))
  (gen-st (pv a l-0) (pv b l) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((2 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 10 2 ltx-gen 3) (exp (gen) l-2)
    (9 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) l-1)) (send (cat (exp (gen) l-0) l-1)))
    ((load priv-stor-0 (cat pt-2 (pv b l-1)))
      (stor priv-stor-0 (cat pt-6 "nil")) (send l-1))
    ((recv (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
      (send (cat (exp (gen) l-1) (mul l-0 (rec l-1))))))
  (label 272)
  (parent 255)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-1) (x x) (beta l-0)
    (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (lb l) (y y) (alpha (mul (rec l) l-0 l-1))
    (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) l-1) (one)))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (2 2)) ((1 1) (7 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (2 0)) ((3 1) (5 0)) ((4 1) (2 1)) ((5 2) (4 0))
    ((6 1) (4 0)) ((7 2) (6 0)) ((8 1) (6 0)) ((9 1) (0 0))
    ((9 2) (8 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l-0) (x l-1) (y zeta) (y (mul (rec l) l-0 l-1)) (y l))
  (precur (8 0))
  (gen-st (pv b l) (pv b l-0) (pv self l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq self b) (undisclosed l-1))
  (leads-to ((1 1) (7 0)) ((3 1) (2 0)) ((3 1) (5 0)) ((9 1) (0 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 1 10 ltx-gen 3) (exp (gen) l-2)
    (9 0))
  (traces
    ((load priv-stor-1 (cat pt-6 (pv self l-1)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb self b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-1 (pv b l)))
      (recv
        (sig
          (body self (exp (gen) (mul (rec l) l-0 l-1))
            (pubk "sig" self)) (privk "sig" self)))
      (recv (cat na self b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-0 (cat pt-1 (pv b l)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (stor priv-stor (cat pt-4 "nil")) (send l-0))
    ((recv (cat (exp (gen) l-1) (one)))
      (send (cat (exp (gen) l-1) (one))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))))
  (label 273)
  (parent 255)
  (unrealized (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b self) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b self)
    (priv-stor priv-stor-1) (lb l-1) (y y) (alpha (mul l l-0 (rec l-1)))
    (zeta zeta))
  (deflistener (cat (exp (gen) (mul l l-0)) l-1))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (7 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 1)) ((5 2) (4 0)) ((6 1) (4 0))
    ((7 2) (6 0)) ((8 1) (6 0)) ((9 1) (3 0)) ((9 1) (5 0))
    ((9 2) (8 0)))
  (non-orig (privk "sig" self))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y zeta) (y (mul l l-0 (rec l-1))) (y l-1))
  (precur (8 0))
  (gen-st (pv a l-0) (pv self l) (pv self l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a self) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((2 1) (7 0)) ((9 1) (3 0)) ((9 1) (5 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 4 10 ltx-gen 3) (exp (gen) l-2)
    (9 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na a self (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-1 (cat pt-6 (pv self l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a self (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((recv (cat (exp (gen) (mul l l-0)) l-1))
      (send (cat (exp (gen) (mul l l-0)) l-1)))
    ((load priv-stor-1 (cat pt-6 (pv self l-1)))
      (stor priv-stor-1 (cat pt-3 "nil")) (send l-1))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (stor priv-stor-0 (cat pt-4 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
      (send (cat (exp (gen) l-1) (mul l-0 (rec l-1)))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))))
  (label 274)
  (parent 255)
  (unrealized (0 3) (6 0) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 ignore-2 mesg) (na nb data)
    (a b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pt-8 pval)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn) (x y rndx)
    (zeta expt) (l l-0 l-1 l-2 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-1) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l) (y y) (alpha (mul (rec l) l-0 l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l-2) (mul l-1 (rec l-2))))
  (defstrand ltx-gen 3 (ignore ignore-2) (self self)
    (priv-stor priv-stor-2) (l l-2))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (8 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0))
    ((10 2) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1 l-2)
  (uniq-gen x y)
  (absent (x l-0) (x l-1) (y zeta) (y (mul (rec l) l-0 l-1)) (y l))
  (precur (9 0))
  (gen-st (pv a l-1) (pv b l) (pv b l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-1))
  (leads-to ((1 1) (0 0)) ((2 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 3) (exp (gen) l-2) (9 0))
  (traces
    ((load priv-stor (cat pt (pv a l-1)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) l-2) (mul l-1 (rec l-2))))
      (send (cat (exp (gen) l-2) (mul l-1 (rec l-2)))))
    ((load priv-stor-2 (cat pt-7 ignore-2))
      (stor priv-stor-2 (cat pt-8 (pv self l-2)))
      (send
        (sig (body self (exp (gen) l-2) (pubk "sig" self))
          (privk "sig" self)))))
  (label 275)
  (parent 255)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-0) (x x) (beta l) (upsilon y))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (lb lb) (y y) (alpha (mul l l-0 (rec lb)))
    (zeta x))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (exp (gen) (mul l-0 (rec lb))) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l lb))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-0))
  (precedes ((0 2) (2 2)) ((1 1) (5 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (2 0)) ((3 1) (7 0)) ((4 1) (2 1)) ((5 2) (4 0))
    ((6 1) (4 0)) ((7 2) (6 0)) ((8 1) (0 0)) ((8 2) (6 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec lb))) (y lb) (y x))
  (gen-st (pv b l) (pv b lb) (pv self l-0))
  (facts (neq (exp (gen) y) (gen)) (neq (exp (gen) x) (gen))
    (neq self b) (undisclosed l-0))
  (leads-to ((1 1) (5 0)) ((3 1) (2 0)) ((3 1) (7 0)) ((8 1) (0 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 9 2 resp 4) (exp (gen) y-0) (0 3))
  (traces
    ((load priv-stor-1 (cat pt-6 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-1 (pv b lb)))
      (recv
        (sig
          (body self (exp (gen) (mul l l-0 (rec lb))) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b lb))))
    ((recv (cat (exp (gen) (mul l-0 (rec lb))) l))
      (send (cat (exp (gen) (mul l-0 (rec lb))) l)))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) lb)) (send (cat (exp (gen) l-0) lb)))
    ((load priv-stor-0 (cat pt-1 (pv b lb)))
      (stor priv-stor-0 (cat pt-4 "nil")) (send lb))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 276)
  (parent 256)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-1) (x x) (beta l)
    (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (lb l-0) (y y) (alpha (mul l (rec l-0) l-1))
    (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
  (precedes ((0 2) (2 2)) ((1 1) (5 0)) ((1 2) (0 1)) ((2 3) (9 0))
    ((3 1) (2 0)) ((3 1) (7 0)) ((4 1) (2 1)) ((5 2) (4 0))
    ((6 1) (4 0)) ((7 2) (6 0)) ((8 1) (0 0)) ((8 2) (6 0))
    ((9 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-1) (y zeta) (y (mul l (rec l-0) l-1)) (y l-0))
  (precur (9 0))
  (gen-st (pv b l) (pv b l-0) (pv self l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq self b) (undisclosed l-1))
  (leads-to ((1 1) (5 0)) ((3 1) (2 0)) ((3 1) (7 0)) ((8 1) (0 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
    (exp (gen) (mul (rec x) y zeta)) (0 3))
  (traces
    ((load priv-stor-1 (cat pt-6 (pv self l-1)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb self b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-1 (pv b l-0)))
      (recv
        (sig
          (body self (exp (gen) (mul l (rec l-0) l-1))
            (pubk "sig" self)) (privk "sig" self)))
      (recv (cat na self b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-0 (cat pt-1 (pv b l-0)))
      (stor priv-stor-0 (cat pt-4 "nil")) (send l-0))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
      (send (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))))
  (label 277)
  (parent 256)
  (unrealized (9 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn) (x y rndx)
    (zeta expt) (l l-0 lb rndx) (alpha zeta-0 expt) (l-1 y-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-1) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-0) (y y) (alpha (mul l (rec l-0) l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) y-0) (mul l-1 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b-0)
    (priv-stor priv-stor-2) (lb lb) (y y-0) (alpha alpha) (zeta zeta-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (6 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0))
    ((10 3) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen x y y-0)
  (absent (x l) (x l-1) (y zeta) (y (mul l (rec l-0) l-1)) (y l-0)
    (y-0 lb) (y-0 alpha) (y-0 zeta-0))
  (precur (9 0))
  (gen-st (pv a l-1) (pv b l) (pv b l-0) (pv b-0 lb))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta-0) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b) (undisclosed l-1))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0)))
  (rule assume-init-0 assume-resp-0 gen-st-ltx-disclose-0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand resp 4) (exp (gen) y-0) (9 0))
  (traces
    ((load priv-stor (cat pt (pv a l-1)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) y-0) (mul l-1 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-1 (rec y-0)))))
    ((load priv-stor-2 (cat pt-7 (pv b-0 lb)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0)))
      (recv (cat na-0 a-0 b-0 (exp (gen) zeta-0)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul lb alpha))
              (exp (gen) (mul zeta-0 y-0))))))))
  (label 278)
  (parent 257)
  (unrealized (0 3) (7 0) (9 0) (10 0))
  (comment "4 in cohort - 4 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (a b a-0 b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn) (x y rndx)
    (zeta expt) (l l-0 la rndx) (beta expt) (l-1 x-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-1) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-0) (y y) (alpha (mul l (rec l-0) l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
  (defstrand init 3 (na na-0) (a a-0) (b b-0) (priv-stor priv-stor-2)
    (la la) (x x-0) (beta beta))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (6 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0))
    ((10 2) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen x y x-0)
  (absent (x l) (x l-1) (y zeta) (y (mul l (rec l-0) l-1)) (y l-0)
    (x-0 la) (x-0 beta))
  (precur (9 0))
  (gen-st (pv a l-1) (pv b l) (pv b l-0) (pv a-0 la))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-1))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0)))
  (rule assume-init-0 assume-resp-0 gen-st-ltx-disclose-0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand init 3) (exp (gen) x-0) (9 0))
  (traces
    ((load priv-stor (cat pt (pv a l-1)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-1 (rec x-0)))))
    ((load priv-stor-2 (cat pt-7 (pv a-0 la)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0)))
      (send (cat na-0 a-0 b-0 (exp (gen) x-0)))))
  (label 279)
  (parent 257)
  (unrealized (0 3) (7 0) (9 0) (10 0))
  (comment "4 in cohort - 4 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-1) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-0) (y y) (alpha (mul l (rec l-0) l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (gen) l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (9 0)) ((2 1) (6 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-1) (y zeta) (y (mul l (rec l-0) l-1)) (y l-0))
  (precur (9 0))
  (gen-st (pv a l-1) (pv b l) (pv b l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-1))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (contracted (l-2 l-1) (w l-1)) (gen) (9 0))
  (traces
    ((load priv-stor (cat pt (pv a l-1)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (gen) l-1)) (send (cat (gen) l-1))))
  (label 280)
  (parent 257)
  (unrealized (0 3) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y rndx) (zeta expt)
    (l l-0 l-1 x rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l-1) (upsilon (mul y zeta (rec x))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l) (y y) (alpha (mul (rec l) l-0 l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul (rec l) l-0)) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-1))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) x) (mul l-0 (rec x))))
  (precedes ((0 2) (9 0)) ((1 1) (0 0)) ((2 1) (6 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y zeta) (y (mul (rec l) l-0 l-1)) (y l) (x l-0) (x l-1))
  (precur (9 0))
  (gen-st (pv a l-0) (pv b l) (pv b l-1))
  (facts (neq (exp (gen) (mul y zeta (rec x))) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 10 0 init 3) (exp (gen) x-0) (9 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y zeta (rec x)))
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul (rec l) l-0)) l-1))
      (send (cat (exp (gen) (mul (rec l) l-0)) l-1)))
    ((load priv-stor-0 (cat pt-2 (pv b l-1)))
      (stor priv-stor-0 (cat pt-5 "nil")) (send l-1))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l))
    ((recv (cat (exp (gen) x) (mul l-0 (rec x))))
      (send (cat (exp (gen) x) (mul l-0 (rec x))))))
  (label 281)
  (parent 257)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l-1) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l) (y y) (alpha (mul (rec l) l-0 l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul (rec l) l-0)) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-1))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (6 0)) ((2 2) (0 1))
    ((2 2) (9 0)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l-0) (x l-1) (y zeta) (y (mul (rec l) l-0 l-1)) (y l))
  (precur (9 0))
  (gen-st (pv a l-0) (pv b l) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 10 2 ltx-gen 3) (exp (gen) l-2)
    (9 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul (rec l) l-0)) l-1))
      (send (cat (exp (gen) (mul (rec l) l-0)) l-1)))
    ((load priv-stor-0 (cat pt-2 (pv b l-1)))
      (stor priv-stor-0 (cat pt-5 "nil")) (send l-1))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
      (send (cat (exp (gen) l-1) (mul l-0 (rec l-1))))))
  (label 282)
  (parent 257)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-1) (x x) (beta l)
    (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (lb l-0) (y y) (alpha (mul l (rec l-0) l-1))
    (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l-1) (one)))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (2 2)) ((1 1) (5 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (2 0)) ((3 1) (7 0)) ((4 1) (2 1)) ((5 2) (4 0))
    ((6 1) (4 0)) ((7 2) (6 0)) ((8 1) (6 0)) ((9 1) (0 0))
    ((9 2) (8 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-1) (y zeta) (y (mul l (rec l-0) l-1)) (y l-0))
  (precur (8 0))
  (gen-st (pv b l) (pv b l-0) (pv self l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq self b) (undisclosed l-1))
  (leads-to ((1 1) (5 0)) ((3 1) (2 0)) ((3 1) (7 0)) ((9 1) (0 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 1 10 ltx-gen 3) (exp (gen) l-2)
    (9 0))
  (traces
    ((load priv-stor-1 (cat pt-6 (pv self l-1)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb self b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-1 (pv b l-0)))
      (recv
        (sig
          (body self (exp (gen) (mul l (rec l-0) l-1))
            (pubk "sig" self)) (privk "sig" self)))
      (recv (cat na self b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-0 (cat pt-1 (pv b l-0)))
      (stor priv-stor-0 (cat pt-4 "nil")) (send l-0))
    ((recv (cat (exp (gen) l-1) (one)))
      (send (cat (exp (gen) l-1) (one))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))))
  (label 283)
  (parent 257)
  (unrealized (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b self) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b self)
    (priv-stor priv-stor-1) (lb l-1) (y y) (alpha (mul l l-0 (rec l-1)))
    (zeta zeta))
  (deflistener (cat (exp (gen) (mul l-0 (rec l-1))) l))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-0) l-1))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (5 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 1)) ((5 2) (4 0)) ((6 1) (4 0))
    ((7 2) (6 0)) ((8 1) (6 0)) ((9 1) (3 0)) ((9 1) (7 0))
    ((9 2) (8 0)))
  (non-orig (privk "sig" self))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y zeta) (y (mul l l-0 (rec l-1))) (y l-1))
  (precur (8 0))
  (gen-st (pv a l-0) (pv self l) (pv self l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a self) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((2 1) (5 0)) ((9 1) (3 0)) ((9 1) (7 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 4 10 ltx-gen 3) (exp (gen) l-2)
    (9 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na a self (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-1 (cat pt-6 (pv self l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a self (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((recv (cat (exp (gen) (mul l-0 (rec l-1))) l))
      (send (cat (exp (gen) (mul l-0 (rec l-1))) l)))
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) l-1)) (send (cat (exp (gen) l-0) l-1)))
    ((load priv-stor-1 (cat pt-6 (pv self l-1)))
      (stor priv-stor-1 (cat pt-4 "nil")) (send l-1))
    ((recv (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
      (send (cat (exp (gen) l-1) (mul l-0 (rec l-1)))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))))
  (label 284)
  (parent 257)
  (unrealized (0 3) (6 0) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 ignore-2 mesg) (na nb data)
    (a b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pt-8 pval)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn) (x y rndx)
    (zeta expt) (l l-0 l-1 l-2 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-1) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-0) (y y) (alpha (mul l (rec l-0) l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) l-2) (mul l-1 (rec l-2))))
  (defstrand ltx-gen 3 (ignore ignore-2) (self self)
    (priv-stor priv-stor-2) (l l-2))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (6 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0))
    ((10 2) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1 l-2)
  (uniq-gen x y)
  (absent (x l) (x l-1) (y zeta) (y (mul l (rec l-0) l-1)) (y l-0))
  (precur (9 0))
  (gen-st (pv a l-1) (pv b l) (pv b l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-1))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 3) (exp (gen) l-2) (9 0))
  (traces
    ((load priv-stor (cat pt (pv a l-1)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) l-2) (mul l-1 (rec l-2))))
      (send (cat (exp (gen) l-2) (mul l-1 (rec l-2)))))
    ((load priv-stor-2 (cat pt-7 ignore-2))
      (stor priv-stor-2 (cat pt-8 (pv self l-2)))
      (send
        (sig (body self (exp (gen) l-2) (pubk "sig" self))
          (privk "sig" self)))))
  (label 285)
  (parent 257)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (la l-0) (x x) (beta l) (upsilon upsilon))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((1 1) (2 0)) ((1 2) (0 1)) ((2 2) (0 3)) ((3 1) (0 0))
    ((3 2) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv b l) (pv self l-0))
  (facts (neq (exp (gen) upsilon) (gen)) (neq self b) (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (2 0))
  (traces
    ((load priv-stor-0 (cat pt-3 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-1 "nil")) (send l))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-3 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 286)
  (parent 258)
  (realized)
  (shape)
  (maps
    ((0)
      ((a self) (b b) (la l-0) (x x) (beta l) (upsilon upsilon) (na na)
        (nb nb) (priv-stor priv-stor-0))))
  (origs (l-0 (3 1)) (pt-3 (3 1)) (pt-1 (2 1)) (l (1 1)) (pt-0 (1 1))
    (na (0 2)))
  (ugens (x (0 2))))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (la l-0) (x x) (beta l) (upsilon upsilon))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((1 1) (3 0)) ((1 2) (0 1)) ((2 1) (0 3)) ((3 2) (2 0))
    ((4 1) (2 0)) ((5 1) (0 0)) ((5 2) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (4 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (neq (exp (gen) upsilon) (gen)) (neq self b) (undisclosed l-0))
  (leads-to ((1 1) (3 0)) ((5 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (2 0))
  (traces
    ((load priv-stor-0 (cat pt-3 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-1 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-3 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 287)
  (parent 262)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-0) (x x) (beta l) (upsilon y))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (exp (gen) (mul l l-0)) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-0))
  (precedes ((1 1) (6 0)) ((1 2) (0 1)) ((2 1) (4 0)) ((3 1) (0 3))
    ((4 2) (3 0)) ((5 1) (3 0)) ((6 2) (5 0)) ((7 1) (0 0))
    ((7 2) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv b l) (pv b lb) (pv self l-0))
  (facts (neq (exp (gen) y) (gen)) (neq self b) (undisclosed l-0))
  (leads-to ((1 1) (6 0)) ((2 1) (4 0)) ((7 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (2 0))
  (traces
    ((load priv-stor-1 (cat pt-6 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b lb))))
    ((recv (cat (exp (gen) (mul l l-0)) lb))
      (send (cat (exp (gen) (mul l l-0)) lb)))
    ((load priv-stor-0 (cat pt-1 (pv b lb)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-4 "nil")) (send l))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 288)
  (parent 266)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-0) (x x) (beta l) (upsilon (mul w y)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (lb lb) (y y) (alpha (mul l l-0 (rec lb)))
    (zeta (mul x w)))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (exp (gen) (mul l l-0)) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (2 2)) ((1 1) (7 0)) ((1 2) (0 1)) ((2 3) (9 0))
    ((3 1) (2 0)) ((3 1) (5 0)) ((4 1) (2 1)) ((5 2) (4 0))
    ((6 1) (4 0)) ((7 2) (6 0)) ((8 1) (0 0)) ((8 2) (6 0))
    ((9 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec lb))) (y lb) (y (mul x w)))
  (precur (9 0))
  (gen-st (pv b l) (pv b lb) (pv self l-0))
  (facts (neq (exp (gen) (mul w y)) (gen))
    (neq (exp (gen) (mul x w)) (gen)) (neq self b) (undisclosed l-0))
  (leads-to ((1 1) (7 0)) ((3 1) (2 0)) ((3 1) (5 0)) ((8 1) (0 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 10 2 resp 4) (exp (gen) y-0) (9 0))
  (traces
    ((load priv-stor-1 (cat pt-6 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-1 (pv b lb)))
      (recv
        (sig
          (body self (exp (gen) (mul l l-0 (rec lb))) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul x w))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y)))))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b lb))))
    ((recv (cat (exp (gen) (mul l l-0)) lb))
      (send (cat (exp (gen) (mul l l-0)) lb)))
    ((load priv-stor-0 (cat pt-1 (pv b lb)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-4 "nil")) (send l))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 289)
  (parent 267)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l rndx) (alpha zeta-0 expt) (l-0 y-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l-1) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l) (y y) (alpha (mul (rec l) l-0 l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-0) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-1))
  (deflistener (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b)
    (priv-stor priv-stor-0) (lb l-1) (y y-0) (alpha alpha)
    (zeta zeta-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (8 0)) ((2 1) (10 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 3) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen x y y-0)
  (absent (x l-0) (x l-1) (y zeta) (y (mul (rec l) l-0 l-1)) (y l)
    (y-0 alpha) (y-0 zeta-0) (y-0 l-1))
  (precur (9 0))
  (gen-st (pv a l-0) (pv b l) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta-0) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((2 1) (8 0)) ((2 1) (10 0)) ((4 1) (3 0))
    ((4 1) (6 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 2 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv b-0 l-2))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) l-1)) (send (cat (exp (gen) l-0) l-1)))
    ((load priv-stor-0 (cat pt-2 (pv b l-1)))
      (stor priv-stor-0 (cat pt-6 "nil")) (send l-1))
    ((recv (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-0 (rec y-0)))))
    ((load priv-stor-0 (cat pt-2 (pv b l-1)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b (exp (gen) zeta-0)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b
            (hash (exp (gen) (mul alpha l-1))
              (exp (gen) (mul zeta-0 y-0))))))))
  (label 290)
  (parent 268)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 rndx) (alpha zeta-0 expt) (y-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-1) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l) (y y) (alpha (mul (rec l) l-0 l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) y-0) (mul (rec y-0) l-1)))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b a)
    (priv-stor priv-stor) (lb l-1) (y y-0) (alpha alpha) (zeta zeta-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (10 0)) ((2 1) (8 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 3) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen x y y-0)
  (absent (x l-0) (x l-1) (y zeta) (y (mul (rec l) l-0 l-1)) (y l)
    (y-0 alpha) (y-0 zeta-0) (y-0 l-1))
  (precur (9 0))
  (gen-st (pv a l-1) (pv b l) (pv b l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta-0) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b) (undisclosed l-1))
  (leads-to ((1 1) (0 0)) ((1 1) (10 0)) ((2 1) (8 0)) ((4 1) (3 0))
    ((4 1) (6 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 1 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv b-0 l-2))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l-1)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) y-0) (mul (rec y-0) l-1)))
      (send (cat (exp (gen) y-0) (mul (rec y-0) l-1))))
    ((load priv-stor (cat pt (pv a l-1)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 a (exp (gen) zeta-0)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 a
            (hash (exp (gen) (mul alpha l-1))
              (exp (gen) (mul zeta-0 y-0))))))))
  (label 291)
  (parent 268)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l rndx) (alpha zeta-0 expt) (l-0 y-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-1) (y y) (alpha (mul l l-0 (rec l-1))) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l l-0)) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b)
    (priv-stor priv-stor-1) (lb l-1) (y y-0) (alpha alpha)
    (zeta zeta-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (8 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0)) ((4 1) (10 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 3) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen x y y-0)
  (absent (x l) (x l-0) (y zeta) (y (mul l l-0 (rec l-1))) (y l-1)
    (y-0 alpha) (y-0 zeta-0) (y-0 l-1))
  (precur (9 0))
  (gen-st (pv a l-0) (pv b l) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta-0) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((2 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0))
    ((4 1) (10 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 4 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv b-0 l-2))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l l-0)) l-1))
      (send (cat (exp (gen) (mul l l-0)) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l-1))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-6 "nil")) (send l))
    ((recv (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-0 (rec y-0)))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b (exp (gen) zeta-0)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b
            (hash (exp (gen) (mul alpha l-1))
              (exp (gen) (mul zeta-0 y-0))))))))
  (label 292)
  (parent 268)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 ignore-2 mesg) (na nb na-0 nb-0 data)
    (a b a-0 b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pt-8 pval)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn) (x y rndx)
    (zeta expt) (l l-0 rndx) (alpha zeta-0 expt) (l-1 y-0 l-2 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-1) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l) (y y) (alpha (mul (rec l) l-0 l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) y-0) (mul l-1 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b-0)
    (priv-stor priv-stor-2) (lb l-2) (y y-0) (alpha alpha)
    (zeta zeta-0))
  (defstrand ltx-gen 2 (ignore ignore-2) (self b-0)
    (priv-stor priv-stor-2) (l l-2))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (8 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0))
    ((10 3) (9 0)) ((11 1) (10 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1 l-2)
  (uniq-gen x y y-0)
  (absent (x l-0) (x l-1) (y zeta) (y (mul (rec l) l-0 l-1)) (y l)
    (y-0 alpha) (y-0 zeta-0) (y-0 l-2))
  (precur (9 0))
  (gen-st (pv a l-1) (pv b l) (pv b l-0) (pv b-0 l-2))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta-0) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b) (undisclosed l-1))
  (leads-to ((1 1) (0 0)) ((2 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0))
    ((11 1) (10 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv b-0 l-2))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l-1)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) y-0) (mul l-1 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-1 (rec y-0)))))
    ((load priv-stor-2 (cat pt-7 (pv b-0 l-2)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0)))
      (recv (cat na-0 a-0 b-0 (exp (gen) zeta-0)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul alpha l-2))
              (exp (gen) (mul zeta-0 y-0)))))))
    ((load priv-stor-2 (cat pt-8 ignore-2))
      (stor priv-stor-2 (cat pt-7 (pv b-0 l-2)))))
  (label 293)
  (parent 268)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l rndx) (beta expt) (l-0 x-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l-1) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l) (y y) (alpha (mul (rec l) l-0 l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-0) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-1))
  (deflistener (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
  (defstrand init 3 (na na-0) (a b) (b b-0) (priv-stor priv-stor-0)
    (la l-1) (x x-0) (beta beta))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (8 0)) ((2 1) (10 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 2) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen x y x-0)
  (absent (x l-0) (x l-1) (y zeta) (y (mul (rec l) l-0 l-1)) (y l)
    (x-0 beta) (x-0 l-1))
  (precur (9 0))
  (gen-st (pv a l-0) (pv b l) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((2 1) (8 0)) ((2 1) (10 0)) ((4 1) (3 0))
    ((4 1) (6 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 2 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv a-0 l-2))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) l-1)) (send (cat (exp (gen) l-0) l-1)))
    ((load priv-stor-0 (cat pt-2 (pv b l-1)))
      (stor priv-stor-0 (cat pt-6 "nil")) (send l-1))
    ((recv (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-0 (rec x-0)))))
    ((load priv-stor-0 (cat pt-2 (pv b l-1)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 b b-0 (exp (gen) x-0)))))
  (label 294)
  (parent 269)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 rndx) (beta expt) (x-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-1) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l) (y y) (alpha (mul (rec l) l-0 l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) x-0) (mul (rec x-0) l-1)))
  (defstrand init 3 (na na-0) (a a) (b b-0) (priv-stor priv-stor)
    (la l-1) (x x-0) (beta beta))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (10 0)) ((2 1) (8 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 2) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen x y x-0)
  (absent (x l-0) (x l-1) (y zeta) (y (mul (rec l) l-0 l-1)) (y l)
    (x-0 beta) (x-0 l-1))
  (precur (9 0))
  (gen-st (pv a l-1) (pv b l) (pv b l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-1))
  (leads-to ((1 1) (0 0)) ((1 1) (10 0)) ((2 1) (8 0)) ((4 1) (3 0))
    ((4 1) (6 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 1 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv a-0 l-2))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l-1)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) x-0) (mul (rec x-0) l-1)))
      (send (cat (exp (gen) x-0) (mul (rec x-0) l-1))))
    ((load priv-stor (cat pt (pv a l-1)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a b-0 (exp (gen) x-0)))))
  (label 295)
  (parent 269)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l rndx) (beta expt) (l-0 x-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-1) (y y) (alpha (mul l l-0 (rec l-1))) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l l-0)) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
  (defstrand init 3 (na na-0) (a b) (b b-0) (priv-stor priv-stor-1)
    (la l-1) (x x-0) (beta beta))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (8 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0)) ((4 1) (10 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 2) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen x y x-0)
  (absent (x l) (x l-0) (y zeta) (y (mul l l-0 (rec l-1))) (y l-1)
    (x-0 beta) (x-0 l-1))
  (precur (9 0))
  (gen-st (pv a l-0) (pv b l) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((2 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0))
    ((4 1) (10 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 4 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv a-0 l-2))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l l-0)) l-1))
      (send (cat (exp (gen) (mul l l-0)) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l-1))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-6 "nil")) (send l))
    ((recv (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-0 (rec x-0)))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 b b-0 (exp (gen) x-0)))))
  (label 296)
  (parent 269)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 ignore-2 mesg) (na nb na-0 data)
    (a b a-0 b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pt-8 pval)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn) (x y rndx)
    (zeta expt) (l l-0 rndx) (beta expt) (l-1 x-0 l-2 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-1) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l) (y y) (alpha (mul (rec l) l-0 l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
  (defstrand init 3 (na na-0) (a a-0) (b b-0) (priv-stor priv-stor-2)
    (la l-2) (x x-0) (beta beta))
  (defstrand ltx-gen 2 (ignore ignore-2) (self a-0)
    (priv-stor priv-stor-2) (l l-2))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (8 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0))
    ((10 2) (9 0)) ((11 1) (10 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1 l-2)
  (uniq-gen x y x-0)
  (absent (x l-0) (x l-1) (y zeta) (y (mul (rec l) l-0 l-1)) (y l)
    (x-0 beta) (x-0 l-2))
  (precur (9 0))
  (gen-st (pv a l-1) (pv b l) (pv b l-0) (pv a-0 l-2))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-1))
  (leads-to ((1 1) (0 0)) ((2 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0))
    ((11 1) (10 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv a-0 l-2))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l-1)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-1 (rec x-0)))))
    ((load priv-stor-2 (cat pt-7 (pv a-0 l-2)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a-0 b-0 (exp (gen) x-0))))
    ((load priv-stor-2 (cat pt-8 ignore-2))
      (stor priv-stor-2 (cat pt-7 (pv a-0 l-2)))))
  (label 297)
  (parent 269)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-0) (x x) (beta l) (upsilon y))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (lb lb) (y y) (alpha (mul l l-0 (rec lb)))
    (zeta x))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (exp (gen) (mul l l-0)) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-0))
  (precedes ((0 2) (2 2)) ((1 1) (7 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (2 0)) ((3 1) (5 0)) ((4 1) (2 1)) ((5 2) (4 0))
    ((6 1) (4 0)) ((7 2) (6 0)) ((8 1) (6 0)) ((9 1) (0 0))
    ((9 2) (8 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec lb))) (y lb) (y x))
  (precur (8 0))
  (gen-st (pv b l) (pv b lb) (pv self l-0))
  (facts (neq (exp (gen) y) (gen)) (neq (exp (gen) x) (gen))
    (neq self b) (undisclosed l-0))
  (leads-to ((1 1) (7 0)) ((3 1) (2 0)) ((3 1) (5 0)) ((9 1) (0 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 10 2 resp 4) (exp (gen) y-0) (0 3))
  (traces
    ((load priv-stor-1 (cat pt-6 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-1 (pv b lb)))
      (recv
        (sig
          (body self (exp (gen) (mul l l-0 (rec lb))) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b lb))))
    ((recv (cat (exp (gen) (mul l l-0)) lb))
      (send (cat (exp (gen) (mul l l-0)) lb)))
    ((load priv-stor-0 (cat pt-1 (pv b lb)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-4 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 298)
  (parent 273)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-1) (x x) (beta l-0)
    (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (lb l) (y y) (alpha (mul (rec l) l-0 l-1))
    (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) l-1) (one)))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
  (precedes ((0 2) (2 2)) ((1 1) (7 0)) ((1 2) (0 1)) ((2 3) (10 0))
    ((3 1) (2 0)) ((3 1) (5 0)) ((4 1) (2 1)) ((5 2) (4 0))
    ((6 1) (4 0)) ((7 2) (6 0)) ((8 1) (6 0)) ((9 1) (0 0))
    ((9 2) (8 0)) ((10 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l-0) (x l-1) (y zeta) (y (mul (rec l) l-0 l-1)) (y l))
  (precur (8 0) (10 0))
  (gen-st (pv b l) (pv b l-0) (pv self l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq self b) (undisclosed l-1))
  (leads-to ((1 1) (7 0)) ((3 1) (2 0)) ((3 1) (5 0)) ((9 1) (0 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
    (exp (gen) (mul (rec x) y zeta)) (0 3))
  (traces
    ((load priv-stor-1 (cat pt-6 (pv self l-1)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb self b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-1 (pv b l)))
      (recv
        (sig
          (body self (exp (gen) (mul (rec l) l-0 l-1))
            (pubk "sig" self)) (privk "sig" self)))
      (recv (cat na self b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-0 (cat pt-1 (pv b l)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (stor priv-stor (cat pt-4 "nil")) (send l-0))
    ((recv (cat (exp (gen) l-1) (one)))
      (send (cat (exp (gen) l-1) (one))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
      (send (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))))
  (label 299)
  (parent 273)
  (unrealized (10 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-0) (x x) (beta l) (upsilon y))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (exp (gen) (mul l-0 (rec lb))) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l lb))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-0))
  (precedes ((1 1) (4 0)) ((1 2) (0 1)) ((2 1) (6 0)) ((3 1) (0 3))
    ((4 2) (3 0)) ((5 1) (3 0)) ((6 2) (5 0)) ((7 1) (0 0))
    ((7 2) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv b l) (pv b lb) (pv self l-0))
  (facts (neq (exp (gen) y) (gen)) (neq self b) (undisclosed l-0))
  (leads-to ((1 1) (4 0)) ((2 1) (6 0)) ((7 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (2 0))
  (traces
    ((load priv-stor-1 (cat pt-6 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b lb))))
    ((recv (cat (exp (gen) (mul l-0 (rec lb))) l))
      (send (cat (exp (gen) (mul l-0 (rec lb))) l)))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) lb)) (send (cat (exp (gen) l-0) lb)))
    ((load priv-stor-0 (cat pt-1 (pv b lb)))
      (stor priv-stor-0 (cat pt-4 "nil")) (send lb))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 300)
  (parent 276)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-0) (x x) (beta l) (upsilon (mul w y)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (lb lb) (y y) (alpha (mul l l-0 (rec lb)))
    (zeta (mul x w)))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (exp (gen) (mul l-0 (rec lb))) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l lb))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (2 2)) ((1 1) (5 0)) ((1 2) (0 1)) ((2 3) (9 0))
    ((3 1) (2 0)) ((3 1) (7 0)) ((4 1) (2 1)) ((5 2) (4 0))
    ((6 1) (4 0)) ((7 2) (6 0)) ((8 1) (0 0)) ((8 2) (6 0))
    ((9 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec lb))) (y lb) (y (mul x w)))
  (precur (9 0))
  (gen-st (pv b l) (pv b lb) (pv self l-0))
  (facts (neq (exp (gen) (mul w y)) (gen))
    (neq (exp (gen) (mul x w)) (gen)) (neq self b) (undisclosed l-0))
  (leads-to ((1 1) (5 0)) ((3 1) (2 0)) ((3 1) (7 0)) ((8 1) (0 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 10 2 resp 4) (exp (gen) y-0) (9 0))
  (traces
    ((load priv-stor-1 (cat pt-6 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-1 (pv b lb)))
      (recv
        (sig
          (body self (exp (gen) (mul l l-0 (rec lb))) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul x w))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y)))))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b lb))))
    ((recv (cat (exp (gen) (mul l-0 (rec lb))) l))
      (send (cat (exp (gen) (mul l-0 (rec lb))) l)))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) lb)) (send (cat (exp (gen) l-0) lb)))
    ((load priv-stor-0 (cat pt-1 (pv b lb)))
      (stor priv-stor-0 (cat pt-4 "nil")) (send lb))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 301)
  (parent 277)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l rndx) (alpha zeta-0 expt) (l-0 y-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l-1) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l) (y y) (alpha (mul (rec l) l-0 l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul (rec l) l-0)) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-1))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b)
    (priv-stor priv-stor-0) (lb l-1) (y y-0) (alpha alpha)
    (zeta zeta-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (6 0)) ((2 1) (10 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 3) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen x y y-0)
  (absent (x l-0) (x l-1) (y zeta) (y (mul (rec l) l-0 l-1)) (y l)
    (y-0 alpha) (y-0 zeta-0) (y-0 l-1))
  (precur (9 0))
  (gen-st (pv a l-0) (pv b l) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta-0) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)) ((2 1) (10 0)) ((4 1) (3 0))
    ((4 1) (8 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 2 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv b-0 l-2))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul (rec l) l-0)) l-1))
      (send (cat (exp (gen) (mul (rec l) l-0)) l-1)))
    ((load priv-stor-0 (cat pt-2 (pv b l-1)))
      (stor priv-stor-0 (cat pt-5 "nil")) (send l-1))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l))
    ((recv (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-0 (rec y-0)))))
    ((load priv-stor-0 (cat pt-2 (pv b l-1)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b (exp (gen) zeta-0)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b
            (hash (exp (gen) (mul alpha l-1))
              (exp (gen) (mul zeta-0 y-0))))))))
  (label 302)
  (parent 278)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 rndx) (alpha zeta-0 expt) (y-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-1) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-0) (y y) (alpha (mul l (rec l-0) l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) y-0) (mul (rec y-0) l-1)))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b a)
    (priv-stor priv-stor) (lb l-1) (y y-0) (alpha alpha) (zeta zeta-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (10 0)) ((2 1) (6 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 3) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen x y y-0)
  (absent (x l) (x l-1) (y zeta) (y (mul l (rec l-0) l-1)) (y l-0)
    (y-0 alpha) (y-0 zeta-0) (y-0 l-1))
  (precur (9 0))
  (gen-st (pv a l-1) (pv b l) (pv b l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta-0) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b) (undisclosed l-1))
  (leads-to ((1 1) (0 0)) ((1 1) (10 0)) ((2 1) (6 0)) ((4 1) (3 0))
    ((4 1) (8 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 1 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv b-0 l-2))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l-1)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) y-0) (mul (rec y-0) l-1)))
      (send (cat (exp (gen) y-0) (mul (rec y-0) l-1))))
    ((load priv-stor (cat pt (pv a l-1)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 a (exp (gen) zeta-0)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 a
            (hash (exp (gen) (mul alpha l-1))
              (exp (gen) (mul zeta-0 y-0))))))))
  (label 303)
  (parent 278)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l rndx) (alpha zeta-0 expt) (l-0 y-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-1) (y y) (alpha (mul l l-0 (rec l-1))) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l-0 (rec l-1))) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-0) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b)
    (priv-stor priv-stor-1) (lb l-1) (y y-0) (alpha alpha)
    (zeta zeta-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (6 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0)) ((4 1) (10 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 3) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen x y y-0)
  (absent (x l) (x l-0) (y zeta) (y (mul l l-0 (rec l-1))) (y l-1)
    (y-0 alpha) (y-0 zeta-0) (y-0 l-1))
  (precur (9 0))
  (gen-st (pv a l-0) (pv b l) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta-0) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0))
    ((4 1) (10 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 4 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv b-0 l-2))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l-0 (rec l-1))) l))
      (send (cat (exp (gen) (mul l-0 (rec l-1))) l)))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) l-1)) (send (cat (exp (gen) l-0) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-1))
    ((recv (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-0 (rec y-0)))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b (exp (gen) zeta-0)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b
            (hash (exp (gen) (mul alpha l-1))
              (exp (gen) (mul zeta-0 y-0))))))))
  (label 304)
  (parent 278)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 ignore-2 mesg) (na nb na-0 nb-0 data)
    (a b a-0 b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pt-8 pval)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn) (x y rndx)
    (zeta expt) (l l-0 rndx) (alpha zeta-0 expt) (l-1 y-0 l-2 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-1) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-0) (y y) (alpha (mul l (rec l-0) l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) y-0) (mul l-1 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b-0)
    (priv-stor priv-stor-2) (lb l-2) (y y-0) (alpha alpha)
    (zeta zeta-0))
  (defstrand ltx-gen 2 (ignore ignore-2) (self b-0)
    (priv-stor priv-stor-2) (l l-2))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (6 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0))
    ((10 3) (9 0)) ((11 1) (10 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1 l-2)
  (uniq-gen x y y-0)
  (absent (x l) (x l-1) (y zeta) (y (mul l (rec l-0) l-1)) (y l-0)
    (y-0 alpha) (y-0 zeta-0) (y-0 l-2))
  (precur (9 0))
  (gen-st (pv a l-1) (pv b l) (pv b l-0) (pv b-0 l-2))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta-0) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b) (undisclosed l-1))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0))
    ((11 1) (10 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv b-0 l-2))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l-1)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) y-0) (mul l-1 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-1 (rec y-0)))))
    ((load priv-stor-2 (cat pt-7 (pv b-0 l-2)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0)))
      (recv (cat na-0 a-0 b-0 (exp (gen) zeta-0)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul alpha l-2))
              (exp (gen) (mul zeta-0 y-0)))))))
    ((load priv-stor-2 (cat pt-8 ignore-2))
      (stor priv-stor-2 (cat pt-7 (pv b-0 l-2)))))
  (label 305)
  (parent 278)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l rndx) (beta expt) (l-0 x-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l-1) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l) (y y) (alpha (mul (rec l) l-0 l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul (rec l) l-0)) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-1))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
  (defstrand init 3 (na na-0) (a b) (b b-0) (priv-stor priv-stor-0)
    (la l-1) (x x-0) (beta beta))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (6 0)) ((2 1) (10 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 2) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen x y x-0)
  (absent (x l-0) (x l-1) (y zeta) (y (mul (rec l) l-0 l-1)) (y l)
    (x-0 beta) (x-0 l-1))
  (precur (9 0))
  (gen-st (pv a l-0) (pv b l) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)) ((2 1) (10 0)) ((4 1) (3 0))
    ((4 1) (8 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 2 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv a-0 l-2))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul (rec l) l-0)) l-1))
      (send (cat (exp (gen) (mul (rec l) l-0)) l-1)))
    ((load priv-stor-0 (cat pt-2 (pv b l-1)))
      (stor priv-stor-0 (cat pt-5 "nil")) (send l-1))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l))
    ((recv (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-0 (rec x-0)))))
    ((load priv-stor-0 (cat pt-2 (pv b l-1)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 b b-0 (exp (gen) x-0)))))
  (label 306)
  (parent 279)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 rndx) (beta expt) (x-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-1) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-0) (y y) (alpha (mul l (rec l-0) l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) x-0) (mul (rec x-0) l-1)))
  (defstrand init 3 (na na-0) (a a) (b b-0) (priv-stor priv-stor)
    (la l-1) (x x-0) (beta beta))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (10 0)) ((2 1) (6 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 2) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen x y x-0)
  (absent (x l) (x l-1) (y zeta) (y (mul l (rec l-0) l-1)) (y l-0)
    (x-0 beta) (x-0 l-1))
  (precur (9 0))
  (gen-st (pv a l-1) (pv b l) (pv b l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-1))
  (leads-to ((1 1) (0 0)) ((1 1) (10 0)) ((2 1) (6 0)) ((4 1) (3 0))
    ((4 1) (8 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 1 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv a-0 l-2))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l-1)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) x-0) (mul (rec x-0) l-1)))
      (send (cat (exp (gen) x-0) (mul (rec x-0) l-1))))
    ((load priv-stor (cat pt (pv a l-1)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a b-0 (exp (gen) x-0)))))
  (label 307)
  (parent 279)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l rndx) (beta expt) (l-0 x-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-1) (y y) (alpha (mul l l-0 (rec l-1))) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l-0 (rec l-1))) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-0) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
  (defstrand init 3 (na na-0) (a b) (b b-0) (priv-stor priv-stor-1)
    (la l-1) (x x-0) (beta beta))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (6 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0)) ((4 1) (10 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 2) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen x y x-0)
  (absent (x l) (x l-0) (y zeta) (y (mul l l-0 (rec l-1))) (y l-1)
    (x-0 beta) (x-0 l-1))
  (precur (9 0))
  (gen-st (pv a l-0) (pv b l) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0))
    ((4 1) (10 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 4 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv a-0 l-2))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l-0 (rec l-1))) l))
      (send (cat (exp (gen) (mul l-0 (rec l-1))) l)))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) l-1)) (send (cat (exp (gen) l-0) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-1))
    ((recv (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-0 (rec x-0)))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 b b-0 (exp (gen) x-0)))))
  (label 308)
  (parent 279)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 ignore-2 mesg) (na nb na-0 data)
    (a b a-0 b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pt-8 pval)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn) (x y rndx)
    (zeta expt) (l l-0 rndx) (beta expt) (l-1 x-0 l-2 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-1) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-0) (y y) (alpha (mul l (rec l-0) l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
  (defstrand init 3 (na na-0) (a a-0) (b b-0) (priv-stor priv-stor-2)
    (la l-2) (x x-0) (beta beta))
  (defstrand ltx-gen 2 (ignore ignore-2) (self a-0)
    (priv-stor priv-stor-2) (l l-2))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (6 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0))
    ((10 2) (9 0)) ((11 1) (10 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1 l-2)
  (uniq-gen x y x-0)
  (absent (x l) (x l-1) (y zeta) (y (mul l (rec l-0) l-1)) (y l-0)
    (x-0 beta) (x-0 l-2))
  (precur (9 0))
  (gen-st (pv a l-1) (pv b l) (pv b l-0) (pv a-0 l-2))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-1))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0))
    ((11 1) (10 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv a-0 l-2))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l-1)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-1 (rec x-0)))))
    ((load priv-stor-2 (cat pt-7 (pv a-0 l-2)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a-0 b-0 (exp (gen) x-0))))
    ((load priv-stor-2 (cat pt-8 ignore-2))
      (stor priv-stor-2 (cat pt-7 (pv a-0 l-2)))))
  (label 309)
  (parent 279)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-0) (x x) (beta l) (upsilon y))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (lb lb) (y y) (alpha (mul l l-0 (rec lb)))
    (zeta x))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (exp (gen) (mul l-0 (rec lb))) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-0))
  (precedes ((0 2) (2 2)) ((1 1) (5 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (2 0)) ((3 1) (7 0)) ((4 1) (2 1)) ((5 2) (4 0))
    ((6 1) (4 0)) ((7 2) (6 0)) ((8 1) (6 0)) ((9 1) (0 0))
    ((9 2) (8 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec lb))) (y lb) (y x))
  (precur (8 0))
  (gen-st (pv b l) (pv b lb) (pv self l-0))
  (facts (neq (exp (gen) y) (gen)) (neq (exp (gen) x) (gen))
    (neq self b) (undisclosed l-0))
  (leads-to ((1 1) (5 0)) ((3 1) (2 0)) ((3 1) (7 0)) ((9 1) (0 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 10 2 resp 4) (exp (gen) y-0) (0 3))
  (traces
    ((load priv-stor-1 (cat pt-6 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-1 (pv b lb)))
      (recv
        (sig
          (body self (exp (gen) (mul l l-0 (rec lb))) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b lb))))
    ((recv (cat (exp (gen) (mul l-0 (rec lb))) l))
      (send (cat (exp (gen) (mul l-0 (rec lb))) l)))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) lb)) (send (cat (exp (gen) l-0) lb)))
    ((load priv-stor-0 (cat pt-1 (pv b lb)))
      (stor priv-stor-0 (cat pt-4 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 310)
  (parent 283)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-1) (x x) (beta l)
    (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (lb l-0) (y y) (alpha (mul l (rec l-0) l-1))
    (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l-1) (one)))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
  (precedes ((0 2) (2 2)) ((1 1) (5 0)) ((1 2) (0 1)) ((2 3) (10 0))
    ((3 1) (2 0)) ((3 1) (7 0)) ((4 1) (2 1)) ((5 2) (4 0))
    ((6 1) (4 0)) ((7 2) (6 0)) ((8 1) (6 0)) ((9 1) (0 0))
    ((9 2) (8 0)) ((10 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-1) (y zeta) (y (mul l (rec l-0) l-1)) (y l-0))
  (precur (8 0) (10 0))
  (gen-st (pv b l) (pv b l-0) (pv self l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq self b) (undisclosed l-1))
  (leads-to ((1 1) (5 0)) ((3 1) (2 0)) ((3 1) (7 0)) ((9 1) (0 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
    (exp (gen) (mul (rec x) y zeta)) (0 3))
  (traces
    ((load priv-stor-1 (cat pt-6 (pv self l-1)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb self b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-1 (pv b l-0)))
      (recv
        (sig
          (body self (exp (gen) (mul l (rec l-0) l-1))
            (pubk "sig" self)) (privk "sig" self)))
      (recv (cat na self b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-0 (cat pt-1 (pv b l-0)))
      (stor priv-stor-0 (cat pt-4 "nil")) (send l-0))
    ((recv (cat (exp (gen) l-1) (one)))
      (send (cat (exp (gen) l-1) (one))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
      (send (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))))
  (label 311)
  (parent 283)
  (unrealized (10 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (la l-0) (x x) (beta l) (upsilon upsilon))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((1 1) (2 0)) ((1 2) (0 1)) ((2 2) (0 3)) ((3 1) (0 3))
    ((4 1) (0 0)) ((4 2) (3 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (3 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (neq (exp (gen) upsilon) (gen)) (neq self b) (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (2 0))
  (traces
    ((load priv-stor-0 (cat pt-3 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-1 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-3 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 312)
  (parent 287)
  (seen 286)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-0) (x x) (beta l) (upsilon y))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-0))
  (precedes ((1 1) (5 0)) ((1 2) (0 1)) ((2 1) (3 0)) ((3 2) (0 3))
    ((4 1) (0 3)) ((5 2) (4 0)) ((6 1) (0 0)) ((6 2) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv b l) (pv b lb) (pv self l-0))
  (facts (neq (exp (gen) y) (gen)) (neq self b) (undisclosed l-0))
  (leads-to ((1 1) (5 0)) ((2 1) (3 0)) ((6 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor-1 (cat pt-6 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b lb))))
    ((load priv-stor-0 (cat pt-1 (pv b lb)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-4 "nil")) (send l))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 313)
  (parent 288)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-0) (x x) (beta l) (upsilon (mul w y)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (exp (gen) (mul l l-0)) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (8 0)) ((1 1) (6 0)) ((1 2) (0 1)) ((2 1) (4 0))
    ((3 1) (8 0)) ((4 2) (3 0)) ((5 1) (3 0)) ((6 2) (5 0))
    ((7 1) (0 0)) ((7 2) (5 0)) ((8 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (8 0))
  (gen-st (pv b l) (pv b lb) (pv self l-0))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq self b)
    (undisclosed l-0))
  (leads-to ((1 1) (6 0)) ((2 1) (4 0)) ((7 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (2 0))
  (traces
    ((load priv-stor-1 (cat pt-6 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b lb))))
    ((recv (cat (exp (gen) (mul l l-0)) lb))
      (send (cat (exp (gen) (mul l l-0)) lb)))
    ((load priv-stor-0 (cat pt-1 (pv b lb)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-4 "nil")) (send l))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 314)
  (parent 289)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-0) (x x) (beta l) (upsilon y))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (exp (gen) (mul l l-0)) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-0))
  (precedes ((1 1) (6 0)) ((1 2) (0 1)) ((2 1) (4 0)) ((3 1) (0 3))
    ((4 2) (3 0)) ((5 1) (3 0)) ((6 2) (5 0)) ((7 1) (5 0))
    ((8 1) (0 0)) ((8 2) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (7 0))
  (gen-st (pv b l) (pv b lb) (pv self l-0))
  (facts (neq (exp (gen) y) (gen)) (neq self b) (undisclosed l-0))
  (leads-to ((1 1) (6 0)) ((2 1) (4 0)) ((8 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (2 0))
  (traces
    ((load priv-stor-1 (cat pt-6 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b lb))))
    ((recv (cat (exp (gen) (mul l l-0)) lb))
      (send (cat (exp (gen) (mul l l-0)) lb)))
    ((load priv-stor-0 (cat pt-1 (pv b lb)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-4 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 315)
  (parent 298)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-0) (x x) (beta l) (upsilon (mul w y)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (lb lb) (y y) (alpha (mul l l-0 (rec lb)))
    (zeta (mul x w)))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (exp (gen) (mul l l-0)) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (2 2)) ((1 1) (7 0)) ((1 2) (0 1)) ((2 3) (10 0))
    ((3 1) (2 0)) ((3 1) (5 0)) ((4 1) (2 1)) ((5 2) (4 0))
    ((6 1) (4 0)) ((7 2) (6 0)) ((8 1) (6 0)) ((9 1) (0 0))
    ((9 2) (8 0)) ((10 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec lb))) (y lb) (y (mul x w)))
  (precur (8 0) (10 0))
  (gen-st (pv b l) (pv b lb) (pv self l-0))
  (facts (neq (exp (gen) (mul w y)) (gen))
    (neq (exp (gen) (mul x w)) (gen)) (neq self b) (undisclosed l-0))
  (leads-to ((1 1) (7 0)) ((3 1) (2 0)) ((3 1) (5 0)) ((9 1) (0 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 11 2 resp 4) (exp (gen) y-0) (10 0))
  (traces
    ((load priv-stor-1 (cat pt-6 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-1 (pv b lb)))
      (recv
        (sig
          (body self (exp (gen) (mul l l-0 (rec lb))) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul x w))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y)))))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b lb))))
    ((recv (cat (exp (gen) (mul l l-0)) lb))
      (send (cat (exp (gen) (mul l l-0)) lb)))
    ((load priv-stor-0 (cat pt-1 (pv b lb)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-4 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 316)
  (parent 299)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-0) (x x) (beta l) (upsilon y))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l lb))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-0))
  (precedes ((1 1) (3 0)) ((1 2) (0 1)) ((2 1) (5 0)) ((3 2) (0 3))
    ((4 1) (0 3)) ((5 2) (4 0)) ((6 1) (0 0)) ((6 2) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv b l) (pv b lb) (pv self l-0))
  (facts (neq (exp (gen) y) (gen)) (neq self b) (undisclosed l-0))
  (leads-to ((1 1) (3 0)) ((2 1) (5 0)) ((6 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor-1 (cat pt-6 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b lb))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) lb)) (send (cat (exp (gen) l-0) lb)))
    ((load priv-stor-0 (cat pt-1 (pv b lb)))
      (stor priv-stor-0 (cat pt-4 "nil")) (send lb))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 317)
  (parent 300)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-0) (x x) (beta l) (upsilon (mul w y)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (exp (gen) (mul l-0 (rec lb))) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l lb))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (8 0)) ((1 1) (4 0)) ((1 2) (0 1)) ((2 1) (6 0))
    ((3 1) (8 0)) ((4 2) (3 0)) ((5 1) (3 0)) ((6 2) (5 0))
    ((7 1) (0 0)) ((7 2) (5 0)) ((8 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (8 0))
  (gen-st (pv b l) (pv b lb) (pv self l-0))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq self b)
    (undisclosed l-0))
  (leads-to ((1 1) (4 0)) ((2 1) (6 0)) ((7 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (2 0))
  (traces
    ((load priv-stor-1 (cat pt-6 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b lb))))
    ((recv (cat (exp (gen) (mul l-0 (rec lb))) l))
      (send (cat (exp (gen) (mul l-0 (rec lb))) l)))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) lb)) (send (cat (exp (gen) l-0) lb)))
    ((load priv-stor-0 (cat pt-1 (pv b lb)))
      (stor priv-stor-0 (cat pt-4 "nil")) (send lb))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 318)
  (parent 301)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-0) (x x) (beta l) (upsilon y))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (exp (gen) (mul l-0 (rec lb))) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-0))
  (precedes ((1 1) (4 0)) ((1 2) (0 1)) ((2 1) (6 0)) ((3 1) (0 3))
    ((4 2) (3 0)) ((5 1) (3 0)) ((6 2) (5 0)) ((7 1) (5 0))
    ((8 1) (0 0)) ((8 2) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (7 0))
  (gen-st (pv b l) (pv b lb) (pv self l-0))
  (facts (neq (exp (gen) y) (gen)) (neq self b) (undisclosed l-0))
  (leads-to ((1 1) (4 0)) ((2 1) (6 0)) ((8 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (2 0))
  (traces
    ((load priv-stor-1 (cat pt-6 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b lb))))
    ((recv (cat (exp (gen) (mul l-0 (rec lb))) l))
      (send (cat (exp (gen) (mul l-0 (rec lb))) l)))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) lb)) (send (cat (exp (gen) l-0) lb)))
    ((load priv-stor-0 (cat pt-1 (pv b lb)))
      (stor priv-stor-0 (cat pt-4 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 319)
  (parent 310)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-0) (x x) (beta l) (upsilon (mul w y)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (lb lb) (y y) (alpha (mul l l-0 (rec lb)))
    (zeta (mul x w)))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (exp (gen) (mul l-0 (rec lb))) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (2 2)) ((1 1) (5 0)) ((1 2) (0 1)) ((2 3) (10 0))
    ((3 1) (2 0)) ((3 1) (7 0)) ((4 1) (2 1)) ((5 2) (4 0))
    ((6 1) (4 0)) ((7 2) (6 0)) ((8 1) (6 0)) ((9 1) (0 0))
    ((9 2) (8 0)) ((10 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec lb))) (y lb) (y (mul x w)))
  (precur (8 0) (10 0))
  (gen-st (pv b l) (pv b lb) (pv self l-0))
  (facts (neq (exp (gen) (mul w y)) (gen))
    (neq (exp (gen) (mul x w)) (gen)) (neq self b) (undisclosed l-0))
  (leads-to ((1 1) (5 0)) ((3 1) (2 0)) ((3 1) (7 0)) ((9 1) (0 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 11 2 resp 4) (exp (gen) y-0) (10 0))
  (traces
    ((load priv-stor-1 (cat pt-6 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-1 (pv b lb)))
      (recv
        (sig
          (body self (exp (gen) (mul l l-0 (rec lb))) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul x w))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y)))))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b lb))))
    ((recv (cat (exp (gen) (mul l-0 (rec lb))) l))
      (send (cat (exp (gen) (mul l-0 (rec lb))) l)))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) lb)) (send (cat (exp (gen) l-0) lb)))
    ((load priv-stor-0 (cat pt-1 (pv b lb)))
      (stor priv-stor-0 (cat pt-4 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 320)
  (parent 311)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-0) (x x) (beta l) (upsilon y))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-0))
  (precedes ((1 1) (4 0)) ((1 2) (0 1)) ((2 1) (0 3)) ((3 1) (0 3))
    ((4 2) (3 0)) ((5 1) (0 0)) ((5 2) (3 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv b l) (pv b lb) (pv self l-0))
  (facts (neq (exp (gen) y) (gen)) (neq self b) (undisclosed l-0))
  (leads-to ((1 1) (4 0)) ((5 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor-1 (cat pt-5 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b lb))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-5 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 321)
  (parent 313)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-0) (x x) (beta l) (upsilon (mul w y)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (7 0)) ((1 1) (5 0)) ((1 2) (0 1)) ((2 1) (3 0))
    ((3 2) (7 0)) ((4 1) (7 0)) ((5 2) (4 0)) ((6 1) (0 0))
    ((6 2) (4 0)) ((7 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (7 0))
  (gen-st (pv b l) (pv b lb) (pv self l-0))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq self b)
    (undisclosed l-0))
  (leads-to ((1 1) (5 0)) ((2 1) (3 0)) ((6 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor-1 (cat pt-6 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b lb))))
    ((load priv-stor-0 (cat pt-1 (pv b lb)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-4 "nil")) (send l))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 322)
  (parent 314)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-0) (x x) (beta l) (upsilon y))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-0))
  (precedes ((1 1) (5 0)) ((1 2) (0 1)) ((2 1) (3 0)) ((3 2) (0 3))
    ((4 1) (0 3)) ((5 2) (4 0)) ((6 1) (4 0)) ((7 1) (0 0))
    ((7 2) (6 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (6 0))
  (gen-st (pv b l) (pv b lb) (pv self l-0))
  (facts (neq (exp (gen) y) (gen)) (neq self b) (undisclosed l-0))
  (leads-to ((1 1) (5 0)) ((2 1) (3 0)) ((7 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor-1 (cat pt-6 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b lb))))
    ((load priv-stor-0 (cat pt-1 (pv b lb)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-4 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 323)
  (parent 315)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-0) (x x) (beta l) (upsilon (mul w y)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (exp (gen) (mul l l-0)) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (9 0)) ((1 1) (6 0)) ((1 2) (0 1)) ((2 1) (4 0))
    ((3 1) (9 0)) ((4 2) (3 0)) ((5 1) (3 0)) ((6 2) (5 0))
    ((7 1) (5 0)) ((8 1) (0 0)) ((8 2) (7 0)) ((9 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (7 0) (9 0))
  (gen-st (pv b l) (pv b lb) (pv self l-0))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq self b)
    (undisclosed l-0))
  (leads-to ((1 1) (6 0)) ((2 1) (4 0)) ((8 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (2 0))
  (traces
    ((load priv-stor-1 (cat pt-6 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b lb))))
    ((recv (cat (exp (gen) (mul l l-0)) lb))
      (send (cat (exp (gen) (mul l l-0)) lb)))
    ((load priv-stor-0 (cat pt-1 (pv b lb)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-4 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 324)
  (parent 316)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-0) (x x) (beta l) (upsilon y))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l lb))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-0))
  (precedes ((1 1) (3 0)) ((1 2) (0 1)) ((2 1) (4 0)) ((3 2) (0 3))
    ((4 2) (0 3)) ((5 1) (0 0)) ((5 2) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv b l) (pv b lb) (pv self l-0))
  (facts (neq (exp (gen) y) (gen)) (neq self b) (undisclosed l-0))
  (leads-to ((1 1) (3 0)) ((2 1) (4 0)) ((5 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor-1 (cat pt-6 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b lb))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((load priv-stor-0 (cat pt-1 (pv b lb)))
      (stor priv-stor-0 (cat pt-4 "nil")) (send lb))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 325)
  (parent 317)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-0) (x x) (beta l) (upsilon (mul w y)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l lb))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (7 0)) ((1 1) (3 0)) ((1 2) (0 1)) ((2 1) (5 0))
    ((3 2) (7 0)) ((4 1) (7 0)) ((5 2) (4 0)) ((6 1) (0 0))
    ((6 2) (4 0)) ((7 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (7 0))
  (gen-st (pv b l) (pv b lb) (pv self l-0))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq self b)
    (undisclosed l-0))
  (leads-to ((1 1) (3 0)) ((2 1) (5 0)) ((6 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor-1 (cat pt-6 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b lb))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) lb)) (send (cat (exp (gen) l-0) lb)))
    ((load priv-stor-0 (cat pt-1 (pv b lb)))
      (stor priv-stor-0 (cat pt-4 "nil")) (send lb))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 326)
  (parent 318)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-0) (x x) (beta l) (upsilon y))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-0))
  (precedes ((1 1) (3 0)) ((1 2) (0 1)) ((2 1) (5 0)) ((3 2) (0 3))
    ((4 1) (0 3)) ((5 2) (4 0)) ((6 1) (4 0)) ((7 1) (0 0))
    ((7 2) (6 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (6 0))
  (gen-st (pv b l) (pv b lb) (pv self l-0))
  (facts (neq (exp (gen) y) (gen)) (neq self b) (undisclosed l-0))
  (leads-to ((1 1) (3 0)) ((2 1) (5 0)) ((7 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor-1 (cat pt-6 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b lb))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) lb)) (send (cat (exp (gen) l-0) lb)))
    ((load priv-stor-0 (cat pt-1 (pv b lb)))
      (stor priv-stor-0 (cat pt-4 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 327)
  (parent 319)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-0) (x x) (beta l) (upsilon (mul w y)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (exp (gen) (mul l-0 (rec lb))) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (9 0)) ((1 1) (4 0)) ((1 2) (0 1)) ((2 1) (6 0))
    ((3 1) (9 0)) ((4 2) (3 0)) ((5 1) (3 0)) ((6 2) (5 0))
    ((7 1) (5 0)) ((8 1) (0 0)) ((8 2) (7 0)) ((9 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (7 0) (9 0))
  (gen-st (pv b l) (pv b lb) (pv self l-0))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq self b)
    (undisclosed l-0))
  (leads-to ((1 1) (4 0)) ((2 1) (6 0)) ((8 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (2 0))
  (traces
    ((load priv-stor-1 (cat pt-6 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b lb))))
    ((recv (cat (exp (gen) (mul l-0 (rec lb))) l))
      (send (cat (exp (gen) (mul l-0 (rec lb))) l)))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) lb)) (send (cat (exp (gen) l-0) lb)))
    ((load priv-stor-0 (cat pt-1 (pv b lb)))
      (stor priv-stor-0 (cat pt-4 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 328)
  (parent 320)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn)
    (l l-0 x y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (la l-0) (x x) (beta l) (upsilon y))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((1 1) (3 0)) ((1 2) (0 1)) ((2 1) (0 3)) ((3 2) (2 0))
    ((4 1) (0 0)) ((4 2) (2 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv b l) (pv self l-0))
  (facts (neq (exp (gen) y) (gen)) (neq self b) (undisclosed l-0))
  (leads-to ((1 1) (3 0)) ((4 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (2 0))
  (traces
    ((load priv-stor-0 (cat pt-3 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-1 "nil")) (send l))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-3 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 329)
  (parent 321)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-0) (x x) (beta l) (upsilon (mul w y)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (6 0)) ((1 1) (4 0)) ((1 2) (0 1)) ((2 1) (6 0))
    ((3 1) (6 0)) ((4 2) (3 0)) ((5 1) (0 0)) ((5 2) (3 0))
    ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (6 0))
  (gen-st (pv b l) (pv b lb) (pv self l-0))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq self b)
    (undisclosed l-0))
  (leads-to ((1 1) (4 0)) ((5 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor-1 (cat pt-5 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b lb))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-5 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 330)
  (parent 322)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-0) (x x) (beta l) (upsilon y))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-0))
  (precedes ((1 1) (4 0)) ((1 2) (0 1)) ((2 1) (0 3)) ((3 1) (0 3))
    ((4 2) (3 0)) ((5 1) (3 0)) ((6 1) (0 0)) ((6 2) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (5 0))
  (gen-st (pv b l) (pv b lb) (pv self l-0))
  (facts (neq (exp (gen) y) (gen)) (neq self b) (undisclosed l-0))
  (leads-to ((1 1) (4 0)) ((6 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor-1 (cat pt-5 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b lb))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-5 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 331)
  (parent 323)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-0) (x x) (beta l) (upsilon (mul w y)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (8 0)) ((1 1) (5 0)) ((1 2) (0 1)) ((2 1) (3 0))
    ((3 2) (8 0)) ((4 1) (8 0)) ((5 2) (4 0)) ((6 1) (4 0))
    ((7 1) (0 0)) ((7 2) (6 0)) ((8 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (6 0) (8 0))
  (gen-st (pv b l) (pv b lb) (pv self l-0))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq self b)
    (undisclosed l-0))
  (leads-to ((1 1) (5 0)) ((2 1) (3 0)) ((7 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor-1 (cat pt-6 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b lb))))
    ((load priv-stor-0 (cat pt-1 (pv b lb)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-4 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 332)
  (parent 324)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-0) (x x) (beta l) (upsilon y))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-0))
  (precedes ((1 1) (3 0)) ((1 2) (0 1)) ((2 1) (0 3)) ((3 2) (0 3))
    ((4 1) (0 0)) ((4 2) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv b l) (pv b lb) (pv self l-0))
  (facts (neq (exp (gen) y) (gen)) (neq self b) (undisclosed l-0))
  (leads-to ((1 1) (3 0)) ((4 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor-1 (cat pt-5 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b lb))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-5 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 333)
  (parent 325)
  (seen 337)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-0) (x x) (beta l) (upsilon (mul w y)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l lb))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (6 0)) ((1 1) (3 0)) ((1 2) (0 1)) ((2 1) (4 0))
    ((3 2) (6 0)) ((4 2) (6 0)) ((5 1) (0 0)) ((5 2) (6 0))
    ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (6 0))
  (gen-st (pv b l) (pv b lb) (pv self l-0))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq self b)
    (undisclosed l-0))
  (leads-to ((1 1) (3 0)) ((2 1) (4 0)) ((5 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor-1 (cat pt-6 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b lb))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((load priv-stor-0 (cat pt-1 (pv b lb)))
      (stor priv-stor-0 (cat pt-4 "nil")) (send lb))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 334)
  (parent 326)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-0) (x x) (beta l) (upsilon y))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-0))
  (precedes ((1 1) (3 0)) ((1 2) (0 1)) ((2 1) (4 0)) ((3 2) (0 3))
    ((4 2) (0 3)) ((5 1) (0 3)) ((6 1) (0 0)) ((6 2) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (5 0))
  (gen-st (pv b l) (pv b lb) (pv self l-0))
  (facts (neq (exp (gen) y) (gen)) (neq self b) (undisclosed l-0))
  (leads-to ((1 1) (3 0)) ((2 1) (4 0)) ((6 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor-1 (cat pt-6 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b lb))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((load priv-stor-0 (cat pt-1 (pv b lb)))
      (stor priv-stor-0 (cat pt-4 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 335)
  (parent 327)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-0) (x x) (beta l) (upsilon (mul w y)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (8 0)) ((1 1) (3 0)) ((1 2) (0 1)) ((2 1) (5 0))
    ((3 2) (8 0)) ((4 1) (8 0)) ((5 2) (4 0)) ((6 1) (4 0))
    ((7 1) (0 0)) ((7 2) (6 0)) ((8 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (6 0) (8 0))
  (gen-st (pv b l) (pv b lb) (pv self l-0))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq self b)
    (undisclosed l-0))
  (leads-to ((1 1) (3 0)) ((2 1) (5 0)) ((7 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor-1 (cat pt-6 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b lb))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) lb)) (send (cat (exp (gen) l-0) lb)))
    ((load priv-stor-0 (cat pt-1 (pv b lb)))
      (stor priv-stor-0 (cat pt-4 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 336)
  (parent 328)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn)
    (l l-0 x y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (la l-0) (x x) (beta l) (upsilon y))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((1 1) (2 0)) ((1 2) (0 1)) ((2 2) (0 3)) ((3 1) (0 0))
    ((3 2) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv b l) (pv self l-0))
  (facts (neq (exp (gen) y) (gen)) (neq self b) (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (2 0))
  (traces
    ((load priv-stor-0 (cat pt-3 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-1 "nil")) (send l))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-3 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 337)
  (parent 329)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn)
    (l l-0 x rndx) (w expt) (y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (la l-0) (x x) (beta l) (upsilon (mul w y)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (5 0)) ((1 1) (3 0)) ((1 2) (0 1)) ((2 1) (5 0))
    ((3 2) (2 0)) ((4 1) (0 0)) ((4 2) (2 0)) ((5 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (5 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq self b)
    (undisclosed l-0))
  (leads-to ((1 1) (3 0)) ((4 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (2 0))
  (traces
    ((load priv-stor-0 (cat pt-3 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-1 "nil")) (send l))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-3 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 338)
  (parent 330)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn)
    (l l-0 x y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (la l-0) (x x) (beta l) (upsilon y))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((1 1) (3 0)) ((1 2) (0 1)) ((2 1) (0 3)) ((3 2) (2 0))
    ((4 1) (2 0)) ((5 1) (0 0)) ((5 2) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (4 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (neq (exp (gen) y) (gen)) (neq self b) (undisclosed l-0))
  (leads-to ((1 1) (3 0)) ((5 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (2 0))
  (traces
    ((load priv-stor-0 (cat pt-3 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-1 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-3 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 339)
  (parent 331)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-0) (x x) (beta l) (upsilon (mul w y)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (7 0)) ((1 1) (4 0)) ((1 2) (0 1)) ((2 1) (7 0))
    ((3 1) (7 0)) ((4 2) (3 0)) ((5 1) (3 0)) ((6 1) (0 0))
    ((6 2) (5 0)) ((7 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (5 0) (7 0))
  (gen-st (pv b l) (pv b lb) (pv self l-0))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq self b)
    (undisclosed l-0))
  (leads-to ((1 1) (4 0)) ((6 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor-1 (cat pt-5 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b lb))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-5 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 340)
  (parent 332)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-0) (x x) (beta l) (upsilon (mul w y)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (5 0)) ((1 1) (3 0)) ((1 2) (0 1)) ((2 1) (5 0))
    ((3 2) (5 0)) ((4 1) (0 0)) ((4 2) (5 0)) ((5 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (5 0))
  (gen-st (pv b l) (pv b lb) (pv self l-0))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq self b)
    (undisclosed l-0))
  (leads-to ((1 1) (3 0)) ((4 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor-1 (cat pt-5 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b lb))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-5 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 341)
  (parent 334)
  (seen 345)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-0) (x x) (beta l) (upsilon y))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-0))
  (precedes ((1 1) (3 0)) ((1 2) (0 1)) ((2 1) (0 3)) ((3 2) (0 3))
    ((4 1) (0 3)) ((5 1) (0 0)) ((5 2) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (4 0))
  (gen-st (pv b l) (pv b lb) (pv self l-0))
  (facts (neq (exp (gen) y) (gen)) (neq self b) (undisclosed l-0))
  (leads-to ((1 1) (3 0)) ((5 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor-1 (cat pt-5 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b lb))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-5 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 342)
  (parent 335)
  (seen 346)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-0) (x x) (beta l) (upsilon (mul w y)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (7 0)) ((1 1) (3 0)) ((1 2) (0 1)) ((2 1) (4 0))
    ((3 2) (7 0)) ((4 2) (7 0)) ((5 1) (7 0)) ((6 1) (0 0))
    ((6 2) (5 0)) ((7 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (5 0) (7 0))
  (gen-st (pv b l) (pv b lb) (pv self l-0))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq self b)
    (undisclosed l-0))
  (leads-to ((1 1) (3 0)) ((2 1) (4 0)) ((6 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor-1 (cat pt-6 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b lb))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((load priv-stor-0 (cat pt-1 (pv b lb)))
      (stor priv-stor-0 (cat pt-4 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 343)
  (parent 336)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn)
    (l l-0 x y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (la l-0) (x x) (beta l) (upsilon y))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((1 1) (2 0)) ((1 2) (0 1)) ((2 2) (0 3)) ((3 1) (0 0))
    ((3 2) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv b l) (pv self l-0))
  (facts (neq (exp (gen) y) (gen)) (neq self b) (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization forgot nb)
  (traces
    ((load priv-stor-0 (cat pt-3 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-1 "nil")) (send l))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-3 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 344)
  (parent 337)
  (realized)
  (shape)
  (maps
    ((0)
      ((a self) (b b) (la l-0) (x x) (beta l) (upsilon y) (na na)
        (nb nb) (priv-stor priv-stor-0))))
  (origs (l-0 (3 1)) (pt-3 (3 1)) (pt-1 (2 1)) (l (1 1)) (pt-0 (1 1))
    (na (0 2)))
  (ugens (x (0 2))))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn)
    (l l-0 x rndx) (w expt) (y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (la l-0) (x x) (beta l) (upsilon (mul w y)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 2) (4 0))
    ((3 1) (0 0)) ((3 2) (4 0)) ((4 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (4 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq self b)
    (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (2 0))
  (traces
    ((load priv-stor-0 (cat pt-3 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-1 "nil")) (send l))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-3 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 345)
  (parent 338)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn)
    (l l-0 x y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (la l-0) (x x) (beta l) (upsilon y))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((1 1) (2 0)) ((1 2) (0 1)) ((2 2) (0 3)) ((3 1) (0 3))
    ((4 1) (0 0)) ((4 2) (3 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (3 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (neq (exp (gen) y) (gen)) (neq self b) (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (2 0))
  (traces
    ((load priv-stor-0 (cat pt-3 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-1 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-3 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 346)
  (parent 339)
  (seen 337)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn)
    (l l-0 x rndx) (w expt) (y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (la l-0) (x x) (beta l) (upsilon (mul w y)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (6 0)) ((1 1) (3 0)) ((1 2) (0 1)) ((2 1) (6 0))
    ((3 2) (2 0)) ((4 1) (2 0)) ((5 1) (0 0)) ((5 2) (4 0))
    ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (4 0) (6 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq self b)
    (undisclosed l-0))
  (leads-to ((1 1) (3 0)) ((5 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (2 0))
  (traces
    ((load priv-stor-0 (cat pt-3 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-1 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-3 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 347)
  (parent 340)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-0) (x x) (beta l) (upsilon (mul w y)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (6 0)) ((1 1) (3 0)) ((1 2) (0 1)) ((2 1) (6 0))
    ((3 2) (6 0)) ((4 1) (6 0)) ((5 1) (0 0)) ((5 2) (4 0))
    ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (4 0) (6 0))
  (gen-st (pv b l) (pv b lb) (pv self l-0))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq self b)
    (undisclosed l-0))
  (leads-to ((1 1) (3 0)) ((5 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor-1 (cat pt-5 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b lb))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-5 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 348)
  (parent 343)
  (seen 350)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn)
    (l l-0 x rndx) (w expt) (y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (la l-0) (x x) (beta l) (upsilon (mul w y)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((1 1) (2 0)) ((1 2) (0 1)) ((2 2) (0 3)) ((3 1) (0 0))
    ((3 2) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv b l) (pv self l-0))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq self b)
    (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor-0 (cat pt-3 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-1 "nil")) (send l))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-3 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 349)
  (parent 345)
  (seen 286)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn)
    (l l-0 x rndx) (w expt) (y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (la l-0) (x x) (beta l) (upsilon (mul w y)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 2) (5 0))
    ((3 1) (5 0)) ((4 1) (0 0)) ((4 2) (3 0)) ((5 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (3 0) (5 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq self b)
    (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (2 0))
  (traces
    ((load priv-stor-0 (cat pt-3 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-1 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-3 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 350)
  (parent 347)
  (seen 345)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(comment "Nothing left to do")

(defprotocol dhcr-um diffie-hellman
  (defrole init
    (vars (la x rndx) (beta upsilon expt) (a b name) (na nb data)
      (priv-stor locn))
    (trace (load priv-stor (pv a la))
      (recv
        (sig (body b (exp (gen) beta) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul la beta))
              (exp (gen) (mul x upsilon)))))) (send nb))
    (uniq-orig na)
    (uniq-gen x)
    (absent (x la) (x beta))
    (assume (fact neq (exp (gen) upsilon) (gen)))
    (gen-st (pv a la)))
  (defrole resp
    (vars (lb y rndx) (alpha zeta expt) (a b name) (na nb data)
      (priv-stor locn))
    (trace (load priv-stor (pv b lb))
      (recv
        (sig (body a (exp (gen) alpha) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul lb alpha))
              (exp (gen) (mul y zeta)))))) (recv nb))
    (uniq-orig nb)
    (uniq-gen y)
    (absent (y lb) (y alpha) (y zeta))
    (assume (fact neq (exp (gen) zeta) (gen)))
    (gen-st (pv b lb)))
  (defrole ltx-gen
    (vars (self name) (l rndx) (priv-stor locn) (ignore mesg))
    (trace (load priv-stor ignore) (stor priv-stor (pv self l))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    (uniq-orig l))
  (defrole ltx-disclose
    (vars (self name) (l rndx) (priv-stor locn))
    (trace (load priv-stor (pv self l)) (stor priv-stor "nil") (send l))
    (gen-st (pv self l)))
  (defrule undisclosed-not-disclosed
    (forall ((z strd) (l rndx))
      (implies
        (and (fact undisclosed l) (p "ltx-disclose" z (idx 2))
          (p "ltx-disclose" "l" z l))
        (false))))
  (defgenrule neqRl_indx
    (forall ((x indx)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_strd
    (forall ((x strd)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_mesg
    (forall ((x mesg)) (implies (fact neq x x) (false))))
  (defgenrule scissorsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (trans z2 i2)
          (leads-to z0 i0 z1 i1) (leads-to z0 i0 z2 i2))
        (and (= z1 z2) (= i1 i2)))))
  (defgenrule cakeRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (leads-to z0 i0 z1 i1)
          (leads-to z0 i0 z2 i2) (prec z1 i1 z2 i2)) (false))))
  (defgenrule no-interruption
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (leads-to z0 i0 z2 i2) (trans z1 i1)
          (same-locn z0 i0 z1 i1) (prec z0 i0 z1 i1) (prec z1 i1 z2 i2))
        (false))))
  (defgenrule shearsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (trans z2 i2)
          (leads-to z0 i0 z1 i1) (same-locn z0 i0 z2 i2)
          (prec z0 i0 z2 i2))
        (or (and (= z1 z2) (= i1 i2)) (prec z1 i1 z2 i2)))))
  (defgenrule invShearsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (same-locn z0 i0 z1 i1)
          (leads-to z1 i1 z2 i2) (prec z0 i0 z2 i2))
        (or (and (= z0 z1) (= i0 i1)) (prec z0 i0 z1 i1)))))
  (defgenrule assume-init-0
    (forall ((z strd) (upsilon expt))
      (implies (and (p "init" z (idx 4)) (p "init" "upsilon" z upsilon))
        (fact neq (exp (gen) upsilon) (gen)))))
  (defgenrule assume-resp-0
    (forall ((z strd) (zeta expt))
      (implies (and (p "resp" z (idx 3)) (p "resp" "zeta" z zeta))
        (fact neq (exp (gen) zeta) (gen)))))
  (defgenrule trRl_ltx-gen-at-1
    (forall ((z strd))
      (implies (p "ltx-gen" z (idx 2)) (trans z (idx 1)))))
  (defgenrule trRl_ltx-gen-at-0
    (forall ((z strd))
      (implies (p "ltx-gen" z (idx 2)) (trans z (idx 0)))))
  (defgenrule trRl_ltx-disclose-at-1
    (forall ((z strd))
      (implies (p "ltx-disclose" z (idx 2)) (trans z (idx 1)))))
  (defgenrule trRl_ltx-disclose-at-0
    (forall ((z strd))
      (implies (p "ltx-disclose" z (idx 2)) (trans z (idx 0)))))
  (defgenrule gen-st-init-0
    (forall ((z strd) (a name) (la rndx))
      (implies
        (and (p "init" z (idx 1)) (p "init" "la" z la)
          (p "init" "a" z a)) (gen-st (pv a la)))))
  (defgenrule gen-st-resp-0
    (forall ((z strd) (b name) (lb rndx))
      (implies
        (and (p "resp" z (idx 1)) (p "resp" "lb" z lb)
          (p "resp" "b" z b)) (gen-st (pv b lb)))))
  (defgenrule gen-st-ltx-disclose-0
    (forall ((z strd) (self name) (l rndx))
      (implies
        (and (p "ltx-disclose" z (idx 1)) (p "ltx-disclose" "l" z l)
          (p "ltx-disclose" "self" z self)) (gen-st (pv self l)))))
  (lang (sig sign) (body (tuple 3)) (pv (tuple 2))))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (pt pval) (priv-stor locn) (la x rndx)
    (beta upsilon expt))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la la) (x x) (beta beta) (upsilon upsilon))
  (non-orig (privk "sig" b))
  (uniq-orig na)
  (uniq-gen x)
  (absent (x la) (x beta))
  (facts (neq a b))
  (traces
    ((load priv-stor (cat pt (pv a la)))
      (recv
        (sig (body b (exp (gen) beta) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul la beta))
              (exp (gen) (mul x upsilon)))))) (send nb)))
  (label 351)
  (unrealized (0 1))
  (origs (na (0 2)))
  (ugens (x (0 2)))
  (comment "Not closed under rules"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (pt pval) (priv-stor locn) (la x rndx)
    (beta upsilon expt))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la la) (x x) (beta beta) (upsilon upsilon))
  (non-orig (privk "sig" b))
  (uniq-orig na)
  (uniq-gen x)
  (absent (x la) (x beta))
  (gen-st (pv a la))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b))
  (rule assume-init-0 gen-st-ltx-disclose-0)
  (traces
    ((load priv-stor (cat pt (pv a la)))
      (recv
        (sig (body b (exp (gen) beta) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul la beta))
              (exp (gen) (mul x upsilon)))))) (send nb)))
  (label 352)
  (parent 351)
  (unrealized (0 0) (0 1))
  (origs (na (0 2)))
  (ugens (x (0 2)))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (a b name) (pt pt-0 pval)
    (priv-stor locn) (x rndx) (beta upsilon expt) (l rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta beta) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (precedes ((1 1) (0 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l)
  (uniq-gen x)
  (absent (x beta) (x l))
  (gen-st (pv a l))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)))
  (rule assume-init-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor (cat pt (pv a l))) (0 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) beta) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul beta l))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l)))))
  (label 353)
  (parent 352)
  (unrealized (0 1) (0 3))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((1 1) (0 0)) ((2 2) (0 1)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)))
  (rule assume-init-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation encryption-test (added-strand ltx-gen 3)
    (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)) (0 1))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))))
  (label 354)
  (parent 353)
  (unrealized (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx)
    (zeta expt))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb lb) (y y) (alpha (mul l l-0 (rec lb))) (zeta zeta))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 2) (0 1)) ((3 3) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec lb))) (y lb) (y zeta))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)))
  (rule assume-init-0 assume-resp-0 gen-st-ltx-disclose-0
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation encryption-test (added-strand resp 4)
    (enc na nb a b
      (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))) (0 3))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec lb))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))))
  (label 355)
  (parent 354)
  (unrealized (0 3) (3 0) (3 1))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (precedes ((0 2) (3 0)) ((1 1) (0 0)) ((2 2) (0 1)) ((3 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)))
  (rule assume-init-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation encryption-test
    (added-listener
      (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
    (enc na nb a b
      (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))) (0 3))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send
        (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))))
  (label 356)
  (parent 354)
  (unrealized (3 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (l x y rndx)
    (zeta expt) (l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (lb l-0) (y y) (alpha l) (zeta zeta))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (3 0)) ((2 2) (0 1))
    ((3 3) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y l) (y zeta) (y l-0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((2 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 4 2 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv b l-1))) (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))))
  (label 357)
  (parent 355)
  (unrealized (0 3) (3 1))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 x y rndx)
    (zeta expt) (l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-1) (y y) (alpha (mul l l-0 (rec l-1))) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 2) (0 1)) ((3 3) (0 3))
    ((4 1) (3 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec l-1))) (y zeta) (y l-1))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((4 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv b l-1))) (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1)))))
  (label 358)
  (parent 355)
  (unrealized (0 3) (3 1))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((2 2) (0 1)) ((3 1) (0 3))
    ((4 1) (3 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)))
  (rule assume-init-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation encryption-test
    (added-listener
      (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))) (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))))
  (label 359)
  (parent 356)
  (unrealized (4 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x y rndx)
    (zeta expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (la l-0) (x x) (beta l)
    (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (0 0)) ((3 2) (2 1)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y zeta) (y l) (y l-0))
  (gen-st (pv b l) (pv self l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq self b))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 1 4 ltx-gen 3) (exp (gen) l-0) (3 1))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 360)
  (parent 357)
  (unrealized (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (l x y rndx)
    (zeta expt) (l-0 rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (lb l-0) (y y) (alpha l) (zeta zeta))
  (deflistener (cat (exp (gen) (mul l (rec w))) w))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (3 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 1)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y l) (y zeta) (y l-0))
  (precur (4 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((2 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul l (rec w))) w)) (exp (gen) l)
    (3 1))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((recv (cat (exp (gen) (mul l (rec w))) w))
      (send (cat (exp (gen) (mul l (rec w))) w))))
  (label 361)
  (parent 357)
  (unrealized (0 3) (4 0))
  (comment "7 in cohort - 7 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 x y rndx)
    (zeta expt) (l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-1) (y y) (alpha (mul l l-0 (rec l-1))) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l l-0)) l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 2) (0 1)) ((3 3) (0 3))
    ((4 1) (3 0)) ((4 1) (5 0)) ((5 1) (3 1)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec l-1))) (y zeta) (y l-1))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((4 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul l l-0)) l-1))
    (exp (gen) (mul l l-0 (rec l-1))) (3 1))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l l-0)) l-1))
      (send (cat (exp (gen) (mul l l-0)) l-1))))
  (label 362)
  (parent 358)
  (unrealized (0 3) (5 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 x y rndx)
    (zeta expt) (l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-1) (y y) (alpha (mul l l-0 (rec l-1))) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l (rec l-1))) l-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (5 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((5 1) (3 1)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec l-1))) (y zeta) (y l-1))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((4 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul l (rec l-1))) l-0))
    (exp (gen) (mul l l-0 (rec l-1))) (3 1))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l (rec l-1))) l-0))
      (send (cat (exp (gen) (mul l (rec l-1))) l-0))))
  (label 363)
  (parent 358)
  (unrealized (0 3) (5 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 x y rndx)
    (zeta expt) (l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-1) (y y) (alpha (mul l l-0 (rec l-1))) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l-0 (rec l-1))) l))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (5 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((5 1) (3 1)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec l-1))) (y zeta) (y l-1))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((4 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul l-0 (rec l-1))) l))
    (exp (gen) (mul l l-0 (rec l-1))) (3 1))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l-0 (rec l-1))) l))
      (send (cat (exp (gen) (mul l-0 (rec l-1))) l))))
  (label 364)
  (parent 358)
  (unrealized (0 3) (5 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener (cat (exp (gen) l) l-0))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((2 1) (5 0)) ((2 2) (0 1))
    ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)))
  (rule assume-init-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l) l-0))
    (exp (gen) (mul l l-0)) (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0))))
  (label 365)
  (parent 359)
  (unrealized (5 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener (cat (exp (gen) l-0) l))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((1 1) (5 0)) ((2 2) (0 1))
    ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)))
  (rule assume-init-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l-0) l))
    (exp (gen) (mul l l-0)) (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l))))
  (label 366)
  (parent 359)
  (unrealized (5 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (lb l x y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (la l) (x x) (beta lb) (upsilon y))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l lb))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (priv-stor priv-stor)
    (lb lb) (y y) (alpha l) (zeta x))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (0 0)) ((3 2) (2 1)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb lb l)
  (uniq-gen x y)
  (absent (x lb) (x l) (y lb) (y l) (y x))
  (gen-st (pv b lb) (pv self l))
  (facts (neq (exp (gen) y) (gen)) (neq (exp (gen) x) (gen))
    (neq self b))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 4 2 resp 4) (exp (gen) y-0) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) lb) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul lb l)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b lb)))
      (send
        (sig (body b (exp (gen) lb) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b lb)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul lb l)) (exp (gen) (mul x y)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))))
  (label 367)
  (parent 360)
  (realized)
  (shape)
  (maps
    ((0)
      ((a self) (b b) (la l) (x x) (beta lb) (upsilon y) (na na) (nb nb)
        (priv-stor priv-stor-0))))
  (origs (nb (2 3)) (l (3 1)) (pt-2 (3 1)) (lb (1 1)) (pt-0 (1 1))
    (na (0 2)))
  (ugens (y (2 3)) (x (0 2))))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x y rndx)
    (zeta expt) (l l-0 rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (la l-0) (x x) (beta l)
    (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (4 0))
    ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y zeta) (y l) (y l-0))
  (precur (4 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq self b))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
    (exp (gen) (mul (rec x) y zeta)) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
      (send (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))))
  (label 368)
  (parent 360)
  (unrealized (4 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (a b a-0 b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l la rndx) (beta expt) (l-0 x-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (deflistener (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
  (defstrand init 3 (na na-0) (a a-0) (b b-0) (priv-stor priv-stor-1)
    (la la) (x x-0) (beta beta))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (3 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 1)) ((5 2) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen x y x-0)
  (absent (x l) (x l-0) (y zeta) (y l) (y l-0) (x-0 la) (x-0 beta))
  (precur (4 0))
  (gen-st (pv a l-0) (pv b l) (pv a-0 la))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((2 1) (3 0)))
  (rule assume-init-0 assume-resp-0 gen-st-ltx-disclose-0
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand init 3) (exp (gen) x-0) (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((recv (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-0 (rec x-0)))))
    ((load priv-stor-1 (cat pt-3 (pv a-0 la)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0)))
      (send (cat na-0 a-0 b-0 (exp (gen) x-0)))))
  (label 369)
  (parent 361)
  (unrealized (0 3) (3 1) (4 0) (5 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta expt) (l l-0 x rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul y zeta (rec x))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (lb l-0) (y y) (alpha l) (zeta zeta))
  (deflistener (cat (exp (gen) x) (mul l (rec x))))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((2 1) (3 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 1)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen y x)
  (absent (y zeta) (y l) (y l-0) (x l) (x l-0))
  (precur (4 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq (exp (gen) (mul y zeta (rec x))) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((2 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 5 0 init 3) (exp (gen) x-0) (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y zeta (rec x)))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((recv (cat (exp (gen) x) (mul l (rec x))))
      (send (cat (exp (gen) x) (mul l (rec x))))))
  (label 370)
  (parent 361)
  (unrealized (0 3) (3 1) (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x y rndx)
    (zeta expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (deflistener (cat (gen) l-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (4 0)) ((2 1) (3 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 1)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y zeta) (y l) (y l-0))
  (precur (4 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((2 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (contracted (l-1 l-0) (w l-0)) (gen) (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0))))
  (label 371)
  (parent 361)
  (unrealized (0 3) (4 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x y rndx)
    (zeta expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (la l-0) (x x) (beta l)
    (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y zeta) (y l) (y l-0))
  (precur (3 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq self b))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 1 5 ltx-gen 3) (exp (gen) l-1) (4 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 372)
  (parent 361)
  (unrealized (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (a b a-0 b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l lb rndx) (alpha zeta-0 expt) (l-0 y-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (deflistener (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b-0)
    (priv-stor priv-stor-1) (lb lb) (y y-0) (alpha alpha) (zeta zeta-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (3 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 1)) ((5 3) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen x y y-0)
  (absent (x l) (x l-0) (y zeta) (y l) (y l-0) (y-0 lb) (y-0 alpha)
    (y-0 zeta-0))
  (precur (4 0))
  (gen-st (pv a l-0) (pv b l) (pv b-0 lb))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta-0) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b))
  (leads-to ((1 1) (0 0)) ((2 1) (3 0)))
  (rule assume-init-0 assume-resp-0 gen-st-ltx-disclose-0
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand resp 4) (exp (gen) y-0) (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((recv (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-0 (rec y-0)))))
    ((load priv-stor-1 (cat pt-3 (pv b-0 lb)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0)))
      (recv (cat na-0 a-0 b-0 (exp (gen) zeta-0)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul lb alpha))
              (exp (gen) (mul zeta-0 y-0))))))))
  (label 373)
  (parent 361)
  (unrealized (0 3) (3 1) (4 0) (5 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x y rndx)
    (zeta expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (lb l-0) (y y) (alpha l) (zeta zeta))
  (deflistener (cat (exp (gen) l-0) (mul l (rec l-0))))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (3 0)) ((2 2) (0 1))
    ((2 2) (4 0)) ((3 3) (0 3)) ((4 1) (3 1)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y zeta) (y l) (y l-0))
  (precur (4 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((2 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 5 2 ltx-gen 3) (exp (gen) l-1) (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((recv (cat (exp (gen) l-0) (mul l (rec l-0))))
      (send (cat (exp (gen) l-0) (mul l (rec l-0))))))
  (label 374)
  (parent 361)
  (unrealized (0 3) (3 1) (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (deflistener (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (3 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 1)) ((5 2) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y zeta) (y l) (y l-0))
  (precur (4 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((2 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 3) (exp (gen) l-1) (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((recv (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
      (send (cat (exp (gen) l-1) (mul l-0 (rec l-1)))))
    ((load priv-stor-1 (cat pt-3 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))))
  (label 375)
  (parent 361)
  (unrealized (0 3) (3 1) (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 x y rndx)
    (zeta expt) (l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-1) (y y) (alpha (mul l l-0 (rec l-1))) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l l-0)) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 2) (0 1)) ((3 3) (0 3))
    ((4 1) (3 0)) ((4 1) (6 0)) ((5 1) (3 1)) ((6 2) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec l-1))) (y zeta) (y l-1))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-disclose 3) l-1 (5 0)
    (ch-msg priv-stor-1 (cat pt-3 (pv b l-1))))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l l-0)) l-1))
      (send (cat (exp (gen) (mul l l-0)) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l-1)))
  (label 376)
  (parent 362)
  (unrealized (0 3) (5 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l x y rndx) (zeta expt)
    (l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-1) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-0) (y y) (alpha (mul l (rec l-0) l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul l (rec l-0))) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (6 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((5 1) (3 1)) ((6 2) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-1) (y (mul l (rec l-0) l-1)) (y zeta) (y l-0))
  (gen-st (pv a l) (pv b l-0) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)) ((4 1) (3 0)))
  (rule assume-init-0 assume-resp-0 gen-st-ltx-disclose-0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-disclose 3) l-1 (5 0)
    (ch-msg priv-stor-0 (cat pt-2 (pv b l-1))))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul l (rec l-0))) l-1))
      (send (cat (exp (gen) (mul l (rec l-0))) l-1)))
    ((load priv-stor-0 (cat pt-2 (pv b l-1)))
      (stor priv-stor-0 (cat pt-5 "nil")) (send l-1)))
  (label 377)
  (parent 363)
  (unrealized (0 3) (5 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l x y rndx) (zeta expt)
    (l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-1) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-0) (y y) (alpha (mul l (rec l-0) l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul l (rec l-0))) l-1))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((5 1) (3 1)) ((6 2) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-1) (y (mul l (rec l-0) l-1)) (y zeta) (y l-0))
  (gen-st (pv a l-1) (pv b l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((4 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-disclose 3) l-1 (5 0)
    (ch-msg priv-stor (cat pt (pv a l-1))))
  (traces
    ((load priv-stor (cat pt (pv a l-1)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul l (rec l-0))) l-1))
      (send (cat (exp (gen) (mul l (rec l-0))) l-1)))
    ((load priv-stor (cat pt (pv a l-1)))
      (stor priv-stor (cat pt-5 "nil")) (send l-1)))
  (label 378)
  (parent 364)
  (unrealized (0 3) (5 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((2 1) (6 0)) ((2 2) (0 1))
    ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0)) ((6 2) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)))
  (rule assume-init-0 gen-st-ltx-disclose-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-disclose 3) l-0 (5 0)
    (ch-msg priv-stor-0 (cat pt-2 (pv b l-0))))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l-0)))
  (label 379)
  (parent 365)
  (unrealized (5 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0)) ((6 2) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l-0))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-disclose 3) l-0 (5 0)
    (ch-msg priv-stor (cat pt (pv a l-0))))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-3 "nil")) (send l-0)))
  (label 380)
  (parent 366)
  (unrealized (5 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (lb l x rndx)
    (w expt) (y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (la l) (x x) (beta lb) (upsilon (mul w y)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l lb))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (priv-stor priv-stor)
    (lb lb) (y y) (alpha l) (zeta (mul x w)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (4 0))
    ((3 1) (0 0)) ((3 2) (2 1)) ((4 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb lb l)
  (uniq-gen x y)
  (absent (x lb) (x l) (y lb) (y l) (y (mul x w)))
  (precur (4 0))
  (gen-st (pv b lb) (pv self l))
  (facts (neq (exp (gen) (mul w y)) (gen))
    (neq (exp (gen) (mul x w)) (gen)) (neq self b))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 5 2 resp 4) (exp (gen) y-0) (4 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) lb) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb self b
            (hash (exp (gen) (mul lb l)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b lb)))
      (send
        (sig (body b (exp (gen) lb) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b lb)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul x w))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul lb l)) (exp (gen) (mul x w y)))))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 381)
  (parent 368)
  (seen 360)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x y rndx)
    (zeta expt) (l rndx) (beta expt) (x-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (deflistener (cat (exp (gen) x-0) (mul (rec x-0) l-0)))
  (defstrand init 3 (na na-0) (a a) (b b-0) (priv-stor priv-stor)
    (la l-0) (x x-0) (beta beta))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (5 0)) ((2 1) (3 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 1)) ((5 2) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen x y x-0)
  (absent (x l) (x l-0) (y zeta) (y l) (y l-0) (x-0 beta) (x-0 l-0))
  (precur (4 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (5 0)) ((2 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 6 1 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv a-0 l-1))) (5 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((recv (cat (exp (gen) x-0) (mul (rec x-0) l-0)))
      (send (cat (exp (gen) x-0) (mul (rec x-0) l-0))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a b-0 (exp (gen) x-0)))))
  (label 382)
  (parent 369)
  (unrealized (0 3) (3 1) (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x y rndx)
    (zeta beta expt) (l x-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (lb l-0) (y y) (alpha l) (zeta zeta))
  (deflistener (cat (exp (gen) x-0) (mul l (rec x-0))))
  (defstrand init 3 (na na-0) (a b) (b b-0) (priv-stor priv-stor-0)
    (la l-0) (x x-0) (beta beta))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (3 0)) ((2 1) (5 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 1)) ((5 2) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0)
  (uniq-gen x y x-0)
  (absent (x l) (x l-0) (y zeta) (y l) (y l-0) (x-0 beta) (x-0 l-0))
  (precur (4 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((2 1) (3 0)) ((2 1) (5 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 6 2 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv a-0 l-1))) (5 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((recv (cat (exp (gen) x-0) (mul l (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l (rec x-0)))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 b b-0 (exp (gen) x-0)))))
  (label 383)
  (parent 369)
  (unrealized (0 3) (3 1) (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (a b a-0 b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l rndx) (beta expt) (l-0 x-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (deflistener (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
  (defstrand init 3 (na na-0) (a a-0) (b b-0) (priv-stor priv-stor-1)
    (la l-1) (x x-0) (beta beta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self a-0)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (3 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 1)) ((5 2) (4 0)) ((6 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen x y x-0)
  (absent (x l) (x l-0) (y zeta) (y l) (y l-0) (x-0 beta) (x-0 l-1))
  (precur (4 0))
  (gen-st (pv a l-0) (pv b l) (pv a-0 l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((2 1) (3 0)) ((6 1) (5 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv a-0 l-1))) (5 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((recv (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-0 (rec x-0)))))
    ((load priv-stor-1 (cat pt-3 (pv a-0 l-1)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a-0 b-0 (exp (gen) x-0))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv a-0 l-1)))))
  (label 384)
  (parent 369)
  (unrealized (0 3) (3 1) (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn)
    (x y rndx) (zeta expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (5 0)) ((2 1) (3 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 1)) ((5 2) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y zeta) (y l) (y l-0))
  (precur (4 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (5 0)) ((2 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-disclose 3) l-0 (4 0)
    (ch-msg priv-stor (cat pt (pv a l-0))))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-3 "nil")) (send l-0)))
  (label 385)
  (parent 371)
  (unrealized (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn)
    (lb l x y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (la l) (x x) (beta lb) (upsilon y))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l lb))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (priv-stor priv-stor)
    (lb lb) (y y) (alpha l) (zeta x))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb lb l)
  (uniq-gen x y)
  (absent (x lb) (x l) (y lb) (y l) (y x))
  (precur (3 0))
  (gen-st (pv b lb) (pv self l))
  (facts (neq (exp (gen) y) (gen)) (neq (exp (gen) x) (gen))
    (neq self b))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 5 2 resp 4) (exp (gen) y-0) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) lb) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul lb l)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b lb)))
      (send
        (sig (body b (exp (gen) lb) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b lb)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul lb l)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))))
  (label 386)
  (parent 372)
  (seen 367)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x y rndx)
    (zeta expt) (l l-0 rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (la l-0) (x x) (beta l)
    (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (5 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((5 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y zeta) (y l) (y l-0))
  (precur (3 0) (5 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq self b))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
    (exp (gen) (mul (rec x) y zeta)) (0 3))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
      (send (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))))
  (label 387)
  (parent 372)
  (unrealized (5 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (a b a-0 name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x y rndx)
    (zeta expt) (l rndx) (alpha zeta-0 expt) (y-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (deflistener (cat (exp (gen) y-0) (mul (rec y-0) l-0)))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b a)
    (priv-stor priv-stor) (lb l-0) (y y-0) (alpha alpha) (zeta zeta-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (5 0)) ((2 1) (3 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 1)) ((5 3) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen x y y-0)
  (absent (x l) (x l-0) (y zeta) (y l) (y l-0) (y-0 alpha) (y-0 zeta-0)
    (y-0 l-0))
  (precur (4 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta-0) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (5 0)) ((2 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 6 1 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv b-0 l-1))) (5 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((recv (cat (exp (gen) y-0) (mul (rec y-0) l-0)))
      (send (cat (exp (gen) y-0) (mul (rec y-0) l-0))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 a (exp (gen) zeta-0)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 a
            (hash (exp (gen) (mul alpha l-0))
              (exp (gen) (mul zeta-0 y-0))))))))
  (label 388)
  (parent 373)
  (unrealized (0 3) (3 1) (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (a b a-0 name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (x y rndx)
    (zeta alpha zeta-0 expt) (l y-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (lb l-0) (y y) (alpha l) (zeta zeta))
  (deflistener (cat (exp (gen) y-0) (mul l (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b)
    (priv-stor priv-stor-0) (lb l-0) (y y-0) (alpha alpha)
    (zeta zeta-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (3 0)) ((2 1) (5 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 1)) ((5 3) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0)
  (uniq-gen x y y-0)
  (absent (x l) (x l-0) (y zeta) (y l) (y l-0) (y-0 alpha) (y-0 zeta-0)
    (y-0 l-0))
  (precur (4 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta-0) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b))
  (leads-to ((1 1) (0 0)) ((2 1) (3 0)) ((2 1) (5 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 6 2 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv b-0 l-1))) (5 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((recv (cat (exp (gen) y-0) (mul l (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l (rec y-0)))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b (exp (gen) zeta-0)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b
            (hash (exp (gen) (mul alpha l-0))
              (exp (gen) (mul zeta-0 y-0))))))))
  (label 389)
  (parent 373)
  (unrealized (0 3) (3 1) (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l rndx) (alpha zeta-0 expt) (l-0 y-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (deflistener (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b-0)
    (priv-stor priv-stor-1) (lb l-1) (y y-0) (alpha alpha)
    (zeta zeta-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b-0)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (3 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 1)) ((5 3) (4 0)) ((6 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen x y y-0)
  (absent (x l) (x l-0) (y zeta) (y l) (y l-0) (y-0 alpha) (y-0 zeta-0)
    (y-0 l-1))
  (precur (4 0))
  (gen-st (pv a l-0) (pv b l) (pv b-0 l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta-0) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b))
  (leads-to ((1 1) (0 0)) ((2 1) (3 0)) ((6 1) (5 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-3 (pv b-0 l-1))) (5 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((recv (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-0 (rec y-0)))))
    ((load priv-stor-1 (cat pt-3 (pv b-0 l-1)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0)))
      (recv (cat na-0 a-0 b-0 (exp (gen) zeta-0)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul alpha l-1))
              (exp (gen) (mul zeta-0 y-0)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b-0 l-1)))))
  (label 390)
  (parent 373)
  (unrealized (0 3) (3 1) (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 x y rndx)
    (zeta expt) (l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-1) (y y) (alpha (mul l l-0 (rec l-1))) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l l-0)) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) l) l-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (7 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec l-1))) (y zeta) (y l-1))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l) l-0))
    (exp (gen) (mul l l-0)) (5 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l l-0)) l-1))
      (send (cat (exp (gen) (mul l l-0)) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l-1))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0))))
  (label 391)
  (parent 376)
  (unrealized (0 3) (7 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 x y rndx)
    (zeta expt) (l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-1) (y y) (alpha (mul l l-0 (rec l-1))) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l l-0)) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) l-0) l))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (7 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec l-1))) (y zeta) (y l-1))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l-0) l))
    (exp (gen) (mul l l-0)) (5 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l l-0)) l-1))
      (send (cat (exp (gen) (mul l l-0)) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l-1))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l))))
  (label 392)
  (parent 376)
  (unrealized (0 3) (7 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l x y rndx) (zeta expt)
    (l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-1) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-0) (y y) (alpha (mul l (rec l-0) l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul l (rec l-0))) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-1))
  (deflistener (cat (exp (gen) l) l-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (6 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (7 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-1) (y (mul l (rec l-0) l-1)) (y zeta) (y l-0))
  (gen-st (pv a l) (pv b l-0) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)) ((4 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l) l-0))
    (exp (gen) (mul l (rec l-0))) (5 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul l (rec l-0))) l-1))
      (send (cat (exp (gen) (mul l (rec l-0))) l-1)))
    ((load priv-stor-0 (cat pt-2 (pv b l-1)))
      (stor priv-stor-0 (cat pt-5 "nil")) (send l-1))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0))))
  (label 393)
  (parent 377)
  (unrealized (0 3) (7 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l x y rndx) (zeta expt)
    (l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-1) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-0) (y y) (alpha (mul l (rec l-0) l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul l (rec l-0))) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-1))
  (deflistener (cat (exp (gen) (rec l-0)) l))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (7 0)) ((2 1) (6 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-1) (y (mul l (rec l-0) l-1)) (y zeta) (y l-0))
  (gen-st (pv a l) (pv b l-0) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)) ((4 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) (rec l-0)) l))
    (exp (gen) (mul l (rec l-0))) (5 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul l (rec l-0))) l-1))
      (send (cat (exp (gen) (mul l (rec l-0))) l-1)))
    ((load priv-stor-0 (cat pt-2 (pv b l-1)))
      (stor priv-stor-0 (cat pt-5 "nil")) (send l-1))
    ((recv (cat (exp (gen) (rec l-0)) l))
      (send (cat (exp (gen) (rec l-0)) l))))
  (label 394)
  (parent 377)
  (unrealized (0 3) (7 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l x y rndx) (zeta expt)
    (l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-1) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-0) (y y) (alpha (mul l (rec l-0) l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul l (rec l-0))) l-1))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-1))
  (deflistener (cat (exp (gen) l) l-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (7 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-1) (y (mul l (rec l-0) l-1)) (y zeta) (y l-0))
  (gen-st (pv a l-1) (pv b l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((4 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l) l-0))
    (exp (gen) (mul l (rec l-0))) (5 0))
  (traces
    ((load priv-stor (cat pt (pv a l-1)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul l (rec l-0))) l-1))
      (send (cat (exp (gen) (mul l (rec l-0))) l-1)))
    ((load priv-stor (cat pt (pv a l-1)))
      (stor priv-stor (cat pt-5 "nil")) (send l-1))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0))))
  (label 395)
  (parent 378)
  (unrealized (0 3) (7 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l x y rndx) (zeta expt)
    (l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-1) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-0) (y y) (alpha (mul l (rec l-0) l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul l (rec l-0))) l-1))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-1))
  (deflistener (cat (exp (gen) (rec l-0)) l))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (7 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-1) (y (mul l (rec l-0) l-1)) (y zeta) (y l-0))
  (gen-st (pv a l-1) (pv b l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((4 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) (rec l-0)) l))
    (exp (gen) (mul l (rec l-0))) (5 0))
  (traces
    ((load priv-stor (cat pt (pv a l-1)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul l (rec l-0))) l-1))
      (send (cat (exp (gen) (mul l (rec l-0))) l-1)))
    ((load priv-stor (cat pt (pv a l-1)))
      (stor priv-stor (cat pt-5 "nil")) (send l-1))
    ((recv (cat (exp (gen) (rec l-0)) l))
      (send (cat (exp (gen) (rec l-0)) l))))
  (label 396)
  (parent 378)
  (unrealized (0 3) (7 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (la l-0) (x x) (beta l) (upsilon upsilon))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (deflistener
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (3 0)) ((1 1) (5 0)) ((1 2) (0 1)) ((2 1) (0 3))
    ((3 1) (2 0)) ((4 1) (3 0)) ((5 2) (4 0)) ((6 1) (0 0))
    ((6 2) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv b l) (pv self l-0))
  (facts (neq (exp (gen) upsilon) (gen)) (neq self b))
  (leads-to ((1 1) (5 0)) ((6 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 1 7 ltx-gen 3) (exp (gen) l-0) (5 0))
  (traces
    ((load priv-stor-0 (cat pt-3 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-1 "nil")) (send l))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-3 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 397)
  (parent 379)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon expt) (l l-0 rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) (mul l (rec w))) w))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((2 1) (6 0)) ((2 2) (0 1))
    ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0)) ((6 2) (5 0))
    ((7 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (7 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul l (rec w))) w)) (exp (gen) l)
    (5 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul l (rec w))) w))
      (send (cat (exp (gen) (mul l (rec w))) w))))
  (label 398)
  (parent 379)
  (unrealized (7 0))
  (comment "7 in cohort - 7 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((2 2) (5 0)) ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0))
    ((6 2) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 7 2 ltx-gen 3) (exp (gen) l-0) (5 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l)))
  (label 399)
  (parent 380)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon expt) (l l-0 rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) (mul l (rec w))) w))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0)) ((6 2) (5 0))
    ((7 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (7 0))
  (gen-st (pv a l-0))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul l (rec w))) w)) (exp (gen) l)
    (5 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-3 "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul l (rec w))) w))
      (send (cat (exp (gen) (mul l (rec w))) w))))
  (label 400)
  (parent 380)
  (unrealized (7 0))
  (comment "7 in cohort - 7 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn)
    (lb l x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta lb) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (lb lb) (y y) (alpha l) (zeta x))
  (deflistener (cat (gen) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (5 0)) ((2 1) (3 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 1)) ((5 2) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb lb l)
  (uniq-gen x y)
  (absent (x lb) (x l) (y lb) (y l) (y x))
  (precur (4 0))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) y) (gen)) (neq (exp (gen) x) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (5 0)) ((2 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 6 3 resp 4) (exp (gen) y-0) (0 3))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) lb) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul lb l)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b lb)))
      (send
        (sig (body b (exp (gen) lb) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b lb)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul lb l)) (exp (gen) (mul x y)))))))
    ((recv (cat (gen) l)) (send (cat (gen) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l)))
  (label 401)
  (parent 385)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn)
    (x y rndx) (zeta expt) (l l-0 rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (5 0)) ((2 1) (3 0))
    ((2 2) (0 1)) ((3 3) (6 0)) ((4 1) (3 1)) ((5 2) (4 0))
    ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y zeta) (y l) (y l-0))
  (precur (4 0) (6 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (5 0)) ((2 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
    (exp (gen) (mul (rec x) y zeta)) (0 3))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-3 "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
      (send (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))))
  (label 402)
  (parent 385)
  (unrealized (6 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (lb l x rndx)
    (w expt) (y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (la l) (x x) (beta lb) (upsilon (mul w y)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l lb))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b) (priv-stor priv-stor)
    (lb lb) (y y) (alpha l) (zeta (mul x w)))
  (deflistener (cat (exp (gen) l) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (2 2)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 3) (5 0))
    ((3 1) (2 1)) ((4 1) (0 0)) ((4 2) (3 0)) ((5 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb lb l)
  (uniq-gen x y)
  (absent (x lb) (x l) (y lb) (y l) (y (mul x w)))
  (precur (3 0) (5 0))
  (gen-st (pv b lb) (pv self l))
  (facts (neq (exp (gen) (mul w y)) (gen))
    (neq (exp (gen) (mul x w)) (gen)) (neq self b))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 6 2 resp 4) (exp (gen) y-0) (5 0))
  (traces
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (recv
        (sig (body b (exp (gen) lb) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb self b
            (hash (exp (gen) (mul lb l)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b lb)))
      (send
        (sig (body b (exp (gen) lb) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b lb)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul x w))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul lb l)) (exp (gen) (mul x w y)))))))
    ((recv (cat (exp (gen) l) (one))) (send (cat (exp (gen) l) (one))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 403)
  (parent 387)
  (seen 381)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l x y rndx) (zeta expt)
    (l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-1) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-0) (y y) (alpha (mul l (rec l-0) l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul l l-1)) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) l) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (8 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-1) (y (mul l (rec l-0) l-1)) (y zeta) (y l-0))
  (gen-st (pv a l) (pv b l-0) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((2 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule assume-init-0 assume-resp-0 gen-st-ltx-disclose-0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-disclose 3) l-1 (7 0)
    (ch-msg priv-stor-0 (cat pt-2 (pv b l-1))))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul l l-1)) l-0))
      (send (cat (exp (gen) (mul l l-1)) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l-0))
    ((recv (cat (exp (gen) l) l-1)) (send (cat (exp (gen) l) l-1)))
    ((load priv-stor-0 (cat pt-2 (pv b l-1)))
      (stor priv-stor-0 (cat pt-6 "nil")) (send l-1)))
  (label 404)
  (parent 391)
  (unrealized (0 3) (7 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l x y rndx) (zeta expt)
    (l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-1) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-0) (y y) (alpha (mul l (rec l-0) l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul l l-1)) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) l) l-1))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-1) (y (mul l (rec l-0) l-1)) (y zeta) (y l-0))
  (gen-st (pv a l-1) (pv b l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-disclose 3) l-1 (7 0)
    (ch-msg priv-stor (cat pt (pv a l-1))))
  (traces
    ((load priv-stor (cat pt (pv a l-1)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul l l-1)) l-0))
      (send (cat (exp (gen) (mul l l-1)) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l-0))
    ((recv (cat (exp (gen) l) l-1)) (send (cat (exp (gen) l) l-1)))
    ((load priv-stor (cat pt (pv a l-1)))
      (stor priv-stor (cat pt-6 "nil")) (send l-1)))
  (label 405)
  (parent 392)
  (unrealized (0 3) (7 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l x y rndx) (zeta expt)
    (l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-1) (y y) (alpha (mul l l-0 (rec l-1))) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l (rec l-1))) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (6 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec l-1))) (y zeta) (y l-1))
  (gen-st (pv a l) (pv b l-0) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-disclose 3) l-1 (7 0)
    (ch-msg priv-stor-1 (cat pt-3 (pv b l-1))))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l (rec l-1))) l-0))
      (send (cat (exp (gen) (mul l (rec l-1))) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-5 "nil")) (send l-0))
    ((recv (cat (exp (gen) l) l-1)) (send (cat (exp (gen) l) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-1)))
  (label 406)
  (parent 393)
  (unrealized (0 3) (7 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-1) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l) (y y) (alpha (mul (rec l) l-0 l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul (rec l) l-1)) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) (rec l)) l-1))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (6 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l-0) (x l-1) (y zeta) (y (mul (rec l) l-0 l-1)) (y l))
  (gen-st (pv a l-1) (pv b l) (pv b l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (6 0)) ((4 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-disclose 3) l-1 (7 0)
    (ch-msg priv-stor (cat pt (pv a l-1))))
  (traces
    ((load priv-stor (cat pt (pv a l-1)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul (rec l) l-1)) l-0))
      (send (cat (exp (gen) (mul (rec l) l-1)) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-5 "nil")) (send l-0))
    ((recv (cat (exp (gen) (rec l)) l-1))
      (send (cat (exp (gen) (rec l)) l-1)))
    ((load priv-stor (cat pt (pv a l-1)))
      (stor priv-stor (cat pt-6 "nil")) (send l-1)))
  (label 407)
  (parent 394)
  (unrealized (0 3) (7 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l x y rndx) (zeta expt)
    (l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-1) (y y) (alpha (mul l l-0 (rec l-1))) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l (rec l-1))) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) l) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec l-1))) (y zeta) (y l-1))
  (gen-st (pv a l-0) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-disclose 3) l-1 (7 0)
    (ch-msg priv-stor-1 (cat pt-3 (pv b l-1))))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l (rec l-1))) l-0))
      (send (cat (exp (gen) (mul l (rec l-1))) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-5 "nil")) (send l-0))
    ((recv (cat (exp (gen) l) l-1)) (send (cat (exp (gen) l) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-1)))
  (label 408)
  (parent 395)
  (unrealized (0 3) (7 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l-1) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l) (y y) (alpha (mul (rec l) l-0 l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul (rec l) l-1)) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) (rec l)) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (8 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l-0) (x l-1) (y zeta) (y (mul (rec l) l-0 l-1)) (y l))
  (gen-st (pv a l-0) (pv b l) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (8 0)) ((4 1) (3 0)))
  (rule assume-init-0 assume-resp-0 gen-st-ltx-disclose-0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-disclose 3) l-1 (7 0)
    (ch-msg priv-stor-0 (cat pt-2 (pv b l-1))))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul (rec l) l-1)) l-0))
      (send (cat (exp (gen) (mul (rec l) l-1)) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-5 "nil")) (send l-0))
    ((recv (cat (exp (gen) (rec l)) l-1))
      (send (cat (exp (gen) (rec l)) l-1)))
    ((load priv-stor-0 (cat pt-2 (pv b l-1)))
      (stor priv-stor-0 (cat pt-6 "nil")) (send l-1)))
  (label 409)
  (parent 396)
  (unrealized (0 3) (7 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (la l-0) (x x) (beta l) (upsilon upsilon))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (2 0)) ((1 1) (4 0)) ((1 2) (0 1)) ((2 1) (0 3))
    ((3 1) (2 0)) ((4 2) (3 0)) ((5 1) (0 0)) ((5 2) (3 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv b l) (pv self l-0))
  (facts (neq (exp (gen) upsilon) (gen)) (neq self b))
  (leads-to ((1 1) (4 0)) ((5 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (2 0))
  (traces
    ((load priv-stor-0 (cat pt-3 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-1 "nil")) (send l))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-3 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 410)
  (parent 397)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (a b a-0 b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (upsilon expt)
    (l la rndx) (beta expt) (l-0 x-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
  (defstrand init 3 (na na-0) (a a-0) (b b-0) (priv-stor priv-stor-1)
    (la la) (x x-0) (beta beta))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((2 1) (6 0)) ((2 2) (0 1))
    ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0)) ((6 2) (5 0))
    ((7 1) (5 0)) ((8 2) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na na-0 l l-0)
  (uniq-gen x x-0)
  (absent (x l) (x l-0) (x-0 la) (x-0 beta))
  (precur (7 0))
  (gen-st (pv a l-0) (pv b l) (pv a-0 la))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)))
  (rule assume-init-0 gen-st-ltx-disclose-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand init 3) (exp (gen) x-0) (7 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-0 (rec x-0)))))
    ((load priv-stor-1 (cat pt-4 (pv a-0 la)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0)))
      (send (cat na-0 a-0 b-0 (exp (gen) x-0)))))
  (label 411)
  (parent 398)
  (unrealized (5 0) (7 0) (8 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn)
    (upsilon expt) (l l-0 x rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul upsilon x))))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul upsilon x))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) x) (mul l (rec x))))
  (precedes ((0 2) (7 0)) ((1 1) (0 0)) ((2 1) (6 0)) ((2 2) (0 1))
    ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0)) ((6 2) (5 0))
    ((7 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (7 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 8 0 init 3) (exp (gen) x-0) (7 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul upsilon x)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul upsilon x))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul upsilon x)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul upsilon x))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul upsilon x)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l-0))
    ((recv (cat (exp (gen) x) (mul l (rec x))))
      (send (cat (exp (gen) x) (mul l (rec x))))))
  (label 412)
  (parent 398)
  (unrealized (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (gen) l-0))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((1 1) (7 0)) ((2 1) (6 0))
    ((2 2) (0 1)) ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0))
    ((6 2) (5 0)) ((7 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (7 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (contracted (l-1 l-0) (w l-0)) (gen) (7 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0))))
  (label 413)
  (parent 398)
  (unrealized (7 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (la l-0) (x x) (beta l) (upsilon upsilon))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (deflistener
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (3 0)) ((1 1) (5 0)) ((1 2) (0 1)) ((2 1) (0 3))
    ((3 1) (2 0)) ((4 1) (3 0)) ((5 2) (4 0)) ((6 1) (4 0))
    ((7 1) (0 0)) ((7 2) (6 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (6 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (neq (exp (gen) upsilon) (gen)) (neq self b))
  (leads-to ((1 1) (5 0)) ((7 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 1 8 ltx-gen 3) (exp (gen) l-1) (7 0))
  (traces
    ((load priv-stor-0 (cat pt-3 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-1 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-3 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 414)
  (parent 398)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (a b a-0 b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (upsilon expt)
    (l lb rndx) (alpha zeta expt) (l-0 y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) y) (mul l-0 (rec y))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b-0)
    (priv-stor priv-stor-1) (lb lb) (y y) (alpha alpha) (zeta zeta))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((2 1) (6 0)) ((2 2) (0 1))
    ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0)) ((6 2) (5 0))
    ((7 1) (5 0)) ((8 3) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb-0 l l-0)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y lb) (y alpha) (y zeta))
  (precur (7 0))
  (gen-st (pv a l-0) (pv b l) (pv b-0 lb))
  (facts (neq (exp (gen) upsilon) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)))
  (rule assume-init-0 assume-resp-0 gen-st-ltx-disclose-0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand resp 4) (exp (gen) y) (7 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) y) (mul l-0 (rec y))))
      (send (cat (exp (gen) y) (mul l-0 (rec y)))))
    ((load priv-stor-1 (cat pt-4 (pv b-0 lb)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b-0 (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul lb alpha))
              (exp (gen) (mul zeta y))))))))
  (label 415)
  (parent 398)
  (unrealized (5 0) (7 0) (8 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l-0) (mul l (rec l-0))))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((2 1) (6 0)) ((2 2) (0 1))
    ((2 2) (7 0)) ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0))
    ((6 2) (5 0)) ((7 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (7 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 8 2 ltx-gen 3) (exp (gen) l-1) (7 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l-0))
    ((recv (cat (exp (gen) l-0) (mul l (rec l-0))))
      (send (cat (exp (gen) l-0) (mul l (rec l-0))))))
  (label 416)
  (parent 398)
  (unrealized (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (upsilon expt)
    (l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((2 1) (6 0)) ((2 2) (0 1))
    ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0)) ((6 2) (5 0))
    ((7 1) (5 0)) ((8 2) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0 l-1)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (7 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 3) (exp (gen) l-1) (7 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
      (send (cat (exp (gen) l-1) (mul l-0 (rec l-1)))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-5 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))))
  (label 417)
  (parent 398)
  (unrealized (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (precedes ((0 2) (3 0)) ((1 1) (0 0)) ((1 1) (5 0)) ((2 2) (0 1))
    ((2 2) (4 0)) ((3 1) (0 3)) ((4 1) (3 0)) ((5 2) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (5 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l)))
  (label 418)
  (parent 399)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (a b a-0 b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (upsilon expt)
    (l la rndx) (beta expt) (l-0 x-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
  (defstrand init 3 (na na-0) (a a-0) (b b-0) (priv-stor priv-stor-1)
    (la la) (x x-0) (beta beta))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0)) ((6 2) (5 0))
    ((7 1) (5 0)) ((8 2) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na na-0 l l-0)
  (uniq-gen x x-0)
  (absent (x l) (x l-0) (x-0 la) (x-0 beta))
  (precur (7 0))
  (gen-st (pv a l) (pv a-0 la))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)))
  (rule assume-init-0 gen-st-ltx-disclose-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand init 3) (exp (gen) x-0) (7 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-0 (rec x-0)))))
    ((load priv-stor-1 (cat pt-4 (pv a-0 la)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0)))
      (send (cat na-0 a-0 b-0 (exp (gen) x-0)))))
  (label 419)
  (parent 400)
  (unrealized (5 0) (7 0) (8 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn)
    (upsilon expt) (la l x rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la la) (x x) (beta l) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l la))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) (mul la l)) (exp (gen) (mul upsilon x))))
  (deflistener (cat (exp (gen) (mul la l)) (exp (gen) (mul upsilon x))))
  (deflistener (cat (exp (gen) l) la))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l la))
  (deflistener (cat (exp (gen) x) (mul l (rec x))))
  (precedes ((0 2) (7 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0)) ((6 2) (5 0))
    ((7 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na la l)
  (uniq-gen x)
  (absent (x la) (x l))
  (precur (7 0))
  (gen-st (pv a la))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 8 0 init 3) (exp (gen) x-0) (7 0))
  (traces
    ((load priv-stor (cat pt (pv a la)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul la l)) (exp (gen) (mul upsilon x))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a la))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul la l)) (exp (gen) (mul upsilon x))))
      (send (hash (exp (gen) (mul la l)) (exp (gen) (mul upsilon x)))))
    ((recv (cat (exp (gen) (mul la l)) (exp (gen) (mul upsilon x))))
      (send (cat (exp (gen) (mul la l)) (exp (gen) (mul upsilon x)))))
    ((recv (cat (exp (gen) l) la)) (send (cat (exp (gen) l) la)))
    ((load priv-stor (cat pt (pv a la)))
      (stor priv-stor (cat pt-3 "nil")) (send la))
    ((recv (cat (exp (gen) x) (mul l (rec x))))
      (send (cat (exp (gen) x) (mul l (rec x))))))
  (label 420)
  (parent 400)
  (unrealized (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (gen) l-0))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (7 0))
    ((2 2) (0 1)) ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0))
    ((6 2) (5 0)) ((7 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (7 0))
  (gen-st (pv a l))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (contracted (l-1 l-0) (w l-0)) (gen) (7 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0))))
  (label 421)
  (parent 400)
  (unrealized (7 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (la l-0) (x x) (beta l) (upsilon upsilon))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (deflistener
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l-0) (mul l (rec l-0))))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (3 0)) ((1 2) (0 1)) ((2 1) (0 3)) ((3 1) (2 0))
    ((4 1) (3 0)) ((5 2) (4 0)) ((6 1) (4 0)) ((7 1) (0 0))
    ((7 1) (5 0)) ((7 2) (6 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (6 0))
  (gen-st (pv self l-0))
  (facts (neq (exp (gen) upsilon) (gen)) (neq self b))
  (leads-to ((7 1) (0 0)) ((7 1) (5 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 1 8 ltx-gen 3) (exp (gen) l-1) (7 0))
  (traces
    ((load priv-stor-0 (cat pt-3 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor-0 (cat pt-3 (pv self l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((recv (cat (exp (gen) l-0) (mul l (rec l-0))))
      (send (cat (exp (gen) l-0) (mul l (rec l-0)))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-3 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 422)
  (parent 400)
  (unrealized (4 0) (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (a b a-0 b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (upsilon expt)
    (l lb rndx) (alpha zeta expt) (l-0 y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) y) (mul l-0 (rec y))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b-0)
    (priv-stor priv-stor-1) (lb lb) (y y) (alpha alpha) (zeta zeta))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0)) ((6 2) (5 0))
    ((7 1) (5 0)) ((8 3) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb-0 l l-0)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y lb) (y alpha) (y zeta))
  (precur (7 0))
  (gen-st (pv a l) (pv b-0 lb))
  (facts (neq (exp (gen) upsilon) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)))
  (rule assume-init-0 assume-resp-0 gen-st-ltx-disclose-0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand resp 4) (exp (gen) y) (7 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) y) (mul l-0 (rec y))))
      (send (cat (exp (gen) y) (mul l-0 (rec y)))))
    ((load priv-stor-1 (cat pt-4 (pv b-0 lb)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b-0 (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul lb alpha))
              (exp (gen) (mul zeta y))))))))
  (label 423)
  (parent 400)
  (unrealized (5 0) (7 0) (8 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((2 2) (7 0)) ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0))
    ((6 2) (5 0)) ((7 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (7 0))
  (gen-st (pv a l))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 8 2 ltx-gen 3) (exp (gen) l-1) (7 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one)))))
  (label 424)
  (parent 400)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (upsilon expt)
    (l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0)) ((6 2) (5 0))
    ((7 1) (5 0)) ((8 2) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0 l-1)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (7 0))
  (gen-st (pv a l))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 3) (exp (gen) l-1) (7 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
      (send (cat (exp (gen) l-1) (mul l-0 (rec l-1)))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-5 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))))
  (label 425)
  (parent 400)
  (unrealized (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn)
    (lb l x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta lb) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (gen) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (precedes ((1 1) (0 0)) ((1 1) (4 0)) ((2 2) (0 1)) ((3 1) (0 3))
    ((4 2) (3 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb lb l)
  (uniq-gen x)
  (absent (x lb) (x l))
  (precur (3 0))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) y) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (4 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) lb) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul lb l)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b lb)))
      (send
        (sig (body b (exp (gen) lb) (pubk "sig" b)) (privk "sig" b))))
    ((recv (cat (gen) l)) (send (cat (gen) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l)))
  (label 426)
  (parent 401)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn)
    (lb l x rndx) (w expt) (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta lb) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-0)
    (lb lb) (y y) (alpha l) (zeta (mul x w)))
  (deflistener (cat (gen) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (5 0)) ((2 1) (3 0))
    ((2 2) (0 1)) ((3 3) (6 0)) ((4 1) (3 1)) ((5 2) (4 0))
    ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb lb l)
  (uniq-gen x y)
  (absent (x lb) (x l) (y lb) (y l) (y (mul x w)))
  (precur (4 0) (6 0))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) (mul w y)) (gen))
    (neq (exp (gen) (mul x w)) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (5 0)) ((2 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 7 3 resp 4) (exp (gen) y-0) (6 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) lb) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul lb l)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b lb)))
      (send
        (sig (body b (exp (gen) lb) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b lb)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) (mul x w))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul lb l)) (exp (gen) (mul x w y)))))))
    ((recv (cat (gen) l)) (send (cat (gen) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 427)
  (parent 402)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-1) (x x) (beta l-0)
    (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (lb l) (y y) (alpha (mul (rec l) l-0 l-1))
    (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (2 2)) ((1 1) (7 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (2 0)) ((3 1) (5 0)) ((4 1) (2 1)) ((5 2) (4 0))
    ((6 1) (4 0)) ((7 2) (6 0)) ((8 1) (0 0)) ((8 2) (6 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l-0) (x l-1) (y zeta) (y (mul (rec l) l-0 l-1)) (y l))
  (gen-st (pv b l) (pv b l-0) (pv self l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq self b))
  (leads-to ((1 1) (7 0)) ((3 1) (2 0)) ((3 1) (5 0)) ((8 1) (0 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 1 9 ltx-gen 3) (exp (gen) l-1) (7 0))
  (traces
    ((load priv-stor-1 (cat pt-6 (pv self l-1)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb self b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-1 (pv b l)))
      (recv
        (sig
          (body self (exp (gen) (mul (rec l) l-0 l-1))
            (pubk "sig" self)) (privk "sig" self)))
      (recv (cat na self b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-0 (cat pt-1 (pv b l)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (stor priv-stor (cat pt-4 "nil")) (send l-0))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))))
  (label 428)
  (parent 404)
  (unrealized (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l x y rndx) (zeta expt)
    (l-0 l-1 rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-1) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-0) (y y) (alpha (mul l (rec l-0) l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul l l-1)) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) l) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-1))
  (deflistener (cat (exp (gen) (mul l (rec w))) w))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (8 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-1) (y (mul l (rec l-0) l-1)) (y zeta) (y l-0))
  (precur (9 0))
  (gen-st (pv a l) (pv b l-0) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((2 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul l (rec w))) w)) (exp (gen) l)
    (7 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul l l-1)) l-0))
      (send (cat (exp (gen) (mul l l-1)) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l-0))
    ((recv (cat (exp (gen) l) l-1)) (send (cat (exp (gen) l) l-1)))
    ((load priv-stor-0 (cat pt-2 (pv b l-1)))
      (stor priv-stor-0 (cat pt-6 "nil")) (send l-1))
    ((recv (cat (exp (gen) (mul l (rec w))) w))
      (send (cat (exp (gen) (mul l (rec w))) w))))
  (label 429)
  (parent 404)
  (unrealized (0 3) (9 0))
  (comment "8 in cohort - 8 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l-1) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l) (y y) (alpha (mul (rec l) l-0 l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 2) (0 1))
    ((2 2) (7 0)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l-0) (x l-1) (y zeta) (y (mul (rec l) l-0 l-1)) (y l))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 9 2 ltx-gen 3) (exp (gen) l-1) (7 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0)))
  (label 430)
  (parent 405)
  (unrealized (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l x y rndx) (zeta expt)
    (l-0 l-1 rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-1) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-0) (y y) (alpha (mul l (rec l-0) l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul l l-1)) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) l) l-1))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-1))
  (deflistener (cat (exp (gen) (mul l (rec w))) w))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-1) (y (mul l (rec l-0) l-1)) (y zeta) (y l-0))
  (precur (9 0))
  (gen-st (pv a l-1) (pv b l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul l (rec w))) w)) (exp (gen) l)
    (7 0))
  (traces
    ((load priv-stor (cat pt (pv a l-1)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul l l-1)) l-0))
      (send (cat (exp (gen) (mul l l-1)) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l-0))
    ((recv (cat (exp (gen) l) l-1)) (send (cat (exp (gen) l) l-1)))
    ((load priv-stor (cat pt (pv a l-1)))
      (stor priv-stor (cat pt-6 "nil")) (send l-1))
    ((recv (cat (exp (gen) (mul l (rec w))) w))
      (send (cat (exp (gen) (mul l (rec w))) w))))
  (label 431)
  (parent 405)
  (unrealized (0 3) (9 0))
  (comment "8 in cohort - 8 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-1) (x x) (beta l)
    (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (lb l-0) (y y) (alpha (mul l (rec l-0) l-1))
    (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (2 2)) ((1 1) (5 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (2 0)) ((3 1) (7 0)) ((4 1) (2 1)) ((5 2) (4 0))
    ((6 1) (4 0)) ((7 2) (6 0)) ((8 1) (0 0)) ((8 2) (6 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-1) (y zeta) (y (mul l (rec l-0) l-1)) (y l-0))
  (gen-st (pv b l) (pv b l-0) (pv self l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq self b))
  (leads-to ((1 1) (5 0)) ((3 1) (2 0)) ((3 1) (7 0)) ((8 1) (0 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 1 9 ltx-gen 3) (exp (gen) l-1) (7 0))
  (traces
    ((load priv-stor-1 (cat pt-6 (pv self l-1)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb self b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-1 (pv b l-0)))
      (recv
        (sig
          (body self (exp (gen) (mul l (rec l-0) l-1))
            (pubk "sig" self)) (privk "sig" self)))
      (recv (cat na self b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-0 (cat pt-1 (pv b l-0)))
      (stor priv-stor-0 (cat pt-4 "nil")) (send l-0))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))))
  (label 432)
  (parent 406)
  (unrealized (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l x y rndx) (zeta expt)
    (l-0 l-1 rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-1) (y y) (alpha (mul l l-0 (rec l-1))) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l (rec l-1))) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l (rec w))) w))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (6 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec l-1))) (y zeta) (y l-1))
  (precur (9 0))
  (gen-st (pv a l) (pv b l-0) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul l (rec w))) w)) (exp (gen) l)
    (7 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l (rec l-1))) l-0))
      (send (cat (exp (gen) (mul l (rec l-1))) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-5 "nil")) (send l-0))
    ((recv (cat (exp (gen) l) l-1)) (send (cat (exp (gen) l) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-1))
    ((recv (cat (exp (gen) (mul l (rec w))) w))
      (send (cat (exp (gen) (mul l (rec w))) w))))
  (label 433)
  (parent 406)
  (unrealized (0 3) (9 0))
  (comment "8 in cohort - 8 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-1) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l) (y y) (alpha (mul (rec l) l-0 l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul (rec l) l-1)) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) (rec l)) l-1))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-1))
  (deflistener (cat (exp (gen) (mul (rec l) (rec w))) w))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (6 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l-0) (x l-1) (y zeta) (y (mul (rec l) l-0 l-1)) (y l))
  (precur (9 0))
  (gen-st (pv a l-1) (pv b l) (pv b l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (6 0)) ((4 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec l) (rec w))) w))
    (exp (gen) (rec l)) (7 0))
  (traces
    ((load priv-stor (cat pt (pv a l-1)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul (rec l) l-1)) l-0))
      (send (cat (exp (gen) (mul (rec l) l-1)) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-5 "nil")) (send l-0))
    ((recv (cat (exp (gen) (rec l)) l-1))
      (send (cat (exp (gen) (rec l)) l-1)))
    ((load priv-stor (cat pt (pv a l-1)))
      (stor priv-stor (cat pt-6 "nil")) (send l-1))
    ((recv (cat (exp (gen) (mul (rec l) (rec w))) w))
      (send (cat (exp (gen) (mul (rec l) (rec w))) w))))
  (label 434)
  (parent 407)
  (unrealized (0 3) (9 0))
  (comment "8 in cohort - 8 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-1) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-0) (y y) (alpha (mul l (rec l-0) l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((2 2) (7 0)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-1) (y zeta) (y (mul l (rec l-0) l-1)) (y l-0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 9 2 ltx-gen 3) (exp (gen) l-1) (7 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-0)))
  (label 435)
  (parent 408)
  (unrealized (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l x y rndx) (zeta expt)
    (l-0 l-1 rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-1) (y y) (alpha (mul l l-0 (rec l-1))) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l (rec l-1))) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) l) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l (rec w))) w))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec l-1))) (y zeta) (y l-1))
  (precur (9 0))
  (gen-st (pv a l-0) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul l (rec w))) w)) (exp (gen) l)
    (7 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l (rec l-1))) l-0))
      (send (cat (exp (gen) (mul l (rec l-1))) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-5 "nil")) (send l-0))
    ((recv (cat (exp (gen) l) l-1)) (send (cat (exp (gen) l) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-1))
    ((recv (cat (exp (gen) (mul l (rec w))) w))
      (send (cat (exp (gen) (mul l (rec w))) w))))
  (label 436)
  (parent 408)
  (unrealized (0 3) (9 0))
  (comment "8 in cohort - 8 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l-1) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l) (y y) (alpha (mul (rec l) l-0 l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul (rec l) l-1)) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) (rec l)) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-1))
  (deflistener (cat (exp (gen) (mul (rec l) (rec w))) w))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (8 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l-0) (x l-1) (y zeta) (y (mul (rec l) l-0 l-1)) (y l))
  (precur (9 0))
  (gen-st (pv a l-0) (pv b l) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (8 0)) ((4 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec l) (rec w))) w))
    (exp (gen) (rec l)) (7 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul (rec l) l-1)) l-0))
      (send (cat (exp (gen) (mul (rec l) l-1)) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-5 "nil")) (send l-0))
    ((recv (cat (exp (gen) (rec l)) l-1))
      (send (cat (exp (gen) (rec l)) l-1)))
    ((load priv-stor-0 (cat pt-2 (pv b l-1)))
      (stor priv-stor-0 (cat pt-6 "nil")) (send l-1))
    ((recv (cat (exp (gen) (mul (rec l) (rec w))) w))
      (send (cat (exp (gen) (mul (rec l) (rec w))) w))))
  (label 437)
  (parent 409)
  (unrealized (0 3) (9 0))
  (comment "8 in cohort - 8 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (la l-0) (x x) (beta l) (upsilon upsilon))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((1 1) (3 0)) ((1 2) (0 1)) ((2 1) (0 3)) ((3 2) (2 0))
    ((4 1) (0 0)) ((4 2) (2 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv b l) (pv self l-0))
  (facts (neq (exp (gen) upsilon) (gen)) (neq self b))
  (leads-to ((1 1) (3 0)) ((4 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (2 0))
  (traces
    ((load priv-stor-0 (cat pt-3 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-1 "nil")) (send l))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-3 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 438)
  (parent 410)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon expt) (l rndx) (beta expt) (x-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) x-0) (mul (rec x-0) l-0)))
  (defstrand init 3 (na na-0) (a a) (b b-0) (priv-stor priv-stor)
    (la l-0) (x x-0) (beta beta))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (6 0))
    ((2 2) (0 1)) ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na na-0 l l-0)
  (uniq-gen x x-0)
  (absent (x l) (x l-0) (x-0 beta) (x-0 l-0))
  (precur (7 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (6 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 9 1 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-4 (pv a-0 l-1))) (8 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) x-0) (mul (rec x-0) l-0)))
      (send (cat (exp (gen) x-0) (mul (rec x-0) l-0))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a b-0 (exp (gen) x-0)))))
  (label 439)
  (parent 411)
  (unrealized (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon beta expt) (l x-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) x-0) (mul l (rec x-0))))
  (defstrand init 3 (na na-0) (a b) (b b-0) (priv-stor priv-stor-0)
    (la l-0) (x x-0) (beta beta))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((2 1) (6 0)) ((2 1) (8 0))
    ((2 2) (0 1)) ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na na-0 l l-0)
  (uniq-gen x x-0)
  (absent (x l) (x l-0) (x-0 beta) (x-0 l-0))
  (precur (7 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)) ((2 1) (8 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 9 2 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-4 (pv a-0 l-1))) (8 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l-0))
    ((recv (cat (exp (gen) x-0) (mul l (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l (rec x-0)))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 b b-0 (exp (gen) x-0)))))
  (label 440)
  (parent 411)
  (unrealized (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (a b a-0 b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (upsilon expt)
    (l rndx) (beta expt) (l-0 x-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
  (defstrand init 3 (na na-0) (a a-0) (b b-0) (priv-stor priv-stor-1)
    (la l-1) (x x-0) (beta beta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self a-0)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((2 1) (6 0)) ((2 2) (0 1))
    ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0)) ((6 2) (5 0))
    ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (8 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na na-0 l l-0 l-1)
  (uniq-gen x x-0)
  (absent (x l) (x l-0) (x-0 beta) (x-0 l-1))
  (precur (7 0))
  (gen-st (pv a l-0) (pv b l) (pv a-0 l-1))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)) ((9 1) (8 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-4 (pv a-0 l-1))) (8 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-0 (rec x-0)))))
    ((load priv-stor-1 (cat pt-4 (pv a-0 l-1)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a-0 b-0 (exp (gen) x-0))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv a-0 l-1)))))
  (label 441)
  (parent 411)
  (unrealized (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (upsilon expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (6 0))
    ((2 2) (0 1)) ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (7 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (6 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-disclose 3) l-0 (7 0)
    (ch-msg priv-stor (cat pt (pv a l-0))))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-4 "nil")) (send l-0)))
  (label 442)
  (parent 413)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (la l-0) (x x) (beta l) (upsilon upsilon))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (2 0)) ((1 1) (4 0)) ((1 2) (0 1)) ((2 1) (0 3))
    ((3 1) (2 0)) ((4 2) (3 0)) ((5 1) (3 0)) ((6 1) (0 0))
    ((6 2) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (5 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (neq (exp (gen) upsilon) (gen)) (neq self b))
  (leads-to ((1 1) (4 0)) ((6 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (2 0))
  (traces
    ((load priv-stor-0 (cat pt-3 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-1 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-3 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 443)
  (parent 414)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (a b a-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon expt) (l rndx) (alpha zeta expt) (y l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) y) (mul (rec y) l-0)))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b a)
    (priv-stor priv-stor) (lb l-0) (y y) (alpha alpha) (zeta zeta))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (6 0))
    ((2 2) (0 1)) ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 3) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb-0 l l-0)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y alpha) (y zeta) (y l-0))
  (precur (7 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq (exp (gen) upsilon) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (6 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 9 1 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-4 (pv b-0 l-1))) (8 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) y) (mul (rec y) l-0)))
      (send (cat (exp (gen) y) (mul (rec y) l-0))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 a (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na-0 nb-0 a-0 a
            (hash (exp (gen) (mul alpha l-0))
              (exp (gen) (mul zeta y))))))))
  (label 444)
  (parent 415)
  (unrealized (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (a b a-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon alpha zeta expt) (l y l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) y) (mul l (rec y))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b)
    (priv-stor priv-stor-0) (lb l-0) (y y) (alpha alpha) (zeta zeta))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((2 1) (6 0)) ((2 1) (8 0))
    ((2 2) (0 1)) ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 3) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb-0 l l-0)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y alpha) (y zeta) (y l-0))
  (precur (7 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq (exp (gen) upsilon) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)) ((2 1) (8 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 9 2 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-4 (pv b-0 l-1))) (8 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l-0))
    ((recv (cat (exp (gen) y) (mul l (rec y))))
      (send (cat (exp (gen) y) (mul l (rec y)))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na-0 nb-0 a-0 b
            (hash (exp (gen) (mul alpha l-0))
              (exp (gen) (mul zeta y))))))))
  (label 445)
  (parent 415)
  (unrealized (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (upsilon expt)
    (l rndx) (alpha zeta expt) (l-0 y l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) y) (mul l-0 (rec y))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b-0)
    (priv-stor priv-stor-1) (lb l-1) (y y) (alpha alpha) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b-0)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((2 1) (6 0)) ((2 2) (0 1))
    ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0)) ((6 2) (5 0))
    ((7 1) (5 0)) ((8 3) (7 0)) ((9 1) (8 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb-0 l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y alpha) (y zeta) (y l-1))
  (precur (7 0))
  (gen-st (pv a l-0) (pv b l) (pv b-0 l-1))
  (facts (neq (exp (gen) upsilon) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)) ((9 1) (8 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-4 (pv b-0 l-1))) (8 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) y) (mul l-0 (rec y))))
      (send (cat (exp (gen) y) (mul l-0 (rec y)))))
    ((load priv-stor-1 (cat pt-4 (pv b-0 l-1)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b-0 (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul alpha l-1))
              (exp (gen) (mul zeta y)))))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv b-0 l-1)))))
  (label 446)
  (parent 415)
  (unrealized (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (precedes ((1 1) (0 0)) ((1 1) (4 0)) ((2 2) (0 1)) ((2 2) (3 0))
    ((3 1) (0 3)) ((4 2) (3 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (4 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l)))
  (label 447)
  (parent 418)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon beta expt) (l x-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) x-0) (mul l (rec x-0))))
  (defstrand init 3 (na na-0) (a a) (b b-0) (priv-stor priv-stor)
    (la l-0) (x x-0) (beta beta))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((1 1) (8 0))
    ((2 2) (0 1)) ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na na-0 l l-0)
  (uniq-gen x x-0)
  (absent (x l) (x l-0) (x-0 beta) (x-0 l-0))
  (precur (7 0))
  (gen-st (pv a l-0))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((1 1) (8 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 9 1 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-4 (pv a-0 l-1))) (8 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-3 "nil")) (send l-0))
    ((recv (cat (exp (gen) x-0) (mul l (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l (rec x-0)))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a b-0 (exp (gen) x-0)))))
  (label 448)
  (parent 419)
  (unrealized (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon expt) (l rndx) (beta expt) (x-0 l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) x-0) (mul (rec x-0) l-0)))
  (defstrand init 3 (na na-0) (a b) (b b-0) (priv-stor priv-stor-0)
    (la l-0) (x x-0) (beta beta))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (8 0))
    ((2 2) (0 1)) ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na na-0 l l-0)
  (uniq-gen x x-0)
  (absent (x l) (x l-0) (x-0 beta) (x-0 l-0))
  (precur (7 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (8 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 9 2 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-4 (pv a-0 l-1))) (8 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) x-0) (mul (rec x-0) l-0)))
      (send (cat (exp (gen) x-0) (mul (rec x-0) l-0))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 b b-0 (exp (gen) x-0)))))
  (label 449)
  (parent 419)
  (unrealized (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (a b a-0 b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (upsilon expt)
    (l rndx) (beta expt) (l-0 x-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
  (defstrand init 3 (na na-0) (a a-0) (b b-0) (priv-stor priv-stor-1)
    (la l-1) (x x-0) (beta beta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self a-0)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0)) ((6 2) (5 0))
    ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (8 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na na-0 l l-0 l-1)
  (uniq-gen x x-0)
  (absent (x l) (x l-0) (x-0 beta) (x-0 l-1))
  (precur (7 0))
  (gen-st (pv a l) (pv a-0 l-1))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((9 1) (8 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-4 (pv a-0 l-1))) (8 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-0 (rec x-0)))))
    ((load priv-stor-1 (cat pt-4 (pv a-0 l-1)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a-0 b-0 (exp (gen) x-0))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv a-0 l-1)))))
  (label 450)
  (parent 419)
  (unrealized (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (upsilon expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (8 0))
    ((2 2) (0 1)) ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (7 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (8 0)))
  (rule assume-init-0 gen-st-ltx-disclose-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-disclose 3) l-0 (7 0)
    (ch-msg priv-stor-0 (cat pt-2 (pv b l-0))))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-4 "nil")) (send l-0)))
  (label 451)
  (parent 421)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (a b a-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon alpha zeta expt) (l y l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) y) (mul l (rec y))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b a)
    (priv-stor priv-stor) (lb l-0) (y y) (alpha alpha) (zeta zeta))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((1 1) (8 0))
    ((2 2) (0 1)) ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 3) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb-0 l l-0)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y alpha) (y zeta) (y l-0))
  (precur (7 0))
  (gen-st (pv a l-0))
  (facts (neq (exp (gen) upsilon) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((1 1) (8 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 9 1 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-4 (pv b-0 l-1))) (8 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-3 "nil")) (send l-0))
    ((recv (cat (exp (gen) y) (mul l (rec y))))
      (send (cat (exp (gen) y) (mul l (rec y)))))
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 a (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na-0 nb-0 a-0 a
            (hash (exp (gen) (mul alpha l-0))
              (exp (gen) (mul zeta y))))))))
  (label 452)
  (parent 423)
  (unrealized (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (a b a-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon expt) (l rndx) (alpha zeta expt) (y l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) y) (mul (rec y) l-0)))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b)
    (priv-stor priv-stor-0) (lb l-0) (y y) (alpha alpha) (zeta zeta))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (8 0))
    ((2 2) (0 1)) ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 3) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb-0 l l-0)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y alpha) (y zeta) (y l-0))
  (precur (7 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq (exp (gen) upsilon) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (8 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 9 2 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-4 (pv b-0 l-1))) (8 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) y) (mul (rec y) l-0)))
      (send (cat (exp (gen) y) (mul (rec y) l-0))))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na-0 nb-0 a-0 b
            (hash (exp (gen) (mul alpha l-0))
              (exp (gen) (mul zeta y))))))))
  (label 453)
  (parent 423)
  (unrealized (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x rndx) (upsilon expt)
    (l rndx) (alpha zeta expt) (l-0 y l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) y) (mul l-0 (rec y))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b-0)
    (priv-stor priv-stor-1) (lb l-1) (y y) (alpha alpha) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b-0)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0)) ((6 2) (5 0))
    ((7 1) (5 0)) ((8 3) (7 0)) ((9 1) (8 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb-0 l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y alpha) (y zeta) (y l-1))
  (precur (7 0))
  (gen-st (pv a l) (pv b-0 l-1))
  (facts (neq (exp (gen) upsilon) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((9 1) (8 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-4 (pv b-0 l-1))) (8 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) y) (mul l-0 (rec y))))
      (send (cat (exp (gen) y) (mul l-0 (rec y)))))
    ((load priv-stor-1 (cat pt-4 (pv b-0 l-1)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b-0 (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul alpha l-1))
              (exp (gen) (mul zeta y)))))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv b-0 l-1)))))
  (label 454)
  (parent 423)
  (unrealized (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (precedes ((0 2) (3 0)) ((1 1) (0 0)) ((1 1) (5 0)) ((2 2) (0 1))
    ((2 2) (6 0)) ((3 1) (0 3)) ((4 1) (3 0)) ((5 2) (4 0))
    ((6 1) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (6 0))
  (gen-st (pv a l))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (5 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one)))))
  (label 455)
  (parent 424)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn)
    (lb l x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta lb) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (precedes ((1 1) (0 0)) ((1 1) (3 0)) ((2 2) (0 1)) ((3 2) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb lb l)
  (uniq-gen x)
  (absent (x lb) (x l))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) y) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (3 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) lb) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul lb l)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b lb)))
      (send
        (sig (body b (exp (gen) lb) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l)))
  (label 456)
  (parent 426)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn)
    (lb l x rndx) (w expt) (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta lb) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (gen) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (5 0)) ((1 1) (0 0)) ((1 1) (4 0)) ((2 2) (0 1))
    ((3 1) (5 0)) ((4 2) (3 0)) ((5 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb lb l)
  (uniq-gen x)
  (absent (x lb) (x l))
  (precur (3 0) (5 0))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (4 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) lb) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul lb l)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b lb)))
      (send
        (sig (body b (exp (gen) lb) (pubk "sig" b)) (privk "sig" b))))
    ((recv (cat (gen) l)) (send (cat (gen) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 457)
  (parent 427)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-0) (x x) (beta l) (upsilon y))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (lb lb) (y y) (alpha (mul l l-0 (rec lb)))
    (zeta x))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (exp (gen) (mul l l-0)) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-0))
  (precedes ((0 2) (2 2)) ((1 1) (7 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (2 0)) ((3 1) (5 0)) ((4 1) (2 1)) ((5 2) (4 0))
    ((6 1) (4 0)) ((7 2) (6 0)) ((8 1) (0 0)) ((8 2) (6 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec lb))) (y lb) (y x))
  (gen-st (pv b l) (pv b lb) (pv self l-0))
  (facts (neq (exp (gen) y) (gen)) (neq (exp (gen) x) (gen))
    (neq self b))
  (leads-to ((1 1) (7 0)) ((3 1) (2 0)) ((3 1) (5 0)) ((8 1) (0 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 9 2 resp 4) (exp (gen) y-0) (0 3))
  (traces
    ((load priv-stor-1 (cat pt-6 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-1 (pv b lb)))
      (recv
        (sig
          (body self (exp (gen) (mul l l-0 (rec lb))) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b lb))))
    ((recv (cat (exp (gen) (mul l l-0)) lb))
      (send (cat (exp (gen) (mul l l-0)) lb)))
    ((load priv-stor-0 (cat pt-1 (pv b lb)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-4 "nil")) (send l))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 458)
  (parent 428)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-1) (x x) (beta l-0)
    (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (lb l) (y y) (alpha (mul (rec l) l-0 l-1))
    (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
  (precedes ((0 2) (2 2)) ((1 1) (7 0)) ((1 2) (0 1)) ((2 3) (9 0))
    ((3 1) (2 0)) ((3 1) (5 0)) ((4 1) (2 1)) ((5 2) (4 0))
    ((6 1) (4 0)) ((7 2) (6 0)) ((8 1) (0 0)) ((8 2) (6 0))
    ((9 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l-0) (x l-1) (y zeta) (y (mul (rec l) l-0 l-1)) (y l))
  (precur (9 0))
  (gen-st (pv b l) (pv b l-0) (pv self l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq self b))
  (leads-to ((1 1) (7 0)) ((3 1) (2 0)) ((3 1) (5 0)) ((8 1) (0 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
    (exp (gen) (mul (rec x) y zeta)) (0 3))
  (traces
    ((load priv-stor-1 (cat pt-6 (pv self l-1)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb self b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-1 (pv b l)))
      (recv
        (sig
          (body self (exp (gen) (mul (rec l) l-0 l-1))
            (pubk "sig" self)) (privk "sig" self)))
      (recv (cat na self b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-0 (cat pt-1 (pv b l)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (stor priv-stor (cat pt-4 "nil")) (send l-0))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
      (send (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))))
  (label 459)
  (parent 428)
  (unrealized (9 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn) (x y rndx)
    (zeta expt) (l l-0 lb rndx) (alpha zeta-0 expt) (l-1 y-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-1) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l) (y y) (alpha (mul (rec l) l-0 l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) y-0) (mul l-1 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b-0)
    (priv-stor priv-stor-2) (lb lb) (y y-0) (alpha alpha) (zeta zeta-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (8 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0))
    ((10 3) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen x y y-0)
  (absent (x l-0) (x l-1) (y zeta) (y (mul (rec l) l-0 l-1)) (y l)
    (y-0 lb) (y-0 alpha) (y-0 zeta-0))
  (precur (9 0))
  (gen-st (pv a l-1) (pv b l) (pv b l-0) (pv b-0 lb))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta-0) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b))
  (leads-to ((1 1) (0 0)) ((2 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule assume-init-0 assume-resp-0 gen-st-ltx-disclose-0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand resp 4) (exp (gen) y-0) (9 0))
  (traces
    ((load priv-stor (cat pt (pv a l-1)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) y-0) (mul l-1 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-1 (rec y-0)))))
    ((load priv-stor-2 (cat pt-7 (pv b-0 lb)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0)))
      (recv (cat na-0 a-0 b-0 (exp (gen) zeta-0)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul lb alpha))
              (exp (gen) (mul zeta-0 y-0))))))))
  (label 460)
  (parent 429)
  (unrealized (0 3) (7 0) (9 0) (10 0))
  (comment "4 in cohort - 4 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (a b a-0 b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn) (x y rndx)
    (zeta expt) (l l-0 la rndx) (beta expt) (l-1 x-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-1) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l) (y y) (alpha (mul (rec l) l-0 l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
  (defstrand init 3 (na na-0) (a a-0) (b b-0) (priv-stor priv-stor-2)
    (la la) (x x-0) (beta beta))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (8 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0))
    ((10 2) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen x y x-0)
  (absent (x l-0) (x l-1) (y zeta) (y (mul (rec l) l-0 l-1)) (y l)
    (x-0 la) (x-0 beta))
  (precur (9 0))
  (gen-st (pv a l-1) (pv b l) (pv b l-0) (pv a-0 la))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((2 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule assume-init-0 assume-resp-0 gen-st-ltx-disclose-0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand init 3) (exp (gen) x-0) (9 0))
  (traces
    ((load priv-stor (cat pt (pv a l-1)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-1 (rec x-0)))))
    ((load priv-stor-2 (cat pt-7 (pv a-0 la)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0)))
      (send (cat na-0 a-0 b-0 (exp (gen) x-0)))))
  (label 461)
  (parent 429)
  (unrealized (0 3) (7 0) (9 0) (10 0))
  (comment "4 in cohort - 4 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-1) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l) (y y) (alpha (mul (rec l) l-0 l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (gen) l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (9 0)) ((2 1) (8 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l-0) (x l-1) (y zeta) (y (mul (rec l) l-0 l-1)) (y l))
  (precur (9 0))
  (gen-st (pv a l-1) (pv b l) (pv b l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((2 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (contracted (l-2 l-1) (w l-1)) (gen) (9 0))
  (traces
    ((load priv-stor (cat pt (pv a l-1)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (gen) l-1)) (send (cat (gen) l-1))))
  (label 462)
  (parent 429)
  (unrealized (0 3) (9 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y rndx) (zeta expt)
    (l l-0 l-1 x rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l-1) (upsilon (mul y zeta (rec x))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l) (y y) (alpha (mul (rec l) l-0 l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-0) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-1))
  (deflistener (cat (exp (gen) x) (mul l-0 (rec x))))
  (precedes ((0 2) (9 0)) ((1 1) (0 0)) ((2 1) (8 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y zeta) (y (mul (rec l) l-0 l-1)) (y l) (x l-0) (x l-1))
  (precur (9 0))
  (gen-st (pv a l-0) (pv b l) (pv b l-1))
  (facts (neq (exp (gen) (mul y zeta (rec x))) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((2 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 10 0 init 3) (exp (gen) x-0) (9 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y zeta (rec x)))
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) l-1)) (send (cat (exp (gen) l-0) l-1)))
    ((load priv-stor-0 (cat pt-2 (pv b l-1)))
      (stor priv-stor-0 (cat pt-6 "nil")) (send l-1))
    ((recv (cat (exp (gen) x) (mul l-0 (rec x))))
      (send (cat (exp (gen) x) (mul l-0 (rec x))))))
  (label 463)
  (parent 429)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l-1) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l) (y y) (alpha (mul (rec l) l-0 l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-0) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-1))
  (deflistener (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (8 0)) ((2 2) (0 1))
    ((2 2) (9 0)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l-0) (x l-1) (y zeta) (y (mul (rec l) l-0 l-1)) (y l))
  (precur (9 0))
  (gen-st (pv a l-0) (pv b l) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((2 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 10 2 ltx-gen 3) (exp (gen) l-2)
    (9 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) l-1)) (send (cat (exp (gen) l-0) l-1)))
    ((load priv-stor-0 (cat pt-2 (pv b l-1)))
      (stor priv-stor-0 (cat pt-6 "nil")) (send l-1))
    ((recv (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
      (send (cat (exp (gen) l-1) (mul l-0 (rec l-1))))))
  (label 464)
  (parent 429)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-1) (x x) (beta l-0)
    (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (lb l) (y y) (alpha (mul (rec l) l-0 l-1))
    (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) l-1) (one)))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (2 2)) ((1 1) (7 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (2 0)) ((3 1) (5 0)) ((4 1) (2 1)) ((5 2) (4 0))
    ((6 1) (4 0)) ((7 2) (6 0)) ((8 1) (6 0)) ((9 1) (0 0))
    ((9 2) (8 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l-0) (x l-1) (y zeta) (y (mul (rec l) l-0 l-1)) (y l))
  (precur (8 0))
  (gen-st (pv b l) (pv b l-0) (pv self l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq self b))
  (leads-to ((1 1) (7 0)) ((3 1) (2 0)) ((3 1) (5 0)) ((9 1) (0 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 1 10 ltx-gen 3) (exp (gen) l-2)
    (9 0))
  (traces
    ((load priv-stor-1 (cat pt-6 (pv self l-1)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb self b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-1 (pv b l)))
      (recv
        (sig
          (body self (exp (gen) (mul (rec l) l-0 l-1))
            (pubk "sig" self)) (privk "sig" self)))
      (recv (cat na self b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-0 (cat pt-1 (pv b l)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (stor priv-stor (cat pt-4 "nil")) (send l-0))
    ((recv (cat (exp (gen) l-1) (one)))
      (send (cat (exp (gen) l-1) (one))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))))
  (label 465)
  (parent 429)
  (unrealized (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b self) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b self)
    (priv-stor priv-stor-1) (lb l-1) (y y) (alpha (mul l l-0 (rec l-1)))
    (zeta zeta))
  (deflistener (cat (exp (gen) (mul l l-0)) l-1))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (7 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 1)) ((5 2) (4 0)) ((6 1) (4 0))
    ((7 2) (6 0)) ((8 1) (6 0)) ((9 1) (3 0)) ((9 1) (5 0))
    ((9 2) (8 0)))
  (non-orig (privk "sig" self))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y zeta) (y (mul l l-0 (rec l-1))) (y l-1))
  (precur (8 0))
  (gen-st (pv a l-0) (pv self l) (pv self l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a self))
  (leads-to ((1 1) (0 0)) ((2 1) (7 0)) ((9 1) (3 0)) ((9 1) (5 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 4 10 ltx-gen 3) (exp (gen) l-2)
    (9 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na a self (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-1 (cat pt-6 (pv self l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a self (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((recv (cat (exp (gen) (mul l l-0)) l-1))
      (send (cat (exp (gen) (mul l l-0)) l-1)))
    ((load priv-stor-1 (cat pt-6 (pv self l-1)))
      (stor priv-stor-1 (cat pt-3 "nil")) (send l-1))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (stor priv-stor-0 (cat pt-4 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
      (send (cat (exp (gen) l-1) (mul l-0 (rec l-1)))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))))
  (label 466)
  (parent 429)
  (unrealized (0 3) (6 0) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 ignore-2 mesg) (na nb data)
    (a b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pt-8 pval)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn) (x y rndx)
    (zeta expt) (l l-0 l-1 l-2 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-1) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l) (y y) (alpha (mul (rec l) l-0 l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l-2) (mul l-1 (rec l-2))))
  (defstrand ltx-gen 3 (ignore ignore-2) (self self)
    (priv-stor priv-stor-2) (l l-2))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (8 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0))
    ((10 2) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1 l-2)
  (uniq-gen x y)
  (absent (x l-0) (x l-1) (y zeta) (y (mul (rec l) l-0 l-1)) (y l))
  (precur (9 0))
  (gen-st (pv a l-1) (pv b l) (pv b l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((2 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 3) (exp (gen) l-2) (9 0))
  (traces
    ((load priv-stor (cat pt (pv a l-1)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) l-2) (mul l-1 (rec l-2))))
      (send (cat (exp (gen) l-2) (mul l-1 (rec l-2)))))
    ((load priv-stor-2 (cat pt-7 ignore-2))
      (stor priv-stor-2 (cat pt-8 (pv self l-2)))
      (send
        (sig (body self (exp (gen) l-2) (pubk "sig" self))
          (privk "sig" self)))))
  (label 467)
  (parent 429)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb lb) (y y) (alpha (mul l l-0 (rec lb))) (zeta x))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) (mul l l-0)) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 2) (0 1))
    ((2 2) (7 0)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec lb))) (y lb) (y x))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) y) (gen)) (neq (exp (gen) x) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 9 3 resp 4) (exp (gen) y-0) (0 3))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec lb))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((recv (cat (exp (gen) (mul l l-0)) lb))
      (send (cat (exp (gen) (mul l l-0)) lb)))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-6 "nil")) (send l)))
  (label 468)
  (parent 430)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l-1) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l) (y y) (alpha (mul (rec l) l-0 l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 2) (0 1))
    ((2 2) (7 0)) ((3 3) (9 0)) ((4 1) (3 0)) ((4 1) (6 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l-0) (x l-1) (y zeta) (y (mul (rec l) l-0 l-1)) (y l))
  (precur (9 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
    (exp (gen) (mul (rec x) y zeta)) (0 3))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
      (send (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))))
  (label 469)
  (parent 430)
  (unrealized (9 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn) (x y rndx)
    (zeta expt) (l l-0 lb rndx) (alpha zeta-0 expt) (l-1 y-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l-1) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l) (y y) (alpha (mul (rec l) l-0 l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) y-0) (mul l-1 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b-0)
    (priv-stor priv-stor-2) (lb lb) (y y-0) (alpha alpha) (zeta zeta-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0))
    ((10 3) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen x y y-0)
  (absent (x l-0) (x l-1) (y zeta) (y (mul (rec l) l-0 l-1)) (y l)
    (y-0 lb) (y-0 alpha) (y-0 zeta-0))
  (precur (9 0))
  (gen-st (pv a l-0) (pv b l) (pv b-0 lb))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta-0) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule assume-init-0 assume-resp-0 gen-st-ltx-disclose-0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand resp 4) (exp (gen) y-0) (9 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) y-0) (mul l-1 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-1 (rec y-0)))))
    ((load priv-stor-2 (cat pt-7 (pv b-0 lb)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0)))
      (recv (cat na-0 a-0 b-0 (exp (gen) zeta-0)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul lb alpha))
              (exp (gen) (mul zeta-0 y-0))))))))
  (label 470)
  (parent 431)
  (unrealized (0 3) (7 0) (9 0) (10 0))
  (comment "4 in cohort - 4 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (a b a-0 b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn) (x y rndx)
    (zeta expt) (l l-0 la rndx) (beta expt) (l-1 x-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l-1) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l) (y y) (alpha (mul (rec l) l-0 l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
  (defstrand init 3 (na na-0) (a a-0) (b b-0) (priv-stor priv-stor-2)
    (la la) (x x-0) (beta beta))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0))
    ((10 2) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen x y x-0)
  (absent (x l-0) (x l-1) (y zeta) (y (mul (rec l) l-0 l-1)) (y l)
    (x-0 la) (x-0 beta))
  (precur (9 0))
  (gen-st (pv a l-0) (pv b l) (pv a-0 la))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule assume-init-0 assume-resp-0 gen-st-ltx-disclose-0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand init 3) (exp (gen) x-0) (9 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-1 (rec x-0)))))
    ((load priv-stor-2 (cat pt-7 (pv a-0 la)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0)))
      (send (cat na-0 a-0 b-0 (exp (gen) x-0)))))
  (label 471)
  (parent 431)
  (unrealized (0 3) (7 0) (9 0) (10 0))
  (comment "4 in cohort - 4 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l-1) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l) (y y) (alpha (mul (rec l) l-0 l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (gen) l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (9 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l-0) (x l-1) (y zeta) (y (mul (rec l) l-0 l-1)) (y l))
  (precur (9 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (contracted (l-2 l-1) (w l-1)) (gen) (9 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0))
    ((recv (cat (gen) l-1)) (send (cat (gen) l-1))))
  (label 472)
  (parent 431)
  (unrealized (0 3) (9 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y rndx) (zeta expt)
    (l la l-0 x rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la la) (x x) (beta l-0) (upsilon (mul y zeta (rec x))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l la))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l) (y y) (alpha (mul (rec l) la l-0)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul la l-0)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-0) la))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l la))
  (deflistener (cat (exp (gen) x) (mul l-0 (rec x))))
  (precedes ((0 2) (9 0)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l la l-0)
  (uniq-gen y x)
  (absent (y zeta) (y (mul (rec l) la l-0)) (y l) (x la) (x l-0))
  (precur (9 0))
  (gen-st (pv a la) (pv b l))
  (facts (neq (exp (gen) (mul y zeta (rec x))) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 10 0 init 3) (exp (gen) x-0) (9 0))
  (traces
    ((load priv-stor (cat pt (pv a la)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y zeta (rec x)))
          (enc na nb a b
            (hash (exp (gen) (mul la l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a la))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) la l-0)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul la l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul la l-0)) l))
      (send (cat (exp (gen) (mul la l-0)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) la)) (send (cat (exp (gen) l-0) la)))
    ((load priv-stor (cat pt (pv a la)))
      (stor priv-stor (cat pt-6 "nil")) (send la))
    ((recv (cat (exp (gen) x) (mul l-0 (rec x))))
      (send (cat (exp (gen) x) (mul l-0 (rec x))))))
  (label 473)
  (parent 431)
  (unrealized (0 3) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l-1) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l) (y y) (alpha (mul (rec l) l-0 l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) l-1) (one)))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 2) (0 1))
    ((2 2) (9 0)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l-0) (x l-1) (y zeta) (y (mul (rec l) l-0 l-1)) (y l))
  (precur (9 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 10 2 ltx-gen 3) (exp (gen) l-2)
    (9 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) l-1) (one)))
      (send (cat (exp (gen) l-1) (one)))))
  (label 474)
  (parent 431)
  (unrealized (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-1) (x x) (beta l-0)
    (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (lb l) (y y) (alpha (mul (rec l) l-0 l-1))
    (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-0) l-1))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (2 2)) ((1 2) (0 1)) ((2 3) (0 3)) ((3 1) (2 0))
    ((3 1) (5 0)) ((4 1) (2 1)) ((5 2) (4 0)) ((6 1) (4 0))
    ((7 2) (6 0)) ((8 1) (6 0)) ((9 1) (0 0)) ((9 1) (7 0))
    ((9 2) (8 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l-0) (x l-1) (y zeta) (y (mul (rec l) l-0 l-1)) (y l))
  (precur (8 0))
  (gen-st (pv b l) (pv self l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq self b))
  (leads-to ((3 1) (2 0)) ((3 1) (5 0)) ((9 1) (0 0)) ((9 1) (7 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 1 10 ltx-gen 3) (exp (gen) l-2)
    (9 0))
  (traces
    ((load priv-stor-1 (cat pt-6 (pv self l-1)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb self b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-1 (pv b l)))
      (recv
        (sig
          (body self (exp (gen) (mul (rec l) l-0 l-1))
            (pubk "sig" self)) (privk "sig" self)))
      (recv (cat na self b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-0 (cat pt-1 (pv b l)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) l-1)) (send (cat (exp (gen) l-0) l-1)))
    ((load priv-stor-1 (cat pt-6 (pv self l-1)))
      (stor priv-stor-1 (cat pt-4 "nil")) (send l-1))
    ((recv (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
      (send (cat (exp (gen) l-1) (mul l-0 (rec l-1)))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))))
  (label 475)
  (parent 431)
  (unrealized (0 3) (6 0) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b self) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b self)
    (priv-stor priv-stor-1) (lb l-1) (y y) (alpha (mul l l-0 (rec l-1)))
    (zeta zeta))
  (deflistener (cat (exp (gen) (mul l l-0)) l-1))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (7 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 1)) ((5 2) (4 0)) ((6 1) (4 0))
    ((7 2) (6 0)) ((8 1) (6 0)) ((9 1) (3 0)) ((9 1) (5 0))
    ((9 2) (8 0)))
  (non-orig (privk "sig" self))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y zeta) (y (mul l l-0 (rec l-1))) (y l-1))
  (precur (8 0))
  (gen-st (pv a l) (pv self l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a self))
  (leads-to ((1 1) (0 0)) ((1 1) (7 0)) ((9 1) (3 0)) ((9 1) (5 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 4 10 ltx-gen 3) (exp (gen) l-2)
    (9 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (send (cat na a self (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-1 (cat pt-6 (pv self l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a self (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((recv (cat (exp (gen) (mul l l-0)) l-1))
      (send (cat (exp (gen) (mul l l-0)) l-1)))
    ((load priv-stor-1 (cat pt-6 (pv self l-1)))
      (stor priv-stor-1 (cat pt-3 "nil")) (send l-1))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-4 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
      (send (cat (exp (gen) l-1) (mul l-0 (rec l-1)))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))))
  (label 476)
  (parent 431)
  (unrealized (0 3) (6 0) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 ignore-2 mesg) (na nb data)
    (a b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pt-8 pval)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn) (x y rndx)
    (zeta expt) (l l-0 l-1 l-2 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l-1) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l) (y y) (alpha (mul (rec l) l-0 l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) l-2) (mul l-1 (rec l-2))))
  (defstrand ltx-gen 3 (ignore ignore-2) (self self)
    (priv-stor priv-stor-2) (l l-2))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0))
    ((10 2) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1 l-2)
  (uniq-gen x y)
  (absent (x l-0) (x l-1) (y zeta) (y (mul (rec l) l-0 l-1)) (y l))
  (precur (9 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 3) (exp (gen) l-2) (9 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) l-2) (mul l-1 (rec l-2))))
      (send (cat (exp (gen) l-2) (mul l-1 (rec l-2)))))
    ((load priv-stor-2 (cat pt-7 ignore-2))
      (stor priv-stor-2 (cat pt-8 (pv self l-2)))
      (send
        (sig (body self (exp (gen) l-2) (pubk "sig" self))
          (privk "sig" self)))))
  (label 477)
  (parent 431)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-0) (x x) (beta l) (upsilon y))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (lb lb) (y y) (alpha (mul l l-0 (rec lb)))
    (zeta x))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (exp (gen) (mul l-0 (rec lb))) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l lb))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-0))
  (precedes ((0 2) (2 2)) ((1 1) (5 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (2 0)) ((3 1) (7 0)) ((4 1) (2 1)) ((5 2) (4 0))
    ((6 1) (4 0)) ((7 2) (6 0)) ((8 1) (0 0)) ((8 2) (6 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec lb))) (y lb) (y x))
  (gen-st (pv b l) (pv b lb) (pv self l-0))
  (facts (neq (exp (gen) y) (gen)) (neq (exp (gen) x) (gen))
    (neq self b))
  (leads-to ((1 1) (5 0)) ((3 1) (2 0)) ((3 1) (7 0)) ((8 1) (0 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 9 2 resp 4) (exp (gen) y-0) (0 3))
  (traces
    ((load priv-stor-1 (cat pt-6 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-1 (pv b lb)))
      (recv
        (sig
          (body self (exp (gen) (mul l l-0 (rec lb))) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b lb))))
    ((recv (cat (exp (gen) (mul l-0 (rec lb))) l))
      (send (cat (exp (gen) (mul l-0 (rec lb))) l)))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) lb)) (send (cat (exp (gen) l-0) lb)))
    ((load priv-stor-0 (cat pt-1 (pv b lb)))
      (stor priv-stor-0 (cat pt-4 "nil")) (send lb))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 478)
  (parent 432)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-1) (x x) (beta l)
    (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (lb l-0) (y y) (alpha (mul l (rec l-0) l-1))
    (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
  (precedes ((0 2) (2 2)) ((1 1) (5 0)) ((1 2) (0 1)) ((2 3) (9 0))
    ((3 1) (2 0)) ((3 1) (7 0)) ((4 1) (2 1)) ((5 2) (4 0))
    ((6 1) (4 0)) ((7 2) (6 0)) ((8 1) (0 0)) ((8 2) (6 0))
    ((9 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-1) (y zeta) (y (mul l (rec l-0) l-1)) (y l-0))
  (precur (9 0))
  (gen-st (pv b l) (pv b l-0) (pv self l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq self b))
  (leads-to ((1 1) (5 0)) ((3 1) (2 0)) ((3 1) (7 0)) ((8 1) (0 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
    (exp (gen) (mul (rec x) y zeta)) (0 3))
  (traces
    ((load priv-stor-1 (cat pt-6 (pv self l-1)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb self b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-1 (pv b l-0)))
      (recv
        (sig
          (body self (exp (gen) (mul l (rec l-0) l-1))
            (pubk "sig" self)) (privk "sig" self)))
      (recv (cat na self b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-0 (cat pt-1 (pv b l-0)))
      (stor priv-stor-0 (cat pt-4 "nil")) (send l-0))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
      (send (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))))
  (label 479)
  (parent 432)
  (unrealized (9 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn) (x y rndx)
    (zeta expt) (l l-0 lb rndx) (alpha zeta-0 expt) (l-1 y-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-1) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-0) (y y) (alpha (mul l (rec l-0) l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) y-0) (mul l-1 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b-0)
    (priv-stor priv-stor-2) (lb lb) (y y-0) (alpha alpha) (zeta zeta-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (6 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0))
    ((10 3) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen x y y-0)
  (absent (x l) (x l-1) (y zeta) (y (mul l (rec l-0) l-1)) (y l-0)
    (y-0 lb) (y-0 alpha) (y-0 zeta-0))
  (precur (9 0))
  (gen-st (pv a l-1) (pv b l) (pv b l-0) (pv b-0 lb))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta-0) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0)))
  (rule assume-init-0 assume-resp-0 gen-st-ltx-disclose-0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand resp 4) (exp (gen) y-0) (9 0))
  (traces
    ((load priv-stor (cat pt (pv a l-1)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) y-0) (mul l-1 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-1 (rec y-0)))))
    ((load priv-stor-2 (cat pt-7 (pv b-0 lb)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0)))
      (recv (cat na-0 a-0 b-0 (exp (gen) zeta-0)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul lb alpha))
              (exp (gen) (mul zeta-0 y-0))))))))
  (label 480)
  (parent 433)
  (unrealized (0 3) (7 0) (9 0) (10 0))
  (comment "4 in cohort - 4 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (a b a-0 b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn) (x y rndx)
    (zeta expt) (l l-0 la rndx) (beta expt) (l-1 x-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-1) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-0) (y y) (alpha (mul l (rec l-0) l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
  (defstrand init 3 (na na-0) (a a-0) (b b-0) (priv-stor priv-stor-2)
    (la la) (x x-0) (beta beta))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (6 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0))
    ((10 2) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen x y x-0)
  (absent (x l) (x l-1) (y zeta) (y (mul l (rec l-0) l-1)) (y l-0)
    (x-0 la) (x-0 beta))
  (precur (9 0))
  (gen-st (pv a l-1) (pv b l) (pv b l-0) (pv a-0 la))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0)))
  (rule assume-init-0 assume-resp-0 gen-st-ltx-disclose-0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand init 3) (exp (gen) x-0) (9 0))
  (traces
    ((load priv-stor (cat pt (pv a l-1)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-1 (rec x-0)))))
    ((load priv-stor-2 (cat pt-7 (pv a-0 la)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0)))
      (send (cat na-0 a-0 b-0 (exp (gen) x-0)))))
  (label 481)
  (parent 433)
  (unrealized (0 3) (7 0) (9 0) (10 0))
  (comment "4 in cohort - 4 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-1) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-0) (y y) (alpha (mul l (rec l-0) l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (gen) l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (9 0)) ((2 1) (6 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-1) (y zeta) (y (mul l (rec l-0) l-1)) (y l-0))
  (precur (9 0))
  (gen-st (pv a l-1) (pv b l) (pv b l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (contracted (l-2 l-1) (w l-1)) (gen) (9 0))
  (traces
    ((load priv-stor (cat pt (pv a l-1)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (gen) l-1)) (send (cat (gen) l-1))))
  (label 482)
  (parent 433)
  (unrealized (0 3) (9 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y rndx) (zeta expt)
    (l l-0 l-1 x rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l-1) (upsilon (mul y zeta (rec x))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l) (y y) (alpha (mul (rec l) l-0 l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul (rec l) l-0)) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-1))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) x) (mul l-0 (rec x))))
  (precedes ((0 2) (9 0)) ((1 1) (0 0)) ((2 1) (6 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen y x)
  (absent (y zeta) (y (mul (rec l) l-0 l-1)) (y l) (x l-0) (x l-1))
  (precur (9 0))
  (gen-st (pv a l-0) (pv b l) (pv b l-1))
  (facts (neq (exp (gen) (mul y zeta (rec x))) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 10 0 init 3) (exp (gen) x-0) (9 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y zeta (rec x)))
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul (rec l) l-0)) l-1))
      (send (cat (exp (gen) (mul (rec l) l-0)) l-1)))
    ((load priv-stor-0 (cat pt-2 (pv b l-1)))
      (stor priv-stor-0 (cat pt-5 "nil")) (send l-1))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l))
    ((recv (cat (exp (gen) x) (mul l-0 (rec x))))
      (send (cat (exp (gen) x) (mul l-0 (rec x))))))
  (label 483)
  (parent 433)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l-1) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l) (y y) (alpha (mul (rec l) l-0 l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul (rec l) l-0)) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-1))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (6 0)) ((2 2) (0 1))
    ((2 2) (9 0)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l-0) (x l-1) (y zeta) (y (mul (rec l) l-0 l-1)) (y l))
  (precur (9 0))
  (gen-st (pv a l-0) (pv b l) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 10 2 ltx-gen 3) (exp (gen) l-2)
    (9 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul (rec l) l-0)) l-1))
      (send (cat (exp (gen) (mul (rec l) l-0)) l-1)))
    ((load priv-stor-0 (cat pt-2 (pv b l-1)))
      (stor priv-stor-0 (cat pt-5 "nil")) (send l-1))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
      (send (cat (exp (gen) l-1) (mul l-0 (rec l-1))))))
  (label 484)
  (parent 433)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-1) (x x) (beta l)
    (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (lb l-0) (y y) (alpha (mul l (rec l-0) l-1))
    (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l-1) (one)))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (2 2)) ((1 1) (5 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (2 0)) ((3 1) (7 0)) ((4 1) (2 1)) ((5 2) (4 0))
    ((6 1) (4 0)) ((7 2) (6 0)) ((8 1) (6 0)) ((9 1) (0 0))
    ((9 2) (8 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-1) (y zeta) (y (mul l (rec l-0) l-1)) (y l-0))
  (precur (8 0))
  (gen-st (pv b l) (pv b l-0) (pv self l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq self b))
  (leads-to ((1 1) (5 0)) ((3 1) (2 0)) ((3 1) (7 0)) ((9 1) (0 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 1 10 ltx-gen 3) (exp (gen) l-2)
    (9 0))
  (traces
    ((load priv-stor-1 (cat pt-6 (pv self l-1)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb self b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-1 (pv b l-0)))
      (recv
        (sig
          (body self (exp (gen) (mul l (rec l-0) l-1))
            (pubk "sig" self)) (privk "sig" self)))
      (recv (cat na self b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-0 (cat pt-1 (pv b l-0)))
      (stor priv-stor-0 (cat pt-4 "nil")) (send l-0))
    ((recv (cat (exp (gen) l-1) (one)))
      (send (cat (exp (gen) l-1) (one))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))))
  (label 485)
  (parent 433)
  (unrealized (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b self) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b self)
    (priv-stor priv-stor-1) (lb l-1) (y y) (alpha (mul l l-0 (rec l-1)))
    (zeta zeta))
  (deflistener (cat (exp (gen) (mul l-0 (rec l-1))) l))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-0) l-1))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (5 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 1)) ((5 2) (4 0)) ((6 1) (4 0))
    ((7 2) (6 0)) ((8 1) (6 0)) ((9 1) (3 0)) ((9 1) (7 0))
    ((9 2) (8 0)))
  (non-orig (privk "sig" self))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y zeta) (y (mul l l-0 (rec l-1))) (y l-1))
  (precur (8 0))
  (gen-st (pv a l-0) (pv self l) (pv self l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a self))
  (leads-to ((1 1) (0 0)) ((2 1) (5 0)) ((9 1) (3 0)) ((9 1) (7 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 4 10 ltx-gen 3) (exp (gen) l-2)
    (9 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na a self (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-1 (cat pt-6 (pv self l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a self (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((recv (cat (exp (gen) (mul l-0 (rec l-1))) l))
      (send (cat (exp (gen) (mul l-0 (rec l-1))) l)))
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) l-1)) (send (cat (exp (gen) l-0) l-1)))
    ((load priv-stor-1 (cat pt-6 (pv self l-1)))
      (stor priv-stor-1 (cat pt-4 "nil")) (send l-1))
    ((recv (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
      (send (cat (exp (gen) l-1) (mul l-0 (rec l-1)))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))))
  (label 486)
  (parent 433)
  (unrealized (0 3) (6 0) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 ignore-2 mesg) (na nb data)
    (a b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pt-8 pval)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn) (x y rndx)
    (zeta expt) (l l-0 l-1 l-2 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-1) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-0) (y y) (alpha (mul l (rec l-0) l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) l-2) (mul l-1 (rec l-2))))
  (defstrand ltx-gen 3 (ignore ignore-2) (self self)
    (priv-stor priv-stor-2) (l l-2))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (6 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0))
    ((10 2) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1 l-2)
  (uniq-gen x y)
  (absent (x l) (x l-1) (y zeta) (y (mul l (rec l-0) l-1)) (y l-0))
  (precur (9 0))
  (gen-st (pv a l-1) (pv b l) (pv b l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 3) (exp (gen) l-2) (9 0))
  (traces
    ((load priv-stor (cat pt (pv a l-1)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) l-2) (mul l-1 (rec l-2))))
      (send (cat (exp (gen) l-2) (mul l-1 (rec l-2)))))
    ((load priv-stor-2 (cat pt-7 ignore-2))
      (stor priv-stor-2 (cat pt-8 (pv self l-2)))
      (send
        (sig (body self (exp (gen) l-2) (pubk "sig" self))
          (privk "sig" self)))))
  (label 487)
  (parent 433)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn) (x y rndx)
    (zeta expt) (l l-0 lb rndx) (alpha zeta-0 expt) (l-1 y-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-1) (y y) (alpha (mul l l-0 (rec l-1))) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l-0 (rec l-1))) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (rec l-1)) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) y-0) (mul (rec l-1) (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b-0)
    (priv-stor priv-stor-2) (lb lb) (y y-0) (alpha alpha) (zeta zeta-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (6 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0))
    ((10 3) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen x y y-0)
  (absent (x l) (x l-0) (y zeta) (y (mul l l-0 (rec l-1))) (y l-1)
    (y-0 lb) (y-0 alpha) (y-0 zeta-0))
  (precur (9 0))
  (gen-st (pv a l-0) (pv b l) (pv b l-1) (pv b-0 lb))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta-0) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (6 0)) ((4 1) (3 0)))
  (rule assume-init-0 assume-resp-0 gen-st-ltx-disclose-0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand resp 4) (exp (gen) y-0) (9 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l-0 (rec l-1))) l))
      (send (cat (exp (gen) (mul l-0 (rec l-1))) l)))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) (rec l-1)) l-0))
      (send (cat (exp (gen) (rec l-1)) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) y-0) (mul (rec l-1) (rec y-0))))
      (send (cat (exp (gen) y-0) (mul (rec l-1) (rec y-0)))))
    ((load priv-stor-2 (cat pt-7 (pv b-0 lb)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0)))
      (recv (cat na-0 a-0 b-0 (exp (gen) zeta-0)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul lb alpha))
              (exp (gen) (mul zeta-0 y-0))))))))
  (label 488)
  (parent 434)
  (unrealized (0 3) (7 0) (9 0) (10 0))
  (comment "4 in cohort - 4 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (a b a-0 b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn) (x y rndx)
    (zeta expt) (l l-0 la rndx) (beta expt) (l-1 x-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-1) (y y) (alpha (mul l l-0 (rec l-1))) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l-0 (rec l-1))) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (rec l-1)) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) x-0) (mul (rec l-1) (rec x-0))))
  (defstrand init 3 (na na-0) (a a-0) (b b-0) (priv-stor priv-stor-2)
    (la la) (x x-0) (beta beta))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (6 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0))
    ((10 2) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen x y x-0)
  (absent (x l) (x l-0) (y zeta) (y (mul l l-0 (rec l-1))) (y l-1)
    (x-0 la) (x-0 beta))
  (precur (9 0))
  (gen-st (pv a l-0) (pv b l) (pv b l-1) (pv a-0 la))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (6 0)) ((4 1) (3 0)))
  (rule assume-init-0 assume-resp-0 gen-st-ltx-disclose-0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand init 3) (exp (gen) x-0) (9 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l-0 (rec l-1))) l))
      (send (cat (exp (gen) (mul l-0 (rec l-1))) l)))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) (rec l-1)) l-0))
      (send (cat (exp (gen) (rec l-1)) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) x-0) (mul (rec l-1) (rec x-0))))
      (send (cat (exp (gen) x-0) (mul (rec l-1) (rec x-0)))))
    ((load priv-stor-2 (cat pt-7 (pv a-0 la)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0)))
      (send (cat na-0 a-0 b-0 (exp (gen) x-0)))))
  (label 489)
  (parent 434)
  (unrealized (0 3) (7 0) (9 0) (10 0))
  (comment "4 in cohort - 4 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-1) (y y) (alpha (mul l l-0 (rec l-1))) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l-0 (rec l-1))) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (rec l-1)) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (gen) (rec l-1)))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (6 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y zeta) (y (mul l l-0 (rec l-1))) (y l-1))
  (precur (9 0))
  (gen-st (pv a l-0) (pv b l) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (6 0)) ((4 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (contracted (l-2 l-1) (w (rec l-1))) (gen)
    (9 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l-0 (rec l-1))) l))
      (send (cat (exp (gen) (mul l-0 (rec l-1))) l)))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) (rec l-1)) l-0))
      (send (cat (exp (gen) (rec l-1)) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0))
    ((recv (cat (gen) (rec l-1))) (send (cat (gen) (rec l-1)))))
  (label 490)
  (parent 434)
  (unrealized (0 3) (7 0) (9 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y rndx) (zeta expt)
    (l la l-0 x rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la la) (x x) (beta l-0) (upsilon (mul y zeta (rec x))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l la))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l) (y y) (alpha (mul (rec l) la l-0)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul (rec l) la)) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) (rec l)) la))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l la))
  (deflistener (cat (exp (gen) x) (mul (rec l) (rec x))))
  (precedes ((0 2) (9 0)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (6 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l la l-0)
  (uniq-gen y x)
  (absent (y zeta) (y (mul (rec l) la l-0)) (y l) (x la) (x l-0))
  (precur (9 0))
  (gen-st (pv a la) (pv b l) (pv b l-0))
  (facts (neq (exp (gen) (mul y zeta (rec x))) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (6 0)) ((4 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 10 0 init 3) (exp (gen) x-0) (9 0))
  (traces
    ((load priv-stor (cat pt (pv a la)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y zeta (rec x)))
          (enc na nb a b
            (hash (exp (gen) (mul la l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a la))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) la l-0)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul la l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul (rec l) la)) l-0))
      (send (cat (exp (gen) (mul (rec l) la)) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-5 "nil")) (send l-0))
    ((recv (cat (exp (gen) (rec l)) la))
      (send (cat (exp (gen) (rec l)) la)))
    ((load priv-stor (cat pt (pv a la)))
      (stor priv-stor (cat pt-6 "nil")) (send la))
    ((recv (cat (exp (gen) x) (mul (rec l) (rec x))))
      (send (cat (exp (gen) x) (mul (rec l) (rec x))))))
  (label 491)
  (parent 434)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-1) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-0) (y y) (alpha (mul l (rec l-0) l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul l (rec l-0))) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-1))
  (deflistener (cat (exp (gen) (rec l-0)) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-1) (mul (rec l-0) (rec l-1))))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (6 0))
    ((2 2) (0 1)) ((2 2) (9 0)) ((3 3) (0 3)) ((4 1) (3 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-1) (y zeta) (y (mul l (rec l-0) l-1)) (y l-0))
  (precur (9 0))
  (gen-st (pv a l) (pv b l-0) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (6 0)) ((4 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 10 2 ltx-gen 3) (exp (gen) l-2)
    (9 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul l (rec l-0))) l-1))
      (send (cat (exp (gen) (mul l (rec l-0))) l-1)))
    ((load priv-stor-0 (cat pt-2 (pv b l-1)))
      (stor priv-stor-0 (cat pt-5 "nil")) (send l-1))
    ((recv (cat (exp (gen) (rec l-0)) l))
      (send (cat (exp (gen) (rec l-0)) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-6 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) (mul (rec l-0) (rec l-1))))
      (send (cat (exp (gen) l-1) (mul (rec l-0) (rec l-1))))))
  (label 492)
  (parent 434)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-1) (x x) (beta l)
    (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (lb l-0) (y y) (alpha (mul l (rec l-0) l-1))
    (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (rec l-0)) l-1))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) l-1) (mul (rec l-0) (rec l-1))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (2 2)) ((1 1) (5 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (2 0)) ((4 1) (2 1)) ((5 2) (4 0)) ((6 1) (4 0))
    ((7 2) (6 0)) ((8 1) (6 0)) ((9 1) (0 0)) ((9 1) (7 0))
    ((9 2) (8 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-1) (y zeta) (y (mul l (rec l-0) l-1)) (y l-0))
  (precur (8 0))
  (gen-st (pv b l) (pv b l-0) (pv self l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq self b))
  (leads-to ((1 1) (5 0)) ((3 1) (2 0)) ((9 1) (0 0)) ((9 1) (7 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 1 10 ltx-gen 3) (exp (gen) l-2)
    (9 0))
  (traces
    ((load priv-stor-1 (cat pt-6 (pv self l-1)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb self b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-1 (pv b l-0)))
      (recv
        (sig
          (body self (exp (gen) (mul l (rec l-0) l-1))
            (pubk "sig" self)) (privk "sig" self)))
      (recv (cat na self b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) (rec l-0)) l-1))
      (send (cat (exp (gen) (rec l-0)) l-1)))
    ((load priv-stor-1 (cat pt-6 (pv self l-1)))
      (stor priv-stor-1 (cat pt-4 "nil")) (send l-1))
    ((recv (cat (exp (gen) l-1) (mul (rec l-0) (rec l-1))))
      (send (cat (exp (gen) l-1) (mul (rec l-0) (rec l-1)))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))))
  (label 493)
  (parent 434)
  (unrealized (0 3) (6 0) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b self) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b self)
    (priv-stor priv-stor-1) (lb l-1) (y y) (alpha (mul l l-0 (rec l-1)))
    (zeta zeta))
  (deflistener (cat (exp (gen) (mul l-0 (rec l-1))) l))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (rec l-1)) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) l-1) (mul (rec l-1) (rec l-1))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (7 0)) ((2 1) (5 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 1)) ((5 2) (4 0))
    ((6 1) (4 0)) ((7 2) (6 0)) ((8 1) (6 0)) ((9 1) (3 0))
    ((9 2) (8 0)))
  (non-orig (privk "sig" self))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y zeta) (y (mul l l-0 (rec l-1))) (y l-1))
  (precur (8 0))
  (gen-st (pv a l-0) (pv self l) (pv self l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a self))
  (leads-to ((1 1) (0 0)) ((1 1) (7 0)) ((2 1) (5 0)) ((9 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 4 10 ltx-gen 3) (exp (gen) l-2)
    (9 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na a self (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-1 (cat pt-6 (pv self l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a self (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((recv (cat (exp (gen) (mul l-0 (rec l-1))) l))
      (send (cat (exp (gen) (mul l-0 (rec l-1))) l)))
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) (rec l-1)) l-0))
      (send (cat (exp (gen) (rec l-1)) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-4 "nil")) (send l-0))
    ((recv (cat (exp (gen) l-1) (mul (rec l-1) (rec l-1))))
      (send (cat (exp (gen) l-1) (mul (rec l-1) (rec l-1)))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))))
  (label 494)
  (parent 434)
  (unrealized (0 3) (6 0) (8 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 ignore-2 mesg) (na nb data)
    (a b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pt-8 pval)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn) (x y rndx)
    (zeta expt) (l l-0 l-1 l-2 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-1) (y y) (alpha (mul l l-0 (rec l-1))) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l-0 (rec l-1))) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (rec l-1)) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) l-2) (mul (rec l-1) (rec l-2))))
  (defstrand ltx-gen 3 (ignore ignore-2) (self self)
    (priv-stor priv-stor-2) (l l-2))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (6 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0))
    ((10 2) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1 l-2)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y zeta) (y (mul l l-0 (rec l-1))) (y l-1))
  (precur (9 0))
  (gen-st (pv a l-0) (pv b l) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (6 0)) ((4 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 3) (exp (gen) l-2) (9 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l-0 (rec l-1))) l))
      (send (cat (exp (gen) (mul l-0 (rec l-1))) l)))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) (rec l-1)) l-0))
      (send (cat (exp (gen) (rec l-1)) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) l-2) (mul (rec l-1) (rec l-2))))
      (send (cat (exp (gen) l-2) (mul (rec l-1) (rec l-2)))))
    ((load priv-stor-2 (cat pt-7 ignore-2))
      (stor priv-stor-2 (cat pt-8 (pv self l-2)))
      (send
        (sig (body self (exp (gen) l-2) (pubk "sig" self))
          (privk "sig" self)))))
  (label 495)
  (parent 434)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb lb) (y y) (alpha (mul l l-0 (rec lb))) (zeta x))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) (mul l-0 (rec lb))) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((2 2) (7 0)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec lb))) (y lb) (y x))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) y) (gen)) (neq (exp (gen) x) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 9 3 resp 4) (exp (gen) y-0) (0 3))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec lb))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((recv (cat (exp (gen) (mul l-0 (rec lb))) l))
      (send (cat (exp (gen) (mul l-0 (rec lb))) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) lb)) (send (cat (exp (gen) l-0) lb)))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send lb)))
  (label 496)
  (parent 435)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-1) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-0) (y y) (alpha (mul l (rec l-0) l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((2 2) (7 0)) ((3 3) (9 0)) ((4 1) (3 0)) ((4 1) (8 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-1) (y zeta) (y (mul l (rec l-0) l-1)) (y l-0))
  (precur (9 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
    (exp (gen) (mul (rec x) y zeta)) (0 3))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
      (send (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))))
  (label 497)
  (parent 435)
  (unrealized (9 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn) (x y rndx)
    (zeta expt) (l l-0 lb rndx) (alpha zeta-0 expt) (l-1 y-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-1) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-0) (y y) (alpha (mul l (rec l-0) l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) y-0) (mul l-1 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b-0)
    (priv-stor priv-stor-2) (lb lb) (y y-0) (alpha alpha) (zeta zeta-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0))
    ((10 3) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen x y y-0)
  (absent (x l) (x l-1) (y zeta) (y (mul l (rec l-0) l-1)) (y l-0)
    (y-0 lb) (y-0 alpha) (y-0 zeta-0))
  (precur (9 0))
  (gen-st (pv a l) (pv b l-0) (pv b-0 lb))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta-0) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0)))
  (rule assume-init-0 assume-resp-0 gen-st-ltx-disclose-0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand resp 4) (exp (gen) y-0) (9 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) y-0) (mul l-1 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-1 (rec y-0)))))
    ((load priv-stor-2 (cat pt-7 (pv b-0 lb)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0)))
      (recv (cat na-0 a-0 b-0 (exp (gen) zeta-0)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul lb alpha))
              (exp (gen) (mul zeta-0 y-0))))))))
  (label 498)
  (parent 436)
  (unrealized (0 3) (7 0) (9 0) (10 0))
  (comment "4 in cohort - 4 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (a b a-0 b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn) (x y rndx)
    (zeta expt) (l l-0 la rndx) (beta expt) (l-1 x-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-1) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-0) (y y) (alpha (mul l (rec l-0) l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
  (defstrand init 3 (na na-0) (a a-0) (b b-0) (priv-stor priv-stor-2)
    (la la) (x x-0) (beta beta))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0))
    ((10 2) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen x y x-0)
  (absent (x l) (x l-1) (y zeta) (y (mul l (rec l-0) l-1)) (y l-0)
    (x-0 la) (x-0 beta))
  (precur (9 0))
  (gen-st (pv a l) (pv b l-0) (pv a-0 la))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0)))
  (rule assume-init-0 assume-resp-0 gen-st-ltx-disclose-0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand init 3) (exp (gen) x-0) (9 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-1 (rec x-0)))))
    ((load priv-stor-2 (cat pt-7 (pv a-0 la)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0)))
      (send (cat na-0 a-0 b-0 (exp (gen) x-0)))))
  (label 499)
  (parent 436)
  (unrealized (0 3) (7 0) (9 0) (10 0))
  (comment "4 in cohort - 4 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-1) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-0) (y y) (alpha (mul l (rec l-0) l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (gen) l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (9 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-1) (y zeta) (y (mul l (rec l-0) l-1)) (y l-0))
  (precur (9 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (contracted (l-2 l-1) (w l-1)) (gen) (9 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (gen) l-1)) (send (cat (gen) l-1))))
  (label 500)
  (parent 436)
  (unrealized (0 3) (9 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y rndx) (zeta expt)
    (l la l-0 x rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la la) (x x) (beta l-0) (upsilon (mul y zeta (rec x))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l la))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l) (y y) (alpha (mul (rec l) la l-0)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul (rec l) l-0)) la))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l la))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) x) (mul l-0 (rec x))))
  (precedes ((0 2) (9 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l la l-0)
  (uniq-gen y x)
  (absent (y zeta) (y (mul (rec l) la l-0)) (y l) (x la) (x l-0))
  (precur (9 0))
  (gen-st (pv a la) (pv b l))
  (facts (neq (exp (gen) (mul y zeta (rec x))) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 10 0 init 3) (exp (gen) x-0) (9 0))
  (traces
    ((load priv-stor (cat pt (pv a la)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y zeta (rec x)))
          (enc na nb a b
            (hash (exp (gen) (mul la l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a la))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) la l-0)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul la l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul (rec l) l-0)) la))
      (send (cat (exp (gen) (mul (rec l) l-0)) la)))
    ((load priv-stor (cat pt (pv a la)))
      (stor priv-stor (cat pt-5 "nil")) (send la))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l))
    ((recv (cat (exp (gen) x) (mul l-0 (rec x))))
      (send (cat (exp (gen) x) (mul l-0 (rec x))))))
  (label 501)
  (parent 436)
  (unrealized (0 3) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-1) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-0) (y y) (alpha (mul l (rec l-0) l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) l-1) (one)))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((2 2) (9 0)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-1) (y zeta) (y (mul l (rec l-0) l-1)) (y l-0))
  (precur (9 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 10 2 ltx-gen 3) (exp (gen) l-2)
    (9 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) l-1) (one)))
      (send (cat (exp (gen) l-1) (one)))))
  (label 502)
  (parent 436)
  (unrealized (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-1) (x x) (beta l-0)
    (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (lb l) (y y) (alpha (mul (rec l) l-0 l-1))
    (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul (rec l) l-0)) l-1))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (2 2)) ((1 2) (0 1)) ((2 3) (0 3)) ((3 1) (2 0))
    ((3 1) (7 0)) ((4 1) (2 1)) ((5 2) (4 0)) ((6 1) (4 0))
    ((7 2) (6 0)) ((8 1) (6 0)) ((9 1) (0 0)) ((9 1) (5 0))
    ((9 2) (8 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l-0) (x l-1) (y zeta) (y (mul (rec l) l-0 l-1)) (y l))
  (precur (8 0))
  (gen-st (pv b l) (pv self l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq self b))
  (leads-to ((3 1) (2 0)) ((3 1) (7 0)) ((9 1) (0 0)) ((9 1) (5 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 1 10 ltx-gen 3) (exp (gen) l-2)
    (9 0))
  (traces
    ((load priv-stor-1 (cat pt-6 (pv self l-1)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb self b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-1 (pv b l)))
      (recv
        (sig
          (body self (exp (gen) (mul (rec l) l-0 l-1))
            (pubk "sig" self)) (privk "sig" self)))
      (recv (cat na self b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b l))))
    ((recv (cat (exp (gen) (mul (rec l) l-0)) l-1))
      (send (cat (exp (gen) (mul (rec l) l-0)) l-1)))
    ((load priv-stor-1 (cat pt-6 (pv self l-1)))
      (stor priv-stor-1 (cat pt-3 "nil")) (send l-1))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-1 (pv b l)))
      (stor priv-stor-0 (cat pt-4 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
      (send (cat (exp (gen) l-1) (mul l-0 (rec l-1)))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))))
  (label 503)
  (parent 436)
  (unrealized (0 3) (6 0) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b self) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b self)
    (priv-stor priv-stor-1) (lb l-1) (y y) (alpha (mul l l-0 (rec l-1)))
    (zeta zeta))
  (deflistener (cat (exp (gen) (mul l-0 (rec l-1))) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) l-1))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (5 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 1)) ((5 2) (4 0)) ((6 1) (4 0))
    ((7 2) (6 0)) ((8 1) (6 0)) ((9 1) (3 0)) ((9 1) (7 0))
    ((9 2) (8 0)))
  (non-orig (privk "sig" self))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y zeta) (y (mul l l-0 (rec l-1))) (y l-1))
  (precur (8 0))
  (gen-st (pv a l) (pv self l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a self))
  (leads-to ((1 1) (0 0)) ((1 1) (5 0)) ((9 1) (3 0)) ((9 1) (7 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 4 10 ltx-gen 3) (exp (gen) l-2)
    (9 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (send (cat na a self (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-1 (cat pt-6 (pv self l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a self (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((recv (cat (exp (gen) (mul l-0 (rec l-1))) l))
      (send (cat (exp (gen) (mul l-0 (rec l-1))) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) l-1)) (send (cat (exp (gen) l-0) l-1)))
    ((load priv-stor-1 (cat pt-6 (pv self l-1)))
      (stor priv-stor-1 (cat pt-4 "nil")) (send l-1))
    ((recv (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
      (send (cat (exp (gen) l-1) (mul l-0 (rec l-1)))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))))
  (label 504)
  (parent 436)
  (unrealized (0 3) (6 0) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 ignore-2 mesg) (na nb data)
    (a b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pt-8 pval)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn) (x y rndx)
    (zeta expt) (l l-0 l-1 l-2 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-1) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-0) (y y) (alpha (mul l (rec l-0) l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) l-2) (mul l-1 (rec l-2))))
  (defstrand ltx-gen 3 (ignore ignore-2) (self self)
    (priv-stor priv-stor-2) (l l-2))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0))
    ((10 2) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1 l-2)
  (uniq-gen x y)
  (absent (x l) (x l-1) (y zeta) (y (mul l (rec l-0) l-1)) (y l-0))
  (precur (9 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 3) (exp (gen) l-2) (9 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) l-2) (mul l-1 (rec l-2))))
      (send (cat (exp (gen) l-2) (mul l-1 (rec l-2)))))
    ((load priv-stor-2 (cat pt-7 ignore-2))
      (stor priv-stor-2 (cat pt-8 (pv self l-2)))
      (send
        (sig (body self (exp (gen) l-2) (pubk "sig" self))
          (privk "sig" self)))))
  (label 505)
  (parent 436)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn) (x y rndx)
    (zeta expt) (l l-0 lb rndx) (alpha zeta-0 expt) (l-1 y-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-1) (y y) (alpha (mul l l-0 (rec l-1))) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l-0 (rec l-1))) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (rec l-1)) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) y-0) (mul (rec l-1) (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b-0)
    (priv-stor priv-stor-2) (lb lb) (y y-0) (alpha alpha) (zeta zeta-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (8 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0))
    ((10 3) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen x y y-0)
  (absent (x l) (x l-0) (y zeta) (y (mul l l-0 (rec l-1))) (y l-1)
    (y-0 lb) (y-0 alpha) (y-0 zeta-0))
  (precur (9 0))
  (gen-st (pv a l) (pv b l-0) (pv b l-1) (pv b-0 lb))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta-0) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (8 0)) ((4 1) (3 0)))
  (rule assume-init-0 assume-resp-0 gen-st-ltx-disclose-0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand resp 4) (exp (gen) y-0) (9 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l-0 (rec l-1))) l))
      (send (cat (exp (gen) (mul l-0 (rec l-1))) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) (rec l-1)) l-0))
      (send (cat (exp (gen) (rec l-1)) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) y-0) (mul (rec l-1) (rec y-0))))
      (send (cat (exp (gen) y-0) (mul (rec l-1) (rec y-0)))))
    ((load priv-stor-2 (cat pt-7 (pv b-0 lb)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0)))
      (recv (cat na-0 a-0 b-0 (exp (gen) zeta-0)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul lb alpha))
              (exp (gen) (mul zeta-0 y-0))))))))
  (label 506)
  (parent 437)
  (unrealized (0 3) (7 0) (9 0) (10 0))
  (comment "4 in cohort - 4 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (a b a-0 b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn) (x y rndx)
    (zeta expt) (l l-0 la rndx) (beta expt) (l-1 x-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-1) (y y) (alpha (mul l l-0 (rec l-1))) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l-0 (rec l-1))) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (rec l-1)) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) x-0) (mul (rec l-1) (rec x-0))))
  (defstrand init 3 (na na-0) (a a-0) (b b-0) (priv-stor priv-stor-2)
    (la la) (x x-0) (beta beta))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (8 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0))
    ((10 2) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen x y x-0)
  (absent (x l) (x l-0) (y zeta) (y (mul l l-0 (rec l-1))) (y l-1)
    (x-0 la) (x-0 beta))
  (precur (9 0))
  (gen-st (pv a l) (pv b l-0) (pv b l-1) (pv a-0 la))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (8 0)) ((4 1) (3 0)))
  (rule assume-init-0 assume-resp-0 gen-st-ltx-disclose-0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand init 3) (exp (gen) x-0) (9 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l-0 (rec l-1))) l))
      (send (cat (exp (gen) (mul l-0 (rec l-1))) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) (rec l-1)) l-0))
      (send (cat (exp (gen) (rec l-1)) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) x-0) (mul (rec l-1) (rec x-0))))
      (send (cat (exp (gen) x-0) (mul (rec l-1) (rec x-0)))))
    ((load priv-stor-2 (cat pt-7 (pv a-0 la)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0)))
      (send (cat na-0 a-0 b-0 (exp (gen) x-0)))))
  (label 507)
  (parent 437)
  (unrealized (0 3) (7 0) (9 0) (10 0))
  (comment "4 in cohort - 4 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-1) (y y) (alpha (mul l l-0 (rec l-1))) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l-0 (rec l-1))) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (rec l-1)) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (gen) (rec l-1)))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (8 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y zeta) (y (mul l l-0 (rec l-1))) (y l-1))
  (precur (9 0))
  (gen-st (pv a l) (pv b l-0) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (8 0)) ((4 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (contracted (l-2 l-1) (w (rec l-1))) (gen)
    (9 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l-0 (rec l-1))) l))
      (send (cat (exp (gen) (mul l-0 (rec l-1))) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) (rec l-1)) l-0))
      (send (cat (exp (gen) (rec l-1)) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (gen) (rec l-1))) (send (cat (gen) (rec l-1)))))
  (label 508)
  (parent 437)
  (unrealized (0 3) (7 0) (9 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y rndx) (zeta expt)
    (l la l-0 x rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la la) (x x) (beta l-0) (upsilon (mul y zeta (rec x))))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l la))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l) (y y) (alpha (mul (rec l) la l-0)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul (rec l) l-0)) la))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l la))
  (deflistener (cat (exp (gen) (rec l)) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) x) (mul (rec l) (rec x))))
  (precedes ((0 2) (9 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (8 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l la l-0)
  (uniq-gen y x)
  (absent (y zeta) (y (mul (rec l) la l-0)) (y l) (x la) (x l-0))
  (precur (9 0))
  (gen-st (pv a la) (pv b l) (pv b l-0))
  (facts (neq (exp (gen) (mul y zeta (rec x))) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (8 0)) ((4 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 10 0 init 3) (exp (gen) x-0) (9 0))
  (traces
    ((load priv-stor (cat pt (pv a la)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul y zeta (rec x)))
          (enc na nb a b
            (hash (exp (gen) (mul la l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a la))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) la l-0)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul la l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul (rec l) l-0)) la))
      (send (cat (exp (gen) (mul (rec l) l-0)) la)))
    ((load priv-stor (cat pt (pv a la)))
      (stor priv-stor (cat pt-5 "nil")) (send la))
    ((recv (cat (exp (gen) (rec l)) l-0))
      (send (cat (exp (gen) (rec l)) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) x) (mul (rec l) (rec x))))
      (send (cat (exp (gen) x) (mul (rec l) (rec x))))))
  (label 509)
  (parent 437)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-1) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-0) (y y) (alpha (mul l (rec l-0) l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (rec l-0)) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-1))
  (deflistener (cat (exp (gen) l-1) (mul (rec l-0) (rec l-1))))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (8 0))
    ((2 2) (0 1)) ((2 2) (9 0)) ((3 3) (0 3)) ((4 1) (3 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-1) (y zeta) (y (mul l (rec l-0) l-1)) (y l-0))
  (precur (9 0))
  (gen-st (pv a l) (pv b l-0) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (8 0)) ((4 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 10 2 ltx-gen 3) (exp (gen) l-2)
    (9 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) (rec l-0)) l-1))
      (send (cat (exp (gen) (rec l-0)) l-1)))
    ((load priv-stor-0 (cat pt-2 (pv b l-1)))
      (stor priv-stor-0 (cat pt-6 "nil")) (send l-1))
    ((recv (cat (exp (gen) l-1) (mul (rec l-0) (rec l-1))))
      (send (cat (exp (gen) l-1) (mul (rec l-0) (rec l-1))))))
  (label 510)
  (parent 437)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-1) (x x) (beta l)
    (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (lb l-0) (y y) (alpha (mul l (rec l-0) l-1))
    (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) (mul l (rec l-0))) l-1))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (rec l-0)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-1) (mul (rec l-0) (rec l-1))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (2 2)) ((1 1) (7 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (2 0)) ((4 1) (2 1)) ((5 2) (4 0)) ((6 1) (4 0))
    ((7 2) (6 0)) ((8 1) (6 0)) ((9 1) (0 0)) ((9 1) (5 0))
    ((9 2) (8 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-1) (y zeta) (y (mul l (rec l-0) l-1)) (y l-0))
  (precur (8 0))
  (gen-st (pv b l) (pv b l-0) (pv self l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq self b))
  (leads-to ((1 1) (7 0)) ((3 1) (2 0)) ((9 1) (0 0)) ((9 1) (5 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 1 10 ltx-gen 3) (exp (gen) l-2)
    (9 0))
  (traces
    ((load priv-stor-1 (cat pt-6 (pv self l-1)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb self b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-1 (pv b l-0)))
      (recv
        (sig
          (body self (exp (gen) (mul l (rec l-0) l-1))
            (pubk "sig" self)) (privk "sig" self)))
      (recv (cat na self b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b l-0))))
    ((recv (cat (exp (gen) (mul l (rec l-0))) l-1))
      (send (cat (exp (gen) (mul l (rec l-0))) l-1)))
    ((load priv-stor-1 (cat pt-6 (pv self l-1)))
      (stor priv-stor-1 (cat pt-3 "nil")) (send l-1))
    ((recv (cat (exp (gen) (rec l-0)) l))
      (send (cat (exp (gen) (rec l-0)) l)))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-4 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) (mul (rec l-0) (rec l-1))))
      (send (cat (exp (gen) l-1) (mul (rec l-0) (rec l-1)))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))))
  (label 511)
  (parent 437)
  (unrealized (0 3) (6 0) (8 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b self) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b self)
    (priv-stor priv-stor-1) (lb l-1) (y y) (alpha (mul l l-0 (rec l-1)))
    (zeta zeta))
  (deflistener (cat (exp (gen) (mul l-0 (rec l-1))) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (rec l-1)) l-0))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l-1) (mul (rec l-1) (rec l-1))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (5 0)) ((2 1) (7 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 1)) ((5 2) (4 0))
    ((6 1) (4 0)) ((7 2) (6 0)) ((8 1) (6 0)) ((9 1) (3 0))
    ((9 2) (8 0)))
  (non-orig (privk "sig" self))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y zeta) (y (mul l l-0 (rec l-1))) (y l-1))
  (precur (8 0))
  (gen-st (pv a l) (pv self l-0) (pv self l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a self))
  (leads-to ((1 1) (0 0)) ((1 1) (5 0)) ((2 1) (7 0)) ((9 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 4 10 ltx-gen 3) (exp (gen) l-2)
    (9 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (send (cat na a self (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-1 (cat pt-6 (pv self l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a self (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((recv (cat (exp (gen) (mul l-0 (rec l-1))) l))
      (send (cat (exp (gen) (mul l-0 (rec l-1))) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) (rec l-1)) l-0))
      (send (cat (exp (gen) (rec l-1)) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (stor priv-stor-0 (cat pt-4 "nil")) (send l-0))
    ((recv (cat (exp (gen) l-1) (mul (rec l-1) (rec l-1))))
      (send (cat (exp (gen) l-1) (mul (rec l-1) (rec l-1)))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))))
  (label 512)
  (parent 437)
  (unrealized (0 3) (6 0) (8 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 ignore-2 mesg) (na nb data)
    (a b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pt-8 pval)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn) (x y rndx)
    (zeta expt) (l l-0 l-1 l-2 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-1) (y y) (alpha (mul l l-0 (rec l-1))) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l-0 (rec l-1))) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (rec l-1)) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l-2) (mul (rec l-1) (rec l-2))))
  (defstrand ltx-gen 3 (ignore ignore-2) (self self)
    (priv-stor priv-stor-2) (l l-2))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (8 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0))
    ((10 2) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1 l-2)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y zeta) (y (mul l l-0 (rec l-1))) (y l-1))
  (precur (9 0))
  (gen-st (pv a l) (pv b l-0) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (8 0)) ((4 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 3) (exp (gen) l-2) (9 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l-0 (rec l-1))) l))
      (send (cat (exp (gen) (mul l-0 (rec l-1))) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) (rec l-1)) l-0))
      (send (cat (exp (gen) (rec l-1)) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) l-2) (mul (rec l-1) (rec l-2))))
      (send (cat (exp (gen) l-2) (mul (rec l-1) (rec l-2)))))
    ((load priv-stor-2 (cat pt-7 ignore-2))
      (stor priv-stor-2 (cat pt-8 (pv self l-2)))
      (send
        (sig (body self (exp (gen) l-2) (pubk "sig" self))
          (privk "sig" self)))))
  (label 513)
  (parent 437)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (la l-0) (x x) (beta l) (upsilon upsilon))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((1 1) (2 0)) ((1 2) (0 1)) ((2 2) (0 3)) ((3 1) (0 0))
    ((3 2) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv b l) (pv self l-0))
  (facts (neq (exp (gen) upsilon) (gen)) (neq self b))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (2 0))
  (traces
    ((load priv-stor-0 (cat pt-3 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-1 "nil")) (send l))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-3 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 514)
  (parent 438)
  (realized)
  (shape)
  (maps
    ((0)
      ((a self) (b b) (la l-0) (x x) (beta l) (upsilon upsilon) (na na)
        (nb nb) (priv-stor priv-stor-0))))
  (origs (l-0 (3 1)) (pt-3 (3 1)) (pt-1 (2 1)) (l (1 1)) (pt-0 (1 1))
    (na (0 2)))
  (ugens (x (0 2))))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (upsilon expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (precedes ((0 2) (3 0)) ((1 1) (0 0)) ((1 1) (7 0)) ((2 1) (5 0))
    ((2 2) (0 1)) ((3 1) (0 3)) ((4 1) (3 0)) ((5 2) (4 0))
    ((6 1) (4 0)) ((7 2) (6 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (6 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (7 0)) ((2 1) (5 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-4 "nil")) (send l-0)))
  (label 515)
  (parent 442)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (la l-0) (x x) (beta l) (upsilon upsilon))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((1 1) (3 0)) ((1 2) (0 1)) ((2 1) (0 3)) ((3 2) (2 0))
    ((4 1) (2 0)) ((5 1) (0 0)) ((5 2) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (4 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (neq (exp (gen) upsilon) (gen)) (neq self b))
  (leads-to ((1 1) (3 0)) ((5 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (2 0))
  (traces
    ((load priv-stor-0 (cat pt-3 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-1 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-3 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 516)
  (parent 443)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (precedes ((1 1) (0 0)) ((1 1) (3 0)) ((2 2) (0 1)) ((3 2) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (3 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l)))
  (label 517)
  (parent 447)
  (realized)
  (shape)
  (maps
    ((0)
      ((a a) (b b) (la l) (x x) (beta l-0) (upsilon upsilon) (na na)
        (nb nb) (priv-stor priv-stor))))
  (origs (l-0 (2 1)) (pt-2 (2 1)) (pt-3 (3 1)) (l (1 1)) (pt (1 1))
    (na (0 2)))
  (ugens (x (0 2))))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (upsilon expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener
    (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (3 0)) ((1 1) (0 0)) ((1 1) (5 0)) ((2 1) (7 0))
    ((2 2) (0 1)) ((3 1) (0 3)) ((4 1) (3 0)) ((5 2) (4 0))
    ((6 1) (4 0)) ((7 2) (6 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (6 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (5 0)) ((2 1) (7 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul x upsilon)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-4 "nil")) (send l-0)))
  (label 518)
  (parent 451)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (precedes ((1 1) (0 0)) ((1 1) (4 0)) ((2 2) (0 1)) ((2 2) (5 0))
    ((3 1) (0 3)) ((4 2) (3 0)) ((5 1) (3 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (5 0))
  (gen-st (pv a l))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (4 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one)))))
  (label 519)
  (parent 455)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn)
    (lb l x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta lb) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (precedes ((1 1) (0 0)) ((1 1) (3 0)) ((2 2) (0 1)) ((3 2) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na lb l)
  (uniq-gen x)
  (absent (x lb) (x l))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) y) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (3 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization forgot nb)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) lb) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul lb l)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b lb)))
      (send
        (sig (body b (exp (gen) lb) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l)))
  (label 520)
  (parent 456)
  (realized)
  (shape)
  (maps
    ((0)
      ((a a) (b b) (la l) (x x) (beta lb) (upsilon y) (na na) (nb nb)
        (priv-stor priv-stor))))
  (origs (pt-3 (3 1)) (lb (2 1)) (pt-2 (2 1)) (l (1 1)) (pt (1 1))
    (na (0 2)))
  (ugens (x (0 2))))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn)
    (lb l x rndx) (w expt) (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta lb) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((1 1) (3 0)) ((2 2) (0 1))
    ((3 2) (4 0)) ((4 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb lb l)
  (uniq-gen x)
  (absent (x lb) (x l))
  (precur (4 0))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (3 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) lb) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul lb l)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b lb)))
      (send
        (sig (body b (exp (gen) lb) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 521)
  (parent 457)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-0) (x x) (beta l) (upsilon y))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (exp (gen) (mul l l-0)) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-0))
  (precedes ((1 1) (6 0)) ((1 2) (0 1)) ((2 1) (4 0)) ((3 1) (0 3))
    ((4 2) (3 0)) ((5 1) (3 0)) ((6 2) (5 0)) ((7 1) (0 0))
    ((7 2) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv b l) (pv b lb) (pv self l-0))
  (facts (neq (exp (gen) y) (gen)) (neq self b))
  (leads-to ((1 1) (6 0)) ((2 1) (4 0)) ((7 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (2 0))
  (traces
    ((load priv-stor-1 (cat pt-6 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b lb))))
    ((recv (cat (exp (gen) (mul l l-0)) lb))
      (send (cat (exp (gen) (mul l l-0)) lb)))
    ((load priv-stor-0 (cat pt-1 (pv b lb)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-4 "nil")) (send l))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 522)
  (parent 458)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-0) (x x) (beta l) (upsilon (mul w y)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (lb lb) (y y) (alpha (mul l l-0 (rec lb)))
    (zeta (mul x w)))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (exp (gen) (mul l l-0)) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (2 2)) ((1 1) (7 0)) ((1 2) (0 1)) ((2 3) (9 0))
    ((3 1) (2 0)) ((3 1) (5 0)) ((4 1) (2 1)) ((5 2) (4 0))
    ((6 1) (4 0)) ((7 2) (6 0)) ((8 1) (0 0)) ((8 2) (6 0))
    ((9 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec lb))) (y lb) (y (mul x w)))
  (precur (9 0))
  (gen-st (pv b l) (pv b lb) (pv self l-0))
  (facts (neq (exp (gen) (mul w y)) (gen))
    (neq (exp (gen) (mul x w)) (gen)) (neq self b))
  (leads-to ((1 1) (7 0)) ((3 1) (2 0)) ((3 1) (5 0)) ((8 1) (0 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 10 2 resp 4) (exp (gen) y-0) (9 0))
  (traces
    ((load priv-stor-1 (cat pt-6 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-1 (pv b lb)))
      (recv
        (sig
          (body self (exp (gen) (mul l l-0 (rec lb))) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul x w))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y)))))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b lb))))
    ((recv (cat (exp (gen) (mul l l-0)) lb))
      (send (cat (exp (gen) (mul l l-0)) lb)))
    ((load priv-stor-0 (cat pt-1 (pv b lb)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-4 "nil")) (send l))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 523)
  (parent 459)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l rndx) (alpha zeta-0 expt) (l-0 y-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l-1) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l) (y y) (alpha (mul (rec l) l-0 l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-0) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-1))
  (deflistener (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b)
    (priv-stor priv-stor-0) (lb l-1) (y y-0) (alpha alpha)
    (zeta zeta-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (8 0)) ((2 1) (10 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 3) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen x y y-0)
  (absent (x l-0) (x l-1) (y zeta) (y (mul (rec l) l-0 l-1)) (y l)
    (y-0 alpha) (y-0 zeta-0) (y-0 l-1))
  (precur (9 0))
  (gen-st (pv a l-0) (pv b l) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta-0) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b))
  (leads-to ((1 1) (0 0)) ((2 1) (8 0)) ((2 1) (10 0)) ((4 1) (3 0))
    ((4 1) (6 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 2 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv b-0 l-2))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) l-1)) (send (cat (exp (gen) l-0) l-1)))
    ((load priv-stor-0 (cat pt-2 (pv b l-1)))
      (stor priv-stor-0 (cat pt-6 "nil")) (send l-1))
    ((recv (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-0 (rec y-0)))))
    ((load priv-stor-0 (cat pt-2 (pv b l-1)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b (exp (gen) zeta-0)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b
            (hash (exp (gen) (mul alpha l-1))
              (exp (gen) (mul zeta-0 y-0))))))))
  (label 524)
  (parent 460)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 rndx) (alpha zeta-0 expt) (y-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-1) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l) (y y) (alpha (mul (rec l) l-0 l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) y-0) (mul (rec y-0) l-1)))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b a)
    (priv-stor priv-stor) (lb l-1) (y y-0) (alpha alpha) (zeta zeta-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (10 0)) ((2 1) (8 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 3) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen x y y-0)
  (absent (x l-0) (x l-1) (y zeta) (y (mul (rec l) l-0 l-1)) (y l)
    (y-0 alpha) (y-0 zeta-0) (y-0 l-1))
  (precur (9 0))
  (gen-st (pv a l-1) (pv b l) (pv b l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta-0) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (10 0)) ((2 1) (8 0)) ((4 1) (3 0))
    ((4 1) (6 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 1 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv b-0 l-2))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l-1)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) y-0) (mul (rec y-0) l-1)))
      (send (cat (exp (gen) y-0) (mul (rec y-0) l-1))))
    ((load priv-stor (cat pt (pv a l-1)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 a (exp (gen) zeta-0)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 a
            (hash (exp (gen) (mul alpha l-1))
              (exp (gen) (mul zeta-0 y-0))))))))
  (label 525)
  (parent 460)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l rndx) (alpha zeta-0 expt) (l-0 y-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-1) (y y) (alpha (mul l l-0 (rec l-1))) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l l-0)) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b)
    (priv-stor priv-stor-1) (lb l-1) (y y-0) (alpha alpha)
    (zeta zeta-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (8 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0)) ((4 1) (10 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 3) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen x y y-0)
  (absent (x l) (x l-0) (y zeta) (y (mul l l-0 (rec l-1))) (y l-1)
    (y-0 alpha) (y-0 zeta-0) (y-0 l-1))
  (precur (9 0))
  (gen-st (pv a l-0) (pv b l) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta-0) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b))
  (leads-to ((1 1) (0 0)) ((2 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0))
    ((4 1) (10 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 4 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv b-0 l-2))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l l-0)) l-1))
      (send (cat (exp (gen) (mul l l-0)) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l-1))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-6 "nil")) (send l))
    ((recv (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-0 (rec y-0)))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b (exp (gen) zeta-0)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b
            (hash (exp (gen) (mul alpha l-1))
              (exp (gen) (mul zeta-0 y-0))))))))
  (label 526)
  (parent 460)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 ignore-2 mesg) (na nb na-0 nb-0 data)
    (a b a-0 b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pt-8 pval)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn) (x y rndx)
    (zeta expt) (l l-0 rndx) (alpha zeta-0 expt) (l-1 y-0 l-2 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-1) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l) (y y) (alpha (mul (rec l) l-0 l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) y-0) (mul l-1 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b-0)
    (priv-stor priv-stor-2) (lb l-2) (y y-0) (alpha alpha)
    (zeta zeta-0))
  (defstrand ltx-gen 2 (ignore ignore-2) (self b-0)
    (priv-stor priv-stor-2) (l l-2))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (8 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0))
    ((10 3) (9 0)) ((11 1) (10 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1 l-2)
  (uniq-gen x y y-0)
  (absent (x l-0) (x l-1) (y zeta) (y (mul (rec l) l-0 l-1)) (y l)
    (y-0 alpha) (y-0 zeta-0) (y-0 l-2))
  (precur (9 0))
  (gen-st (pv a l-1) (pv b l) (pv b l-0) (pv b-0 l-2))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta-0) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b))
  (leads-to ((1 1) (0 0)) ((2 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0))
    ((11 1) (10 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv b-0 l-2))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l-1)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) y-0) (mul l-1 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-1 (rec y-0)))))
    ((load priv-stor-2 (cat pt-7 (pv b-0 l-2)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0)))
      (recv (cat na-0 a-0 b-0 (exp (gen) zeta-0)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul alpha l-2))
              (exp (gen) (mul zeta-0 y-0)))))))
    ((load priv-stor-2 (cat pt-8 ignore-2))
      (stor priv-stor-2 (cat pt-7 (pv b-0 l-2)))))
  (label 527)
  (parent 460)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l rndx) (beta expt) (l-0 x-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l-1) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l) (y y) (alpha (mul (rec l) l-0 l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-0) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-1))
  (deflistener (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
  (defstrand init 3 (na na-0) (a b) (b b-0) (priv-stor priv-stor-0)
    (la l-1) (x x-0) (beta beta))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (8 0)) ((2 1) (10 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 2) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen x y x-0)
  (absent (x l-0) (x l-1) (y zeta) (y (mul (rec l) l-0 l-1)) (y l)
    (x-0 beta) (x-0 l-1))
  (precur (9 0))
  (gen-st (pv a l-0) (pv b l) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((2 1) (8 0)) ((2 1) (10 0)) ((4 1) (3 0))
    ((4 1) (6 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 2 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv a-0 l-2))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) l-1)) (send (cat (exp (gen) l-0) l-1)))
    ((load priv-stor-0 (cat pt-2 (pv b l-1)))
      (stor priv-stor-0 (cat pt-6 "nil")) (send l-1))
    ((recv (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-0 (rec x-0)))))
    ((load priv-stor-0 (cat pt-2 (pv b l-1)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 b b-0 (exp (gen) x-0)))))
  (label 528)
  (parent 461)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 rndx) (beta expt) (x-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-1) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l) (y y) (alpha (mul (rec l) l-0 l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) x-0) (mul (rec x-0) l-1)))
  (defstrand init 3 (na na-0) (a a) (b b-0) (priv-stor priv-stor)
    (la l-1) (x x-0) (beta beta))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (10 0)) ((2 1) (8 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 2) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen x y x-0)
  (absent (x l-0) (x l-1) (y zeta) (y (mul (rec l) l-0 l-1)) (y l)
    (x-0 beta) (x-0 l-1))
  (precur (9 0))
  (gen-st (pv a l-1) (pv b l) (pv b l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (10 0)) ((2 1) (8 0)) ((4 1) (3 0))
    ((4 1) (6 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 1 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv a-0 l-2))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l-1)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) x-0) (mul (rec x-0) l-1)))
      (send (cat (exp (gen) x-0) (mul (rec x-0) l-1))))
    ((load priv-stor (cat pt (pv a l-1)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a b-0 (exp (gen) x-0)))))
  (label 529)
  (parent 461)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l rndx) (beta expt) (l-0 x-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-1) (y y) (alpha (mul l l-0 (rec l-1))) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l l-0)) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
  (defstrand init 3 (na na-0) (a b) (b b-0) (priv-stor priv-stor-1)
    (la l-1) (x x-0) (beta beta))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (8 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0)) ((4 1) (10 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 2) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen x y x-0)
  (absent (x l) (x l-0) (y zeta) (y (mul l l-0 (rec l-1))) (y l-1)
    (x-0 beta) (x-0 l-1))
  (precur (9 0))
  (gen-st (pv a l-0) (pv b l) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((2 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0))
    ((4 1) (10 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 4 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv a-0 l-2))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l l-0)) l-1))
      (send (cat (exp (gen) (mul l l-0)) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l-1))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-6 "nil")) (send l))
    ((recv (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-0 (rec x-0)))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 b b-0 (exp (gen) x-0)))))
  (label 530)
  (parent 461)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 ignore-2 mesg) (na nb na-0 data)
    (a b a-0 b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pt-8 pval)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn) (x y rndx)
    (zeta expt) (l l-0 rndx) (beta expt) (l-1 x-0 l-2 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-1) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l) (y y) (alpha (mul (rec l) l-0 l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
  (defstrand init 3 (na na-0) (a a-0) (b b-0) (priv-stor priv-stor-2)
    (la l-2) (x x-0) (beta beta))
  (defstrand ltx-gen 2 (ignore ignore-2) (self a-0)
    (priv-stor priv-stor-2) (l l-2))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (8 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0))
    ((10 2) (9 0)) ((11 1) (10 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1 l-2)
  (uniq-gen x y x-0)
  (absent (x l-0) (x l-1) (y zeta) (y (mul (rec l) l-0 l-1)) (y l)
    (x-0 beta) (x-0 l-2))
  (precur (9 0))
  (gen-st (pv a l-1) (pv b l) (pv b l-0) (pv a-0 l-2))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((2 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0))
    ((11 1) (10 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv a-0 l-2))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l-1)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-1 (rec x-0)))))
    ((load priv-stor-2 (cat pt-7 (pv a-0 l-2)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a-0 b-0 (exp (gen) x-0))))
    ((load priv-stor-2 (cat pt-8 ignore-2))
      (stor priv-stor-2 (cat pt-7 (pv a-0 l-2)))))
  (label 531)
  (parent 461)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-1) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l) (y y) (alpha (mul (rec l) l-0 l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (gen) l-1))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (10 0)) ((2 1) (8 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 2) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l-0) (x l-1) (y zeta) (y (mul (rec l) l-0 l-1)) (y l))
  (precur (9 0))
  (gen-st (pv a l-1) (pv b l) (pv b l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (10 0)) ((2 1) (8 0)) ((4 1) (3 0))
    ((4 1) (6 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-disclose 3) l-1 (9 0)
    (ch-msg priv-stor (cat pt (pv a l-1))))
  (traces
    ((load priv-stor (cat pt (pv a l-1)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (gen) l-1)) (send (cat (gen) l-1)))
    ((load priv-stor (cat pt (pv a l-1)))
      (stor priv-stor (cat pt-7 "nil")) (send l-1)))
  (label 532)
  (parent 462)
  (unrealized (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-0) (x x) (beta l) (upsilon y))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (lb lb) (y y) (alpha (mul l l-0 (rec lb)))
    (zeta x))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (exp (gen) (mul l l-0)) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-0))
  (precedes ((0 2) (2 2)) ((1 1) (7 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (2 0)) ((3 1) (5 0)) ((4 1) (2 1)) ((5 2) (4 0))
    ((6 1) (4 0)) ((7 2) (6 0)) ((8 1) (6 0)) ((9 1) (0 0))
    ((9 2) (8 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec lb))) (y lb) (y x))
  (precur (8 0))
  (gen-st (pv b l) (pv b lb) (pv self l-0))
  (facts (neq (exp (gen) y) (gen)) (neq (exp (gen) x) (gen))
    (neq self b))
  (leads-to ((1 1) (7 0)) ((3 1) (2 0)) ((3 1) (5 0)) ((9 1) (0 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 10 2 resp 4) (exp (gen) y-0) (0 3))
  (traces
    ((load priv-stor-1 (cat pt-6 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-1 (pv b lb)))
      (recv
        (sig
          (body self (exp (gen) (mul l l-0 (rec lb))) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b lb))))
    ((recv (cat (exp (gen) (mul l l-0)) lb))
      (send (cat (exp (gen) (mul l l-0)) lb)))
    ((load priv-stor-0 (cat pt-1 (pv b lb)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-4 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 533)
  (parent 465)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-1) (x x) (beta l-0)
    (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (lb l) (y y) (alpha (mul (rec l) l-0 l-1))
    (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) l-1) (one)))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
  (precedes ((0 2) (2 2)) ((1 1) (7 0)) ((1 2) (0 1)) ((2 3) (10 0))
    ((3 1) (2 0)) ((3 1) (5 0)) ((4 1) (2 1)) ((5 2) (4 0))
    ((6 1) (4 0)) ((7 2) (6 0)) ((8 1) (6 0)) ((9 1) (0 0))
    ((9 2) (8 0)) ((10 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l-0) (x l-1) (y zeta) (y (mul (rec l) l-0 l-1)) (y l))
  (precur (8 0) (10 0))
  (gen-st (pv b l) (pv b l-0) (pv self l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq self b))
  (leads-to ((1 1) (7 0)) ((3 1) (2 0)) ((3 1) (5 0)) ((9 1) (0 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
    (exp (gen) (mul (rec x) y zeta)) (0 3))
  (traces
    ((load priv-stor-1 (cat pt-6 (pv self l-1)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb self b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-1 (pv b l)))
      (recv
        (sig
          (body self (exp (gen) (mul (rec l) l-0 l-1))
            (pubk "sig" self)) (privk "sig" self)))
      (recv (cat na self b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-0 (cat pt-1 (pv b l)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor (cat pt-0 (pv b l-0)))
      (stor priv-stor (cat pt-4 "nil")) (send l-0))
    ((recv (cat (exp (gen) l-1) (one)))
      (send (cat (exp (gen) l-1) (one))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
      (send (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))))
  (label 534)
  (parent 465)
  (unrealized (10 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) (mul l l-0)) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (precedes ((1 1) (0 0)) ((1 1) (7 0)) ((2 2) (0 1)) ((2 2) (6 0))
    ((3 1) (5 0)) ((4 1) (0 3)) ((5 2) (4 0)) ((6 1) (4 0))
    ((7 2) (6 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) y) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (7 0)) ((3 1) (5 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((recv (cat (exp (gen) (mul l l-0)) lb))
      (send (cat (exp (gen) (mul l l-0)) lb)))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-6 "nil")) (send l)))
  (label 535)
  (parent 468)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb lb) (y y) (alpha (mul l l-0 (rec lb))) (zeta (mul x w)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) (mul l l-0)) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 2) (0 1))
    ((2 2) (7 0)) ((3 3) (9 0)) ((4 1) (3 0)) ((4 1) (6 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec lb))) (y lb) (y (mul x w)))
  (precur (9 0))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) (mul w y)) (gen))
    (neq (exp (gen) (mul x w)) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 10 3 resp 4) (exp (gen) y-0) (9 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec lb))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) (mul x w))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((recv (cat (exp (gen) (mul l l-0)) lb))
      (send (cat (exp (gen) (mul l l-0)) lb)))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-6 "nil")) (send l))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 536)
  (parent 469)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 rndx) (alpha zeta-0 expt) (y-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l-1) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l) (y y) (alpha (mul (rec l) l-0 l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) y-0) (mul (rec y-0) l-1)))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b)
    (priv-stor priv-stor-0) (lb l-1) (y y-0) (alpha alpha)
    (zeta zeta-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (10 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 3) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen x y y-0)
  (absent (x l-0) (x l-1) (y zeta) (y (mul (rec l) l-0 l-1)) (y l)
    (y-0 alpha) (y-0 zeta-0) (y-0 l-1))
  (precur (9 0))
  (gen-st (pv a l-0) (pv b l) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta-0) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (10 0)) ((4 1) (3 0))
    ((4 1) (6 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 2 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv b-0 l-2))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) y-0) (mul (rec y-0) l-1)))
      (send (cat (exp (gen) y-0) (mul (rec y-0) l-1))))
    ((load priv-stor-0 (cat pt-2 (pv b l-1)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b (exp (gen) zeta-0)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b
            (hash (exp (gen) (mul alpha l-1))
              (exp (gen) (mul zeta-0 y-0))))))))
  (label 537)
  (parent 470)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l rndx) (alpha zeta-0 expt) (l-0 y-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-1) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l) (y y) (alpha (mul (rec l) l-0 l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-0) l-1))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-1))
  (deflistener (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b a)
    (priv-stor priv-stor) (lb l-1) (y y-0) (alpha alpha) (zeta zeta-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((1 1) (10 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 3) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen x y y-0)
  (absent (x l-0) (x l-1) (y zeta) (y (mul (rec l) l-0 l-1)) (y l)
    (y-0 alpha) (y-0 zeta-0) (y-0 l-1))
  (precur (9 0))
  (gen-st (pv a l-1) (pv b l))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta-0) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((1 1) (10 0)) ((4 1) (3 0))
    ((4 1) (6 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 1 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv b-0 l-2))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l-1)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) l-1)) (send (cat (exp (gen) l-0) l-1)))
    ((load priv-stor (cat pt (pv a l-1)))
      (stor priv-stor (cat pt-6 "nil")) (send l-1))
    ((recv (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-0 (rec y-0)))))
    ((load priv-stor (cat pt (pv a l-1)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 a (exp (gen) zeta-0)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 a
            (hash (exp (gen) (mul alpha l-1))
              (exp (gen) (mul zeta-0 y-0))))))))
  (label 538)
  (parent 470)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l rndx) (alpha zeta-0 expt) (l-0 y-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-1) (y y) (alpha (mul l l-0 (rec l-1))) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l l-0)) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b)
    (priv-stor priv-stor-1) (lb l-1) (y y-0) (alpha alpha)
    (zeta zeta-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0)) ((4 1) (10 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 3) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen x y y-0)
  (absent (x l) (x l-0) (y zeta) (y (mul l l-0 (rec l-1))) (y l-1)
    (y-0 alpha) (y-0 zeta-0) (y-0 l-1))
  (precur (9 0))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta-0) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0))
    ((4 1) (10 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 4 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv b-0 l-2))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l l-0)) l-1))
      (send (cat (exp (gen) (mul l l-0)) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l-1))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-6 "nil")) (send l))
    ((recv (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-0 (rec y-0)))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b (exp (gen) zeta-0)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b
            (hash (exp (gen) (mul alpha l-1))
              (exp (gen) (mul zeta-0 y-0))))))))
  (label 539)
  (parent 470)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 ignore-2 mesg) (na nb na-0 nb-0 data)
    (a b a-0 b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pt-8 pval)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn) (x y rndx)
    (zeta expt) (l l-0 rndx) (alpha zeta-0 expt) (l-1 y-0 l-2 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l-1) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l) (y y) (alpha (mul (rec l) l-0 l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) y-0) (mul l-1 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b-0)
    (priv-stor priv-stor-2) (lb l-2) (y y-0) (alpha alpha)
    (zeta zeta-0))
  (defstrand ltx-gen 2 (ignore ignore-2) (self b-0)
    (priv-stor priv-stor-2) (l l-2))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0))
    ((10 3) (9 0)) ((11 1) (10 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1 l-2)
  (uniq-gen x y y-0)
  (absent (x l-0) (x l-1) (y zeta) (y (mul (rec l) l-0 l-1)) (y l)
    (y-0 alpha) (y-0 zeta-0) (y-0 l-2))
  (precur (9 0))
  (gen-st (pv a l-0) (pv b l) (pv b-0 l-2))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta-0) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0))
    ((11 1) (10 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv b-0 l-2))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) y-0) (mul l-1 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-1 (rec y-0)))))
    ((load priv-stor-2 (cat pt-7 (pv b-0 l-2)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0)))
      (recv (cat na-0 a-0 b-0 (exp (gen) zeta-0)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul alpha l-2))
              (exp (gen) (mul zeta-0 y-0)))))))
    ((load priv-stor-2 (cat pt-8 ignore-2))
      (stor priv-stor-2 (cat pt-7 (pv b-0 l-2)))))
  (label 540)
  (parent 470)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 rndx) (beta expt) (x-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l-1) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l) (y y) (alpha (mul (rec l) l-0 l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) x-0) (mul (rec x-0) l-1)))
  (defstrand init 3 (na na-0) (a b) (b b-0) (priv-stor priv-stor-0)
    (la l-1) (x x-0) (beta beta))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (10 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 2) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen x y x-0)
  (absent (x l-0) (x l-1) (y zeta) (y (mul (rec l) l-0 l-1)) (y l)
    (x-0 beta) (x-0 l-1))
  (precur (9 0))
  (gen-st (pv a l-0) (pv b l) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (10 0)) ((4 1) (3 0))
    ((4 1) (6 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 2 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv a-0 l-2))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) x-0) (mul (rec x-0) l-1)))
      (send (cat (exp (gen) x-0) (mul (rec x-0) l-1))))
    ((load priv-stor-0 (cat pt-2 (pv b l-1)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 b b-0 (exp (gen) x-0)))))
  (label 541)
  (parent 471)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l rndx) (beta expt) (l-0 x-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-1) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l) (y y) (alpha (mul (rec l) l-0 l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-0) l-1))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-1))
  (deflistener (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
  (defstrand init 3 (na na-0) (a a) (b b-0) (priv-stor priv-stor)
    (la l-1) (x x-0) (beta beta))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((1 1) (10 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 2) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen x y x-0)
  (absent (x l-0) (x l-1) (y zeta) (y (mul (rec l) l-0 l-1)) (y l)
    (x-0 beta) (x-0 l-1))
  (precur (9 0))
  (gen-st (pv a l-1) (pv b l))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((1 1) (10 0)) ((4 1) (3 0))
    ((4 1) (6 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 1 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv a-0 l-2))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l-1)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) l-1)) (send (cat (exp (gen) l-0) l-1)))
    ((load priv-stor (cat pt (pv a l-1)))
      (stor priv-stor (cat pt-6 "nil")) (send l-1))
    ((recv (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-0 (rec x-0)))))
    ((load priv-stor (cat pt (pv a l-1)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a b-0 (exp (gen) x-0)))))
  (label 542)
  (parent 471)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l rndx) (beta expt) (l-0 x-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-1) (y y) (alpha (mul l l-0 (rec l-1))) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l l-0)) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
  (defstrand init 3 (na na-0) (a b) (b b-0) (priv-stor priv-stor-1)
    (la l-1) (x x-0) (beta beta))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0)) ((4 1) (10 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 2) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen x y x-0)
  (absent (x l) (x l-0) (y zeta) (y (mul l l-0 (rec l-1))) (y l-1)
    (x-0 beta) (x-0 l-1))
  (precur (9 0))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0))
    ((4 1) (10 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 4 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv a-0 l-2))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l l-0)) l-1))
      (send (cat (exp (gen) (mul l l-0)) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l-1))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-6 "nil")) (send l))
    ((recv (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-0 (rec x-0)))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 b b-0 (exp (gen) x-0)))))
  (label 543)
  (parent 471)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 ignore-2 mesg) (na nb na-0 data)
    (a b a-0 b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pt-8 pval)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn) (x y rndx)
    (zeta expt) (l l-0 rndx) (beta expt) (l-1 x-0 l-2 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l-1) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l) (y y) (alpha (mul (rec l) l-0 l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
  (defstrand init 3 (na na-0) (a a-0) (b b-0) (priv-stor priv-stor-2)
    (la l-2) (x x-0) (beta beta))
  (defstrand ltx-gen 2 (ignore ignore-2) (self a-0)
    (priv-stor priv-stor-2) (l l-2))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0))
    ((10 2) (9 0)) ((11 1) (10 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1 l-2)
  (uniq-gen x y x-0)
  (absent (x l-0) (x l-1) (y zeta) (y (mul (rec l) l-0 l-1)) (y l)
    (x-0 beta) (x-0 l-2))
  (precur (9 0))
  (gen-st (pv a l-0) (pv b l) (pv a-0 l-2))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0))
    ((11 1) (10 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv a-0 l-2))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-1 (rec x-0)))))
    ((load priv-stor-2 (cat pt-7 (pv a-0 l-2)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a-0 b-0 (exp (gen) x-0))))
    ((load priv-stor-2 (cat pt-8 ignore-2))
      (stor priv-stor-2 (cat pt-7 (pv a-0 l-2)))))
  (label 544)
  (parent 471)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l-1) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l) (y y) (alpha (mul (rec l) l-0 l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (gen) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (10 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 2) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l-0) (x l-1) (y zeta) (y (mul (rec l) l-0 l-1)) (y l))
  (precur (9 0))
  (gen-st (pv a l-0) (pv b l) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (10 0)) ((4 1) (3 0))
    ((4 1) (6 0)))
  (rule assume-init-0 assume-resp-0 gen-st-ltx-disclose-0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-disclose 3) l-1 (9 0)
    (ch-msg priv-stor-0 (cat pt-2 (pv b l-1))))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0))
    ((recv (cat (gen) l-1)) (send (cat (gen) l-1)))
    ((load priv-stor-0 (cat pt-2 (pv b l-1)))
      (stor priv-stor-0 (cat pt-7 "nil")) (send l-1)))
  (label 545)
  (parent 472)
  (unrealized (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb lb) (y y) (alpha (mul l l-0 (rec lb))) (zeta x))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) (mul l l-0)) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 2) (0 1))
    ((2 2) (9 0)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec lb))) (y lb) (y x))
  (precur (9 0))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) y) (gen)) (neq (exp (gen) x) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 10 3 resp 4) (exp (gen) y-0) (0 3))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec lb))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((recv (cat (exp (gen) (mul l l-0)) lb))
      (send (cat (exp (gen) (mul l l-0)) lb)))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-6 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one)))))
  (label 546)
  (parent 474)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l-1) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l) (y y) (alpha (mul (rec l) l-0 l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) l-1) (one)))
  (deflistener (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 2) (0 1))
    ((2 2) (9 0)) ((3 3) (10 0)) ((4 1) (3 0)) ((4 1) (6 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l-0) (x l-1) (y zeta) (y (mul (rec l) l-0 l-1)) (y l))
  (precur (9 0) (10 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
    (exp (gen) (mul (rec x) y zeta)) (0 3))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) l-1) (one)))
      (send (cat (exp (gen) l-1) (one))))
    ((recv (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
      (send (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))))
  (label 547)
  (parent 474)
  (unrealized (10 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-0) (x x) (beta l) (upsilon y))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (exp (gen) (mul l-0 (rec lb))) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l lb))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-0))
  (precedes ((1 1) (4 0)) ((1 2) (0 1)) ((2 1) (6 0)) ((3 1) (0 3))
    ((4 2) (3 0)) ((5 1) (3 0)) ((6 2) (5 0)) ((7 1) (0 0))
    ((7 2) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv b l) (pv b lb) (pv self l-0))
  (facts (neq (exp (gen) y) (gen)) (neq self b))
  (leads-to ((1 1) (4 0)) ((2 1) (6 0)) ((7 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (2 0))
  (traces
    ((load priv-stor-1 (cat pt-6 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b lb))))
    ((recv (cat (exp (gen) (mul l-0 (rec lb))) l))
      (send (cat (exp (gen) (mul l-0 (rec lb))) l)))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) lb)) (send (cat (exp (gen) l-0) lb)))
    ((load priv-stor-0 (cat pt-1 (pv b lb)))
      (stor priv-stor-0 (cat pt-4 "nil")) (send lb))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 548)
  (parent 478)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-0) (x x) (beta l) (upsilon (mul w y)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (lb lb) (y y) (alpha (mul l l-0 (rec lb)))
    (zeta (mul x w)))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (exp (gen) (mul l-0 (rec lb))) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l lb))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (2 2)) ((1 1) (5 0)) ((1 2) (0 1)) ((2 3) (9 0))
    ((3 1) (2 0)) ((3 1) (7 0)) ((4 1) (2 1)) ((5 2) (4 0))
    ((6 1) (4 0)) ((7 2) (6 0)) ((8 1) (0 0)) ((8 2) (6 0))
    ((9 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec lb))) (y lb) (y (mul x w)))
  (precur (9 0))
  (gen-st (pv b l) (pv b lb) (pv self l-0))
  (facts (neq (exp (gen) (mul w y)) (gen))
    (neq (exp (gen) (mul x w)) (gen)) (neq self b))
  (leads-to ((1 1) (5 0)) ((3 1) (2 0)) ((3 1) (7 0)) ((8 1) (0 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 10 2 resp 4) (exp (gen) y-0) (9 0))
  (traces
    ((load priv-stor-1 (cat pt-6 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-1 (pv b lb)))
      (recv
        (sig
          (body self (exp (gen) (mul l l-0 (rec lb))) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul x w))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y)))))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b lb))))
    ((recv (cat (exp (gen) (mul l-0 (rec lb))) l))
      (send (cat (exp (gen) (mul l-0 (rec lb))) l)))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) lb)) (send (cat (exp (gen) l-0) lb)))
    ((load priv-stor-0 (cat pt-1 (pv b lb)))
      (stor priv-stor-0 (cat pt-4 "nil")) (send lb))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 549)
  (parent 479)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l rndx) (alpha zeta-0 expt) (l-0 y-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l-1) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l) (y y) (alpha (mul (rec l) l-0 l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul (rec l) l-0)) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-1))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b)
    (priv-stor priv-stor-0) (lb l-1) (y y-0) (alpha alpha)
    (zeta zeta-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (6 0)) ((2 1) (10 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 3) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen x y y-0)
  (absent (x l-0) (x l-1) (y zeta) (y (mul (rec l) l-0 l-1)) (y l)
    (y-0 alpha) (y-0 zeta-0) (y-0 l-1))
  (precur (9 0))
  (gen-st (pv a l-0) (pv b l) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta-0) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)) ((2 1) (10 0)) ((4 1) (3 0))
    ((4 1) (8 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 2 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv b-0 l-2))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul (rec l) l-0)) l-1))
      (send (cat (exp (gen) (mul (rec l) l-0)) l-1)))
    ((load priv-stor-0 (cat pt-2 (pv b l-1)))
      (stor priv-stor-0 (cat pt-5 "nil")) (send l-1))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l))
    ((recv (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-0 (rec y-0)))))
    ((load priv-stor-0 (cat pt-2 (pv b l-1)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b (exp (gen) zeta-0)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b
            (hash (exp (gen) (mul alpha l-1))
              (exp (gen) (mul zeta-0 y-0))))))))
  (label 550)
  (parent 480)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 rndx) (alpha zeta-0 expt) (y-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-1) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-0) (y y) (alpha (mul l (rec l-0) l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) y-0) (mul (rec y-0) l-1)))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b a)
    (priv-stor priv-stor) (lb l-1) (y y-0) (alpha alpha) (zeta zeta-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (10 0)) ((2 1) (6 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 3) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen x y y-0)
  (absent (x l) (x l-1) (y zeta) (y (mul l (rec l-0) l-1)) (y l-0)
    (y-0 alpha) (y-0 zeta-0) (y-0 l-1))
  (precur (9 0))
  (gen-st (pv a l-1) (pv b l) (pv b l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta-0) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (10 0)) ((2 1) (6 0)) ((4 1) (3 0))
    ((4 1) (8 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 1 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv b-0 l-2))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l-1)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) y-0) (mul (rec y-0) l-1)))
      (send (cat (exp (gen) y-0) (mul (rec y-0) l-1))))
    ((load priv-stor (cat pt (pv a l-1)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 a (exp (gen) zeta-0)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 a
            (hash (exp (gen) (mul alpha l-1))
              (exp (gen) (mul zeta-0 y-0))))))))
  (label 551)
  (parent 480)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l rndx) (alpha zeta-0 expt) (l-0 y-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-1) (y y) (alpha (mul l l-0 (rec l-1))) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l-0 (rec l-1))) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-0) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b)
    (priv-stor priv-stor-1) (lb l-1) (y y-0) (alpha alpha)
    (zeta zeta-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (6 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0)) ((4 1) (10 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 3) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen x y y-0)
  (absent (x l) (x l-0) (y zeta) (y (mul l l-0 (rec l-1))) (y l-1)
    (y-0 alpha) (y-0 zeta-0) (y-0 l-1))
  (precur (9 0))
  (gen-st (pv a l-0) (pv b l) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta-0) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0))
    ((4 1) (10 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 4 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv b-0 l-2))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l-0 (rec l-1))) l))
      (send (cat (exp (gen) (mul l-0 (rec l-1))) l)))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) l-1)) (send (cat (exp (gen) l-0) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-1))
    ((recv (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-0 (rec y-0)))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b (exp (gen) zeta-0)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b
            (hash (exp (gen) (mul alpha l-1))
              (exp (gen) (mul zeta-0 y-0))))))))
  (label 552)
  (parent 480)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 ignore-2 mesg) (na nb na-0 nb-0 data)
    (a b a-0 b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pt-8 pval)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn) (x y rndx)
    (zeta expt) (l l-0 rndx) (alpha zeta-0 expt) (l-1 y-0 l-2 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-1) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-0) (y y) (alpha (mul l (rec l-0) l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) y-0) (mul l-1 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b-0)
    (priv-stor priv-stor-2) (lb l-2) (y y-0) (alpha alpha)
    (zeta zeta-0))
  (defstrand ltx-gen 2 (ignore ignore-2) (self b-0)
    (priv-stor priv-stor-2) (l l-2))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (6 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0))
    ((10 3) (9 0)) ((11 1) (10 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1 l-2)
  (uniq-gen x y y-0)
  (absent (x l) (x l-1) (y zeta) (y (mul l (rec l-0) l-1)) (y l-0)
    (y-0 alpha) (y-0 zeta-0) (y-0 l-2))
  (precur (9 0))
  (gen-st (pv a l-1) (pv b l) (pv b l-0) (pv b-0 l-2))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta-0) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0))
    ((11 1) (10 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv b-0 l-2))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l-1)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) y-0) (mul l-1 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-1 (rec y-0)))))
    ((load priv-stor-2 (cat pt-7 (pv b-0 l-2)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0)))
      (recv (cat na-0 a-0 b-0 (exp (gen) zeta-0)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul alpha l-2))
              (exp (gen) (mul zeta-0 y-0)))))))
    ((load priv-stor-2 (cat pt-8 ignore-2))
      (stor priv-stor-2 (cat pt-7 (pv b-0 l-2)))))
  (label 553)
  (parent 480)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l rndx) (beta expt) (l-0 x-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l-1) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l) (y y) (alpha (mul (rec l) l-0 l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul (rec l) l-0)) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-1))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
  (defstrand init 3 (na na-0) (a b) (b b-0) (priv-stor priv-stor-0)
    (la l-1) (x x-0) (beta beta))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (6 0)) ((2 1) (10 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 2) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen x y x-0)
  (absent (x l-0) (x l-1) (y zeta) (y (mul (rec l) l-0 l-1)) (y l)
    (x-0 beta) (x-0 l-1))
  (precur (9 0))
  (gen-st (pv a l-0) (pv b l) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)) ((2 1) (10 0)) ((4 1) (3 0))
    ((4 1) (8 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 2 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv a-0 l-2))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul (rec l) l-0)) l-1))
      (send (cat (exp (gen) (mul (rec l) l-0)) l-1)))
    ((load priv-stor-0 (cat pt-2 (pv b l-1)))
      (stor priv-stor-0 (cat pt-5 "nil")) (send l-1))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l))
    ((recv (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-0 (rec x-0)))))
    ((load priv-stor-0 (cat pt-2 (pv b l-1)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 b b-0 (exp (gen) x-0)))))
  (label 554)
  (parent 481)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 rndx) (beta expt) (x-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-1) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-0) (y y) (alpha (mul l (rec l-0) l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) x-0) (mul (rec x-0) l-1)))
  (defstrand init 3 (na na-0) (a a) (b b-0) (priv-stor priv-stor)
    (la l-1) (x x-0) (beta beta))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (10 0)) ((2 1) (6 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 2) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen x y x-0)
  (absent (x l) (x l-1) (y zeta) (y (mul l (rec l-0) l-1)) (y l-0)
    (x-0 beta) (x-0 l-1))
  (precur (9 0))
  (gen-st (pv a l-1) (pv b l) (pv b l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (10 0)) ((2 1) (6 0)) ((4 1) (3 0))
    ((4 1) (8 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 1 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv a-0 l-2))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l-1)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) x-0) (mul (rec x-0) l-1)))
      (send (cat (exp (gen) x-0) (mul (rec x-0) l-1))))
    ((load priv-stor (cat pt (pv a l-1)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a b-0 (exp (gen) x-0)))))
  (label 555)
  (parent 481)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l rndx) (beta expt) (l-0 x-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-1) (y y) (alpha (mul l l-0 (rec l-1))) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l-0 (rec l-1))) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-0) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
  (defstrand init 3 (na na-0) (a b) (b b-0) (priv-stor priv-stor-1)
    (la l-1) (x x-0) (beta beta))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (6 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0)) ((4 1) (10 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 2) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen x y x-0)
  (absent (x l) (x l-0) (y zeta) (y (mul l l-0 (rec l-1))) (y l-1)
    (x-0 beta) (x-0 l-1))
  (precur (9 0))
  (gen-st (pv a l-0) (pv b l) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0))
    ((4 1) (10 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 4 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv a-0 l-2))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l-0 (rec l-1))) l))
      (send (cat (exp (gen) (mul l-0 (rec l-1))) l)))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) l-1)) (send (cat (exp (gen) l-0) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-1))
    ((recv (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-0 (rec x-0)))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 b b-0 (exp (gen) x-0)))))
  (label 556)
  (parent 481)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 ignore-2 mesg) (na nb na-0 data)
    (a b a-0 b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pt-8 pval)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn) (x y rndx)
    (zeta expt) (l l-0 rndx) (beta expt) (l-1 x-0 l-2 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-1) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-0) (y y) (alpha (mul l (rec l-0) l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
  (defstrand init 3 (na na-0) (a a-0) (b b-0) (priv-stor priv-stor-2)
    (la l-2) (x x-0) (beta beta))
  (defstrand ltx-gen 2 (ignore ignore-2) (self a-0)
    (priv-stor priv-stor-2) (l l-2))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((2 1) (6 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0))
    ((10 2) (9 0)) ((11 1) (10 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1 l-2)
  (uniq-gen x y x-0)
  (absent (x l) (x l-1) (y zeta) (y (mul l (rec l-0) l-1)) (y l-0)
    (x-0 beta) (x-0 l-2))
  (precur (9 0))
  (gen-st (pv a l-1) (pv b l) (pv b l-0) (pv a-0 l-2))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0))
    ((11 1) (10 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv a-0 l-2))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l-1)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-1 (rec x-0)))))
    ((load priv-stor-2 (cat pt-7 (pv a-0 l-2)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a-0 b-0 (exp (gen) x-0))))
    ((load priv-stor-2 (cat pt-8 ignore-2))
      (stor priv-stor-2 (cat pt-7 (pv a-0 l-2)))))
  (label 557)
  (parent 481)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-1) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-0) (y y) (alpha (mul l (rec l-0) l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (gen) l-1))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (10 0)) ((2 1) (6 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 2) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-1) (y zeta) (y (mul l (rec l-0) l-1)) (y l-0))
  (precur (9 0))
  (gen-st (pv a l-1) (pv b l) (pv b l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (10 0)) ((2 1) (6 0)) ((4 1) (3 0))
    ((4 1) (8 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-disclose 3) l-1 (9 0)
    (ch-msg priv-stor (cat pt (pv a l-1))))
  (traces
    ((load priv-stor (cat pt (pv a l-1)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (gen) l-1)) (send (cat (gen) l-1)))
    ((load priv-stor (cat pt (pv a l-1)))
      (stor priv-stor (cat pt-7 "nil")) (send l-1)))
  (label 558)
  (parent 482)
  (unrealized (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-0) (x x) (beta l) (upsilon y))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (lb lb) (y y) (alpha (mul l l-0 (rec lb)))
    (zeta x))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (exp (gen) (mul l-0 (rec lb))) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-0))
  (precedes ((0 2) (2 2)) ((1 1) (5 0)) ((1 2) (0 1)) ((2 3) (0 3))
    ((3 1) (2 0)) ((3 1) (7 0)) ((4 1) (2 1)) ((5 2) (4 0))
    ((6 1) (4 0)) ((7 2) (6 0)) ((8 1) (6 0)) ((9 1) (0 0))
    ((9 2) (8 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec lb))) (y lb) (y x))
  (precur (8 0))
  (gen-st (pv b l) (pv b lb) (pv self l-0))
  (facts (neq (exp (gen) y) (gen)) (neq (exp (gen) x) (gen))
    (neq self b))
  (leads-to ((1 1) (5 0)) ((3 1) (2 0)) ((3 1) (7 0)) ((9 1) (0 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 10 2 resp 4) (exp (gen) y-0) (0 3))
  (traces
    ((load priv-stor-1 (cat pt-6 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-1 (pv b lb)))
      (recv
        (sig
          (body self (exp (gen) (mul l l-0 (rec lb))) (pubk "sig" self))
          (privk "sig" self))) (recv (cat na self b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b lb))))
    ((recv (cat (exp (gen) (mul l-0 (rec lb))) l))
      (send (cat (exp (gen) (mul l-0 (rec lb))) l)))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) lb)) (send (cat (exp (gen) l-0) lb)))
    ((load priv-stor-0 (cat pt-1 (pv b lb)))
      (stor priv-stor-0 (cat pt-4 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 559)
  (parent 485)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-1) (x x) (beta l)
    (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (lb l-0) (y y) (alpha (mul l (rec l-0) l-1))
    (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l-1) (one)))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
  (precedes ((0 2) (2 2)) ((1 1) (5 0)) ((1 2) (0 1)) ((2 3) (10 0))
    ((3 1) (2 0)) ((3 1) (7 0)) ((4 1) (2 1)) ((5 2) (4 0))
    ((6 1) (4 0)) ((7 2) (6 0)) ((8 1) (6 0)) ((9 1) (0 0))
    ((9 2) (8 0)) ((10 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-1) (y zeta) (y (mul l (rec l-0) l-1)) (y l-0))
  (precur (8 0) (10 0))
  (gen-st (pv b l) (pv b l-0) (pv self l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq self b))
  (leads-to ((1 1) (5 0)) ((3 1) (2 0)) ((3 1) (7 0)) ((9 1) (0 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
    (exp (gen) (mul (rec x) y zeta)) (0 3))
  (traces
    ((load priv-stor-1 (cat pt-6 (pv self l-1)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb self b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-1 (pv b l-0)))
      (recv
        (sig
          (body self (exp (gen) (mul l (rec l-0) l-1))
            (pubk "sig" self)) (privk "sig" self)))
      (recv (cat na self b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-0 (cat pt-1 (pv b l-0)))
      (stor priv-stor-0 (cat pt-4 "nil")) (send l-0))
    ((recv (cat (exp (gen) l-1) (one)))
      (send (cat (exp (gen) l-1) (one))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
      (send (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))))
  (label 560)
  (parent 485)
  (unrealized (10 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l rndx) (alpha zeta-0 expt) (l-0 y-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-1) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-0) (y y) (alpha (mul l (rec l-0) l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul l (rec l-0))) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-1))
  (deflistener (cat (exp (gen) (rec l-0)) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) y-0) (mul (rec l-0) (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b)
    (priv-stor priv-stor-0) (lb l-1) (y y-0) (alpha alpha)
    (zeta zeta-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (6 0))
    ((2 1) (10 0)) ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 3) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen x y y-0)
  (absent (x l) (x l-1) (y zeta) (y (mul l (rec l-0) l-1)) (y l-0)
    (y-0 alpha) (y-0 zeta-0) (y-0 l-1))
  (precur (9 0))
  (gen-st (pv a l) (pv b l-0) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta-0) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (6 0)) ((2 1) (10 0))
    ((4 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 2 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv b-0 l-2))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul l (rec l-0))) l-1))
      (send (cat (exp (gen) (mul l (rec l-0))) l-1)))
    ((load priv-stor-0 (cat pt-2 (pv b l-1)))
      (stor priv-stor-0 (cat pt-5 "nil")) (send l-1))
    ((recv (cat (exp (gen) (rec l-0)) l))
      (send (cat (exp (gen) (rec l-0)) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-6 "nil")) (send l))
    ((recv (cat (exp (gen) y-0) (mul (rec l-0) (rec y-0))))
      (send (cat (exp (gen) y-0) (mul (rec l-0) (rec y-0)))))
    ((load priv-stor-0 (cat pt-2 (pv b l-1)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b (exp (gen) zeta-0)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b
            (hash (exp (gen) (mul alpha l-1))
              (exp (gen) (mul zeta-0 y-0))))))))
  (label 561)
  (parent 488)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l rndx) (alpha zeta-0 expt) (l-0 y-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-1) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-0) (y y) (alpha (mul l (rec l-0) l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (rec l-0)) l-1))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-1))
  (deflistener (cat (exp (gen) y-0) (mul (rec l-0) (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b a)
    (priv-stor priv-stor) (lb l-1) (y y-0) (alpha alpha) (zeta zeta-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((1 1) (10 0))
    ((2 1) (6 0)) ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 3) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen x y y-0)
  (absent (x l) (x l-1) (y zeta) (y (mul l (rec l-0) l-1)) (y l-0)
    (y-0 alpha) (y-0 zeta-0) (y-0 l-1))
  (precur (9 0))
  (gen-st (pv a l-1) (pv b l) (pv b l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta-0) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((1 1) (10 0)) ((2 1) (6 0))
    ((4 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 1 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv b-0 l-2))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l-1)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) (rec l-0)) l-1))
      (send (cat (exp (gen) (rec l-0)) l-1)))
    ((load priv-stor (cat pt (pv a l-1)))
      (stor priv-stor (cat pt-6 "nil")) (send l-1))
    ((recv (cat (exp (gen) y-0) (mul (rec l-0) (rec y-0))))
      (send (cat (exp (gen) y-0) (mul (rec l-0) (rec y-0)))))
    ((load priv-stor (cat pt (pv a l-1)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 a (exp (gen) zeta-0)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 a
            (hash (exp (gen) (mul alpha l-1))
              (exp (gen) (mul zeta-0 y-0))))))))
  (label 562)
  (parent 488)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 rndx) (alpha zeta-0 expt) (y-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-1) (y y) (alpha (mul l l-0 (rec l-1))) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l-0 (rec l-1))) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (rec l-1)) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) y-0) (mul (rec y-0) (rec l-1))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b)
    (priv-stor priv-stor-1) (lb l-1) (y y-0) (alpha alpha)
    (zeta zeta-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (6 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (10 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 3) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen x y y-0)
  (absent (x l) (x l-0) (y zeta) (y (mul l l-0 (rec l-1))) (y l-1)
    (y-0 alpha) (y-0 zeta-0) (y-0 l-1))
  (precur (9 0))
  (gen-st (pv a l-0) (pv b l) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta-0) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (6 0)) ((4 1) (3 0))
    ((4 1) (10 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 4 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv b-0 l-2))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l-0 (rec l-1))) l))
      (send (cat (exp (gen) (mul l-0 (rec l-1))) l)))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) (rec l-1)) l-0))
      (send (cat (exp (gen) (rec l-1)) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) y-0) (mul (rec y-0) (rec l-1))))
      (send (cat (exp (gen) y-0) (mul (rec y-0) (rec l-1)))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b (exp (gen) zeta-0)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b
            (hash (exp (gen) (mul alpha l-1))
              (exp (gen) (mul zeta-0 y-0))))))))
  (label 563)
  (parent 488)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 ignore-2 mesg) (na nb na-0 nb-0 data)
    (a b a-0 b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pt-8 pval)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn) (x y rndx)
    (zeta expt) (l l-0 rndx) (alpha zeta-0 expt) (l-1 y-0 l-2 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-1) (y y) (alpha (mul l l-0 (rec l-1))) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l-0 (rec l-1))) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (rec l-1)) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) y-0) (mul (rec l-1) (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b-0)
    (priv-stor priv-stor-2) (lb l-2) (y y-0) (alpha alpha)
    (zeta zeta-0))
  (defstrand ltx-gen 2 (ignore ignore-2) (self b-0)
    (priv-stor priv-stor-2) (l l-2))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (6 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0))
    ((10 3) (9 0)) ((11 1) (10 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1 l-2)
  (uniq-gen x y y-0)
  (absent (x l) (x l-0) (y zeta) (y (mul l l-0 (rec l-1))) (y l-1)
    (y-0 alpha) (y-0 zeta-0) (y-0 l-2))
  (precur (9 0))
  (gen-st (pv a l-0) (pv b l) (pv b l-1) (pv b-0 l-2))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta-0) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (6 0)) ((4 1) (3 0))
    ((11 1) (10 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv b-0 l-2))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l-0 (rec l-1))) l))
      (send (cat (exp (gen) (mul l-0 (rec l-1))) l)))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) (rec l-1)) l-0))
      (send (cat (exp (gen) (rec l-1)) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) y-0) (mul (rec l-1) (rec y-0))))
      (send (cat (exp (gen) y-0) (mul (rec l-1) (rec y-0)))))
    ((load priv-stor-2 (cat pt-7 (pv b-0 l-2)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0)))
      (recv (cat na-0 a-0 b-0 (exp (gen) zeta-0)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul alpha l-2))
              (exp (gen) (mul zeta-0 y-0)))))))
    ((load priv-stor-2 (cat pt-8 ignore-2))
      (stor priv-stor-2 (cat pt-7 (pv b-0 l-2)))))
  (label 564)
  (parent 488)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l rndx) (beta expt) (l-0 x-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-1) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-0) (y y) (alpha (mul l (rec l-0) l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul l (rec l-0))) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-1))
  (deflistener (cat (exp (gen) (rec l-0)) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) x-0) (mul (rec l-0) (rec x-0))))
  (defstrand init 3 (na na-0) (a b) (b b-0) (priv-stor priv-stor-0)
    (la l-1) (x x-0) (beta beta))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (6 0))
    ((2 1) (10 0)) ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 2) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen x y x-0)
  (absent (x l) (x l-1) (y zeta) (y (mul l (rec l-0) l-1)) (y l-0)
    (x-0 beta) (x-0 l-1))
  (precur (9 0))
  (gen-st (pv a l) (pv b l-0) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (6 0)) ((2 1) (10 0))
    ((4 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 2 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv a-0 l-2))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul l (rec l-0))) l-1))
      (send (cat (exp (gen) (mul l (rec l-0))) l-1)))
    ((load priv-stor-0 (cat pt-2 (pv b l-1)))
      (stor priv-stor-0 (cat pt-5 "nil")) (send l-1))
    ((recv (cat (exp (gen) (rec l-0)) l))
      (send (cat (exp (gen) (rec l-0)) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-6 "nil")) (send l))
    ((recv (cat (exp (gen) x-0) (mul (rec l-0) (rec x-0))))
      (send (cat (exp (gen) x-0) (mul (rec l-0) (rec x-0)))))
    ((load priv-stor-0 (cat pt-2 (pv b l-1)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 b b-0 (exp (gen) x-0)))))
  (label 565)
  (parent 489)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l rndx) (beta expt) (l-0 x-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-1) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-0) (y y) (alpha (mul l (rec l-0) l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (rec l-0)) l-1))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-1))
  (deflistener (cat (exp (gen) x-0) (mul (rec l-0) (rec x-0))))
  (defstrand init 3 (na na-0) (a a) (b b-0) (priv-stor priv-stor)
    (la l-1) (x x-0) (beta beta))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((1 1) (10 0))
    ((2 1) (6 0)) ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 2) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen x y x-0)
  (absent (x l) (x l-1) (y zeta) (y (mul l (rec l-0) l-1)) (y l-0)
    (x-0 beta) (x-0 l-1))
  (precur (9 0))
  (gen-st (pv a l-1) (pv b l) (pv b l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((1 1) (10 0)) ((2 1) (6 0))
    ((4 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 1 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv a-0 l-2))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l-1)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) (rec l-0)) l-1))
      (send (cat (exp (gen) (rec l-0)) l-1)))
    ((load priv-stor (cat pt (pv a l-1)))
      (stor priv-stor (cat pt-6 "nil")) (send l-1))
    ((recv (cat (exp (gen) x-0) (mul (rec l-0) (rec x-0))))
      (send (cat (exp (gen) x-0) (mul (rec l-0) (rec x-0)))))
    ((load priv-stor (cat pt (pv a l-1)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a b-0 (exp (gen) x-0)))))
  (label 566)
  (parent 489)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 rndx) (beta expt) (x-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-1) (y y) (alpha (mul l l-0 (rec l-1))) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l-0 (rec l-1))) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (rec l-1)) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) x-0) (mul (rec x-0) (rec l-1))))
  (defstrand init 3 (na na-0) (a b) (b b-0) (priv-stor priv-stor-1)
    (la l-1) (x x-0) (beta beta))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (6 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (10 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 2) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen x y x-0)
  (absent (x l) (x l-0) (y zeta) (y (mul l l-0 (rec l-1))) (y l-1)
    (x-0 beta) (x-0 l-1))
  (precur (9 0))
  (gen-st (pv a l-0) (pv b l) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (6 0)) ((4 1) (3 0))
    ((4 1) (10 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 4 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv a-0 l-2))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l-0 (rec l-1))) l))
      (send (cat (exp (gen) (mul l-0 (rec l-1))) l)))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) (rec l-1)) l-0))
      (send (cat (exp (gen) (rec l-1)) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) x-0) (mul (rec x-0) (rec l-1))))
      (send (cat (exp (gen) x-0) (mul (rec x-0) (rec l-1)))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 b b-0 (exp (gen) x-0)))))
  (label 567)
  (parent 489)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 ignore-2 mesg) (na nb na-0 data)
    (a b a-0 b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pt-8 pval)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn) (x y rndx)
    (zeta expt) (l l-0 rndx) (beta expt) (l-1 x-0 l-2 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-1) (y y) (alpha (mul l l-0 (rec l-1))) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l-0 (rec l-1))) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (rec l-1)) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) x-0) (mul (rec l-1) (rec x-0))))
  (defstrand init 3 (na na-0) (a a-0) (b b-0) (priv-stor priv-stor-2)
    (la l-2) (x x-0) (beta beta))
  (defstrand ltx-gen 2 (ignore ignore-2) (self a-0)
    (priv-stor priv-stor-2) (l l-2))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (6 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0))
    ((10 2) (9 0)) ((11 1) (10 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1 l-2)
  (uniq-gen x y x-0)
  (absent (x l) (x l-0) (y zeta) (y (mul l l-0 (rec l-1))) (y l-1)
    (x-0 beta) (x-0 l-2))
  (precur (9 0))
  (gen-st (pv a l-0) (pv b l) (pv b l-1) (pv a-0 l-2))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (6 0)) ((4 1) (3 0))
    ((11 1) (10 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv a-0 l-2))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l-0 (rec l-1))) l))
      (send (cat (exp (gen) (mul l-0 (rec l-1))) l)))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) (rec l-1)) l-0))
      (send (cat (exp (gen) (rec l-1)) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) x-0) (mul (rec l-1) (rec x-0))))
      (send (cat (exp (gen) x-0) (mul (rec l-1) (rec x-0)))))
    ((load priv-stor-2 (cat pt-7 (pv a-0 l-2)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a-0 b-0 (exp (gen) x-0))))
    ((load priv-stor-2 (cat pt-8 ignore-2))
      (stor priv-stor-2 (cat pt-7 (pv a-0 l-2)))))
  (label 568)
  (parent 489)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-1) (y y) (alpha (mul l l-0 (rec l-1))) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l-0 (rec l-1))) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (rec l-1)) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (gen) (rec l-1)))
  (deflistener l-1)
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (6 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (10 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 1) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y zeta) (y (mul l l-0 (rec l-1))) (y l-1))
  (precur (9 0))
  (gen-st (pv a l-0) (pv b l) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (6 0)) ((4 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener l-1) (rec l-1) (9 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l-0 (rec l-1))) l))
      (send (cat (exp (gen) (mul l-0 (rec l-1))) l)))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) (rec l-1)) l-0))
      (send (cat (exp (gen) (rec l-1)) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0))
    ((recv (cat (gen) (rec l-1))) (send (cat (gen) (rec l-1))))
    ((recv l-1) (send l-1)))
  (label 569)
  (parent 490)
  (unrealized (0 3) (10 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b self) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b self)
    (priv-stor priv-stor-1) (lb l-1) (y y) (alpha (mul l l-0 (rec l-1)))
    (zeta zeta))
  (deflistener (cat (exp (gen) (mul l-0 (rec l-1))) l))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (rec l-1)) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) l-1) (mul (rec l-1) (rec l-1))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener l-1)
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (7 0)) ((2 1) (5 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 1)) ((5 2) (4 0))
    ((6 1) (4 0)) ((7 2) (6 0)) ((8 1) (6 0)) ((9 1) (3 0))
    ((9 1) (10 0)) ((9 2) (8 0)) ((10 1) (8 0)))
  (non-orig (privk "sig" self))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y zeta) (y (mul l l-0 (rec l-1))) (y l-1))
  (precur (8 0))
  (gen-st (pv a l-0) (pv self l) (pv self l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a self))
  (leads-to ((1 1) (0 0)) ((1 1) (7 0)) ((2 1) (5 0)) ((9 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener l-1) (mul (rec l-1) (rec l-1))
    (8 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na a self (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-1 (cat pt-6 (pv self l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a self (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((recv (cat (exp (gen) (mul l-0 (rec l-1))) l))
      (send (cat (exp (gen) (mul l-0 (rec l-1))) l)))
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) (rec l-1)) l-0))
      (send (cat (exp (gen) (rec l-1)) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-4 "nil")) (send l-0))
    ((recv (cat (exp (gen) l-1) (mul (rec l-1) (rec l-1))))
      (send (cat (exp (gen) l-1) (mul (rec l-1) (rec l-1)))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))) ((recv l-1) (send l-1)))
  (label 570)
  (parent 494)
  (unrealized (0 3) (10 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) (mul l-0 (rec lb))) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (precedes ((1 1) (0 0)) ((1 1) (5 0)) ((2 2) (0 1)) ((2 2) (6 0))
    ((3 1) (7 0)) ((4 1) (0 3)) ((5 2) (4 0)) ((6 1) (4 0))
    ((7 2) (6 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) y) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (5 0)) ((3 1) (7 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((recv (cat (exp (gen) (mul l-0 (rec lb))) l))
      (send (cat (exp (gen) (mul l-0 (rec lb))) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) lb)) (send (cat (exp (gen) l-0) lb)))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send lb)))
  (label 571)
  (parent 496)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb lb) (y y) (alpha (mul l l-0 (rec lb))) (zeta (mul x w)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) (mul l-0 (rec lb))) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((2 2) (7 0)) ((3 3) (9 0)) ((4 1) (3 0)) ((4 1) (8 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec lb))) (y lb) (y (mul x w)))
  (precur (9 0))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) (mul w y)) (gen))
    (neq (exp (gen) (mul x w)) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 10 3 resp 4) (exp (gen) y-0) (9 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec lb))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) (mul x w))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((recv (cat (exp (gen) (mul l-0 (rec lb))) l))
      (send (cat (exp (gen) (mul l-0 (rec lb))) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) lb)) (send (cat (exp (gen) l-0) lb)))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send lb))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 572)
  (parent 497)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 rndx) (alpha zeta-0 expt) (y-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-1) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-0) (y y) (alpha (mul l (rec l-0) l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) y-0) (mul (rec y-0) l-1)))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b)
    (priv-stor priv-stor-0) (lb l-1) (y y-0) (alpha alpha)
    (zeta zeta-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (10 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 3) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen x y y-0)
  (absent (x l) (x l-1) (y zeta) (y (mul l (rec l-0) l-1)) (y l-0)
    (y-0 alpha) (y-0 zeta-0) (y-0 l-1))
  (precur (9 0))
  (gen-st (pv a l) (pv b l-0) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta-0) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (10 0)) ((4 1) (3 0))
    ((4 1) (8 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 2 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv b-0 l-2))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) y-0) (mul (rec y-0) l-1)))
      (send (cat (exp (gen) y-0) (mul (rec y-0) l-1))))
    ((load priv-stor-0 (cat pt-2 (pv b l-1)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b (exp (gen) zeta-0)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b
            (hash (exp (gen) (mul alpha l-1))
              (exp (gen) (mul zeta-0 y-0))))))))
  (label 573)
  (parent 498)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l rndx) (alpha zeta-0 expt) (l-0 y-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-1) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l) (y y) (alpha (mul (rec l) l-0 l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul (rec l) l-0)) l-1))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-1))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b a)
    (priv-stor priv-stor) (lb l-1) (y y-0) (alpha alpha) (zeta zeta-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((1 1) (10 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 3) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen x y y-0)
  (absent (x l-0) (x l-1) (y zeta) (y (mul (rec l) l-0 l-1)) (y l)
    (y-0 alpha) (y-0 zeta-0) (y-0 l-1))
  (precur (9 0))
  (gen-st (pv a l-1) (pv b l))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta-0) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((1 1) (10 0)) ((4 1) (3 0))
    ((4 1) (8 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 1 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv b-0 l-2))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l-1)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul (rec l) l-0)) l-1))
      (send (cat (exp (gen) (mul (rec l) l-0)) l-1)))
    ((load priv-stor (cat pt (pv a l-1)))
      (stor priv-stor (cat pt-5 "nil")) (send l-1))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l))
    ((recv (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-0 (rec y-0)))))
    ((load priv-stor (cat pt (pv a l-1)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 a (exp (gen) zeta-0)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 a
            (hash (exp (gen) (mul alpha l-1))
              (exp (gen) (mul zeta-0 y-0))))))))
  (label 574)
  (parent 498)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l rndx) (alpha zeta-0 expt) (l-0 y-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-1) (y y) (alpha (mul l l-0 (rec l-1))) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l-0 (rec l-1))) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b)
    (priv-stor priv-stor-1) (lb l-1) (y y-0) (alpha alpha)
    (zeta zeta-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0)) ((4 1) (10 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 3) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen x y y-0)
  (absent (x l) (x l-0) (y zeta) (y (mul l l-0 (rec l-1))) (y l-1)
    (y-0 alpha) (y-0 zeta-0) (y-0 l-1))
  (precur (9 0))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta-0) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0))
    ((4 1) (10 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 4 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv b-0 l-2))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l-0 (rec l-1))) l))
      (send (cat (exp (gen) (mul l-0 (rec l-1))) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) l-1)) (send (cat (exp (gen) l-0) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-1))
    ((recv (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-0 (rec y-0)))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b (exp (gen) zeta-0)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b
            (hash (exp (gen) (mul alpha l-1))
              (exp (gen) (mul zeta-0 y-0))))))))
  (label 575)
  (parent 498)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 ignore-2 mesg) (na nb na-0 nb-0 data)
    (a b a-0 b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pt-8 pval)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn) (x y rndx)
    (zeta expt) (l l-0 rndx) (alpha zeta-0 expt) (l-1 y-0 l-2 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-1) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-0) (y y) (alpha (mul l (rec l-0) l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) y-0) (mul l-1 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b-0)
    (priv-stor priv-stor-2) (lb l-2) (y y-0) (alpha alpha)
    (zeta zeta-0))
  (defstrand ltx-gen 2 (ignore ignore-2) (self b-0)
    (priv-stor priv-stor-2) (l l-2))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0))
    ((10 3) (9 0)) ((11 1) (10 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1 l-2)
  (uniq-gen x y y-0)
  (absent (x l) (x l-1) (y zeta) (y (mul l (rec l-0) l-1)) (y l-0)
    (y-0 alpha) (y-0 zeta-0) (y-0 l-2))
  (precur (9 0))
  (gen-st (pv a l) (pv b l-0) (pv b-0 l-2))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta-0) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0))
    ((11 1) (10 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv b-0 l-2))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) y-0) (mul l-1 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-1 (rec y-0)))))
    ((load priv-stor-2 (cat pt-7 (pv b-0 l-2)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0)))
      (recv (cat na-0 a-0 b-0 (exp (gen) zeta-0)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul alpha l-2))
              (exp (gen) (mul zeta-0 y-0)))))))
    ((load priv-stor-2 (cat pt-8 ignore-2))
      (stor priv-stor-2 (cat pt-7 (pv b-0 l-2)))))
  (label 576)
  (parent 498)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 rndx) (beta expt) (x-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-1) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-0) (y y) (alpha (mul l (rec l-0) l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) x-0) (mul (rec x-0) l-1)))
  (defstrand init 3 (na na-0) (a b) (b b-0) (priv-stor priv-stor-0)
    (la l-1) (x x-0) (beta beta))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (10 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 2) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen x y x-0)
  (absent (x l) (x l-1) (y zeta) (y (mul l (rec l-0) l-1)) (y l-0)
    (x-0 beta) (x-0 l-1))
  (precur (9 0))
  (gen-st (pv a l) (pv b l-0) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (10 0)) ((4 1) (3 0))
    ((4 1) (8 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 2 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv a-0 l-2))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) x-0) (mul (rec x-0) l-1)))
      (send (cat (exp (gen) x-0) (mul (rec x-0) l-1))))
    ((load priv-stor-0 (cat pt-2 (pv b l-1)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 b b-0 (exp (gen) x-0)))))
  (label 577)
  (parent 499)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l rndx) (beta expt) (l-0 x-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-1) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l) (y y) (alpha (mul (rec l) l-0 l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul (rec l) l-0)) l-1))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-1))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
  (defstrand init 3 (na na-0) (a a) (b b-0) (priv-stor priv-stor)
    (la l-1) (x x-0) (beta beta))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((1 1) (10 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 2) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen x y x-0)
  (absent (x l-0) (x l-1) (y zeta) (y (mul (rec l) l-0 l-1)) (y l)
    (x-0 beta) (x-0 l-1))
  (precur (9 0))
  (gen-st (pv a l-1) (pv b l))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((1 1) (10 0)) ((4 1) (3 0))
    ((4 1) (8 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 1 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv a-0 l-2))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l-1)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul (rec l) l-0)) l-1))
      (send (cat (exp (gen) (mul (rec l) l-0)) l-1)))
    ((load priv-stor (cat pt (pv a l-1)))
      (stor priv-stor (cat pt-5 "nil")) (send l-1))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l))
    ((recv (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-0 (rec x-0)))))
    ((load priv-stor (cat pt (pv a l-1)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a b-0 (exp (gen) x-0)))))
  (label 578)
  (parent 499)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l rndx) (beta expt) (l-0 x-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-1) (y y) (alpha (mul l l-0 (rec l-1))) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l-0 (rec l-1))) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
  (defstrand init 3 (na na-0) (a b) (b b-0) (priv-stor priv-stor-1)
    (la l-1) (x x-0) (beta beta))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0)) ((4 1) (10 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 2) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen x y x-0)
  (absent (x l) (x l-0) (y zeta) (y (mul l l-0 (rec l-1))) (y l-1)
    (x-0 beta) (x-0 l-1))
  (precur (9 0))
  (gen-st (pv a l) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0))
    ((4 1) (10 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 4 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv a-0 l-2))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l-0 (rec l-1))) l))
      (send (cat (exp (gen) (mul l-0 (rec l-1))) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) l-1)) (send (cat (exp (gen) l-0) l-1)))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-1))
    ((recv (cat (exp (gen) x-0) (mul l-0 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-0 (rec x-0)))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 b b-0 (exp (gen) x-0)))))
  (label 579)
  (parent 499)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 ignore-2 mesg) (na nb na-0 data)
    (a b a-0 b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pt-8 pval)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn) (x y rndx)
    (zeta expt) (l l-0 rndx) (beta expt) (l-1 x-0 l-2 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-1) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-0) (y y) (alpha (mul l (rec l-0) l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
  (defstrand init 3 (na na-0) (a a-0) (b b-0) (priv-stor priv-stor-2)
    (la l-2) (x x-0) (beta beta))
  (defstrand ltx-gen 2 (ignore ignore-2) (self a-0)
    (priv-stor priv-stor-2) (l l-2))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0))
    ((10 2) (9 0)) ((11 1) (10 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1 l-2)
  (uniq-gen x y x-0)
  (absent (x l) (x l-1) (y zeta) (y (mul l (rec l-0) l-1)) (y l-0)
    (x-0 beta) (x-0 l-2))
  (precur (9 0))
  (gen-st (pv a l) (pv b l-0) (pv a-0 l-2))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0))
    ((11 1) (10 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv a-0 l-2))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) x-0) (mul l-1 (rec x-0))))
      (send (cat (exp (gen) x-0) (mul l-1 (rec x-0)))))
    ((load priv-stor-2 (cat pt-7 (pv a-0 l-2)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a-0 b-0 (exp (gen) x-0))))
    ((load priv-stor-2 (cat pt-8 ignore-2))
      (stor priv-stor-2 (cat pt-7 (pv a-0 l-2)))))
  (label 580)
  (parent 499)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-1) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-0) (y y) (alpha (mul l (rec l-0) l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (gen) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (10 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 2) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-1) (y zeta) (y (mul l (rec l-0) l-1)) (y l-0))
  (precur (9 0))
  (gen-st (pv a l) (pv b l-0) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (10 0)) ((4 1) (3 0))
    ((4 1) (8 0)))
  (rule assume-init-0 assume-resp-0 gen-st-ltx-disclose-0
    trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0
    trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-disclose 3) l-1 (9 0)
    (ch-msg priv-stor-0 (cat pt-2 (pv b l-1))))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (gen) l-1)) (send (cat (gen) l-1)))
    ((load priv-stor-0 (cat pt-2 (pv b l-1)))
      (stor priv-stor-0 (cat pt-7 "nil")) (send l-1)))
  (label 581)
  (parent 500)
  (unrealized (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb lb) (y y) (alpha (mul l l-0 (rec lb))) (zeta x))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) (mul l-0 (rec lb))) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) l-0) (one)))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((2 2) (9 0)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec lb))) (y lb) (y x))
  (precur (9 0))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) y) (gen)) (neq (exp (gen) x) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 10 3 resp 4) (exp (gen) y-0) (0 3))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec lb))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((recv (cat (exp (gen) (mul l-0 (rec lb))) l))
      (send (cat (exp (gen) (mul l-0 (rec lb))) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) lb)) (send (cat (exp (gen) l-0) lb)))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one)))))
  (label 582)
  (parent 502)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-1) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-0) (y y) (alpha (mul l (rec l-0) l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) l-1) (one)))
  (deflistener (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((2 2) (9 0)) ((3 3) (10 0)) ((4 1) (3 0)) ((4 1) (8 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-1) (y zeta) (y (mul l (rec l-0) l-1)) (y l-0))
  (precur (9 0) (10 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
    (exp (gen) (mul (rec x) y zeta)) (0 3))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) l-1) (one)))
      (send (cat (exp (gen) l-1) (one))))
    ((recv (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
      (send (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))))
  (label 583)
  (parent 502)
  (unrealized (10 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l rndx) (alpha zeta-0 expt) (l-0 y-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-1) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-0) (y y) (alpha (mul l (rec l-0) l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (rec l-0)) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-1))
  (deflistener (cat (exp (gen) y-0) (mul (rec l-0) (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b)
    (priv-stor priv-stor-0) (lb l-1) (y y-0) (alpha alpha)
    (zeta zeta-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (8 0))
    ((2 1) (10 0)) ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 3) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen x y y-0)
  (absent (x l) (x l-1) (y zeta) (y (mul l (rec l-0) l-1)) (y l-0)
    (y-0 alpha) (y-0 zeta-0) (y-0 l-1))
  (precur (9 0))
  (gen-st (pv a l) (pv b l-0) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta-0) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (8 0)) ((2 1) (10 0))
    ((4 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 2 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv b-0 l-2))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) (rec l-0)) l-1))
      (send (cat (exp (gen) (rec l-0)) l-1)))
    ((load priv-stor-0 (cat pt-2 (pv b l-1)))
      (stor priv-stor-0 (cat pt-6 "nil")) (send l-1))
    ((recv (cat (exp (gen) y-0) (mul (rec l-0) (rec y-0))))
      (send (cat (exp (gen) y-0) (mul (rec l-0) (rec y-0)))))
    ((load priv-stor-0 (cat pt-2 (pv b l-1)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b (exp (gen) zeta-0)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b
            (hash (exp (gen) (mul alpha l-1))
              (exp (gen) (mul zeta-0 y-0))))))))
  (label 584)
  (parent 506)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l rndx) (alpha zeta-0 expt) (l-0 y-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-1) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-0) (y y) (alpha (mul l (rec l-0) l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul l (rec l-0))) l-1))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-1))
  (deflistener (cat (exp (gen) (rec l-0)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) y-0) (mul (rec l-0) (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b a)
    (priv-stor priv-stor) (lb l-1) (y y-0) (alpha alpha) (zeta zeta-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((1 1) (10 0))
    ((2 1) (8 0)) ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 3) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen x y y-0)
  (absent (x l) (x l-1) (y zeta) (y (mul l (rec l-0) l-1)) (y l-0)
    (y-0 alpha) (y-0 zeta-0) (y-0 l-1))
  (precur (9 0))
  (gen-st (pv a l-1) (pv b l) (pv b l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta-0) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((1 1) (10 0)) ((2 1) (8 0))
    ((4 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 1 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv b-0 l-2))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l-1)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul l (rec l-0))) l-1))
      (send (cat (exp (gen) (mul l (rec l-0))) l-1)))
    ((load priv-stor (cat pt (pv a l-1)))
      (stor priv-stor (cat pt-5 "nil")) (send l-1))
    ((recv (cat (exp (gen) (rec l-0)) l))
      (send (cat (exp (gen) (rec l-0)) l)))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-6 "nil")) (send l))
    ((recv (cat (exp (gen) y-0) (mul (rec l-0) (rec y-0))))
      (send (cat (exp (gen) y-0) (mul (rec l-0) (rec y-0)))))
    ((load priv-stor (cat pt (pv a l-1)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 a (exp (gen) zeta-0)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 a
            (hash (exp (gen) (mul alpha l-1))
              (exp (gen) (mul zeta-0 y-0))))))))
  (label 585)
  (parent 506)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 rndx) (alpha zeta-0 expt) (y-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-1) (y y) (alpha (mul l l-0 (rec l-1))) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l-0 (rec l-1))) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (rec l-1)) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) y-0) (mul (rec y-0) (rec l-1))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b)
    (priv-stor priv-stor-1) (lb l-1) (y y-0) (alpha alpha)
    (zeta zeta-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (8 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (10 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 3) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1)
  (uniq-gen x y y-0)
  (absent (x l) (x l-0) (y zeta) (y (mul l l-0 (rec l-1))) (y l-1)
    (y-0 alpha) (y-0 zeta-0) (y-0 l-1))
  (precur (9 0))
  (gen-st (pv a l) (pv b l-0) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta-0) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (8 0)) ((4 1) (3 0))
    ((4 1) (10 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 4 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv b-0 l-2))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l-0 (rec l-1))) l))
      (send (cat (exp (gen) (mul l-0 (rec l-1))) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) (rec l-1)) l-0))
      (send (cat (exp (gen) (rec l-1)) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) y-0) (mul (rec y-0) (rec l-1))))
      (send (cat (exp (gen) y-0) (mul (rec y-0) (rec l-1)))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b (exp (gen) zeta-0)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b
            (hash (exp (gen) (mul alpha l-1))
              (exp (gen) (mul zeta-0 y-0))))))))
  (label 586)
  (parent 506)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 ignore-2 mesg) (na nb na-0 nb-0 data)
    (a b a-0 b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pt-8 pval)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn) (x y rndx)
    (zeta expt) (l l-0 rndx) (alpha zeta-0 expt) (l-1 y-0 l-2 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-1) (y y) (alpha (mul l l-0 (rec l-1))) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l-0 (rec l-1))) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (rec l-1)) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) y-0) (mul (rec l-1) (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b-0)
    (priv-stor priv-stor-2) (lb l-2) (y y-0) (alpha alpha)
    (zeta zeta-0))
  (defstrand ltx-gen 2 (ignore ignore-2) (self b-0)
    (priv-stor priv-stor-2) (l l-2))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (8 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0))
    ((10 3) (9 0)) ((11 1) (10 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb nb-0 l l-0 l-1 l-2)
  (uniq-gen x y y-0)
  (absent (x l) (x l-0) (y zeta) (y (mul l l-0 (rec l-1))) (y l-1)
    (y-0 alpha) (y-0 zeta-0) (y-0 l-2))
  (precur (9 0))
  (gen-st (pv a l) (pv b l-0) (pv b l-1) (pv b-0 l-2))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta-0) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (8 0)) ((4 1) (3 0))
    ((11 1) (10 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv b-0 l-2))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l-0 (rec l-1))) l))
      (send (cat (exp (gen) (mul l-0 (rec l-1))) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) (rec l-1)) l-0))
      (send (cat (exp (gen) (rec l-1)) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) y-0) (mul (rec l-1) (rec y-0))))
      (send (cat (exp (gen) y-0) (mul (rec l-1) (rec y-0)))))
    ((load priv-stor-2 (cat pt-7 (pv b-0 l-2)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0)))
      (recv (cat na-0 a-0 b-0 (exp (gen) zeta-0)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul alpha l-2))
              (exp (gen) (mul zeta-0 y-0)))))))
    ((load priv-stor-2 (cat pt-8 ignore-2))
      (stor priv-stor-2 (cat pt-7 (pv b-0 l-2)))))
  (label 587)
  (parent 506)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l rndx) (beta expt) (l-0 x-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-1) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-0) (y y) (alpha (mul l (rec l-0) l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (rec l-0)) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-1))
  (deflistener (cat (exp (gen) x-0) (mul (rec l-0) (rec x-0))))
  (defstrand init 3 (na na-0) (a b) (b b-0) (priv-stor priv-stor-0)
    (la l-1) (x x-0) (beta beta))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (8 0))
    ((2 1) (10 0)) ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 2) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen x y x-0)
  (absent (x l) (x l-1) (y zeta) (y (mul l (rec l-0) l-1)) (y l-0)
    (x-0 beta) (x-0 l-1))
  (precur (9 0))
  (gen-st (pv a l) (pv b l-0) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (8 0)) ((2 1) (10 0))
    ((4 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 2 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv a-0 l-2))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) (rec l-0)) l-1))
      (send (cat (exp (gen) (rec l-0)) l-1)))
    ((load priv-stor-0 (cat pt-2 (pv b l-1)))
      (stor priv-stor-0 (cat pt-6 "nil")) (send l-1))
    ((recv (cat (exp (gen) x-0) (mul (rec l-0) (rec x-0))))
      (send (cat (exp (gen) x-0) (mul (rec l-0) (rec x-0)))))
    ((load priv-stor-0 (cat pt-2 (pv b l-1)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 b b-0 (exp (gen) x-0)))))
  (label 588)
  (parent 507)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l rndx) (beta expt) (l-0 x-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-1) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-0) (y y) (alpha (mul l (rec l-0) l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul l (rec l-0))) l-1))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-1))
  (deflistener (cat (exp (gen) (rec l-0)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) x-0) (mul (rec l-0) (rec x-0))))
  (defstrand init 3 (na na-0) (a a) (b b-0) (priv-stor priv-stor)
    (la l-1) (x x-0) (beta beta))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((1 1) (10 0))
    ((2 1) (8 0)) ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 2) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen x y x-0)
  (absent (x l) (x l-1) (y zeta) (y (mul l (rec l-0) l-1)) (y l-0)
    (x-0 beta) (x-0 l-1))
  (precur (9 0))
  (gen-st (pv a l-1) (pv b l) (pv b l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((1 1) (10 0)) ((2 1) (8 0))
    ((4 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 1 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv a-0 l-2))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l-1)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul l (rec l-0))) l-1))
      (send (cat (exp (gen) (mul l (rec l-0))) l-1)))
    ((load priv-stor (cat pt (pv a l-1)))
      (stor priv-stor (cat pt-5 "nil")) (send l-1))
    ((recv (cat (exp (gen) (rec l-0)) l))
      (send (cat (exp (gen) (rec l-0)) l)))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-6 "nil")) (send l))
    ((recv (cat (exp (gen) x-0) (mul (rec l-0) (rec x-0))))
      (send (cat (exp (gen) x-0) (mul (rec l-0) (rec x-0)))))
    ((load priv-stor (cat pt (pv a l-1)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a b-0 (exp (gen) x-0)))))
  (label 589)
  (parent 507)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 rndx) (beta expt) (x-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-1) (y y) (alpha (mul l l-0 (rec l-1))) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l-0 (rec l-1))) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (rec l-1)) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) x-0) (mul (rec x-0) (rec l-1))))
  (defstrand init 3 (na na-0) (a b) (b b-0) (priv-stor priv-stor-1)
    (la l-1) (x x-0) (beta beta))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (8 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (10 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 2) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1)
  (uniq-gen x y x-0)
  (absent (x l) (x l-0) (y zeta) (y (mul l l-0 (rec l-1))) (y l-1)
    (x-0 beta) (x-0 l-1))
  (precur (9 0))
  (gen-st (pv a l) (pv b l-0) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (8 0)) ((4 1) (3 0))
    ((4 1) (10 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 11 4 ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv a-0 l-2))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l-0 (rec l-1))) l))
      (send (cat (exp (gen) (mul l-0 (rec l-1))) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) (rec l-1)) l-0))
      (send (cat (exp (gen) (rec l-1)) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) x-0) (mul (rec x-0) (rec l-1))))
      (send (cat (exp (gen) x-0) (mul (rec x-0) (rec l-1)))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 b b-0 (exp (gen) x-0)))))
  (label 590)
  (parent 507)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 ignore-2 mesg) (na nb na-0 data)
    (a b a-0 b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pt-8 pval)
    (priv-stor priv-stor-0 priv-stor-1 priv-stor-2 locn) (x y rndx)
    (zeta expt) (l l-0 rndx) (beta expt) (l-1 x-0 l-2 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-1) (y y) (alpha (mul l l-0 (rec l-1))) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l-0 (rec l-1))) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (rec l-1)) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) x-0) (mul (rec l-1) (rec x-0))))
  (defstrand init 3 (na na-0) (a a-0) (b b-0) (priv-stor priv-stor-2)
    (la l-2) (x x-0) (beta beta))
  (defstrand ltx-gen 2 (ignore ignore-2) (self a-0)
    (priv-stor priv-stor-2) (l l-2))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (8 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((5 1) (3 1))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (7 0))
    ((10 2) (9 0)) ((11 1) (10 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb na-0 l l-0 l-1 l-2)
  (uniq-gen x y x-0)
  (absent (x l) (x l-0) (y zeta) (y (mul l l-0 (rec l-1))) (y l-1)
    (x-0 beta) (x-0 l-2))
  (precur (9 0))
  (gen-st (pv a l) (pv b l-0) (pv b l-1) (pv a-0 l-2))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (8 0)) ((4 1) (3 0))
    ((11 1) (10 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-2 (cat pt-7 (pv a-0 l-2))) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l-0 (rec l-1))) l))
      (send (cat (exp (gen) (mul l-0 (rec l-1))) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) (rec l-1)) l-0))
      (send (cat (exp (gen) (rec l-1)) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) x-0) (mul (rec l-1) (rec x-0))))
      (send (cat (exp (gen) x-0) (mul (rec l-1) (rec x-0)))))
    ((load priv-stor-2 (cat pt-7 (pv a-0 l-2)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a-0 b-0 (exp (gen) x-0))))
    ((load priv-stor-2 (cat pt-8 ignore-2))
      (stor priv-stor-2 (cat pt-7 (pv a-0 l-2)))))
  (label 591)
  (parent 507)
  (unrealized (0 3) (7 0) (9 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-1) (y y) (alpha (mul l l-0 (rec l-1))) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l-0 (rec l-1))) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (rec l-1)) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (gen) (rec l-1)))
  (deflistener l-1)
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (8 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (10 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 1) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y zeta) (y (mul l l-0 (rec l-1))) (y l-1))
  (precur (9 0))
  (gen-st (pv a l) (pv b l-0) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (8 0)) ((4 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener l-1) (rec l-1) (9 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l-0 (rec l-1))) l))
      (send (cat (exp (gen) (mul l-0 (rec l-1))) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) (rec l-1)) l-0))
      (send (cat (exp (gen) (rec l-1)) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (gen) (rec l-1))) (send (cat (gen) (rec l-1))))
    ((recv l-1) (send l-1)))
  (label 592)
  (parent 508)
  (unrealized (0 3) (10 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b self) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b self)
    (priv-stor priv-stor-1) (lb l-1) (y y) (alpha (mul l l-0 (rec l-1)))
    (zeta zeta))
  (deflistener (cat (exp (gen) (mul l-0 (rec l-1))) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (rec l-1)) l-0))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l-1) (mul (rec l-1) (rec l-1))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener l-1)
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (5 0)) ((2 1) (7 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 1)) ((5 2) (4 0))
    ((6 1) (4 0)) ((7 2) (6 0)) ((8 1) (6 0)) ((9 1) (3 0))
    ((9 1) (10 0)) ((9 2) (8 0)) ((10 1) (8 0)))
  (non-orig (privk "sig" self))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y zeta) (y (mul l l-0 (rec l-1))) (y l-1))
  (precur (8 0))
  (gen-st (pv a l) (pv self l-0) (pv self l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a self))
  (leads-to ((1 1) (0 0)) ((1 1) (5 0)) ((2 1) (7 0)) ((9 1) (3 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener l-1) (mul (rec l-1) (rec l-1))
    (8 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (send (cat na a self (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-1 (cat pt-6 (pv self l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a self (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((recv (cat (exp (gen) (mul l-0 (rec l-1))) l))
      (send (cat (exp (gen) (mul l-0 (rec l-1))) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) (rec l-1)) l-0))
      (send (cat (exp (gen) (rec l-1)) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (stor priv-stor-0 (cat pt-4 "nil")) (send l-0))
    ((recv (cat (exp (gen) l-1) (mul (rec l-1) (rec l-1))))
      (send (cat (exp (gen) l-1) (mul (rec l-1) (rec l-1)))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))) ((recv l-1) (send l-1)))
  (label 593)
  (parent 512)
  (unrealized (0 3) (10 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (upsilon expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (precedes ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (4 0)) ((2 2) (0 1))
    ((3 1) (0 3)) ((4 2) (3 0)) ((5 1) (3 0)) ((6 2) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (5 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (4 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-4 "nil")) (send l-0)))
  (label 594)
  (parent 515)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (la l-0) (x x) (beta l) (upsilon upsilon))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((1 1) (2 0)) ((1 2) (0 1)) ((2 2) (0 3)) ((3 1) (0 3))
    ((4 1) (0 0)) ((4 2) (3 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (3 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (neq (exp (gen) upsilon) (gen)) (neq self b))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (2 0))
  (traces
    ((load priv-stor-0 (cat pt-3 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-1 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-3 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 595)
  (parent 516)
  (seen 514)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (upsilon expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (precedes ((1 1) (0 0)) ((1 1) (4 0)) ((2 1) (6 0)) ((2 2) (0 1))
    ((3 1) (0 3)) ((4 2) (3 0)) ((5 1) (3 0)) ((6 2) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (5 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (4 0)) ((2 1) (6 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-4 "nil")) (send l-0)))
  (label 596)
  (parent 518)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (precedes ((1 1) (0 0)) ((1 1) (3 0)) ((2 2) (0 1)) ((2 2) (4 0))
    ((3 2) (0 3)) ((4 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (4 0))
  (gen-st (pv a l))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (3 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one)))))
  (label 597)
  (parent 519)
  (seen 517)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn)
    (lb l x rndx) (w expt) (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta lb) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (precedes ((1 1) (0 0)) ((1 1) (3 0)) ((2 2) (0 1)) ((3 2) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb lb l)
  (uniq-gen x)
  (absent (x lb) (x l))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (3 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) lb) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul lb l)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b lb)))
      (send
        (sig (body b (exp (gen) lb) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l)))
  (label 598)
  (parent 521)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-0) (x x) (beta l) (upsilon y))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-0))
  (precedes ((1 1) (5 0)) ((1 2) (0 1)) ((2 1) (3 0)) ((3 2) (0 3))
    ((4 1) (0 3)) ((5 2) (4 0)) ((6 1) (0 0)) ((6 2) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv b l) (pv b lb) (pv self l-0))
  (facts (neq (exp (gen) y) (gen)) (neq self b))
  (leads-to ((1 1) (5 0)) ((2 1) (3 0)) ((6 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor-1 (cat pt-6 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b lb))))
    ((load priv-stor-0 (cat pt-1 (pv b lb)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-4 "nil")) (send l))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 599)
  (parent 522)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-0) (x x) (beta l) (upsilon (mul w y)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (exp (gen) (mul l l-0)) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (8 0)) ((1 1) (6 0)) ((1 2) (0 1)) ((2 1) (4 0))
    ((3 1) (8 0)) ((4 2) (3 0)) ((5 1) (3 0)) ((6 2) (5 0))
    ((7 1) (0 0)) ((7 2) (5 0)) ((8 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (8 0))
  (gen-st (pv b l) (pv b lb) (pv self l-0))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq self b))
  (leads-to ((1 1) (6 0)) ((2 1) (4 0)) ((7 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (2 0))
  (traces
    ((load priv-stor-1 (cat pt-6 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b lb))))
    ((recv (cat (exp (gen) (mul l l-0)) lb))
      (send (cat (exp (gen) (mul l l-0)) lb)))
    ((load priv-stor-0 (cat pt-1 (pv b lb)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-4 "nil")) (send l))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 600)
  (parent 523)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb lb) (y y) (alpha (mul l l-0 (rec lb))) (zeta x))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) (mul l l-0)) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (10 0)) ((2 1) (8 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 2) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec lb))) (y lb) (y x))
  (precur (9 0))
  (gen-st (pv a l-0) (pv b l) (pv b lb))
  (facts (neq (exp (gen) y) (gen)) (neq (exp (gen) x) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (10 0)) ((2 1) (8 0)) ((4 1) (3 0))
    ((4 1) (6 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 11 3 resp 4) (exp (gen) y-0) (0 3))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec lb))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((recv (cat (exp (gen) (mul l l-0)) lb))
      (send (cat (exp (gen) (mul l l-0)) lb)))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-6 "nil")) (send l))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-7 "nil")) (send l-0)))
  (label 601)
  (parent 532)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-1) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l) (y y) (alpha (mul (rec l) l-0 l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (gen) l-1))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-1))
  (deflistener (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (10 0)) ((2 1) (8 0))
    ((2 2) (0 1)) ((3 3) (11 0)) ((4 1) (3 0)) ((4 1) (6 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 2) (9 0)) ((11 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l-0) (x l-1) (y zeta) (y (mul (rec l) l-0 l-1)) (y l))
  (precur (9 0) (11 0))
  (gen-st (pv a l-1) (pv b l) (pv b l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (10 0)) ((2 1) (8 0)) ((4 1) (3 0))
    ((4 1) (6 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
    (exp (gen) (mul (rec x) y zeta)) (0 3))
  (traces
    ((load priv-stor (cat pt (pv a l-1)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (gen) l-1)) (send (cat (gen) l-1)))
    ((load priv-stor (cat pt (pv a l-1)))
      (stor priv-stor (cat pt-7 "nil")) (send l-1))
    ((recv (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
      (send (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))))
  (label 602)
  (parent 532)
  (unrealized (11 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-0) (x x) (beta l) (upsilon y))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (exp (gen) (mul l l-0)) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-0))
  (precedes ((1 1) (6 0)) ((1 2) (0 1)) ((2 1) (4 0)) ((3 1) (0 3))
    ((4 2) (3 0)) ((5 1) (3 0)) ((6 2) (5 0)) ((7 1) (5 0))
    ((8 1) (0 0)) ((8 2) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (7 0))
  (gen-st (pv b l) (pv b lb) (pv self l-0))
  (facts (neq (exp (gen) y) (gen)) (neq self b))
  (leads-to ((1 1) (6 0)) ((2 1) (4 0)) ((8 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (2 0))
  (traces
    ((load priv-stor-1 (cat pt-6 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b lb))))
    ((recv (cat (exp (gen) (mul l l-0)) lb))
      (send (cat (exp (gen) (mul l l-0)) lb)))
    ((load priv-stor-0 (cat pt-1 (pv b lb)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-4 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 603)
  (parent 533)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-0) (x x) (beta l) (upsilon (mul w y)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (lb lb) (y y) (alpha (mul l l-0 (rec lb)))
    (zeta (mul x w)))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (exp (gen) (mul l l-0)) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (2 2)) ((1 1) (7 0)) ((1 2) (0 1)) ((2 3) (10 0))
    ((3 1) (2 0)) ((3 1) (5 0)) ((4 1) (2 1)) ((5 2) (4 0))
    ((6 1) (4 0)) ((7 2) (6 0)) ((8 1) (6 0)) ((9 1) (0 0))
    ((9 2) (8 0)) ((10 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec lb))) (y lb) (y (mul x w)))
  (precur (8 0) (10 0))
  (gen-st (pv b l) (pv b lb) (pv self l-0))
  (facts (neq (exp (gen) (mul w y)) (gen))
    (neq (exp (gen) (mul x w)) (gen)) (neq self b))
  (leads-to ((1 1) (7 0)) ((3 1) (2 0)) ((3 1) (5 0)) ((9 1) (0 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 11 2 resp 4) (exp (gen) y-0) (10 0))
  (traces
    ((load priv-stor-1 (cat pt-6 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-1 (pv b lb)))
      (recv
        (sig
          (body self (exp (gen) (mul l l-0 (rec lb))) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul x w))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y)))))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b lb))))
    ((recv (cat (exp (gen) (mul l l-0)) lb))
      (send (cat (exp (gen) (mul l l-0)) lb)))
    ((load priv-stor-0 (cat pt-1 (pv b lb)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-4 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 604)
  (parent 534)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (precedes ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1)) ((2 2) (5 0))
    ((3 1) (4 0)) ((4 2) (0 3)) ((5 1) (0 3)) ((6 2) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) y) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((3 1) (4 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-6 "nil")) (send l)))
  (label 605)
  (parent 535)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) (mul l l-0)) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (8 0)) ((1 1) (0 0)) ((1 1) (7 0)) ((2 2) (0 1))
    ((2 2) (6 0)) ((3 1) (5 0)) ((4 1) (8 0)) ((5 2) (4 0))
    ((6 1) (4 0)) ((7 2) (6 0)) ((8 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (8 0))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (7 0)) ((3 1) (5 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((recv (cat (exp (gen) (mul l l-0)) lb))
      (send (cat (exp (gen) (mul l l-0)) lb)))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-6 "nil")) (send l))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 606)
  (parent 536)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb lb) (y y) (alpha (mul l l-0 (rec lb))) (zeta x))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) (mul l l-0)) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (10 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (6 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 2) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec lb))) (y lb) (y x))
  (precur (9 0))
  (gen-st (pv a l) (pv b l-0) (pv b lb))
  (facts (neq (exp (gen) y) (gen)) (neq (exp (gen) x) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (10 0)) ((4 1) (3 0))
    ((4 1) (6 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 11 3 resp 4) (exp (gen) y-0) (0 3))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec lb))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((recv (cat (exp (gen) (mul l l-0)) lb))
      (send (cat (exp (gen) (mul l l-0)) lb)))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-6 "nil")) (send l))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-7 "nil")) (send l-0)))
  (label 607)
  (parent 545)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l-1) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l) (y y) (alpha (mul (rec l) l-0 l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) (mul l-0 l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (gen) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-1))
  (deflistener (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (10 0))
    ((2 2) (0 1)) ((3 3) (11 0)) ((4 1) (3 0)) ((4 1) (6 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 2) (9 0)) ((11 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l-0) (x l-1) (y zeta) (y (mul (rec l) l-0 l-1)) (y l))
  (precur (9 0) (11 0))
  (gen-st (pv a l-0) (pv b l) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (10 0)) ((4 1) (3 0))
    ((4 1) (6 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
    (exp (gen) (mul (rec x) y zeta)) (0 3))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (recv
        (sig (body a (exp (gen) (mul (rec l) l-0 l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l-0 l-1))
              (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l))))
    ((recv (cat (exp (gen) (mul l-0 l-1)) l))
      (send (cat (exp (gen) (mul l-0 l-1)) l)))
    ((load priv-stor-1 (cat pt-3 (pv b l)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0))
    ((recv (cat (gen) l-1)) (send (cat (gen) l-1)))
    ((load priv-stor-0 (cat pt-2 (pv b l-1)))
      (stor priv-stor-0 (cat pt-7 "nil")) (send l-1))
    ((recv (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
      (send (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))))
  (label 608)
  (parent 545)
  (unrealized (11 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) (mul l l-0)) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (precedes ((1 1) (0 0)) ((1 1) (7 0)) ((2 2) (0 1)) ((2 2) (8 0))
    ((3 1) (5 0)) ((4 1) (0 3)) ((5 2) (4 0)) ((6 1) (4 0))
    ((7 2) (6 0)) ((8 1) (6 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (8 0))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) y) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (7 0)) ((3 1) (5 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((recv (cat (exp (gen) (mul l l-0)) lb))
      (send (cat (exp (gen) (mul l l-0)) lb)))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-6 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one)))))
  (label 609)
  (parent 546)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb lb) (y y) (alpha (mul l l-0 (rec lb))) (zeta (mul x w)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) (mul l l-0)) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 2) (0 1))
    ((2 2) (9 0)) ((3 3) (10 0)) ((4 1) (3 0)) ((4 1) (6 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec lb))) (y lb) (y (mul x w)))
  (precur (9 0) (10 0))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) (mul w y)) (gen))
    (neq (exp (gen) (mul x w)) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((4 1) (3 0)) ((4 1) (6 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 11 3 resp 4) (exp (gen) y-0) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec lb))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) (mul x w))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((recv (cat (exp (gen) (mul l l-0)) lb))
      (send (cat (exp (gen) (mul l l-0)) lb)))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-6 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 610)
  (parent 547)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-0) (x x) (beta l) (upsilon y))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l lb))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-0))
  (precedes ((1 1) (3 0)) ((1 2) (0 1)) ((2 1) (5 0)) ((3 2) (0 3))
    ((4 1) (0 3)) ((5 2) (4 0)) ((6 1) (0 0)) ((6 2) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv b l) (pv b lb) (pv self l-0))
  (facts (neq (exp (gen) y) (gen)) (neq self b))
  (leads-to ((1 1) (3 0)) ((2 1) (5 0)) ((6 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor-1 (cat pt-6 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b lb))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) lb)) (send (cat (exp (gen) l-0) lb)))
    ((load priv-stor-0 (cat pt-1 (pv b lb)))
      (stor priv-stor-0 (cat pt-4 "nil")) (send lb))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 611)
  (parent 548)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-0) (x x) (beta l) (upsilon (mul w y)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (exp (gen) (mul l-0 (rec lb))) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l lb))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (8 0)) ((1 1) (4 0)) ((1 2) (0 1)) ((2 1) (6 0))
    ((3 1) (8 0)) ((4 2) (3 0)) ((5 1) (3 0)) ((6 2) (5 0))
    ((7 1) (0 0)) ((7 2) (5 0)) ((8 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (8 0))
  (gen-st (pv b l) (pv b lb) (pv self l-0))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq self b))
  (leads-to ((1 1) (4 0)) ((2 1) (6 0)) ((7 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (2 0))
  (traces
    ((load priv-stor-1 (cat pt-6 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b lb))))
    ((recv (cat (exp (gen) (mul l-0 (rec lb))) l))
      (send (cat (exp (gen) (mul l-0 (rec lb))) l)))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) lb)) (send (cat (exp (gen) l-0) lb)))
    ((load priv-stor-0 (cat pt-1 (pv b lb)))
      (stor priv-stor-0 (cat pt-4 "nil")) (send lb))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 612)
  (parent 549)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb lb) (y y) (alpha (mul l l-0 (rec lb))) (zeta x))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) (mul l-0 (rec lb))) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-0) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (10 0)) ((2 1) (6 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 2) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec lb))) (y lb) (y x))
  (precur (9 0))
  (gen-st (pv a l-0) (pv b l) (pv b lb))
  (facts (neq (exp (gen) y) (gen)) (neq (exp (gen) x) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (10 0)) ((2 1) (6 0)) ((4 1) (3 0))
    ((4 1) (8 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 11 3 resp 4) (exp (gen) y-0) (0 3))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec lb))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((recv (cat (exp (gen) (mul l-0 (rec lb))) l))
      (send (cat (exp (gen) (mul l-0 (rec lb))) l)))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) lb)) (send (cat (exp (gen) l-0) lb)))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send lb))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-7 "nil")) (send l-0)))
  (label 613)
  (parent 558)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-1) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-1))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-0) (y y) (alpha (mul l (rec l-0) l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (gen) l-1))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-1))
  (deflistener (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (10 0)) ((2 1) (6 0))
    ((2 2) (0 1)) ((3 3) (11 0)) ((4 1) (3 0)) ((4 1) (8 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 2) (9 0)) ((11 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-1) (y zeta) (y (mul l (rec l-0) l-1)) (y l-0))
  (precur (9 0) (11 0))
  (gen-st (pv a l-1) (pv b l) (pv b l-0))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (10 0)) ((2 1) (6 0)) ((4 1) (3 0))
    ((4 1) (8 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
    (exp (gen) (mul (rec x) y zeta)) (0 3))
  (traces
    ((load priv-stor (cat pt (pv a l-1)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-1))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (gen) l-1)) (send (cat (gen) l-1)))
    ((load priv-stor (cat pt (pv a l-1)))
      (stor priv-stor (cat pt-7 "nil")) (send l-1))
    ((recv (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
      (send (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))))
  (label 614)
  (parent 558)
  (unrealized (11 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-0) (x x) (beta l) (upsilon y))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (exp (gen) (mul l-0 (rec lb))) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-0))
  (precedes ((1 1) (4 0)) ((1 2) (0 1)) ((2 1) (6 0)) ((3 1) (0 3))
    ((4 2) (3 0)) ((5 1) (3 0)) ((6 2) (5 0)) ((7 1) (5 0))
    ((8 1) (0 0)) ((8 2) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (7 0))
  (gen-st (pv b l) (pv b lb) (pv self l-0))
  (facts (neq (exp (gen) y) (gen)) (neq self b))
  (leads-to ((1 1) (4 0)) ((2 1) (6 0)) ((8 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (2 0))
  (traces
    ((load priv-stor-1 (cat pt-6 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b lb))))
    ((recv (cat (exp (gen) (mul l-0 (rec lb))) l))
      (send (cat (exp (gen) (mul l-0 (rec lb))) l)))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) lb)) (send (cat (exp (gen) l-0) lb)))
    ((load priv-stor-0 (cat pt-1 (pv b lb)))
      (stor priv-stor-0 (cat pt-4 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 615)
  (parent 559)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-0) (x x) (beta l) (upsilon (mul w y)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand resp 4 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (lb lb) (y y) (alpha (mul l l-0 (rec lb)))
    (zeta (mul x w)))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (exp (gen) (mul l-0 (rec lb))) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (2 2)) ((1 1) (5 0)) ((1 2) (0 1)) ((2 3) (10 0))
    ((3 1) (2 0)) ((3 1) (7 0)) ((4 1) (2 1)) ((5 2) (4 0))
    ((6 1) (4 0)) ((7 2) (6 0)) ((8 1) (6 0)) ((9 1) (0 0))
    ((9 2) (8 0)) ((10 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec lb))) (y lb) (y (mul x w)))
  (precur (8 0) (10 0))
  (gen-st (pv b l) (pv b lb) (pv self l-0))
  (facts (neq (exp (gen) (mul w y)) (gen))
    (neq (exp (gen) (mul x w)) (gen)) (neq self b))
  (leads-to ((1 1) (5 0)) ((3 1) (2 0)) ((3 1) (7 0)) ((9 1) (0 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 11 2 resp 4) (exp (gen) y-0) (10 0))
  (traces
    ((load priv-stor-1 (cat pt-6 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-1 (pv b lb)))
      (recv
        (sig
          (body self (exp (gen) (mul l l-0 (rec lb))) (pubk "sig" self))
          (privk "sig" self)))
      (recv (cat na self b (exp (gen) (mul x w))))
      (send
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y)))))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b lb))))
    ((recv (cat (exp (gen) (mul l-0 (rec lb))) l))
      (send (cat (exp (gen) (mul l-0 (rec lb))) l)))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) lb)) (send (cat (exp (gen) l-0) lb)))
    ((load priv-stor-0 (cat pt-1 (pv b lb)))
      (stor priv-stor-0 (cat pt-4 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 616)
  (parent 560)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-1) (y y) (alpha (mul l l-0 (rec l-1))) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l-0 (rec l-1))) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (rec l-1)) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (gen) (rec l-1)))
  (deflistener l-1)
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (6 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (11 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 1) (9 0)) ((11 2) (10 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y zeta) (y (mul l l-0 (rec l-1))) (y l-1))
  (precur (9 0))
  (gen-st (pv a l-0) (pv b l) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (6 0)) ((4 1) (3 0))
    ((4 1) (11 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-disclose 3) l-1 (10 0)
    (ch-msg priv-stor-1 (cat pt-3 (pv b l-1))))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l-0 (rec l-1))) l))
      (send (cat (exp (gen) (mul l-0 (rec l-1))) l)))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) (rec l-1)) l-0))
      (send (cat (exp (gen) (rec l-1)) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0))
    ((recv (cat (gen) (rec l-1))) (send (cat (gen) (rec l-1))))
    ((recv l-1) (send l-1))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-7 "nil")) (send l-1)))
  (label 617)
  (parent 569)
  (unrealized (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b self) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b self)
    (priv-stor priv-stor-1) (lb l-1) (y y) (alpha (mul l l-0 (rec l-1)))
    (zeta zeta))
  (deflistener (cat (exp (gen) (mul l-0 (rec l-1))) l))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (rec l-1)) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) l-1) (mul (rec l-1) (rec l-1))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener l-1)
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (7 0)) ((2 1) (5 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 1)) ((5 2) (4 0))
    ((6 1) (4 0)) ((7 2) (6 0)) ((8 1) (6 0)) ((9 1) (3 0))
    ((9 1) (11 0)) ((9 2) (8 0)) ((10 1) (8 0)) ((11 2) (10 0)))
  (non-orig (privk "sig" self))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y zeta) (y (mul l l-0 (rec l-1))) (y l-1))
  (precur (8 0))
  (gen-st (pv a l-0) (pv self l) (pv self l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a self))
  (leads-to ((1 1) (0 0)) ((1 1) (7 0)) ((2 1) (5 0)) ((9 1) (3 0))
    ((9 1) (11 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-disclose 3) l-1 (10 0)
    (ch-msg priv-stor-1 (cat pt-6 (pv self l-1))))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na a self (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-1 (cat pt-6 (pv self l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a self (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((recv (cat (exp (gen) (mul l-0 (rec l-1))) l))
      (send (cat (exp (gen) (mul l-0 (rec l-1))) l)))
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) (rec l-1)) l-0))
      (send (cat (exp (gen) (rec l-1)) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-4 "nil")) (send l-0))
    ((recv (cat (exp (gen) l-1) (mul (rec l-1) (rec l-1))))
      (send (cat (exp (gen) l-1) (mul (rec l-1) (rec l-1)))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))) ((recv l-1) (send l-1))
    ((load priv-stor-1 (cat pt-6 (pv self l-1)))
      (stor priv-stor-1 (cat pt-7 "nil")) (send l-1)))
  (label 618)
  (parent 570)
  (unrealized (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (precedes ((1 1) (0 0)) ((1 1) (4 0)) ((2 2) (0 1)) ((2 2) (5 0))
    ((3 1) (6 0)) ((4 2) (0 3)) ((5 1) (0 3)) ((6 2) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) y) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (4 0)) ((3 1) (6 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) lb)) (send (cat (exp (gen) l-0) lb)))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send lb)))
  (label 619)
  (parent 571)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) (mul l-0 (rec lb))) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (8 0)) ((1 1) (0 0)) ((1 1) (5 0)) ((2 2) (0 1))
    ((2 2) (6 0)) ((3 1) (7 0)) ((4 1) (8 0)) ((5 2) (4 0))
    ((6 1) (4 0)) ((7 2) (6 0)) ((8 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (8 0))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (5 0)) ((3 1) (7 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((recv (cat (exp (gen) (mul l-0 (rec lb))) l))
      (send (cat (exp (gen) (mul l-0 (rec lb))) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) lb)) (send (cat (exp (gen) l-0) lb)))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send lb))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 620)
  (parent 572)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb lb) (y y) (alpha (mul l l-0 (rec lb))) (zeta x))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) (mul l-0 (rec lb))) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (10 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (8 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 2) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec lb))) (y lb) (y x))
  (precur (9 0))
  (gen-st (pv a l) (pv b l-0) (pv b lb))
  (facts (neq (exp (gen) y) (gen)) (neq (exp (gen) x) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (10 0)) ((4 1) (3 0))
    ((4 1) (8 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 11 3 resp 4) (exp (gen) y-0) (0 3))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec lb))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((recv (cat (exp (gen) (mul l-0 (rec lb))) l))
      (send (cat (exp (gen) (mul l-0 (rec lb))) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) lb)) (send (cat (exp (gen) l-0) lb)))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send lb))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-7 "nil")) (send l-0)))
  (label 621)
  (parent 581)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-1) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-1))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-0) (y y) (alpha (mul l (rec l-0) l-1)) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) (mul (rec l-0) l-1)) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-1) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (gen) l-1))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-1))
  (deflistener (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (10 0))
    ((2 2) (0 1)) ((3 3) (11 0)) ((4 1) (3 0)) ((4 1) (8 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 2) (9 0)) ((11 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-1) (y zeta) (y (mul l (rec l-0) l-1)) (y l-0))
  (precur (9 0) (11 0))
  (gen-st (pv a l) (pv b l-0) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (10 0)) ((4 1) (3 0))
    ((4 1) (8 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
    (exp (gen) (mul (rec x) y zeta)) (0 3))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-1)))
      (send
        (sig (body b (exp (gen) l-1) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (recv
        (sig (body a (exp (gen) (mul l (rec l-0) l-1)) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-1)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-0))))
    ((recv (cat (exp (gen) (mul (rec l-0) l-1)) l))
      (send (cat (exp (gen) (mul (rec l-0) l-1)) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) l-0)) (send (cat (exp (gen) l-1) l-0)))
    ((load priv-stor-1 (cat pt-3 (pv b l-0)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (gen) l-1)) (send (cat (gen) l-1)))
    ((load priv-stor-0 (cat pt-2 (pv b l-1)))
      (stor priv-stor-0 (cat pt-7 "nil")) (send l-1))
    ((recv (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
      (send (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))))
  (label 622)
  (parent 581)
  (unrealized (11 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) (mul l-0 (rec lb))) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) l-0) (one)))
  (precedes ((1 1) (0 0)) ((1 1) (5 0)) ((2 2) (0 1)) ((2 2) (8 0))
    ((3 1) (7 0)) ((4 1) (0 3)) ((5 2) (4 0)) ((6 1) (4 0))
    ((7 2) (6 0)) ((8 1) (6 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (8 0))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) y) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (5 0)) ((3 1) (7 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((recv (cat (exp (gen) (mul l-0 (rec lb))) l))
      (send (cat (exp (gen) (mul l-0 (rec lb))) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) lb)) (send (cat (exp (gen) l-0) lb)))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one)))))
  (label 623)
  (parent 582)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb lb) (y y) (alpha (mul l l-0 (rec lb))) (zeta (mul x w)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) (mul l-0 (rec lb))) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) l-0) (one)))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((2 2) (9 0)) ((3 3) (10 0)) ((4 1) (3 0)) ((4 1) (8 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec lb))) (y lb) (y (mul x w)))
  (precur (9 0) (10 0))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) (mul w y)) (gen))
    (neq (exp (gen) (mul x w)) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((4 1) (3 0)) ((4 1) (8 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 11 3 resp 4) (exp (gen) y-0) (10 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec lb))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) (mul x w))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((recv (cat (exp (gen) (mul l-0 (rec lb))) l))
      (send (cat (exp (gen) (mul l-0 (rec lb))) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) lb)) (send (cat (exp (gen) l-0) lb)))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 624)
  (parent 583)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-1) (y y) (alpha (mul l l-0 (rec l-1))) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l-0 (rec l-1))) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (rec l-1)) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (gen) (rec l-1)))
  (deflistener l-1)
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (8 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (11 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 1) (9 0)) ((11 2) (10 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y zeta) (y (mul l l-0 (rec l-1))) (y l-1))
  (precur (9 0))
  (gen-st (pv a l) (pv b l-0) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (8 0)) ((4 1) (3 0))
    ((4 1) (11 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-disclose 3) l-1 (10 0)
    (ch-msg priv-stor-1 (cat pt-3 (pv b l-1))))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l-0 (rec l-1))) l))
      (send (cat (exp (gen) (mul l-0 (rec l-1))) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) (rec l-1)) l-0))
      (send (cat (exp (gen) (rec l-1)) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (gen) (rec l-1))) (send (cat (gen) (rec l-1))))
    ((recv l-1) (send l-1))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-7 "nil")) (send l-1)))
  (label 625)
  (parent 592)
  (unrealized (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b self) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b self)
    (priv-stor priv-stor-1) (lb l-1) (y y) (alpha (mul l l-0 (rec l-1)))
    (zeta zeta))
  (deflistener (cat (exp (gen) (mul l-0 (rec l-1))) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (rec l-1)) l-0))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l-1) (mul (rec l-1) (rec l-1))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener l-1)
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (5 0)) ((2 1) (7 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 1)) ((5 2) (4 0))
    ((6 1) (4 0)) ((7 2) (6 0)) ((8 1) (6 0)) ((9 1) (3 0))
    ((9 1) (11 0)) ((9 2) (8 0)) ((10 1) (8 0)) ((11 2) (10 0)))
  (non-orig (privk "sig" self))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y zeta) (y (mul l l-0 (rec l-1))) (y l-1))
  (precur (8 0))
  (gen-st (pv a l) (pv self l-0) (pv self l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a self))
  (leads-to ((1 1) (0 0)) ((1 1) (5 0)) ((2 1) (7 0)) ((9 1) (3 0))
    ((9 1) (11 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-disclose 3) l-1 (10 0)
    (ch-msg priv-stor-1 (cat pt-6 (pv self l-1))))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (send (cat na a self (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-1 (cat pt-6 (pv self l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a self (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((recv (cat (exp (gen) (mul l-0 (rec l-1))) l))
      (send (cat (exp (gen) (mul l-0 (rec l-1))) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) (rec l-1)) l-0))
      (send (cat (exp (gen) (rec l-1)) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (stor priv-stor-0 (cat pt-4 "nil")) (send l-0))
    ((recv (cat (exp (gen) l-1) (mul (rec l-1) (rec l-1))))
      (send (cat (exp (gen) l-1) (mul (rec l-1) (rec l-1)))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))) ((recv l-1) (send l-1))
    ((load priv-stor-1 (cat pt-6 (pv self l-1)))
      (stor priv-stor-1 (cat pt-7 "nil")) (send l-1)))
  (label 626)
  (parent 593)
  (unrealized (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (upsilon expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (precedes ((1 1) (0 0)) ((1 1) (5 0)) ((2 1) (3 0)) ((2 2) (0 1))
    ((3 2) (0 3)) ((4 1) (0 3)) ((5 2) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (4 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (5 0)) ((2 1) (3 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-4 "nil")) (send l-0)))
  (label 627)
  (parent 594)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (upsilon expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (precedes ((1 1) (0 0)) ((1 1) (3 0)) ((2 1) (5 0)) ((2 2) (0 1))
    ((3 2) (0 3)) ((4 1) (0 3)) ((5 2) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (4 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (3 0)) ((2 1) (5 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-4 "nil")) (send l-0)))
  (label 628)
  (parent 596)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn)
    (lb l x rndx) (w expt) (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta lb) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (precedes ((1 1) (0 0)) ((1 1) (3 0)) ((2 2) (0 1)) ((3 2) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na lb l)
  (uniq-gen x)
  (absent (x lb) (x l))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (3 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization forgot nb)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) lb) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul lb l)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b lb)))
      (send
        (sig (body b (exp (gen) lb) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l)))
  (label 629)
  (parent 598)
  (realized)
  (shape)
  (maps
    ((0)
      ((a a) (b b) (la l) (x x) (beta lb) (upsilon (mul w y)) (na na)
        (nb nb) (priv-stor priv-stor))))
  (origs (pt-3 (3 1)) (lb (2 1)) (pt-2 (2 1)) (l (1 1)) (pt (1 1))
    (na (0 2)))
  (ugens (x (0 2))))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-0) (x x) (beta l) (upsilon y))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-0))
  (precedes ((1 1) (4 0)) ((1 2) (0 1)) ((2 1) (0 3)) ((3 1) (0 3))
    ((4 2) (3 0)) ((5 1) (0 0)) ((5 2) (3 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv b l) (pv b lb) (pv self l-0))
  (facts (neq (exp (gen) y) (gen)) (neq self b))
  (leads-to ((1 1) (4 0)) ((5 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor-1 (cat pt-5 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b lb))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-5 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 630)
  (parent 599)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-0) (x x) (beta l) (upsilon (mul w y)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (7 0)) ((1 1) (5 0)) ((1 2) (0 1)) ((2 1) (3 0))
    ((3 2) (7 0)) ((4 1) (7 0)) ((5 2) (4 0)) ((6 1) (0 0))
    ((6 2) (4 0)) ((7 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (7 0))
  (gen-st (pv b l) (pv b lb) (pv self l-0))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq self b))
  (leads-to ((1 1) (5 0)) ((2 1) (3 0)) ((6 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor-1 (cat pt-6 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b lb))))
    ((load priv-stor-0 (cat pt-1 (pv b lb)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-4 "nil")) (send l))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 631)
  (parent 600)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) (mul l l-0)) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (precedes ((1 1) (0 0)) ((1 1) (9 0)) ((2 1) (7 0)) ((2 2) (0 1))
    ((3 1) (5 0)) ((4 1) (0 3)) ((5 2) (4 0)) ((6 1) (4 0))
    ((7 2) (6 0)) ((8 1) (6 0)) ((9 2) (8 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (8 0))
  (gen-st (pv a l-0) (pv b l) (pv b lb))
  (facts (neq (exp (gen) y) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (9 0)) ((2 1) (7 0)) ((3 1) (5 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((recv (cat (exp (gen) (mul l l-0)) lb))
      (send (cat (exp (gen) (mul l l-0)) lb)))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-6 "nil")) (send l))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-7 "nil")) (send l-0)))
  (label 632)
  (parent 601)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb lb) (y y) (alpha (mul l l-0 (rec lb))) (zeta (mul x w)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) (mul l l-0)) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (10 0)) ((2 1) (8 0))
    ((2 2) (0 1)) ((3 3) (11 0)) ((4 1) (3 0)) ((4 1) (6 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 2) (9 0)) ((11 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec lb))) (y lb) (y (mul x w)))
  (precur (9 0) (11 0))
  (gen-st (pv a l-0) (pv b l) (pv b lb))
  (facts (neq (exp (gen) (mul w y)) (gen))
    (neq (exp (gen) (mul x w)) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (10 0)) ((2 1) (8 0)) ((4 1) (3 0))
    ((4 1) (6 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 12 3 resp 4) (exp (gen) y-0) (11 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec lb))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) (mul x w))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((recv (cat (exp (gen) (mul l l-0)) lb))
      (send (cat (exp (gen) (mul l l-0)) lb)))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-6 "nil")) (send l))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-7 "nil")) (send l-0))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 633)
  (parent 602)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-0) (x x) (beta l) (upsilon y))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-0))
  (precedes ((1 1) (5 0)) ((1 2) (0 1)) ((2 1) (3 0)) ((3 2) (0 3))
    ((4 1) (0 3)) ((5 2) (4 0)) ((6 1) (4 0)) ((7 1) (0 0))
    ((7 2) (6 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (6 0))
  (gen-st (pv b l) (pv b lb) (pv self l-0))
  (facts (neq (exp (gen) y) (gen)) (neq self b))
  (leads-to ((1 1) (5 0)) ((2 1) (3 0)) ((7 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor-1 (cat pt-6 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b lb))))
    ((load priv-stor-0 (cat pt-1 (pv b lb)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-4 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 634)
  (parent 603)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-0) (x x) (beta l) (upsilon (mul w y)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (exp (gen) (mul l l-0)) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (9 0)) ((1 1) (6 0)) ((1 2) (0 1)) ((2 1) (4 0))
    ((3 1) (9 0)) ((4 2) (3 0)) ((5 1) (3 0)) ((6 2) (5 0))
    ((7 1) (5 0)) ((8 1) (0 0)) ((8 2) (7 0)) ((9 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (7 0) (9 0))
  (gen-st (pv b l) (pv b lb) (pv self l-0))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq self b))
  (leads-to ((1 1) (6 0)) ((2 1) (4 0)) ((8 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (2 0))
  (traces
    ((load priv-stor-1 (cat pt-6 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b lb))))
    ((recv (cat (exp (gen) (mul l l-0)) lb))
      (send (cat (exp (gen) (mul l l-0)) lb)))
    ((load priv-stor-0 (cat pt-1 (pv b lb)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-4 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 635)
  (parent 604)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (precedes ((1 1) (0 0)) ((1 1) (5 0)) ((2 2) (0 1)) ((2 2) (4 0))
    ((3 1) (0 3)) ((4 1) (0 3)) ((5 2) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) y) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (5 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l)))
  (label 636)
  (parent 605)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (7 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((2 2) (5 0)) ((3 1) (4 0)) ((4 2) (7 0)) ((5 1) (7 0))
    ((6 2) (5 0)) ((7 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (7 0))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((3 1) (4 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-6 "nil")) (send l))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 637)
  (parent 606)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) (mul l l-0)) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (precedes ((1 1) (0 0)) ((1 1) (7 0)) ((2 1) (9 0)) ((2 2) (0 1))
    ((3 1) (5 0)) ((4 1) (0 3)) ((5 2) (4 0)) ((6 1) (4 0))
    ((7 2) (6 0)) ((8 1) (6 0)) ((9 2) (8 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (8 0))
  (gen-st (pv a l) (pv b l-0) (pv b lb))
  (facts (neq (exp (gen) y) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (7 0)) ((2 1) (9 0)) ((3 1) (5 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((recv (cat (exp (gen) (mul l l-0)) lb))
      (send (cat (exp (gen) (mul l l-0)) lb)))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-6 "nil")) (send l))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-7 "nil")) (send l-0)))
  (label 638)
  (parent 607)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb lb) (y y) (alpha (mul l l-0 (rec lb))) (zeta (mul x w)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) (mul l l-0)) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (10 0))
    ((2 2) (0 1)) ((3 3) (11 0)) ((4 1) (3 0)) ((4 1) (6 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 2) (9 0)) ((11 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec lb))) (y lb) (y (mul x w)))
  (precur (9 0) (11 0))
  (gen-st (pv a l) (pv b l-0) (pv b lb))
  (facts (neq (exp (gen) (mul w y)) (gen))
    (neq (exp (gen) (mul x w)) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (10 0)) ((4 1) (3 0))
    ((4 1) (6 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 12 3 resp 4) (exp (gen) y-0) (11 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec lb))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) (mul x w))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((recv (cat (exp (gen) (mul l l-0)) lb))
      (send (cat (exp (gen) (mul l l-0)) lb)))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-6 "nil")) (send l))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-7 "nil")) (send l-0))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 639)
  (parent 608)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (precedes ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1)) ((2 2) (7 0))
    ((3 1) (4 0)) ((4 2) (0 3)) ((5 1) (0 3)) ((6 2) (5 0))
    ((7 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (7 0))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) y) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((3 1) (4 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-6 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one)))))
  (label 640)
  (parent 609)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) (mul l l-0)) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (9 0)) ((1 1) (0 0)) ((1 1) (7 0)) ((2 2) (0 1))
    ((2 2) (8 0)) ((3 1) (5 0)) ((4 1) (9 0)) ((5 2) (4 0))
    ((6 1) (4 0)) ((7 2) (6 0)) ((8 1) (6 0)) ((9 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (8 0) (9 0))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (7 0)) ((3 1) (5 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((recv (cat (exp (gen) (mul l l-0)) lb))
      (send (cat (exp (gen) (mul l l-0)) lb)))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-6 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 641)
  (parent 610)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-0) (x x) (beta l) (upsilon y))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l lb))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-0))
  (precedes ((1 1) (3 0)) ((1 2) (0 1)) ((2 1) (4 0)) ((3 2) (0 3))
    ((4 2) (0 3)) ((5 1) (0 0)) ((5 2) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv b l) (pv b lb) (pv self l-0))
  (facts (neq (exp (gen) y) (gen)) (neq self b))
  (leads-to ((1 1) (3 0)) ((2 1) (4 0)) ((5 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor-1 (cat pt-6 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b lb))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((load priv-stor-0 (cat pt-1 (pv b lb)))
      (stor priv-stor-0 (cat pt-4 "nil")) (send lb))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 642)
  (parent 611)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-0) (x x) (beta l) (upsilon (mul w y)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l lb))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (7 0)) ((1 1) (3 0)) ((1 2) (0 1)) ((2 1) (5 0))
    ((3 2) (7 0)) ((4 1) (7 0)) ((5 2) (4 0)) ((6 1) (0 0))
    ((6 2) (4 0)) ((7 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (7 0))
  (gen-st (pv b l) (pv b lb) (pv self l-0))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq self b))
  (leads-to ((1 1) (3 0)) ((2 1) (5 0)) ((6 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor-1 (cat pt-6 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b lb))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) lb)) (send (cat (exp (gen) l-0) lb)))
    ((load priv-stor-0 (cat pt-1 (pv b lb)))
      (stor priv-stor-0 (cat pt-4 "nil")) (send lb))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 643)
  (parent 612)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) (mul l-0 (rec lb))) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-0) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (precedes ((1 1) (0 0)) ((1 1) (9 0)) ((2 1) (5 0)) ((2 2) (0 1))
    ((3 1) (7 0)) ((4 1) (0 3)) ((5 2) (4 0)) ((6 1) (4 0))
    ((7 2) (6 0)) ((8 1) (6 0)) ((9 2) (8 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (8 0))
  (gen-st (pv a l-0) (pv b l) (pv b lb))
  (facts (neq (exp (gen) y) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (9 0)) ((2 1) (5 0)) ((3 1) (7 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((recv (cat (exp (gen) (mul l-0 (rec lb))) l))
      (send (cat (exp (gen) (mul l-0 (rec lb))) l)))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) lb)) (send (cat (exp (gen) l-0) lb)))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send lb))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-7 "nil")) (send l-0)))
  (label 644)
  (parent 613)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb lb) (y y) (alpha (mul l l-0 (rec lb))) (zeta (mul x w)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) (mul l-0 (rec lb))) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-0) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (10 0)) ((2 1) (6 0))
    ((2 2) (0 1)) ((3 3) (11 0)) ((4 1) (3 0)) ((4 1) (8 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 2) (9 0)) ((11 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec lb))) (y lb) (y (mul x w)))
  (precur (9 0) (11 0))
  (gen-st (pv a l-0) (pv b l) (pv b lb))
  (facts (neq (exp (gen) (mul w y)) (gen))
    (neq (exp (gen) (mul x w)) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (10 0)) ((2 1) (6 0)) ((4 1) (3 0))
    ((4 1) (8 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 12 3 resp 4) (exp (gen) y-0) (11 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec lb))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) (mul x w))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((recv (cat (exp (gen) (mul l-0 (rec lb))) l))
      (send (cat (exp (gen) (mul l-0 (rec lb))) l)))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) lb)) (send (cat (exp (gen) l-0) lb)))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send lb))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-7 "nil")) (send l-0))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 645)
  (parent 614)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-0) (x x) (beta l) (upsilon y))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-0))
  (precedes ((1 1) (3 0)) ((1 2) (0 1)) ((2 1) (5 0)) ((3 2) (0 3))
    ((4 1) (0 3)) ((5 2) (4 0)) ((6 1) (4 0)) ((7 1) (0 0))
    ((7 2) (6 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (6 0))
  (gen-st (pv b l) (pv b lb) (pv self l-0))
  (facts (neq (exp (gen) y) (gen)) (neq self b))
  (leads-to ((1 1) (3 0)) ((2 1) (5 0)) ((7 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor-1 (cat pt-6 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b lb))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) lb)) (send (cat (exp (gen) l-0) lb)))
    ((load priv-stor-0 (cat pt-1 (pv b lb)))
      (stor priv-stor-0 (cat pt-4 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 646)
  (parent 615)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-0) (x x) (beta l) (upsilon (mul w y)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (exp (gen) (mul l-0 (rec lb))) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (9 0)) ((1 1) (4 0)) ((1 2) (0 1)) ((2 1) (6 0))
    ((3 1) (9 0)) ((4 2) (3 0)) ((5 1) (3 0)) ((6 2) (5 0))
    ((7 1) (5 0)) ((8 1) (0 0)) ((8 2) (7 0)) ((9 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (7 0) (9 0))
  (gen-st (pv b l) (pv b lb) (pv self l-0))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq self b))
  (leads-to ((1 1) (4 0)) ((2 1) (6 0)) ((8 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (2 0))
  (traces
    ((load priv-stor-1 (cat pt-6 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b lb))))
    ((recv (cat (exp (gen) (mul l-0 (rec lb))) l))
      (send (cat (exp (gen) (mul l-0 (rec lb))) l)))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) lb)) (send (cat (exp (gen) l-0) lb)))
    ((load priv-stor-0 (cat pt-1 (pv b lb)))
      (stor priv-stor-0 (cat pt-4 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 647)
  (parent 616)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb lb) (y y) (alpha (mul l l-0 (rec lb))) (zeta x))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) (mul l-0 (rec lb))) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (rec lb)) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (gen) (rec lb)))
  (deflistener lb)
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (6 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (11 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 1) (9 0)) ((11 2) (10 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec lb))) (y lb) (y x))
  (precur (9 0))
  (gen-st (pv a l-0) (pv b l) (pv b lb))
  (facts (neq (exp (gen) y) (gen)) (neq (exp (gen) x) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (6 0)) ((4 1) (3 0))
    ((4 1) (11 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 12 3 resp 4) (exp (gen) y-0) (0 3))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec lb))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((recv (cat (exp (gen) (mul l-0 (rec lb))) l))
      (send (cat (exp (gen) (mul l-0 (rec lb))) l)))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) (rec lb)) l-0))
      (send (cat (exp (gen) (rec lb)) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0))
    ((recv (cat (gen) (rec lb))) (send (cat (gen) (rec lb))))
    ((recv lb) (send lb))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-7 "nil")) (send lb)))
  (label 648)
  (parent 617)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-1) (y y) (alpha (mul l l-0 (rec l-1))) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l-0 (rec l-1))) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (rec l-1)) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (gen) (rec l-1)))
  (deflistener l-1)
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (6 0))
    ((2 2) (0 1)) ((3 3) (12 0)) ((4 1) (3 0)) ((4 1) (11 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 1) (9 0)) ((11 2) (10 0)) ((12 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y zeta) (y (mul l l-0 (rec l-1))) (y l-1))
  (precur (9 0) (12 0))
  (gen-st (pv a l-0) (pv b l) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (6 0)) ((4 1) (3 0))
    ((4 1) (11 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
    (exp (gen) (mul (rec x) y zeta)) (0 3))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l-0 (rec l-1))) l))
      (send (cat (exp (gen) (mul l-0 (rec l-1))) l)))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) (rec l-1)) l-0))
      (send (cat (exp (gen) (rec l-1)) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0))
    ((recv (cat (gen) (rec l-1))) (send (cat (gen) (rec l-1))))
    ((recv l-1) (send l-1))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-7 "nil")) (send l-1))
    ((recv (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
      (send (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))))
  (label 649)
  (parent 617)
  (unrealized (12 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b self) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b self)
    (priv-stor priv-stor-1) (lb lb) (y y) (alpha (mul l l-0 (rec lb)))
    (zeta x))
  (deflistener (cat (exp (gen) (mul l-0 (rec lb))) l))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (rec lb)) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) lb) (mul (rec lb) (rec lb))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l lb))
  (deflistener lb)
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-1) (l lb))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (7 0)) ((2 1) (5 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 1)) ((5 2) (4 0))
    ((6 1) (4 0)) ((7 2) (6 0)) ((8 1) (6 0)) ((9 1) (3 0))
    ((9 1) (11 0)) ((9 2) (8 0)) ((10 1) (8 0)) ((11 2) (10 0)))
  (non-orig (privk "sig" self))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec lb))) (y lb) (y x))
  (precur (8 0))
  (gen-st (pv a l-0) (pv self l) (pv self lb))
  (facts (neq (exp (gen) y) (gen)) (neq (exp (gen) x) (gen))
    (neq a self))
  (leads-to ((1 1) (0 0)) ((1 1) (7 0)) ((2 1) (5 0)) ((9 1) (3 0))
    ((9 1) (11 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 12 3 resp 4) (exp (gen) y-0) (0 3))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na a self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-1 (cat pt-6 (pv self lb)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec lb))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a self (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb a self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) (mul l-0 (rec lb))) l))
      (send (cat (exp (gen) (mul l-0 (rec lb))) l)))
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) (rec lb)) l-0))
      (send (cat (exp (gen) (rec lb)) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-4 "nil")) (send l-0))
    ((recv (cat (exp (gen) lb) (mul (rec lb) (rec lb))))
      (send (cat (exp (gen) lb) (mul (rec lb) (rec lb)))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self lb)))
      (send
        (sig (body self (exp (gen) lb) (pubk "sig" self))
          (privk "sig" self)))) ((recv lb) (send lb))
    ((load priv-stor-1 (cat pt-6 (pv self lb)))
      (stor priv-stor-1 (cat pt-7 "nil")) (send lb)))
  (label 650)
  (parent 618)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a a) (b self) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b self)
    (priv-stor priv-stor-1) (lb l-1) (y y) (alpha (mul l l-0 (rec l-1)))
    (zeta zeta))
  (deflistener (cat (exp (gen) (mul l-0 (rec l-1))) l))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (rec l-1)) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) l-1) (mul (rec l-1) (rec l-1))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener l-1)
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (7 0)) ((2 1) (5 0))
    ((2 2) (0 1)) ((3 3) (12 0)) ((4 1) (3 1)) ((5 2) (4 0))
    ((6 1) (4 0)) ((7 2) (6 0)) ((8 1) (6 0)) ((9 1) (3 0))
    ((9 1) (11 0)) ((9 2) (8 0)) ((10 1) (8 0)) ((11 2) (10 0))
    ((12 1) (0 3)))
  (non-orig (privk "sig" self))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y zeta) (y (mul l l-0 (rec l-1))) (y l-1))
  (precur (8 0) (12 0))
  (gen-st (pv a l-0) (pv self l) (pv self l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a self))
  (leads-to ((1 1) (0 0)) ((1 1) (7 0)) ((2 1) (5 0)) ((9 1) (3 0))
    ((9 1) (11 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
    (exp (gen) (mul (rec x) y zeta)) (0 3))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na a self (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-1 (cat pt-6 (pv self l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a self (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((recv (cat (exp (gen) (mul l-0 (rec l-1))) l))
      (send (cat (exp (gen) (mul l-0 (rec l-1))) l)))
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) (rec l-1)) l-0))
      (send (cat (exp (gen) (rec l-1)) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-4 "nil")) (send l-0))
    ((recv (cat (exp (gen) l-1) (mul (rec l-1) (rec l-1))))
      (send (cat (exp (gen) l-1) (mul (rec l-1) (rec l-1)))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))) ((recv l-1) (send l-1))
    ((load priv-stor-1 (cat pt-6 (pv self l-1)))
      (stor priv-stor-1 (cat pt-7 "nil")) (send l-1))
    ((recv (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
      (send (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))))
  (label 651)
  (parent 618)
  (unrealized (12 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (precedes ((1 1) (0 0)) ((1 1) (4 0)) ((2 2) (0 1)) ((3 1) (5 0))
    ((4 2) (0 3)) ((5 2) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) y) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (4 0)) ((3 1) (5 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (5 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send lb)))
  (label 652)
  (parent 619)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (7 0)) ((1 1) (0 0)) ((1 1) (4 0)) ((2 2) (0 1))
    ((2 2) (5 0)) ((3 1) (6 0)) ((4 2) (7 0)) ((5 1) (7 0))
    ((6 2) (5 0)) ((7 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (7 0))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (4 0)) ((3 1) (6 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) lb)) (send (cat (exp (gen) l-0) lb)))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send lb))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 653)
  (parent 620)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) (mul l-0 (rec lb))) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (precedes ((1 1) (0 0)) ((1 1) (5 0)) ((2 1) (9 0)) ((2 2) (0 1))
    ((3 1) (7 0)) ((4 1) (0 3)) ((5 2) (4 0)) ((6 1) (4 0))
    ((7 2) (6 0)) ((8 1) (6 0)) ((9 2) (8 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (8 0))
  (gen-st (pv a l) (pv b l-0) (pv b lb))
  (facts (neq (exp (gen) y) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (5 0)) ((2 1) (9 0)) ((3 1) (7 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((recv (cat (exp (gen) (mul l-0 (rec lb))) l))
      (send (cat (exp (gen) (mul l-0 (rec lb))) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) lb)) (send (cat (exp (gen) l-0) lb)))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send lb))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-7 "nil")) (send l-0)))
  (label 654)
  (parent 621)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb lb) (y y) (alpha (mul l l-0 (rec lb))) (zeta (mul x w)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) (mul l-0 (rec lb))) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (10 0))
    ((2 2) (0 1)) ((3 3) (11 0)) ((4 1) (3 0)) ((4 1) (8 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 2) (9 0)) ((11 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec lb))) (y lb) (y (mul x w)))
  (precur (9 0) (11 0))
  (gen-st (pv a l) (pv b l-0) (pv b lb))
  (facts (neq (exp (gen) (mul w y)) (gen))
    (neq (exp (gen) (mul x w)) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (10 0)) ((4 1) (3 0))
    ((4 1) (8 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 12 3 resp 4) (exp (gen) y-0) (11 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec lb))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) (mul x w))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((recv (cat (exp (gen) (mul l-0 (rec lb))) l))
      (send (cat (exp (gen) (mul l-0 (rec lb))) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) lb)) (send (cat (exp (gen) l-0) lb)))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send lb))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-7 "nil")) (send l-0))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 655)
  (parent 622)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) l-0) (one)))
  (precedes ((1 1) (0 0)) ((1 1) (4 0)) ((2 2) (0 1)) ((2 2) (7 0))
    ((3 1) (6 0)) ((4 2) (0 3)) ((5 1) (0 3)) ((6 2) (5 0))
    ((7 1) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (7 0))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) y) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (4 0)) ((3 1) (6 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) lb)) (send (cat (exp (gen) l-0) lb)))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one)))))
  (label 656)
  (parent 623)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) (mul l-0 (rec lb))) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) l-0) (one)))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (9 0)) ((1 1) (0 0)) ((1 1) (5 0)) ((2 2) (0 1))
    ((2 2) (8 0)) ((3 1) (7 0)) ((4 1) (9 0)) ((5 2) (4 0))
    ((6 1) (4 0)) ((7 2) (6 0)) ((8 1) (6 0)) ((9 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (8 0) (9 0))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (5 0)) ((3 1) (7 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((recv (cat (exp (gen) (mul l-0 (rec lb))) l))
      (send (cat (exp (gen) (mul l-0 (rec lb))) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) lb)) (send (cat (exp (gen) l-0) lb)))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 657)
  (parent 624)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb lb) (y y) (alpha (mul l l-0 (rec lb))) (zeta x))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) (mul l-0 (rec lb))) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (rec lb)) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (gen) (rec lb)))
  (deflistener lb)
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (8 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 0)) ((4 1) (11 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 1) (9 0)) ((11 2) (10 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec lb))) (y lb) (y x))
  (precur (9 0))
  (gen-st (pv a l) (pv b l-0) (pv b lb))
  (facts (neq (exp (gen) y) (gen)) (neq (exp (gen) x) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (8 0)) ((4 1) (3 0))
    ((4 1) (11 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 12 3 resp 4) (exp (gen) y-0) (0 3))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec lb))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((recv (cat (exp (gen) (mul l-0 (rec lb))) l))
      (send (cat (exp (gen) (mul l-0 (rec lb))) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) (rec lb)) l-0))
      (send (cat (exp (gen) (rec lb)) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (gen) (rec lb))) (send (cat (gen) (rec lb))))
    ((recv lb) (send lb))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-7 "nil")) (send lb)))
  (label 658)
  (parent 625)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb l-1) (y y) (alpha (mul l l-0 (rec l-1))) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul l-0 (rec l-1))) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (rec l-1)) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (gen) (rec l-1)))
  (deflistener l-1)
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (8 0))
    ((2 2) (0 1)) ((3 3) (12 0)) ((4 1) (3 0)) ((4 1) (11 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 1) (9 0)) ((11 2) (10 0)) ((12 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y zeta) (y (mul l l-0 (rec l-1))) (y l-1))
  (precur (9 0) (12 0))
  (gen-st (pv a l) (pv b l-0) (pv b l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (8 0)) ((4 1) (3 0))
    ((4 1) (11 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
    (exp (gen) (mul (rec x) y zeta)) (0 3))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b l-1))))
    ((recv (cat (exp (gen) (mul l-0 (rec l-1))) l))
      (send (cat (exp (gen) (mul l-0 (rec l-1))) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) (rec l-1)) l-0))
      (send (cat (exp (gen) (rec l-1)) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (gen) (rec l-1))) (send (cat (gen) (rec l-1))))
    ((recv l-1) (send l-1))
    ((load priv-stor-1 (cat pt-3 (pv b l-1)))
      (stor priv-stor-1 (cat pt-7 "nil")) (send l-1))
    ((recv (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
      (send (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))))
  (label 659)
  (parent 625)
  (unrealized (12 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b self) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b self)
    (priv-stor priv-stor-1) (lb lb) (y y) (alpha (mul l l-0 (rec lb)))
    (zeta x))
  (deflistener (cat (exp (gen) (mul l-0 (rec lb))) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (rec lb)) l-0))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) lb) (mul (rec lb) (rec lb))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l lb))
  (deflistener lb)
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-1) (l lb))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (5 0)) ((2 1) (7 0))
    ((2 2) (0 1)) ((3 3) (0 3)) ((4 1) (3 1)) ((5 2) (4 0))
    ((6 1) (4 0)) ((7 2) (6 0)) ((8 1) (6 0)) ((9 1) (3 0))
    ((9 1) (11 0)) ((9 2) (8 0)) ((10 1) (8 0)) ((11 2) (10 0)))
  (non-orig (privk "sig" self))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec lb))) (y lb) (y x))
  (precur (8 0))
  (gen-st (pv a l) (pv self l-0) (pv self lb))
  (facts (neq (exp (gen) y) (gen)) (neq (exp (gen) x) (gen))
    (neq a self))
  (leads-to ((1 1) (0 0)) ((1 1) (5 0)) ((2 1) (7 0)) ((9 1) (3 0))
    ((9 1) (11 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 12 3 resp 4) (exp (gen) y-0) (0 3))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (send (cat na a self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-1 (cat pt-6 (pv self lb)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec lb))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a self (exp (gen) x)))
      (send
        (cat (exp (gen) y)
          (enc na nb a self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y)))))))
    ((recv (cat (exp (gen) (mul l-0 (rec lb))) l))
      (send (cat (exp (gen) (mul l-0 (rec lb))) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) (rec lb)) l-0))
      (send (cat (exp (gen) (rec lb)) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (stor priv-stor-0 (cat pt-4 "nil")) (send l-0))
    ((recv (cat (exp (gen) lb) (mul (rec lb) (rec lb))))
      (send (cat (exp (gen) lb) (mul (rec lb) (rec lb)))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self lb)))
      (send
        (sig (body self (exp (gen) lb) (pubk "sig" self))
          (privk "sig" self)))) ((recv lb) (send lb))
    ((load priv-stor-1 (cat pt-6 (pv self lb)))
      (stor priv-stor-1 (cat pt-7 "nil")) (send lb)))
  (label 660)
  (parent 626)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (x y rndx) (zeta expt)
    (l l-0 l-1 rndx) (w expt))
  (defstrand init 5 (na na) (nb nb) (a a) (b self) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul (rec x) y zeta)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b self)
    (priv-stor priv-stor-1) (lb l-1) (y y) (alpha (mul l l-0 (rec l-1)))
    (zeta zeta))
  (deflistener (cat (exp (gen) (mul l-0 (rec l-1))) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (rec l-1)) l-0))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l-1) (mul (rec l-1) (rec l-1))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-1))
  (deflistener l-1)
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-1) (l l-1))
  (deflistener (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (5 0)) ((2 1) (7 0))
    ((2 2) (0 1)) ((3 3) (12 0)) ((4 1) (3 1)) ((5 2) (4 0))
    ((6 1) (4 0)) ((7 2) (6 0)) ((8 1) (6 0)) ((9 1) (3 0))
    ((9 1) (11 0)) ((9 2) (8 0)) ((10 1) (8 0)) ((11 2) (10 0))
    ((12 1) (0 3)))
  (non-orig (privk "sig" self))
  (uniq-orig na nb l l-0 l-1)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y zeta) (y (mul l l-0 (rec l-1))) (y l-1))
  (precur (8 0) (12 0))
  (gen-st (pv a l) (pv self l-0) (pv self l-1))
  (facts (neq (exp (gen) (mul (rec x) y zeta)) (gen))
    (neq (exp (gen) zeta) (gen)) (neq a self))
  (leads-to ((1 1) (0 0)) ((1 1) (5 0)) ((2 1) (7 0)) ((9 1) (3 0))
    ((9 1) (11 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
    (exp (gen) (mul (rec x) y zeta)) (0 3))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (send (cat na a self (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul (rec x) y zeta))
          (enc na nb a self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-1 (cat pt-6 (pv self l-1)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec l-1))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a self (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))))
    ((recv (cat (exp (gen) (mul l-0 (rec l-1))) l))
      (send (cat (exp (gen) (mul l-0 (rec l-1))) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) (rec l-1)) l-0))
      (send (cat (exp (gen) (rec l-1)) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (stor priv-stor-0 (cat pt-4 "nil")) (send l-0))
    ((recv (cat (exp (gen) l-1) (mul (rec l-1) (rec l-1))))
      (send (cat (exp (gen) l-1) (mul (rec l-1) (rec l-1)))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))) ((recv l-1) (send l-1))
    ((load priv-stor-1 (cat pt-6 (pv self l-1)))
      (stor priv-stor-1 (cat pt-7 "nil")) (send l-1))
    ((recv (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))
      (send (cat (exp (gen) (mul (rec x) y zeta (rec w))) w))))
  (label 661)
  (parent 626)
  (unrealized (12 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (x rndx)
    (upsilon expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (precedes ((1 1) (0 0)) ((1 1) (4 0)) ((2 2) (0 1)) ((3 1) (0 3))
    ((4 2) (3 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (3 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (4 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-3 "nil")) (send l-0)))
  (label 662)
  (parent 627)
  (seen 629)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (x rndx) (upsilon expt) (l l-0 rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon upsilon))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (precedes ((1 1) (0 0)) ((1 1) (3 0)) ((2 1) (4 0)) ((2 2) (0 1))
    ((3 2) (0 3)) ((4 2) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq (exp (gen) upsilon) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (3 0)) ((2 1) (4 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0))
              (exp (gen) (mul x upsilon)))))) (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-4 "nil")) (send l-0)))
  (label 663)
  (parent 628)
  (seen 629)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn)
    (l l-0 x y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (la l-0) (x x) (beta l) (upsilon y))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((1 1) (3 0)) ((1 2) (0 1)) ((2 1) (0 3)) ((3 2) (2 0))
    ((4 1) (0 0)) ((4 2) (2 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv b l) (pv self l-0))
  (facts (neq (exp (gen) y) (gen)) (neq self b))
  (leads-to ((1 1) (3 0)) ((4 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (2 0))
  (traces
    ((load priv-stor-0 (cat pt-3 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-1 "nil")) (send l))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-3 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 664)
  (parent 630)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-0) (x x) (beta l) (upsilon (mul w y)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (6 0)) ((1 1) (4 0)) ((1 2) (0 1)) ((2 1) (6 0))
    ((3 1) (6 0)) ((4 2) (3 0)) ((5 1) (0 0)) ((5 2) (3 0))
    ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (6 0))
  (gen-st (pv b l) (pv b lb) (pv self l-0))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq self b))
  (leads-to ((1 1) (4 0)) ((5 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor-1 (cat pt-5 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b lb))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-5 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 665)
  (parent 631)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (precedes ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (6 0)) ((2 2) (0 1))
    ((3 1) (4 0)) ((4 2) (0 3)) ((5 1) (0 3)) ((6 2) (5 0))
    ((7 1) (5 0)) ((8 2) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (7 0))
  (gen-st (pv a l-0) (pv b l) (pv b lb))
  (facts (neq (exp (gen) y) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (6 0)) ((3 1) (4 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-6 "nil")) (send l))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-7 "nil")) (send l-0)))
  (label 666)
  (parent 632)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) (mul l l-0)) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (10 0)) ((1 1) (0 0)) ((1 1) (9 0)) ((2 1) (7 0))
    ((2 2) (0 1)) ((3 1) (5 0)) ((4 1) (10 0)) ((5 2) (4 0))
    ((6 1) (4 0)) ((7 2) (6 0)) ((8 1) (6 0)) ((9 2) (8 0))
    ((10 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (8 0) (10 0))
  (gen-st (pv a l-0) (pv b l) (pv b lb))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (9 0)) ((2 1) (7 0)) ((3 1) (5 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((recv (cat (exp (gen) (mul l l-0)) lb))
      (send (cat (exp (gen) (mul l l-0)) lb)))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-6 "nil")) (send l))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-7 "nil")) (send l-0))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 667)
  (parent 633)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-0) (x x) (beta l) (upsilon y))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-0))
  (precedes ((1 1) (4 0)) ((1 2) (0 1)) ((2 1) (0 3)) ((3 1) (0 3))
    ((4 2) (3 0)) ((5 1) (3 0)) ((6 1) (0 0)) ((6 2) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (5 0))
  (gen-st (pv b l) (pv b lb) (pv self l-0))
  (facts (neq (exp (gen) y) (gen)) (neq self b))
  (leads-to ((1 1) (4 0)) ((6 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor-1 (cat pt-5 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b lb))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-5 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 668)
  (parent 634)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-0) (x x) (beta l) (upsilon (mul w y)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (8 0)) ((1 1) (5 0)) ((1 2) (0 1)) ((2 1) (3 0))
    ((3 2) (8 0)) ((4 1) (8 0)) ((5 2) (4 0)) ((6 1) (4 0))
    ((7 1) (0 0)) ((7 2) (6 0)) ((8 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (6 0) (8 0))
  (gen-st (pv b l) (pv b lb) (pv self l-0))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq self b))
  (leads-to ((1 1) (5 0)) ((2 1) (3 0)) ((7 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor-1 (cat pt-6 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b lb))))
    ((load priv-stor-0 (cat pt-1 (pv b lb)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-4 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 669)
  (parent 635)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn)
    (l l-0 x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (precedes ((1 1) (0 0)) ((1 1) (4 0)) ((2 2) (0 1)) ((2 2) (3 0))
    ((3 1) (0 3)) ((4 2) (3 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l))
  (facts (neq (exp (gen) y) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (4 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l)))
  (label 670)
  (parent 636)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (6 0)) ((1 1) (0 0)) ((1 1) (5 0)) ((2 2) (0 1))
    ((2 2) (4 0)) ((3 1) (6 0)) ((4 1) (6 0)) ((5 2) (4 0))
    ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (6 0))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (5 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 671)
  (parent 637)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (precedes ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (8 0)) ((2 2) (0 1))
    ((3 1) (4 0)) ((4 2) (0 3)) ((5 1) (0 3)) ((6 2) (5 0))
    ((7 1) (5 0)) ((8 2) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (7 0))
  (gen-st (pv a l) (pv b l-0) (pv b lb))
  (facts (neq (exp (gen) y) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (8 0)) ((3 1) (4 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-6 "nil")) (send l))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-7 "nil")) (send l-0)))
  (label 672)
  (parent 638)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) (mul l l-0)) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (10 0)) ((1 1) (0 0)) ((1 1) (7 0)) ((2 1) (9 0))
    ((2 2) (0 1)) ((3 1) (5 0)) ((4 1) (10 0)) ((5 2) (4 0))
    ((6 1) (4 0)) ((7 2) (6 0)) ((8 1) (6 0)) ((9 2) (8 0))
    ((10 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (8 0) (10 0))
  (gen-st (pv a l) (pv b l-0) (pv b lb))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (7 0)) ((2 1) (9 0)) ((3 1) (5 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((recv (cat (exp (gen) (mul l l-0)) lb))
      (send (cat (exp (gen) (mul l l-0)) lb)))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-6 "nil")) (send l))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-7 "nil")) (send l-0))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 673)
  (parent 639)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (precedes ((1 1) (0 0)) ((1 1) (5 0)) ((2 2) (0 1)) ((2 2) (6 0))
    ((3 1) (0 3)) ((4 1) (0 3)) ((5 2) (4 0)) ((6 1) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (6 0))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) y) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (5 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one)))))
  (label 674)
  (parent 640)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (8 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((2 2) (7 0)) ((3 1) (4 0)) ((4 2) (8 0)) ((5 1) (8 0))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (7 0) (8 0))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((3 1) (4 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-6 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 675)
  (parent 641)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-0) (x x) (beta l) (upsilon y))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-0))
  (precedes ((1 1) (3 0)) ((1 2) (0 1)) ((2 1) (0 3)) ((3 2) (0 3))
    ((4 1) (0 0)) ((4 2) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv b l) (pv b lb) (pv self l-0))
  (facts (neq (exp (gen) y) (gen)) (neq self b))
  (leads-to ((1 1) (3 0)) ((4 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor-1 (cat pt-5 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b lb))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-5 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 676)
  (parent 642)
  (seen 696)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-0) (x x) (beta l) (upsilon (mul w y)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l lb))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (6 0)) ((1 1) (3 0)) ((1 2) (0 1)) ((2 1) (4 0))
    ((3 2) (6 0)) ((4 2) (6 0)) ((5 1) (0 0)) ((5 2) (6 0))
    ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (6 0))
  (gen-st (pv b l) (pv b lb) (pv self l-0))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq self b))
  (leads-to ((1 1) (3 0)) ((2 1) (4 0)) ((5 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor-1 (cat pt-6 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b lb))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((load priv-stor-0 (cat pt-1 (pv b lb)))
      (stor priv-stor-0 (cat pt-4 "nil")) (send lb))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 677)
  (parent 643)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-0) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (precedes ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (4 0)) ((2 2) (0 1))
    ((3 1) (6 0)) ((4 2) (0 3)) ((5 1) (0 3)) ((6 2) (5 0))
    ((7 1) (5 0)) ((8 2) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (7 0))
  (gen-st (pv a l-0) (pv b l) (pv b lb))
  (facts (neq (exp (gen) y) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (4 0)) ((3 1) (6 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) lb)) (send (cat (exp (gen) l-0) lb)))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send lb))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-7 "nil")) (send l-0)))
  (label 678)
  (parent 644)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) (mul l-0 (rec lb))) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-0) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (10 0)) ((1 1) (0 0)) ((1 1) (9 0)) ((2 1) (5 0))
    ((2 2) (0 1)) ((3 1) (7 0)) ((4 1) (10 0)) ((5 2) (4 0))
    ((6 1) (4 0)) ((7 2) (6 0)) ((8 1) (6 0)) ((9 2) (8 0))
    ((10 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (8 0) (10 0))
  (gen-st (pv a l-0) (pv b l) (pv b lb))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (9 0)) ((2 1) (5 0)) ((3 1) (7 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((recv (cat (exp (gen) (mul l-0 (rec lb))) l))
      (send (cat (exp (gen) (mul l-0 (rec lb))) l)))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) lb)) (send (cat (exp (gen) l-0) lb)))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send lb))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-7 "nil")) (send l-0))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 679)
  (parent 645)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-0) (x x) (beta l) (upsilon y))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-0))
  (precedes ((1 1) (3 0)) ((1 2) (0 1)) ((2 1) (4 0)) ((3 2) (0 3))
    ((4 2) (0 3)) ((5 1) (0 3)) ((6 1) (0 0)) ((6 2) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (5 0))
  (gen-st (pv b l) (pv b lb) (pv self l-0))
  (facts (neq (exp (gen) y) (gen)) (neq self b))
  (leads-to ((1 1) (3 0)) ((2 1) (4 0)) ((6 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor-1 (cat pt-6 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b lb))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((load priv-stor-0 (cat pt-1 (pv b lb)))
      (stor priv-stor-0 (cat pt-4 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 680)
  (parent 646)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-0) (x x) (beta l) (upsilon (mul w y)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (8 0)) ((1 1) (3 0)) ((1 2) (0 1)) ((2 1) (5 0))
    ((3 2) (8 0)) ((4 1) (8 0)) ((5 2) (4 0)) ((6 1) (4 0))
    ((7 1) (0 0)) ((7 2) (6 0)) ((8 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (6 0) (8 0))
  (gen-st (pv b l) (pv b lb) (pv self l-0))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq self b))
  (leads-to ((1 1) (3 0)) ((2 1) (5 0)) ((7 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor-1 (cat pt-6 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b lb))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) lb)) (send (cat (exp (gen) l-0) lb)))
    ((load priv-stor-0 (cat pt-1 (pv b lb)))
      (stor priv-stor-0 (cat pt-4 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 681)
  (parent 647)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) (mul l-0 (rec lb))) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (rec lb)) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (gen) (rec lb)))
  (deflistener lb)
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (precedes ((1 1) (0 0)) ((1 1) (7 0)) ((2 1) (5 0)) ((2 2) (0 1))
    ((3 1) (10 0)) ((4 1) (0 3)) ((5 2) (4 0)) ((6 1) (4 0))
    ((7 2) (6 0)) ((8 1) (6 0)) ((9 1) (8 0)) ((10 2) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (8 0))
  (gen-st (pv a l-0) (pv b l) (pv b lb))
  (facts (neq (exp (gen) y) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (7 0)) ((2 1) (5 0)) ((3 1) (10 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((recv (cat (exp (gen) (mul l-0 (rec lb))) l))
      (send (cat (exp (gen) (mul l-0 (rec lb))) l)))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) (rec lb)) l-0))
      (send (cat (exp (gen) (rec lb)) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0))
    ((recv (cat (gen) (rec lb))) (send (cat (gen) (rec lb))))
    ((recv lb) (send lb))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-7 "nil")) (send lb)))
  (label 682)
  (parent 648)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb lb) (y y) (alpha (mul l l-0 (rec lb))) (zeta (mul x w)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) (mul l-0 (rec lb))) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (rec lb)) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (gen) (rec lb)))
  (deflistener lb)
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (6 0))
    ((2 2) (0 1)) ((3 3) (12 0)) ((4 1) (3 0)) ((4 1) (11 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 1) (9 0)) ((11 2) (10 0)) ((12 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec lb))) (y lb) (y (mul x w)))
  (precur (9 0) (12 0))
  (gen-st (pv a l-0) (pv b l) (pv b lb))
  (facts (neq (exp (gen) (mul w y)) (gen))
    (neq (exp (gen) (mul x w)) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (6 0)) ((4 1) (3 0))
    ((4 1) (11 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 13 3 resp 4) (exp (gen) y-0) (12 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec lb))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) (mul x w))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((recv (cat (exp (gen) (mul l-0 (rec lb))) l))
      (send (cat (exp (gen) (mul l-0 (rec lb))) l)))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) (rec lb)) l-0))
      (send (cat (exp (gen) (rec lb)) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0))
    ((recv (cat (gen) (rec lb))) (send (cat (gen) (rec lb))))
    ((recv lb) (send lb))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-7 "nil")) (send lb))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 683)
  (parent 649)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b self) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l-0 (rec lb))) l))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (rec lb)) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) lb) (mul (rec lb) (rec lb))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l lb))
  (deflistener lb)
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-1) (l lb))
  (precedes ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (4 0)) ((2 2) (0 1))
    ((3 1) (0 3)) ((4 2) (3 0)) ((5 1) (3 0)) ((6 2) (5 0))
    ((7 1) (5 0)) ((8 1) (10 0)) ((8 2) (7 0)) ((9 1) (7 0))
    ((10 2) (9 0)))
  (non-orig (privk "sig" self))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (7 0))
  (gen-st (pv a l-0) (pv self l) (pv self lb))
  (facts (neq (exp (gen) y) (gen)) (neq a self))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (4 0)) ((8 1) (10 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na a self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) (mul l-0 (rec lb))) l))
      (send (cat (exp (gen) (mul l-0 (rec lb))) l)))
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) (rec lb)) l-0))
      (send (cat (exp (gen) (rec lb)) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-4 "nil")) (send l-0))
    ((recv (cat (exp (gen) lb) (mul (rec lb) (rec lb))))
      (send (cat (exp (gen) lb) (mul (rec lb) (rec lb)))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self lb)))
      (send
        (sig (body self (exp (gen) lb) (pubk "sig" self))
          (privk "sig" self)))) ((recv lb) (send lb))
    ((load priv-stor-1 (cat pt-6 (pv self lb)))
      (stor priv-stor-1 (cat pt-7 "nil")) (send lb)))
  (label 684)
  (parent 650)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b self) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (defstrand resp 4 (na na) (nb nb) (a a) (b self)
    (priv-stor priv-stor-1) (lb lb) (y y) (alpha (mul l l-0 (rec lb)))
    (zeta (mul x w)))
  (deflistener (cat (exp (gen) (mul l-0 (rec lb))) l))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (rec lb)) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) lb) (mul (rec lb) (rec lb))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l lb))
  (deflistener lb)
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (7 0)) ((2 1) (5 0))
    ((2 2) (0 1)) ((3 3) (12 0)) ((4 1) (3 1)) ((5 2) (4 0))
    ((6 1) (4 0)) ((7 2) (6 0)) ((8 1) (6 0)) ((9 1) (3 0))
    ((9 1) (11 0)) ((9 2) (8 0)) ((10 1) (8 0)) ((11 2) (10 0))
    ((12 1) (0 3)))
  (non-orig (privk "sig" self))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec lb))) (y lb) (y (mul x w)))
  (precur (8 0) (12 0))
  (gen-st (pv a l-0) (pv self l) (pv self lb))
  (facts (neq (exp (gen) (mul w y)) (gen))
    (neq (exp (gen) (mul x w)) (gen)) (neq a self))
  (leads-to ((1 1) (0 0)) ((1 1) (7 0)) ((2 1) (5 0)) ((9 1) (3 0))
    ((9 1) (11 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 13 3 resp 4) (exp (gen) y-0) (12 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na a self (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-1 (cat pt-6 (pv self lb)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec lb))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a self (exp (gen) (mul x w))))
      (send
        (cat (exp (gen) y)
          (enc na nb a self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y)))))))
    ((recv (cat (exp (gen) (mul l-0 (rec lb))) l))
      (send (cat (exp (gen) (mul l-0 (rec lb))) l)))
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) (rec lb)) l-0))
      (send (cat (exp (gen) (rec lb)) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-4 "nil")) (send l-0))
    ((recv (cat (exp (gen) lb) (mul (rec lb) (rec lb))))
      (send (cat (exp (gen) lb) (mul (rec lb) (rec lb)))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self lb)))
      (send
        (sig (body self (exp (gen) lb) (pubk "sig" self))
          (privk "sig" self)))) ((recv lb) (send lb))
    ((load priv-stor-1 (cat pt-6 (pv self lb)))
      (stor priv-stor-1 (cat pt-7 "nil")) (send lb))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 685)
  (parent 651)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (precedes ((1 1) (0 0)) ((1 1) (4 0)) ((2 2) (0 1)) ((3 1) (0 3))
    ((4 2) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) y) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (4 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (5 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l)))
  (label 686)
  (parent 652)
  (seen 702)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (6 0)) ((1 1) (0 0)) ((1 1) (4 0)) ((2 2) (0 1))
    ((3 1) (5 0)) ((4 2) (6 0)) ((5 2) (6 0)) ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (6 0))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (4 0)) ((3 1) (5 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (5 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send lb))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 687)
  (parent 653)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (precedes ((1 1) (0 0)) ((1 1) (4 0)) ((2 1) (8 0)) ((2 2) (0 1))
    ((3 1) (6 0)) ((4 2) (0 3)) ((5 1) (0 3)) ((6 2) (5 0))
    ((7 1) (5 0)) ((8 2) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (7 0))
  (gen-st (pv a l) (pv b l-0) (pv b lb))
  (facts (neq (exp (gen) y) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (4 0)) ((2 1) (8 0)) ((3 1) (6 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) lb)) (send (cat (exp (gen) l-0) lb)))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send lb))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-7 "nil")) (send l-0)))
  (label 688)
  (parent 654)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) (mul l-0 (rec lb))) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (10 0)) ((1 1) (0 0)) ((1 1) (5 0)) ((2 1) (9 0))
    ((2 2) (0 1)) ((3 1) (7 0)) ((4 1) (10 0)) ((5 2) (4 0))
    ((6 1) (4 0)) ((7 2) (6 0)) ((8 1) (6 0)) ((9 2) (8 0))
    ((10 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (8 0) (10 0))
  (gen-st (pv a l) (pv b l-0) (pv b lb))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (5 0)) ((2 1) (9 0)) ((3 1) (7 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((recv (cat (exp (gen) (mul l-0 (rec lb))) l))
      (send (cat (exp (gen) (mul l-0 (rec lb))) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) lb)) (send (cat (exp (gen) l-0) lb)))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send lb))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-7 "nil")) (send l-0))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 689)
  (parent 655)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) l-0) (one)))
  (precedes ((1 1) (0 0)) ((1 1) (4 0)) ((2 2) (0 1)) ((2 2) (6 0))
    ((3 1) (5 0)) ((4 2) (0 3)) ((5 2) (0 3)) ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (6 0))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) y) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (4 0)) ((3 1) (5 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (5 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one)))))
  (label 690)
  (parent 656)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) l-0) (one)))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (8 0)) ((1 1) (0 0)) ((1 1) (4 0)) ((2 2) (0 1))
    ((2 2) (7 0)) ((3 1) (6 0)) ((4 2) (8 0)) ((5 1) (8 0))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (7 0) (8 0))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (4 0)) ((3 1) (6 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) lb)) (send (cat (exp (gen) l-0) lb)))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 691)
  (parent 657)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) (mul l-0 (rec lb))) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (rec lb)) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (gen) (rec lb)))
  (deflistener lb)
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (precedes ((1 1) (0 0)) ((1 1) (5 0)) ((2 1) (7 0)) ((2 2) (0 1))
    ((3 1) (10 0)) ((4 1) (0 3)) ((5 2) (4 0)) ((6 1) (4 0))
    ((7 2) (6 0)) ((8 1) (6 0)) ((9 1) (8 0)) ((10 2) (9 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (8 0))
  (gen-st (pv a l) (pv b l-0) (pv b lb))
  (facts (neq (exp (gen) y) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (5 0)) ((2 1) (7 0)) ((3 1) (10 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((recv (cat (exp (gen) (mul l-0 (rec lb))) l))
      (send (cat (exp (gen) (mul l-0 (rec lb))) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) (rec lb)) l-0))
      (send (cat (exp (gen) (rec lb)) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (gen) (rec lb))) (send (cat (gen) (rec lb))))
    ((recv lb) (send lb))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-7 "nil")) (send lb)))
  (label 692)
  (parent 658)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor-1)
    (lb lb) (y y) (alpha (mul l l-0 (rec lb))) (zeta (mul x w)))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) (mul l-0 (rec lb))) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (rec lb)) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (gen) (rec lb)))
  (deflistener lb)
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (8 0))
    ((2 2) (0 1)) ((3 3) (12 0)) ((4 1) (3 0)) ((4 1) (11 0))
    ((5 1) (3 1)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 1) (9 0)) ((11 2) (10 0)) ((12 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec lb))) (y lb) (y (mul x w)))
  (precur (9 0) (12 0))
  (gen-st (pv a l) (pv b l-0) (pv b lb))
  (facts (neq (exp (gen) (mul w y)) (gen))
    (neq (exp (gen) (mul x w)) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (8 0)) ((4 1) (3 0))
    ((4 1) (11 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 13 3 resp 4) (exp (gen) y-0) (12 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec lb))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a b (exp (gen) (mul x w))))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y)))))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((recv (cat (exp (gen) (mul l-0 (rec lb))) l))
      (send (cat (exp (gen) (mul l-0 (rec lb))) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) (rec lb)) l-0))
      (send (cat (exp (gen) (rec lb)) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (gen) (rec lb))) (send (cat (gen) (rec lb))))
    ((recv lb) (send lb))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-7 "nil")) (send lb))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 693)
  (parent 659)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b self) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) (mul l-0 (rec lb))) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (rec lb)) l-0))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) lb) (mul (rec lb) (rec lb))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l lb))
  (deflistener lb)
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-1) (l lb))
  (precedes ((1 1) (0 0)) ((1 1) (4 0)) ((2 1) (6 0)) ((2 2) (0 1))
    ((3 1) (0 3)) ((4 2) (3 0)) ((5 1) (3 0)) ((6 2) (5 0))
    ((7 1) (5 0)) ((8 1) (10 0)) ((8 2) (7 0)) ((9 1) (7 0))
    ((10 2) (9 0)))
  (non-orig (privk "sig" self))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (7 0))
  (gen-st (pv a l) (pv self l-0) (pv self lb))
  (facts (neq (exp (gen) y) (gen)) (neq a self))
  (leads-to ((1 1) (0 0)) ((1 1) (4 0)) ((2 1) (6 0)) ((8 1) (10 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (send (cat na a self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) (mul l-0 (rec lb))) l))
      (send (cat (exp (gen) (mul l-0 (rec lb))) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) (rec lb)) l-0))
      (send (cat (exp (gen) (rec lb)) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (stor priv-stor-0 (cat pt-4 "nil")) (send l-0))
    ((recv (cat (exp (gen) lb) (mul (rec lb) (rec lb))))
      (send (cat (exp (gen) lb) (mul (rec lb) (rec lb)))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self lb)))
      (send
        (sig (body self (exp (gen) lb) (pubk "sig" self))
          (privk "sig" self)))) ((recv lb) (send lb))
    ((load priv-stor-1 (cat pt-6 (pv self lb)))
      (stor priv-stor-1 (cat pt-7 "nil")) (send lb)))
  (label 694)
  (parent 660)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b self) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand resp 4 (na na) (nb nb) (a a) (b self)
    (priv-stor priv-stor-1) (lb lb) (y y) (alpha (mul l l-0 (rec lb)))
    (zeta (mul x w)))
  (deflistener (cat (exp (gen) (mul l-0 (rec lb))) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (rec lb)) l-0))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) lb) (mul (rec lb) (rec lb))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l lb))
  (deflistener lb)
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (3 2)) ((1 1) (0 0)) ((1 1) (5 0)) ((2 1) (7 0))
    ((2 2) (0 1)) ((3 3) (12 0)) ((4 1) (3 1)) ((5 2) (4 0))
    ((6 1) (4 0)) ((7 2) (6 0)) ((8 1) (6 0)) ((9 1) (3 0))
    ((9 1) (11 0)) ((9 2) (8 0)) ((10 1) (8 0)) ((11 2) (10 0))
    ((12 1) (0 3)))
  (non-orig (privk "sig" self))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x y)
  (absent (x l) (x l-0) (y (mul l l-0 (rec lb))) (y lb) (y (mul x w)))
  (precur (8 0) (12 0))
  (gen-st (pv a l) (pv self l-0) (pv self lb))
  (facts (neq (exp (gen) (mul w y)) (gen))
    (neq (exp (gen) (mul x w)) (gen)) (neq a self))
  (leads-to ((1 1) (0 0)) ((1 1) (5 0)) ((2 1) (7 0)) ((9 1) (3 0))
    ((9 1) (11 0)))
  (rule assume-init-0 assume-resp-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 13 3 resp 4) (exp (gen) y-0) (12 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (send (cat na a self (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-1 (cat pt-6 (pv self lb)))
      (recv
        (sig (body a (exp (gen) (mul l l-0 (rec lb))) (pubk "sig" a))
          (privk "sig" a))) (recv (cat na a self (exp (gen) (mul x w))))
      (send
        (cat (exp (gen) y)
          (enc na nb a self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y)))))))
    ((recv (cat (exp (gen) (mul l-0 (rec lb))) l))
      (send (cat (exp (gen) (mul l-0 (rec lb))) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) (rec lb)) l-0))
      (send (cat (exp (gen) (rec lb)) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (stor priv-stor-0 (cat pt-4 "nil")) (send l-0))
    ((recv (cat (exp (gen) lb) (mul (rec lb) (rec lb))))
      (send (cat (exp (gen) lb) (mul (rec lb) (rec lb)))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self lb)))
      (send
        (sig (body self (exp (gen) lb) (pubk "sig" self))
          (privk "sig" self)))) ((recv lb) (send lb))
    ((load priv-stor-1 (cat pt-6 (pv self lb)))
      (stor priv-stor-1 (cat pt-7 "nil")) (send lb))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 695)
  (parent 661)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn)
    (l l-0 x y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (la l-0) (x x) (beta l) (upsilon y))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((1 1) (2 0)) ((1 2) (0 1)) ((2 2) (0 3)) ((3 1) (0 0))
    ((3 2) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv b l) (pv self l-0))
  (facts (neq (exp (gen) y) (gen)) (neq self b))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (2 0))
  (traces
    ((load priv-stor-0 (cat pt-3 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-1 "nil")) (send l))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-3 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 696)
  (parent 664)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn)
    (l l-0 x rndx) (w expt) (y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (la l-0) (x x) (beta l) (upsilon (mul w y)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (5 0)) ((1 1) (3 0)) ((1 2) (0 1)) ((2 1) (5 0))
    ((3 2) (2 0)) ((4 1) (0 0)) ((4 2) (2 0)) ((5 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (5 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq self b))
  (leads-to ((1 1) (3 0)) ((4 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (2 0))
  (traces
    ((load priv-stor-0 (cat pt-3 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-1 "nil")) (send l))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-3 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 697)
  (parent 665)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (precedes ((1 1) (0 0)) ((1 1) (7 0)) ((2 1) (5 0)) ((2 2) (0 1))
    ((3 1) (0 3)) ((4 1) (0 3)) ((5 2) (4 0)) ((6 1) (4 0))
    ((7 2) (6 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (6 0))
  (gen-st (pv a l-0) (pv b l) (pv b lb))
  (facts (neq (exp (gen) y) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (7 0)) ((2 1) (5 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-5 "nil")) (send l))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0)))
  (label 698)
  (parent 666)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (9 0)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (6 0))
    ((2 2) (0 1)) ((3 1) (4 0)) ((4 2) (9 0)) ((5 1) (9 0))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (7 0) (9 0))
  (gen-st (pv a l-0) (pv b l) (pv b lb))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (6 0)) ((3 1) (4 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-6 "nil")) (send l))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-7 "nil")) (send l-0))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 699)
  (parent 667)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn)
    (l l-0 x y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (la l-0) (x x) (beta l) (upsilon y))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((1 1) (3 0)) ((1 2) (0 1)) ((2 1) (0 3)) ((3 2) (2 0))
    ((4 1) (2 0)) ((5 1) (0 0)) ((5 2) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (4 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (neq (exp (gen) y) (gen)) (neq self b))
  (leads-to ((1 1) (3 0)) ((5 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (2 0))
  (traces
    ((load priv-stor-0 (cat pt-3 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-1 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-3 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 700)
  (parent 668)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-0) (x x) (beta l) (upsilon (mul w y)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (7 0)) ((1 1) (4 0)) ((1 2) (0 1)) ((2 1) (7 0))
    ((3 1) (7 0)) ((4 2) (3 0)) ((5 1) (3 0)) ((6 1) (0 0))
    ((6 2) (5 0)) ((7 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (5 0) (7 0))
  (gen-st (pv b l) (pv b lb) (pv self l-0))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq self b))
  (leads-to ((1 1) (4 0)) ((6 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor-1 (cat pt-5 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b lb))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-5 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 701)
  (parent 669)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn)
    (l l-0 x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (precedes ((1 1) (0 0)) ((1 1) (3 0)) ((2 2) (0 1)) ((3 2) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l))
  (facts (neq (exp (gen) y) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (3 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l)))
  (label 702)
  (parent 670)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn)
    (l l-0 x rndx) (w expt) (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (5 0)) ((1 1) (0 0)) ((1 1) (4 0)) ((2 2) (0 1))
    ((2 2) (3 0)) ((3 1) (5 0)) ((4 2) (3 0)) ((5 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (5 0))
  (gen-st (pv a l))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (4 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 703)
  (parent 671)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (precedes ((1 1) (0 0)) ((1 1) (5 0)) ((2 1) (7 0)) ((2 2) (0 1))
    ((3 1) (0 3)) ((4 1) (0 3)) ((5 2) (4 0)) ((6 1) (4 0))
    ((7 2) (6 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (6 0))
  (gen-st (pv a l) (pv b l-0) (pv b lb))
  (facts (neq (exp (gen) y) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (5 0)) ((2 1) (7 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-6 "nil")) (send l-0)))
  (label 704)
  (parent 672)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (9 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (8 0))
    ((2 2) (0 1)) ((3 1) (4 0)) ((4 2) (9 0)) ((5 1) (9 0))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (7 0) (9 0))
  (gen-st (pv a l) (pv b l-0) (pv b lb))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (8 0)) ((3 1) (4 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-6 "nil")) (send l))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-7 "nil")) (send l-0))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 705)
  (parent 673)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn)
    (l l-0 x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (precedes ((1 1) (0 0)) ((1 1) (4 0)) ((2 2) (0 1)) ((2 2) (5 0))
    ((3 1) (0 3)) ((4 2) (3 0)) ((5 1) (3 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (5 0))
  (gen-st (pv a l))
  (facts (neq (exp (gen) y) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (4 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one)))))
  (label 706)
  (parent 674)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (7 0)) ((1 1) (0 0)) ((1 1) (5 0)) ((2 2) (0 1))
    ((2 2) (6 0)) ((3 1) (7 0)) ((4 1) (7 0)) ((5 2) (4 0))
    ((6 1) (4 0)) ((7 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (6 0) (7 0))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (5 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 707)
  (parent 675)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-0) (x x) (beta l) (upsilon (mul w y)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (5 0)) ((1 1) (3 0)) ((1 2) (0 1)) ((2 1) (5 0))
    ((3 2) (5 0)) ((4 1) (0 0)) ((4 2) (5 0)) ((5 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (5 0))
  (gen-st (pv b l) (pv b lb) (pv self l-0))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq self b))
  (leads-to ((1 1) (3 0)) ((4 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor-1 (cat pt-5 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b lb))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-5 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 708)
  (parent 677)
  (seen 727)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) l-0) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (precedes ((1 1) (0 0)) ((1 1) (7 0)) ((2 2) (0 1)) ((3 1) (5 0))
    ((4 1) (0 3)) ((5 2) (4 0)) ((6 1) (4 0)) ((7 2) (6 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (6 0))
  (gen-st (pv a l-0) (pv b l) (pv b lb))
  (facts (neq (exp (gen) y) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (7 0)) ((3 1) (5 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((recv (cat (exp (gen) l-0) lb)) (send (cat (exp (gen) l-0) lb)))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send lb))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0)))
  (label 709)
  (parent 678)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-0) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (9 0)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (4 0))
    ((2 2) (0 1)) ((3 1) (6 0)) ((4 2) (9 0)) ((5 1) (9 0))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (7 0) (9 0))
  (gen-st (pv a l-0) (pv b l) (pv b lb))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (4 0)) ((3 1) (6 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) lb)) (send (cat (exp (gen) l-0) lb)))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send lb))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-7 "nil")) (send l-0))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 710)
  (parent 679)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-0) (x x) (beta l) (upsilon y))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-0))
  (precedes ((1 1) (3 0)) ((1 2) (0 1)) ((2 1) (0 3)) ((3 2) (0 3))
    ((4 1) (0 3)) ((5 1) (0 0)) ((5 2) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (4 0))
  (gen-st (pv b l) (pv b lb) (pv self l-0))
  (facts (neq (exp (gen) y) (gen)) (neq self b))
  (leads-to ((1 1) (3 0)) ((5 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor-1 (cat pt-5 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b lb))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-5 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 711)
  (parent 680)
  (seen 730)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-0) (x x) (beta l) (upsilon (mul w y)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l lb))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (7 0)) ((1 1) (3 0)) ((1 2) (0 1)) ((2 1) (4 0))
    ((3 2) (7 0)) ((4 2) (7 0)) ((5 1) (7 0)) ((6 1) (0 0))
    ((6 2) (5 0)) ((7 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (5 0) (7 0))
  (gen-st (pv b l) (pv b lb) (pv self l-0))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq self b))
  (leads-to ((1 1) (3 0)) ((2 1) (4 0)) ((6 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor-1 (cat pt-6 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b lb))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((load priv-stor-0 (cat pt-1 (pv b lb)))
      (stor priv-stor-0 (cat pt-4 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 712)
  (parent 681)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (rec lb)) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (gen) (rec lb)))
  (deflistener lb)
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (precedes ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (4 0)) ((2 2) (0 1))
    ((3 1) (9 0)) ((4 2) (0 3)) ((5 1) (0 3)) ((6 2) (5 0))
    ((7 1) (5 0)) ((8 1) (7 0)) ((9 2) (8 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (7 0))
  (gen-st (pv a l-0) (pv b l) (pv b lb))
  (facts (neq (exp (gen) y) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (4 0)) ((3 1) (9 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) (rec lb)) l-0))
      (send (cat (exp (gen) (rec lb)) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0))
    ((recv (cat (gen) (rec lb))) (send (cat (gen) (rec lb))))
    ((recv lb) (send lb))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-7 "nil")) (send lb)))
  (label 713)
  (parent 682)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) (mul l-0 (rec lb))) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (rec lb)) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (gen) (rec lb)))
  (deflistener lb)
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (11 0)) ((1 1) (0 0)) ((1 1) (7 0)) ((2 1) (5 0))
    ((2 2) (0 1)) ((3 1) (10 0)) ((4 1) (11 0)) ((5 2) (4 0))
    ((6 1) (4 0)) ((7 2) (6 0)) ((8 1) (6 0)) ((9 1) (8 0))
    ((10 2) (9 0)) ((11 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (8 0) (11 0))
  (gen-st (pv a l-0) (pv b l) (pv b lb))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (7 0)) ((2 1) (5 0)) ((3 1) (10 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((recv (cat (exp (gen) (mul l-0 (rec lb))) l))
      (send (cat (exp (gen) (mul l-0 (rec lb))) l)))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) (rec lb)) l-0))
      (send (cat (exp (gen) (rec lb)) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0))
    ((recv (cat (gen) (rec lb))) (send (cat (gen) (rec lb))))
    ((recv lb) (send lb))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-7 "nil")) (send lb))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 714)
  (parent 683)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b self) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (rec lb)) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) lb) (mul (rec lb) (rec lb))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l lb))
  (deflistener lb)
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-1) (l lb))
  (precedes ((1 1) (0 0)) ((1 1) (5 0)) ((2 1) (3 0)) ((2 2) (0 1))
    ((3 2) (0 3)) ((4 1) (0 3)) ((5 2) (4 0)) ((6 1) (4 0))
    ((7 1) (9 0)) ((7 2) (6 0)) ((8 1) (6 0)) ((9 2) (8 0)))
  (non-orig (privk "sig" self))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (6 0))
  (gen-st (pv a l-0) (pv self l) (pv self lb))
  (facts (neq (exp (gen) y) (gen)) (neq a self))
  (leads-to ((1 1) (0 0)) ((1 1) (5 0)) ((2 1) (3 0)) ((7 1) (9 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na a self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) (rec lb)) l-0))
      (send (cat (exp (gen) (rec lb)) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-4 "nil")) (send l-0))
    ((recv (cat (exp (gen) lb) (mul (rec lb) (rec lb))))
      (send (cat (exp (gen) lb) (mul (rec lb) (rec lb)))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self lb)))
      (send
        (sig (body self (exp (gen) lb) (pubk "sig" self))
          (privk "sig" self)))) ((recv lb) (send lb))
    ((load priv-stor-1 (cat pt-6 (pv self lb)))
      (stor priv-stor-1 (cat pt-7 "nil")) (send lb)))
  (label 715)
  (parent 684)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b self) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l-0 (rec lb))) l))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (rec lb)) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) lb) (mul (rec lb) (rec lb))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l lb))
  (deflistener lb)
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (11 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (4 0))
    ((2 2) (0 1)) ((3 1) (11 0)) ((4 2) (3 0)) ((5 1) (3 0))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 1) (10 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 2) (9 0)) ((11 1) (0 3)))
  (non-orig (privk "sig" self))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (7 0) (11 0))
  (gen-st (pv a l-0) (pv self l) (pv self lb))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a self))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (4 0)) ((8 1) (10 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na a self (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) (mul l-0 (rec lb))) l))
      (send (cat (exp (gen) (mul l-0 (rec lb))) l)))
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) (rec lb)) l-0))
      (send (cat (exp (gen) (rec lb)) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-4 "nil")) (send l-0))
    ((recv (cat (exp (gen) lb) (mul (rec lb) (rec lb))))
      (send (cat (exp (gen) lb) (mul (rec lb) (rec lb)))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self lb)))
      (send
        (sig (body self (exp (gen) lb) (pubk "sig" self))
          (privk "sig" self)))) ((recv lb) (send lb))
    ((load priv-stor-1 (cat pt-6 (pv self lb)))
      (stor priv-stor-1 (cat pt-7 "nil")) (send lb))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 716)
  (parent 685)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (5 0)) ((1 1) (0 0)) ((1 1) (4 0)) ((2 2) (0 1))
    ((3 1) (5 0)) ((4 2) (5 0)) ((5 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (5 0))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (4 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (5 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 717)
  (parent 687)
  (seen 733)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (precedes ((1 1) (0 0)) ((1 1) (4 0)) ((2 1) (7 0)) ((2 2) (0 1))
    ((3 1) (5 0)) ((4 2) (0 3)) ((5 2) (0 3)) ((6 1) (0 3))
    ((7 2) (6 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (6 0))
  (gen-st (pv a l) (pv b l-0) (pv b lb))
  (facts (neq (exp (gen) y) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (4 0)) ((2 1) (7 0)) ((3 1) (5 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (5 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send lb))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-7 "nil")) (send l-0)))
  (label 718)
  (parent 688)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (9 0)) ((1 1) (0 0)) ((1 1) (4 0)) ((2 1) (8 0))
    ((2 2) (0 1)) ((3 1) (6 0)) ((4 2) (9 0)) ((5 1) (9 0))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (7 0) (9 0))
  (gen-st (pv a l) (pv b l-0) (pv b lb))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (4 0)) ((2 1) (8 0)) ((3 1) (6 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) lb)) (send (cat (exp (gen) l-0) lb)))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send lb))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-7 "nil")) (send l-0))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 719)
  (parent 689)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (precedes ((1 1) (0 0)) ((1 1) (4 0)) ((2 2) (0 1)) ((2 2) (5 0))
    ((3 1) (0 3)) ((4 2) (0 3)) ((5 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (5 0))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) y) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (4 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (5 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one)))))
  (label 720)
  (parent 690)
  (seen 736)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) l-0) (one)))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (7 0)) ((1 1) (0 0)) ((1 1) (4 0)) ((2 2) (0 1))
    ((2 2) (6 0)) ((3 1) (5 0)) ((4 2) (7 0)) ((5 2) (7 0))
    ((6 1) (7 0)) ((7 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (6 0) (7 0))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (4 0)) ((3 1) (5 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (5 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send lb))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 721)
  (parent 691)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (rec lb)) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (gen) (rec lb)))
  (deflistener lb)
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (precedes ((1 1) (0 0)) ((1 1) (4 0)) ((2 1) (6 0)) ((2 2) (0 1))
    ((3 1) (9 0)) ((4 2) (0 3)) ((5 1) (0 3)) ((6 2) (5 0))
    ((7 1) (5 0)) ((8 1) (7 0)) ((9 2) (8 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (7 0))
  (gen-st (pv a l) (pv b l-0) (pv b lb))
  (facts (neq (exp (gen) y) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (4 0)) ((2 1) (6 0)) ((3 1) (9 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) (rec lb)) l-0))
      (send (cat (exp (gen) (rec lb)) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (gen) (rec lb))) (send (cat (gen) (rec lb))))
    ((recv lb) (send lb))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-7 "nil")) (send lb)))
  (label 722)
  (parent 692)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) (mul l-0 (rec lb))) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (rec lb)) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (gen) (rec lb)))
  (deflistener lb)
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (11 0)) ((1 1) (0 0)) ((1 1) (5 0)) ((2 1) (7 0))
    ((2 2) (0 1)) ((3 1) (10 0)) ((4 1) (11 0)) ((5 2) (4 0))
    ((6 1) (4 0)) ((7 2) (6 0)) ((8 1) (6 0)) ((9 1) (8 0))
    ((10 2) (9 0)) ((11 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (8 0) (11 0))
  (gen-st (pv a l) (pv b l-0) (pv b lb))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (5 0)) ((2 1) (7 0)) ((3 1) (10 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((recv (cat (exp (gen) (mul l-0 (rec lb))) l))
      (send (cat (exp (gen) (mul l-0 (rec lb))) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) (rec lb)) l-0))
      (send (cat (exp (gen) (rec lb)) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (gen) (rec lb))) (send (cat (gen) (rec lb))))
    ((recv lb) (send lb))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-7 "nil")) (send lb))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 723)
  (parent 693)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b self) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (rec lb)) l-0))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) lb) (mul (rec lb) (rec lb))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l lb))
  (deflistener lb)
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-1) (l lb))
  (precedes ((1 1) (0 0)) ((1 1) (3 0)) ((2 1) (5 0)) ((2 2) (0 1))
    ((3 2) (0 3)) ((4 1) (0 3)) ((5 2) (4 0)) ((6 1) (4 0))
    ((7 1) (9 0)) ((7 2) (6 0)) ((8 1) (6 0)) ((9 2) (8 0)))
  (non-orig (privk "sig" self))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (6 0))
  (gen-st (pv a l) (pv self l-0) (pv self lb))
  (facts (neq (exp (gen) y) (gen)) (neq a self))
  (leads-to ((1 1) (0 0)) ((1 1) (3 0)) ((2 1) (5 0)) ((7 1) (9 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (send (cat na a self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) (rec lb)) l-0))
      (send (cat (exp (gen) (rec lb)) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (stor priv-stor-0 (cat pt-4 "nil")) (send l-0))
    ((recv (cat (exp (gen) lb) (mul (rec lb) (rec lb))))
      (send (cat (exp (gen) lb) (mul (rec lb) (rec lb)))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self lb)))
      (send
        (sig (body self (exp (gen) lb) (pubk "sig" self))
          (privk "sig" self)))) ((recv lb) (send lb))
    ((load priv-stor-1 (cat pt-6 (pv self lb)))
      (stor priv-stor-1 (cat pt-7 "nil")) (send lb)))
  (label 724)
  (parent 694)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b self) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) (mul l-0 (rec lb))) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (rec lb)) l-0))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) lb) (mul (rec lb) (rec lb))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l lb))
  (deflistener lb)
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (11 0)) ((1 1) (0 0)) ((1 1) (4 0)) ((2 1) (6 0))
    ((2 2) (0 1)) ((3 1) (11 0)) ((4 2) (3 0)) ((5 1) (3 0))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 1) (10 0)) ((8 2) (7 0))
    ((9 1) (7 0)) ((10 2) (9 0)) ((11 1) (0 3)))
  (non-orig (privk "sig" self))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (7 0) (11 0))
  (gen-st (pv a l) (pv self l-0) (pv self lb))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a self))
  (leads-to ((1 1) (0 0)) ((1 1) (4 0)) ((2 1) (6 0)) ((8 1) (10 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (send (cat na a self (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) (mul l-0 (rec lb))) l))
      (send (cat (exp (gen) (mul l-0 (rec lb))) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) (rec lb)) l-0))
      (send (cat (exp (gen) (rec lb)) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (stor priv-stor-0 (cat pt-4 "nil")) (send l-0))
    ((recv (cat (exp (gen) lb) (mul (rec lb) (rec lb))))
      (send (cat (exp (gen) lb) (mul (rec lb) (rec lb)))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self lb)))
      (send
        (sig (body self (exp (gen) lb) (pubk "sig" self))
          (privk "sig" self)))) ((recv lb) (send lb))
    ((load priv-stor-1 (cat pt-6 (pv self lb)))
      (stor priv-stor-1 (cat pt-7 "nil")) (send lb))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 725)
  (parent 695)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn)
    (l l-0 x y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (la l-0) (x x) (beta l) (upsilon y))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((1 1) (2 0)) ((1 2) (0 1)) ((2 2) (0 3)) ((3 1) (0 0))
    ((3 2) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv b l) (pv self l-0))
  (facts (neq (exp (gen) y) (gen)) (neq self b))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization forgot nb)
  (traces
    ((load priv-stor-0 (cat pt-3 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-1 "nil")) (send l))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-3 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 726)
  (parent 696)
  (realized)
  (shape)
  (maps
    ((0)
      ((a self) (b b) (la l-0) (x x) (beta l) (upsilon y) (na na)
        (nb nb) (priv-stor priv-stor-0))))
  (origs (l-0 (3 1)) (pt-3 (3 1)) (pt-1 (2 1)) (l (1 1)) (pt-0 (1 1))
    (na (0 2)))
  (ugens (x (0 2))))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn)
    (l l-0 x rndx) (w expt) (y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (la l-0) (x x) (beta l) (upsilon (mul w y)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (4 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 2) (4 0))
    ((3 1) (0 0)) ((3 2) (4 0)) ((4 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (4 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq self b))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (2 0))
  (traces
    ((load priv-stor-0 (cat pt-3 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-1 "nil")) (send l))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-3 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 727)
  (parent 697)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (l l-0 x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (precedes ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (4 0)) ((2 2) (0 1))
    ((3 1) (0 3)) ((4 2) (3 0)) ((5 1) (3 0)) ((6 2) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (5 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq (exp (gen) y) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (4 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-4 "nil")) (send l-0)))
  (label 728)
  (parent 698)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (8 0)) ((1 1) (0 0)) ((1 1) (7 0)) ((2 1) (5 0))
    ((2 2) (0 1)) ((3 1) (8 0)) ((4 1) (8 0)) ((5 2) (4 0))
    ((6 1) (4 0)) ((7 2) (6 0)) ((8 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (6 0) (8 0))
  (gen-st (pv a l-0) (pv b l) (pv b lb))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (7 0)) ((2 1) (5 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-5 "nil")) (send l))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 729)
  (parent 699)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn)
    (l l-0 x y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (la l-0) (x x) (beta l) (upsilon y))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((1 1) (2 0)) ((1 2) (0 1)) ((2 2) (0 3)) ((3 1) (0 3))
    ((4 1) (0 0)) ((4 2) (3 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (3 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (neq (exp (gen) y) (gen)) (neq self b))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (2 0))
  (traces
    ((load priv-stor-0 (cat pt-3 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-1 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-3 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 730)
  (parent 700)
  (seen 696)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn)
    (l l-0 x rndx) (w expt) (y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (la l-0) (x x) (beta l) (upsilon (mul w y)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (6 0)) ((1 1) (3 0)) ((1 2) (0 1)) ((2 1) (6 0))
    ((3 2) (2 0)) ((4 1) (2 0)) ((5 1) (0 0)) ((5 2) (4 0))
    ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (4 0) (6 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq self b))
  (leads-to ((1 1) (3 0)) ((5 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (2 0))
  (traces
    ((load priv-stor-0 (cat pt-3 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-1 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-3 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 731)
  (parent 701)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn)
    (l l-0 x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (precedes ((1 1) (0 0)) ((1 1) (3 0)) ((2 2) (0 1)) ((3 2) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l))
  (facts (neq (exp (gen) y) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (3 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization forgot nb)
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l)))
  (label 732)
  (parent 702)
  (realized)
  (shape)
  (maps
    ((0)
      ((a a) (b b) (la l) (x x) (beta l-0) (upsilon y) (na na) (nb nb)
        (priv-stor priv-stor))))
  (origs (l-0 (2 1)) (pt-2 (2 1)) (pt-3 (3 1)) (l (1 1)) (pt (1 1))
    (na (0 2)))
  (ugens (x (0 2))))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn)
    (l l-0 x rndx) (w expt) (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (4 0)) ((1 1) (0 0)) ((1 1) (3 0)) ((2 2) (0 1))
    ((3 2) (4 0)) ((4 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (4 0))
  (gen-st (pv a l))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (3 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 733)
  (parent 703)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (l l-0 x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (precedes ((1 1) (0 0)) ((1 1) (4 0)) ((2 1) (6 0)) ((2 2) (0 1))
    ((3 1) (0 3)) ((4 2) (3 0)) ((5 1) (3 0)) ((6 2) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (5 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq (exp (gen) y) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (4 0)) ((2 1) (6 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-4 "nil")) (send l-0)))
  (label 734)
  (parent 704)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (8 0)) ((1 1) (0 0)) ((1 1) (5 0)) ((2 1) (7 0))
    ((2 2) (0 1)) ((3 1) (8 0)) ((4 1) (8 0)) ((5 2) (4 0))
    ((6 1) (4 0)) ((7 2) (6 0)) ((8 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (6 0) (8 0))
  (gen-st (pv a l) (pv b l-0) (pv b lb))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (5 0)) ((2 1) (7 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 735)
  (parent 705)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn)
    (l l-0 x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (precedes ((1 1) (0 0)) ((1 1) (3 0)) ((2 2) (0 1)) ((2 2) (4 0))
    ((3 2) (0 3)) ((4 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (4 0))
  (gen-st (pv a l))
  (facts (neq (exp (gen) y) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (3 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one)))))
  (label 736)
  (parent 706)
  (seen 702)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn)
    (l l-0 x rndx) (w expt) (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (6 0)) ((1 1) (0 0)) ((1 1) (4 0)) ((2 2) (0 1))
    ((2 2) (5 0)) ((3 1) (6 0)) ((4 2) (3 0)) ((5 1) (3 0))
    ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (5 0) (6 0))
  (gen-st (pv a l))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (4 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 737)
  (parent 707)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (precedes ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1)) ((3 1) (4 0))
    ((4 2) (0 3)) ((5 1) (0 3)) ((6 2) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (5 0))
  (gen-st (pv a l-0) (pv b l) (pv b lb))
  (facts (neq (exp (gen) y) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((3 1) (4 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send lb))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0)))
  (label 738)
  (parent 709)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) l-0) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (8 0)) ((1 1) (0 0)) ((1 1) (7 0)) ((2 2) (0 1))
    ((3 1) (5 0)) ((4 1) (8 0)) ((5 2) (4 0)) ((6 1) (4 0))
    ((7 2) (6 0)) ((8 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (6 0) (8 0))
  (gen-st (pv a l-0) (pv b l) (pv b lb))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (7 0)) ((3 1) (5 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((recv (cat (exp (gen) l-0) lb)) (send (cat (exp (gen) l-0) lb)))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send lb))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 739)
  (parent 710)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-1) (la l-0) (x x) (beta l) (upsilon (mul w y)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 2 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-0))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (6 0)) ((1 1) (3 0)) ((1 2) (0 1)) ((2 1) (6 0))
    ((3 2) (6 0)) ((4 1) (6 0)) ((5 1) (0 0)) ((5 2) (4 0))
    ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (4 0) (6 0))
  (gen-st (pv b l) (pv b lb) (pv self l-0))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq self b))
  (leads-to ((1 1) (3 0)) ((5 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor-1 (cat pt-5 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-1 (pv b lb))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-5 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 740)
  (parent 712)
  (seen 755)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) (rec lb)) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (gen) (rec lb)))
  (deflistener lb)
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (precedes ((1 1) (0 0)) ((1 1) (5 0)) ((2 2) (0 1)) ((3 1) (8 0))
    ((4 1) (0 3)) ((5 2) (4 0)) ((6 1) (4 0)) ((7 1) (6 0))
    ((8 2) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (6 0))
  (gen-st (pv a l-0) (pv b l) (pv b lb))
  (facts (neq (exp (gen) y) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (5 0)) ((3 1) (8 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((recv (cat (exp (gen) (rec lb)) l-0))
      (send (cat (exp (gen) (rec lb)) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-5 "nil")) (send l-0))
    ((recv (cat (gen) (rec lb))) (send (cat (gen) (rec lb))))
    ((recv lb) (send lb))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send lb)))
  (label 741)
  (parent 713)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (rec lb)) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (gen) (rec lb)))
  (deflistener lb)
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (10 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (4 0))
    ((2 2) (0 1)) ((3 1) (9 0)) ((4 2) (10 0)) ((5 1) (10 0))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 1) (7 0)) ((9 2) (8 0))
    ((10 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (7 0) (10 0))
  (gen-st (pv a l-0) (pv b l) (pv b lb))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (4 0)) ((3 1) (9 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) (rec lb)) l-0))
      (send (cat (exp (gen) (rec lb)) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0))
    ((recv (cat (gen) (rec lb))) (send (cat (gen) (rec lb))))
    ((recv lb) (send lb))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-7 "nil")) (send lb))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 742)
  (parent 714)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b self) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (rec lb)) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) lb) (mul (rec lb) (rec lb))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l lb))
  (deflistener lb)
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-1) (l lb))
  (precedes ((1 1) (0 0)) ((1 1) (4 0)) ((2 2) (0 1)) ((3 1) (0 3))
    ((4 2) (3 0)) ((5 1) (3 0)) ((6 1) (8 0)) ((6 2) (5 0))
    ((7 1) (5 0)) ((8 2) (7 0)))
  (non-orig (privk "sig" self))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (5 0))
  (gen-st (pv a l-0) (pv self l) (pv self lb))
  (facts (neq (exp (gen) y) (gen)) (neq a self))
  (leads-to ((1 1) (0 0)) ((1 1) (4 0)) ((6 1) (8 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na a self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) (rec lb)) l-0))
      (send (cat (exp (gen) (rec lb)) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-3 "nil")) (send l-0))
    ((recv (cat (exp (gen) lb) (mul (rec lb) (rec lb))))
      (send (cat (exp (gen) lb) (mul (rec lb) (rec lb)))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-5 (pv self lb)))
      (send
        (sig (body self (exp (gen) lb) (pubk "sig" self))
          (privk "sig" self)))) ((recv lb) (send lb))
    ((load priv-stor-1 (cat pt-5 (pv self lb)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send lb)))
  (label 743)
  (parent 715)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b self) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (rec lb)) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) lb) (mul (rec lb) (rec lb))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l lb))
  (deflistener lb)
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (10 0)) ((1 1) (0 0)) ((1 1) (5 0)) ((2 1) (3 0))
    ((2 2) (0 1)) ((3 2) (10 0)) ((4 1) (10 0)) ((5 2) (4 0))
    ((6 1) (4 0)) ((7 1) (9 0)) ((7 2) (6 0)) ((8 1) (6 0))
    ((9 2) (8 0)) ((10 1) (0 3)))
  (non-orig (privk "sig" self))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (6 0) (10 0))
  (gen-st (pv a l-0) (pv self l) (pv self lb))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a self))
  (leads-to ((1 1) (0 0)) ((1 1) (5 0)) ((2 1) (3 0)) ((7 1) (9 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na a self (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor-0 (cat pt-2 (pv self l)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) (rec lb)) l-0))
      (send (cat (exp (gen) (rec lb)) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-4 "nil")) (send l-0))
    ((recv (cat (exp (gen) lb) (mul (rec lb) (rec lb))))
      (send (cat (exp (gen) lb) (mul (rec lb) (rec lb)))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self lb)))
      (send
        (sig (body self (exp (gen) lb) (pubk "sig" self))
          (privk "sig" self)))) ((recv lb) (send lb))
    ((load priv-stor-1 (cat pt-6 (pv self lb)))
      (stor priv-stor-1 (cat pt-7 "nil")) (send lb))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 744)
  (parent 716)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (precedes ((1 1) (0 0)) ((1 1) (4 0)) ((2 1) (6 0)) ((2 2) (0 1))
    ((3 1) (0 3)) ((4 2) (0 3)) ((5 1) (0 3)) ((6 2) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (5 0))
  (gen-st (pv a l) (pv b l-0) (pv b lb))
  (facts (neq (exp (gen) y) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (4 0)) ((2 1) (6 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (5 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-6 "nil")) (send l-0)))
  (label 745)
  (parent 718)
  (seen 757)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (8 0)) ((1 1) (0 0)) ((1 1) (4 0)) ((2 1) (7 0))
    ((2 2) (0 1)) ((3 1) (5 0)) ((4 2) (8 0)) ((5 2) (8 0))
    ((6 1) (8 0)) ((7 2) (6 0)) ((8 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (6 0) (8 0))
  (gen-st (pv a l) (pv b l-0) (pv b lb))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (4 0)) ((2 1) (7 0)) ((3 1) (5 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (5 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send lb))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-7 "nil")) (send l-0))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 746)
  (parent 719)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (6 0)) ((1 1) (0 0)) ((1 1) (4 0)) ((2 2) (0 1))
    ((2 2) (5 0)) ((3 1) (6 0)) ((4 2) (6 0)) ((5 1) (6 0))
    ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (5 0) (6 0))
  (gen-st (pv a l) (pv b lb))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (4 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (5 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 747)
  (parent 721)
  (seen 759)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (gen) (rec lb)))
  (deflistener lb)
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (precedes ((1 1) (0 0)) ((1 1) (4 0)) ((2 1) (5 0)) ((2 2) (0 1))
    ((3 1) (8 0)) ((4 2) (0 3)) ((5 2) (0 3)) ((6 1) (0 3))
    ((7 1) (6 0)) ((8 2) (7 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (6 0))
  (gen-st (pv a l) (pv b l-0) (pv b lb))
  (facts (neq (exp (gen) y) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (4 0)) ((2 1) (5 0)) ((3 1) (8 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (5 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (gen) (rec lb))) (send (cat (gen) (rec lb))))
    ((recv lb) (send lb))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-7 "nil")) (send lb)))
  (label 748)
  (parent 722)
  (seen 762)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (rec lb)) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (gen) (rec lb)))
  (deflistener lb)
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (10 0)) ((1 1) (0 0)) ((1 1) (4 0)) ((2 1) (6 0))
    ((2 2) (0 1)) ((3 1) (9 0)) ((4 2) (10 0)) ((5 1) (10 0))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 1) (7 0)) ((9 2) (8 0))
    ((10 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (7 0) (10 0))
  (gen-st (pv a l) (pv b l-0) (pv b lb))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (4 0)) ((2 1) (6 0)) ((3 1) (9 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (exp (gen) (rec lb)) l-0))
      (send (cat (exp (gen) (rec lb)) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (gen) (rec lb))) (send (cat (gen) (rec lb))))
    ((recv lb) (send lb))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-7 "nil")) (send lb))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 749)
  (parent 723)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b self) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) lb) (mul (rec lb) (rec lb))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l lb))
  (deflistener lb)
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-1) (l lb))
  (precedes ((1 1) (0 0)) ((1 1) (3 0)) ((2 1) (4 0)) ((2 2) (0 1))
    ((3 2) (0 3)) ((4 2) (0 3)) ((5 1) (0 3)) ((6 1) (8 0))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)))
  (non-orig (privk "sig" self))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (5 0))
  (gen-st (pv a l) (pv self l-0) (pv self lb))
  (facts (neq (exp (gen) y) (gen)) (neq a self))
  (leads-to ((1 1) (0 0)) ((1 1) (3 0)) ((2 1) (4 0)) ((6 1) (8 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (send (cat na a self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (stor priv-stor-0 (cat pt-4 "nil")) (send l-0))
    ((recv (cat (exp (gen) lb) (mul (rec lb) (rec lb))))
      (send (cat (exp (gen) lb) (mul (rec lb) (rec lb)))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self lb)))
      (send
        (sig (body self (exp (gen) lb) (pubk "sig" self))
          (privk "sig" self)))) ((recv lb) (send lb))
    ((load priv-stor-1 (cat pt-6 (pv self lb)))
      (stor priv-stor-1 (cat pt-7 "nil")) (send lb)))
  (label 750)
  (parent 724)
  (seen 764)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b self) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) (rec lb)) l-0))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) lb) (mul (rec lb) (rec lb))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l lb))
  (deflistener lb)
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (10 0)) ((1 1) (0 0)) ((1 1) (3 0)) ((2 1) (5 0))
    ((2 2) (0 1)) ((3 2) (10 0)) ((4 1) (10 0)) ((5 2) (4 0))
    ((6 1) (4 0)) ((7 1) (9 0)) ((7 2) (6 0)) ((8 1) (6 0))
    ((9 2) (8 0)) ((10 1) (0 3)))
  (non-orig (privk "sig" self))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (6 0) (10 0))
  (gen-st (pv a l) (pv self l-0) (pv self lb))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a self))
  (leads-to ((1 1) (0 0)) ((1 1) (3 0)) ((2 1) (5 0)) ((7 1) (9 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (send (cat na a self (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) (rec lb)) l-0))
      (send (cat (exp (gen) (rec lb)) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (stor priv-stor-0 (cat pt-4 "nil")) (send l-0))
    ((recv (cat (exp (gen) lb) (mul (rec lb) (rec lb))))
      (send (cat (exp (gen) lb) (mul (rec lb) (rec lb)))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self lb)))
      (send
        (sig (body self (exp (gen) lb) (pubk "sig" self))
          (privk "sig" self)))) ((recv lb) (send lb))
    ((load priv-stor-1 (cat pt-6 (pv self lb)))
      (stor priv-stor-1 (cat pt-7 "nil")) (send lb))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 751)
  (parent 725)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn)
    (l l-0 x rndx) (w expt) (y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (la l-0) (x x) (beta l) (upsilon (mul w y)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((1 1) (2 0)) ((1 2) (0 1)) ((2 2) (0 3)) ((3 1) (0 0))
    ((3 2) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv b l) (pv self l-0))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq self b))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor-0 (cat pt-3 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-1 "nil")) (send l))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-3 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 752)
  (parent 727)
  (seen 514)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (l l-0 x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (precedes ((1 1) (0 0)) ((1 1) (5 0)) ((2 1) (3 0)) ((2 2) (0 1))
    ((3 2) (0 3)) ((4 1) (0 3)) ((5 2) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (4 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq (exp (gen) y) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (5 0)) ((2 1) (3 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-4 "nil")) (send l-0)))
  (label 753)
  (parent 728)
  (seen 426)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (l l-0 x rndx) (w expt) (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (7 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (4 0))
    ((2 2) (0 1)) ((3 1) (7 0)) ((4 2) (3 0)) ((5 1) (3 0))
    ((6 2) (5 0)) ((7 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (5 0) (7 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (4 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-4 "nil")) (send l-0))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 754)
  (parent 729)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn)
    (l l-0 x rndx) (w expt) (y rndx))
  (defstrand init 5 (na na) (nb nb) (a self) (b b)
    (priv-stor priv-stor-0) (la l-0) (x x) (beta l) (upsilon (mul w y)))
  (defstrand ltx-gen 3 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (5 0)) ((1 1) (2 0)) ((1 2) (0 1)) ((2 2) (5 0))
    ((3 1) (5 0)) ((4 1) (0 0)) ((4 2) (3 0)) ((5 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (3 0) (5 0))
  (gen-st (pv b l) (pv self l-0))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq self b))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (2 0))
  (traces
    ((load priv-stor-0 (cat pt-3 (pv self l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na self b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb self b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt-0 (pv b l)))
      (stor priv-stor (cat pt-1 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-3 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 755)
  (parent 731)
  (seen 727)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn)
    (l l-0 x rndx) (w expt) (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (precedes ((1 1) (0 0)) ((1 1) (3 0)) ((2 2) (0 1)) ((3 2) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (3 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l)))
  (label 756)
  (parent 733)
  (seen 517)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (l l-0 x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (precedes ((1 1) (0 0)) ((1 1) (3 0)) ((2 1) (5 0)) ((2 2) (0 1))
    ((3 2) (0 3)) ((4 1) (0 3)) ((5 2) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (4 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq (exp (gen) y) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (3 0)) ((2 1) (5 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-4 "nil")) (send l-0)))
  (label 757)
  (parent 734)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (l l-0 x rndx) (w expt) (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (7 0)) ((1 1) (0 0)) ((1 1) (4 0)) ((2 1) (6 0))
    ((2 2) (0 1)) ((3 1) (7 0)) ((4 2) (3 0)) ((5 1) (3 0))
    ((6 2) (5 0)) ((7 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (5 0) (7 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (4 0)) ((2 1) (6 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-4 "nil")) (send l-0))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 758)
  (parent 735)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn)
    (l l-0 x rndx) (w expt) (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (5 0)) ((1 1) (0 0)) ((1 1) (3 0)) ((2 2) (0 1))
    ((2 2) (4 0)) ((3 2) (5 0)) ((4 1) (5 0)) ((5 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (4 0) (5 0))
  (gen-st (pv a l))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (3 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 759)
  (parent 737)
  (seen 733)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (precedes ((1 1) (0 0)) ((1 1) (5 0)) ((2 2) (0 1)) ((3 1) (0 3))
    ((4 1) (0 3)) ((5 2) (4 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (4 0))
  (gen-st (pv a l-0) (pv b l) (pv b lb))
  (facts (neq (exp (gen) y) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (5 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-5 "nil")) (send l-0)))
  (label 760)
  (parent 738)
  (seen 426)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (7 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((3 1) (4 0)) ((4 2) (7 0)) ((5 1) (7 0)) ((6 2) (5 0))
    ((7 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (5 0) (7 0))
  (gen-st (pv a l-0) (pv b l) (pv b lb))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((3 1) (4 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-5 "nil")) (send lb))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 761)
  (parent 739)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (gen) (rec lb)))
  (deflistener lb)
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (precedes ((1 1) (0 0)) ((1 1) (4 0)) ((2 2) (0 1)) ((3 1) (7 0))
    ((4 2) (0 3)) ((5 1) (0 3)) ((6 1) (5 0)) ((7 2) (6 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (5 0))
  (gen-st (pv a l-0) (pv b l) (pv b lb))
  (facts (neq (exp (gen) y) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (4 0)) ((3 1) (7 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-5 "nil")) (send l-0))
    ((recv (cat (gen) (rec lb))) (send (cat (gen) (rec lb))))
    ((recv lb) (send lb))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send lb)))
  (label 762)
  (parent 741)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) (rec lb)) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (gen) (rec lb)))
  (deflistener lb)
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (9 0)) ((1 1) (0 0)) ((1 1) (5 0)) ((2 2) (0 1))
    ((3 1) (8 0)) ((4 1) (9 0)) ((5 2) (4 0)) ((6 1) (4 0))
    ((7 1) (6 0)) ((8 2) (7 0)) ((9 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (6 0) (9 0))
  (gen-st (pv a l-0) (pv b l) (pv b lb))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (5 0)) ((3 1) (8 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((recv (cat (exp (gen) (rec lb)) l-0))
      (send (cat (exp (gen) (rec lb)) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-5 "nil")) (send l-0))
    ((recv (cat (gen) (rec lb))) (send (cat (gen) (rec lb))))
    ((recv lb) (send lb))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send lb))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 763)
  (parent 742)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b self) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) lb) (mul (rec lb) (rec lb))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l lb))
  (deflistener lb)
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-1) (l lb))
  (precedes ((1 1) (0 0)) ((1 1) (3 0)) ((2 2) (0 1)) ((3 2) (0 3))
    ((4 1) (0 3)) ((5 1) (7 0)) ((5 2) (4 0)) ((6 1) (4 0))
    ((7 2) (6 0)))
  (non-orig (privk "sig" self))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (4 0))
  (gen-st (pv a l-0) (pv self l) (pv self lb))
  (facts (neq (exp (gen) y) (gen)) (neq a self))
  (leads-to ((1 1) (0 0)) ((1 1) (3 0)) ((5 1) (7 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na a self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-3 "nil")) (send l-0))
    ((recv (cat (exp (gen) lb) (mul (rec lb) (rec lb))))
      (send (cat (exp (gen) lb) (mul (rec lb) (rec lb)))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-5 (pv self lb)))
      (send
        (sig (body self (exp (gen) lb) (pubk "sig" self))
          (privk "sig" self)))) ((recv lb) (send lb))
    ((load priv-stor-1 (cat pt-5 (pv self lb)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send lb)))
  (label 764)
  (parent 743)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b self) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (rec lb)) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) lb) (mul (rec lb) (rec lb))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l lb))
  (deflistener lb)
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (9 0)) ((1 1) (0 0)) ((1 1) (4 0)) ((2 2) (0 1))
    ((3 1) (9 0)) ((4 2) (3 0)) ((5 1) (3 0)) ((6 1) (8 0))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (0 3)))
  (non-orig (privk "sig" self))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (5 0) (9 0))
  (gen-st (pv a l-0) (pv self l) (pv self lb))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a self))
  (leads-to ((1 1) (0 0)) ((1 1) (4 0)) ((6 1) (8 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na a self (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((recv (cat (exp (gen) (rec lb)) l-0))
      (send (cat (exp (gen) (rec lb)) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-3 "nil")) (send l-0))
    ((recv (cat (exp (gen) lb) (mul (rec lb) (rec lb))))
      (send (cat (exp (gen) lb) (mul (rec lb) (rec lb)))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-5 (pv self lb)))
      (send
        (sig (body self (exp (gen) lb) (pubk "sig" self))
          (privk "sig" self)))) ((recv lb) (send lb))
    ((load priv-stor-1 (cat pt-5 (pv self lb)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send lb))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 765)
  (parent 744)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (7 0)) ((1 1) (0 0)) ((1 1) (4 0)) ((2 1) (6 0))
    ((2 2) (0 1)) ((3 1) (7 0)) ((4 2) (7 0)) ((5 1) (7 0))
    ((6 2) (5 0)) ((7 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (5 0) (7 0))
  (gen-st (pv a l) (pv b l-0) (pv b lb))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (4 0)) ((2 1) (6 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (5 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 766)
  (parent 746)
  (seen 771)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (gen) (rec lb)))
  (deflistener lb)
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (9 0)) ((1 1) (0 0)) ((1 1) (4 0)) ((2 1) (5 0))
    ((2 2) (0 1)) ((3 1) (8 0)) ((4 2) (9 0)) ((5 2) (9 0))
    ((6 1) (9 0)) ((7 1) (6 0)) ((8 2) (7 0)) ((9 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (6 0) (9 0))
  (gen-st (pv a l) (pv b l-0) (pv b lb))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (4 0)) ((2 1) (5 0)) ((3 1) (8 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (5 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-5 "nil")) (send l))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-6 "nil")) (send l-0))
    ((recv (cat (gen) (rec lb))) (send (cat (gen) (rec lb))))
    ((recv lb) (send lb))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-7 "nil")) (send lb))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 767)
  (parent 749)
  (seen 774)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pt-7 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b self) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) lb) (mul (rec lb) (rec lb))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l lb))
  (deflistener lb)
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (9 0)) ((1 1) (0 0)) ((1 1) (3 0)) ((2 1) (4 0))
    ((2 2) (0 1)) ((3 2) (9 0)) ((4 2) (9 0)) ((5 1) (9 0))
    ((6 1) (8 0)) ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0))
    ((9 1) (0 3)))
  (non-orig (privk "sig" self))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (5 0) (9 0))
  (gen-st (pv a l) (pv self l-0) (pv self lb))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a self))
  (leads-to ((1 1) (0 0)) ((1 1) (3 0)) ((2 1) (4 0)) ((6 1) (8 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))) (send (cat na a self (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((load priv-stor-0 (cat pt-2 (pv self l-0)))
      (stor priv-stor-0 (cat pt-4 "nil")) (send l-0))
    ((recv (cat (exp (gen) lb) (mul (rec lb) (rec lb))))
      (send (cat (exp (gen) lb) (mul (rec lb) (rec lb)))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-6 (pv self lb)))
      (send
        (sig (body self (exp (gen) lb) (pubk "sig" self))
          (privk "sig" self)))) ((recv lb) (send lb))
    ((load priv-stor-1 (cat pt-6 (pv self lb)))
      (stor priv-stor-1 (cat pt-7 "nil")) (send lb))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 768)
  (parent 751)
  (seen 776)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (l l-0 x rndx) (w expt) (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (6 0)) ((1 1) (0 0)) ((1 1) (5 0)) ((2 1) (3 0))
    ((2 2) (0 1)) ((3 2) (6 0)) ((4 1) (6 0)) ((5 2) (4 0))
    ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (4 0) (6 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (5 0)) ((2 1) (3 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-0 (cat pt-2 (pv b l)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-4 "nil")) (send l-0))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 769)
  (parent 754)
  (seen 457)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (l l-0 x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (precedes ((1 1) (0 0)) ((1 1) (3 0)) ((2 1) (4 0)) ((2 2) (0 1))
    ((3 2) (0 3)) ((4 2) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq (exp (gen) y) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (3 0)) ((2 1) (4 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-4 "nil")) (send l-0)))
  (label 770)
  (parent 757)
  (seen 456)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (l l-0 x rndx) (w expt) (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (6 0)) ((1 1) (0 0)) ((1 1) (3 0)) ((2 1) (5 0))
    ((2 2) (0 1)) ((3 2) (6 0)) ((4 1) (6 0)) ((5 2) (4 0))
    ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (4 0) (6 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (3 0)) ((2 1) (5 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-4 "nil")) (send l-0))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 771)
  (parent 758)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (6 0)) ((1 1) (0 0)) ((1 1) (5 0)) ((2 2) (0 1))
    ((3 1) (6 0)) ((4 1) (6 0)) ((5 2) (4 0)) ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (4 0) (6 0))
  (gen-st (pv a l-0) (pv b l) (pv b lb))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (5 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-5 "nil")) (send l-0))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 772)
  (parent 761)
  (seen 457)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener lb)
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (precedes ((1 1) (0 0)) ((1 1) (4 0)) ((2 2) (0 1)) ((3 1) (6 0))
    ((4 2) (0 3)) ((5 1) (0 3)) ((6 2) (5 0)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l-0) (pv b l) (pv b lb))
  (facts (neq (exp (gen) y) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (4 0)) ((3 1) (6 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (5 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-5 "nil")) (send l-0))
    ((recv lb) (send lb))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send lb)))
  (label 773)
  (parent 762)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (gen) (rec lb)))
  (deflistener lb)
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (8 0)) ((1 1) (0 0)) ((1 1) (4 0)) ((2 2) (0 1))
    ((3 1) (7 0)) ((4 2) (8 0)) ((5 1) (8 0)) ((6 1) (5 0))
    ((7 2) (6 0)) ((8 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (5 0) (8 0))
  (gen-st (pv a l-0) (pv b l) (pv b lb))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (4 0)) ((3 1) (7 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-5 "nil")) (send l-0))
    ((recv (cat (gen) (rec lb))) (send (cat (gen) (rec lb))))
    ((recv lb) (send lb))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send lb))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 774)
  (parent 763)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b self) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l lb))
  (deflistener lb)
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-1) (l lb))
  (precedes ((1 1) (0 0)) ((1 1) (3 0)) ((2 2) (0 1)) ((3 2) (0 3))
    ((4 1) (6 0)) ((4 2) (0 3)) ((5 1) (0 3)) ((6 2) (5 0)))
  (non-orig (privk "sig" self))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l-0) (pv self l) (pv self lb))
  (facts (neq (exp (gen) y) (gen)) (neq a self))
  (leads-to ((1 1) (0 0)) ((1 1) (3 0)) ((4 1) (6 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na a self (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-3 "nil")) (send l-0))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-5 (pv self lb)))
      (send
        (sig (body self (exp (gen) lb) (pubk "sig" self))
          (privk "sig" self)))) ((recv lb) (send lb))
    ((load priv-stor-1 (cat pt-5 (pv self lb)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send lb)))
  (label 775)
  (parent 764)
  (seen 773)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b self) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) lb) (mul (rec lb) (rec lb))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l lb))
  (deflistener lb)
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (8 0)) ((1 1) (0 0)) ((1 1) (3 0)) ((2 2) (0 1))
    ((3 2) (8 0)) ((4 1) (8 0)) ((5 1) (7 0)) ((5 2) (4 0))
    ((6 1) (4 0)) ((7 2) (6 0)) ((8 1) (0 3)))
  (non-orig (privk "sig" self))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (4 0) (8 0))
  (gen-st (pv a l-0) (pv self l) (pv self lb))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a self))
  (leads-to ((1 1) (0 0)) ((1 1) (3 0)) ((5 1) (7 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na a self (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-3 "nil")) (send l-0))
    ((recv (cat (exp (gen) lb) (mul (rec lb) (rec lb))))
      (send (cat (exp (gen) lb) (mul (rec lb) (rec lb)))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-5 (pv self lb)))
      (send
        (sig (body self (exp (gen) lb) (pubk "sig" self))
          (privk "sig" self)))) ((recv lb) (send lb))
    ((load priv-stor-1 (cat pt-5 (pv self lb)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send lb))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 776)
  (parent 765)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (l l-0 x rndx) (w expt) (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l) (x x) (beta l-0) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (5 0)) ((1 1) (0 0)) ((1 1) (3 0)) ((2 1) (4 0))
    ((2 2) (0 1)) ((3 2) (5 0)) ((4 2) (5 0)) ((5 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (5 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (3 0)) ((2 1) (4 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l)))
      (recv
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l-0)))
      (send
        (sig (body b (exp (gen) l-0) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor (cat pt (pv a l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((load priv-stor-0 (cat pt-2 (pv b l-0)))
      (stor priv-stor-0 (cat pt-4 "nil")) (send l-0))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 777)
  (parent 771)
  (seen 521)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (precedes ((1 1) (0 0)) ((1 1) (4 0)) ((2 2) (0 1)) ((3 1) (5 0))
    ((4 2) (0 3)) ((5 2) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l-0) (pv b l) (pv b lb))
  (facts (neq (exp (gen) y) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (4 0)) ((3 1) (5 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (5 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-5 "nil")) (send l-0))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send lb)))
  (label 778)
  (parent 773)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener lb)
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (7 0)) ((1 1) (0 0)) ((1 1) (4 0)) ((2 2) (0 1))
    ((3 1) (6 0)) ((4 2) (7 0)) ((5 1) (7 0)) ((6 2) (5 0))
    ((7 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (7 0))
  (gen-st (pv a l-0) (pv b l) (pv b lb))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (4 0)) ((3 1) (6 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (5 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-5 "nil")) (send l-0))
    ((recv lb) (send lb))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send lb))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 779)
  (parent 774)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b self) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l lb))
  (deflistener lb)
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (7 0)) ((1 1) (0 0)) ((1 1) (3 0)) ((2 2) (0 1))
    ((3 2) (7 0)) ((4 1) (6 0)) ((4 2) (7 0)) ((5 1) (7 0))
    ((6 2) (5 0)) ((7 1) (0 3)))
  (non-orig (privk "sig" self))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (7 0))
  (gen-st (pv a l-0) (pv self l) (pv self lb))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a self))
  (leads-to ((1 1) (0 0)) ((1 1) (3 0)) ((4 1) (6 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))) (send (cat na a self (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv self l)))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-3 "nil")) (send l-0))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-5 (pv self lb)))
      (send
        (sig (body self (exp (gen) lb) (pubk "sig" self))
          (privk "sig" self)))) ((recv lb) (send lb))
    ((load priv-stor-1 (cat pt-5 (pv self lb)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send lb))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 780)
  (parent 776)
  (seen 779)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon y))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (precedes ((1 1) (0 0)) ((1 1) (4 0)) ((2 2) (0 1)) ((3 1) (0 3))
    ((4 2) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (gen-st (pv a l-0) (pv b l) (pv b lb))
  (facts (neq (exp (gen) y) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (4 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (5 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-5 "nil")) (send l-0)))
  (label 781)
  (parent 778)
  (seen 456)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pt-6 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor-1) (l lb))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (6 0)) ((1 1) (0 0)) ((1 1) (4 0)) ((2 2) (0 1))
    ((3 1) (5 0)) ((4 2) (6 0)) ((5 2) (6 0)) ((6 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (6 0))
  (gen-st (pv a l-0) (pv b l) (pv b lb))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (4 0)) ((3 1) (5 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (5 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-5 "nil")) (send l-0))
    ((load priv-stor-1 (cat pt-3 (pv b lb)))
      (stor priv-stor-1 (cat pt-6 "nil")) (send lb))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 782)
  (parent 779)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (l l-0 lb x rndx) (w expt)
    (y rndx))
  (defstrand init 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (la l-0) (x x) (beta l) (upsilon (mul w y)))
  (defstrand ltx-gen 2 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self b)
    (priv-stor priv-stor-0) (l l))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b)
    (priv-stor priv-stor-1) (l lb))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) y) w))
  (precedes ((0 2) (5 0)) ((1 1) (0 0)) ((1 1) (4 0)) ((2 2) (0 1))
    ((3 1) (5 0)) ((4 2) (5 0)) ((5 1) (0 3)))
  (non-orig (privk "sig" b))
  (uniq-orig na nb l l-0 lb)
  (uniq-gen x)
  (absent (x l) (x l-0))
  (precur (5 0))
  (gen-st (pv a l-0) (pv b l) (pv b lb))
  (facts (neq (exp (gen) (mul w y)) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (4 0)))
  (rule assume-init-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (5 0))
  (traces
    ((load priv-stor (cat pt (pv a l-0)))
      (recv (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) (mul w y))
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul x w y))))))
      (send nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv a l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv b l)))
      (send
        (sig (body b (exp (gen) l) (pubk "sig" b)) (privk "sig" b))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-3 (pv b lb))))
    ((load priv-stor (cat pt (pv a l-0)))
      (stor priv-stor (cat pt-5 "nil")) (send l-0))
    ((recv (cat (exp (gen) y) w)) (send (cat (exp (gen) y) w))))
  (label 783)
  (parent 782)
  (seen 521)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(comment "Nothing left to do")

(defprotocol dhcr-um diffie-hellman
  (defrole init
    (vars (la x rndx) (beta upsilon expt) (a b name) (na nb data)
      (priv-stor locn))
    (trace (load priv-stor (pv a la))
      (recv
        (sig (body b (exp (gen) beta) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul la beta))
              (exp (gen) (mul x upsilon)))))) (send nb))
    (uniq-orig na)
    (uniq-gen x)
    (absent (x la) (x beta))
    (assume (fact neq (exp (gen) upsilon) (gen)))
    (gen-st (pv a la)))
  (defrole resp
    (vars (lb y rndx) (alpha zeta expt) (a b name) (na nb data)
      (priv-stor locn))
    (trace (load priv-stor (pv b lb))
      (recv
        (sig (body a (exp (gen) alpha) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul lb alpha))
              (exp (gen) (mul y zeta)))))) (recv nb))
    (uniq-orig nb)
    (uniq-gen y)
    (absent (y lb) (y alpha) (y zeta))
    (assume (fact neq (exp (gen) zeta) (gen)))
    (gen-st (pv b lb)))
  (defrole ltx-gen
    (vars (self name) (l rndx) (priv-stor locn) (ignore mesg))
    (trace (load priv-stor ignore) (stor priv-stor (pv self l))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    (uniq-orig l))
  (defrole ltx-disclose
    (vars (self name) (l rndx) (priv-stor locn))
    (trace (load priv-stor (pv self l)) (stor priv-stor "nil") (send l))
    (gen-st (pv self l)))
  (defrule undisclosed-not-disclosed
    (forall ((z strd) (l rndx))
      (implies
        (and (fact undisclosed l) (p "ltx-disclose" z (idx 2))
          (p "ltx-disclose" "l" z l))
        (false))))
  (defgenrule neqRl_indx
    (forall ((x indx)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_strd
    (forall ((x strd)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_mesg
    (forall ((x mesg)) (implies (fact neq x x) (false))))
  (defgenrule scissorsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (trans z2 i2)
          (leads-to z0 i0 z1 i1) (leads-to z0 i0 z2 i2))
        (and (= z1 z2) (= i1 i2)))))
  (defgenrule cakeRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (leads-to z0 i0 z1 i1)
          (leads-to z0 i0 z2 i2) (prec z1 i1 z2 i2)) (false))))
  (defgenrule no-interruption
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (leads-to z0 i0 z2 i2) (trans z1 i1)
          (same-locn z0 i0 z1 i1) (prec z0 i0 z1 i1) (prec z1 i1 z2 i2))
        (false))))
  (defgenrule shearsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (trans z2 i2)
          (leads-to z0 i0 z1 i1) (same-locn z0 i0 z2 i2)
          (prec z0 i0 z2 i2))
        (or (and (= z1 z2) (= i1 i2)) (prec z1 i1 z2 i2)))))
  (defgenrule invShearsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (same-locn z0 i0 z1 i1)
          (leads-to z1 i1 z2 i2) (prec z0 i0 z2 i2))
        (or (and (= z0 z1) (= i0 i1)) (prec z0 i0 z1 i1)))))
  (defgenrule assume-init-0
    (forall ((z strd) (upsilon expt))
      (implies (and (p "init" z (idx 4)) (p "init" "upsilon" z upsilon))
        (fact neq (exp (gen) upsilon) (gen)))))
  (defgenrule assume-resp-0
    (forall ((z strd) (zeta expt))
      (implies (and (p "resp" z (idx 3)) (p "resp" "zeta" z zeta))
        (fact neq (exp (gen) zeta) (gen)))))
  (defgenrule trRl_ltx-gen-at-1
    (forall ((z strd))
      (implies (p "ltx-gen" z (idx 2)) (trans z (idx 1)))))
  (defgenrule trRl_ltx-gen-at-0
    (forall ((z strd))
      (implies (p "ltx-gen" z (idx 2)) (trans z (idx 0)))))
  (defgenrule trRl_ltx-disclose-at-1
    (forall ((z strd))
      (implies (p "ltx-disclose" z (idx 2)) (trans z (idx 1)))))
  (defgenrule trRl_ltx-disclose-at-0
    (forall ((z strd))
      (implies (p "ltx-disclose" z (idx 2)) (trans z (idx 0)))))
  (defgenrule gen-st-init-0
    (forall ((z strd) (a name) (la rndx))
      (implies
        (and (p "init" z (idx 1)) (p "init" "la" z la)
          (p "init" "a" z a)) (gen-st (pv a la)))))
  (defgenrule gen-st-resp-0
    (forall ((z strd) (b name) (lb rndx))
      (implies
        (and (p "resp" z (idx 1)) (p "resp" "lb" z lb)
          (p "resp" "b" z b)) (gen-st (pv b lb)))))
  (defgenrule gen-st-ltx-disclose-0
    (forall ((z strd) (self name) (l rndx))
      (implies
        (and (p "ltx-disclose" z (idx 1)) (p "ltx-disclose" "l" z l)
          (p "ltx-disclose" "self" z self)) (gen-st (pv self l)))))
  (lang (sig sign) (body (tuple 3)) (pv (tuple 2))))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (pt pval) (priv-stor locn) (lb rndx)
    (alpha expt) (y rndx) (zeta expt))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb lb) (y y) (alpha alpha) (zeta zeta))
  (non-orig (privk "sig" a))
  (uniq-orig nb)
  (uniq-gen y)
  (absent (y lb) (y alpha) (y zeta))
  (facts (neq a b) (undisclosed lb) (undisclosed alpha))
  (traces
    ((load priv-stor (cat pt (pv b lb)))
      (recv
        (sig (body a (exp (gen) alpha) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul lb alpha))
              (exp (gen) (mul y zeta)))))) (recv nb)))
  (label 784)
  (unrealized (0 1))
  (origs (nb (0 3)))
  (ugens (y (0 3)))
  (comment "Not closed under rules"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (pt pval) (priv-stor locn) (lb rndx)
    (alpha expt) (y rndx) (zeta expt))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb lb) (y y) (alpha alpha) (zeta zeta))
  (non-orig (privk "sig" a))
  (uniq-orig nb)
  (uniq-gen y)
  (absent (y lb) (y alpha) (y zeta))
  (gen-st (pv b lb))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed lb)
    (undisclosed alpha))
  (rule assume-resp-0 gen-st-ltx-disclose-0)
  (traces
    ((load priv-stor (cat pt (pv b lb)))
      (recv
        (sig (body a (exp (gen) alpha) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul lb alpha))
              (exp (gen) (mul y zeta)))))) (recv nb)))
  (label 785)
  (parent 784)
  (unrealized (0 0) (0 1))
  (origs (nb (0 3)))
  (ugens (y (0 3)))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (a b name) (pt pt-0 pval)
    (priv-stor locn) (alpha expt) (y rndx) (zeta expt) (l rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha alpha) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (precedes ((1 1) (0 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l)
  (uniq-gen y)
  (absent (y alpha) (y zeta) (y l))
  (gen-st (pv b l))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l)
    (undisclosed alpha))
  (leads-to ((1 1) (0 0)))
  (rule assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor (cat pt (pv b l))) (0 0))
  (traces
    ((load priv-stor (cat pt (pv b l)))
      (recv
        (sig (body a (exp (gen) alpha) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul alpha l)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l)))))
  (label 786)
  (parent 785)
  (unrealized (0 1) (0 4))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta expt) (l l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((1 1) (0 0)) ((2 2) (0 1)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (gen-st (pv b l))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (0 0)))
  (rule assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation encryption-test (added-strand ltx-gen 3)
    (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)) (0 1))
  (traces
    ((load priv-stor (cat pt (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l-0)))
      (send
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))))
  (label 787)
  (parent 786)
  (unrealized (0 4))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta expt) (l l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (precedes ((0 3) (3 0)) ((1 1) (0 0)) ((2 2) (0 1)) ((3 1) (0 4)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (gen-st (pv b l))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (0 0)))
  (rule assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener
      (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))) nb (0 4)
    (enc na nb a b
      (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
  (traces
    ((load priv-stor (cat pt (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l-0)))
      (send
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
  (label 788)
  (parent 787)
  (unrealized (3 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta expt) (l l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (precedes ((0 3) (4 0)) ((1 1) (0 0)) ((2 2) (0 1)) ((3 1) (0 4))
    ((4 1) (3 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (gen-st (pv b l))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (0 0)))
  (rule assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation encryption-test
    (added-listener
      (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))) (3 0))
  (traces
    ((load priv-stor (cat pt (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l-0)))
      (send
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
  (label 789)
  (parent 788)
  (unrealized (4 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta expt) (l l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) l) l-0))
  (precedes ((0 3) (4 0)) ((1 1) (0 0)) ((2 1) (5 0)) ((2 2) (0 1))
    ((3 1) (0 4)) ((4 1) (3 0)) ((5 1) (4 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (gen-st (pv b l))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (0 0)))
  (rule assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l) l-0))
    (exp (gen) (mul l l-0)) (4 0))
  (traces
    ((load priv-stor (cat pt (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l-0)))
      (send
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0))))
  (label 790)
  (parent 789)
  (unrealized (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta expt) (l l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) l-0) l))
  (precedes ((0 3) (4 0)) ((1 1) (0 0)) ((1 1) (5 0)) ((2 2) (0 1))
    ((3 1) (0 4)) ((4 1) (3 0)) ((5 1) (4 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (gen-st (pv b l))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l)
    (undisclosed l-0))
  (leads-to ((1 1) (0 0)))
  (rule assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l-0) l))
    (exp (gen) (mul l l-0)) (4 0))
  (traces
    ((load priv-stor (cat pt (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l-0)))
      (send
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l))))
  (label 791)
  (parent 789)
  (unrealized (5 0))
  (dead)
  (comment "empty cohort"))

(comment "Nothing left to do")

(defprotocol dhcr-um diffie-hellman
  (defrole init
    (vars (la x rndx) (beta upsilon expt) (a b name) (na nb data)
      (priv-stor locn))
    (trace (load priv-stor (pv a la))
      (recv
        (sig (body b (exp (gen) beta) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul la beta))
              (exp (gen) (mul x upsilon)))))) (send nb))
    (uniq-orig na)
    (uniq-gen x)
    (absent (x la) (x beta))
    (assume (fact neq (exp (gen) upsilon) (gen)))
    (gen-st (pv a la)))
  (defrole resp
    (vars (lb y rndx) (alpha zeta expt) (a b name) (na nb data)
      (priv-stor locn))
    (trace (load priv-stor (pv b lb))
      (recv
        (sig (body a (exp (gen) alpha) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul lb alpha))
              (exp (gen) (mul y zeta)))))) (recv nb))
    (uniq-orig nb)
    (uniq-gen y)
    (absent (y lb) (y alpha) (y zeta))
    (assume (fact neq (exp (gen) zeta) (gen)))
    (gen-st (pv b lb)))
  (defrole ltx-gen
    (vars (self name) (l rndx) (priv-stor locn) (ignore mesg))
    (trace (load priv-stor ignore) (stor priv-stor (pv self l))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    (uniq-orig l))
  (defrole ltx-disclose
    (vars (self name) (l rndx) (priv-stor locn))
    (trace (load priv-stor (pv self l)) (stor priv-stor "nil") (send l))
    (gen-st (pv self l)))
  (defrule undisclosed-not-disclosed
    (forall ((z strd) (l rndx))
      (implies
        (and (fact undisclosed l) (p "ltx-disclose" z (idx 2))
          (p "ltx-disclose" "l" z l))
        (false))))
  (defgenrule neqRl_indx
    (forall ((x indx)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_strd
    (forall ((x strd)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_mesg
    (forall ((x mesg)) (implies (fact neq x x) (false))))
  (defgenrule scissorsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (trans z2 i2)
          (leads-to z0 i0 z1 i1) (leads-to z0 i0 z2 i2))
        (and (= z1 z2) (= i1 i2)))))
  (defgenrule cakeRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (leads-to z0 i0 z1 i1)
          (leads-to z0 i0 z2 i2) (prec z1 i1 z2 i2)) (false))))
  (defgenrule no-interruption
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (leads-to z0 i0 z2 i2) (trans z1 i1)
          (same-locn z0 i0 z1 i1) (prec z0 i0 z1 i1) (prec z1 i1 z2 i2))
        (false))))
  (defgenrule shearsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (trans z2 i2)
          (leads-to z0 i0 z1 i1) (same-locn z0 i0 z2 i2)
          (prec z0 i0 z2 i2))
        (or (and (= z1 z2) (= i1 i2)) (prec z1 i1 z2 i2)))))
  (defgenrule invShearsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (same-locn z0 i0 z1 i1)
          (leads-to z1 i1 z2 i2) (prec z0 i0 z2 i2))
        (or (and (= z0 z1) (= i0 i1)) (prec z0 i0 z1 i1)))))
  (defgenrule assume-init-0
    (forall ((z strd) (upsilon expt))
      (implies (and (p "init" z (idx 4)) (p "init" "upsilon" z upsilon))
        (fact neq (exp (gen) upsilon) (gen)))))
  (defgenrule assume-resp-0
    (forall ((z strd) (zeta expt))
      (implies (and (p "resp" z (idx 3)) (p "resp" "zeta" z zeta))
        (fact neq (exp (gen) zeta) (gen)))))
  (defgenrule trRl_ltx-gen-at-1
    (forall ((z strd))
      (implies (p "ltx-gen" z (idx 2)) (trans z (idx 1)))))
  (defgenrule trRl_ltx-gen-at-0
    (forall ((z strd))
      (implies (p "ltx-gen" z (idx 2)) (trans z (idx 0)))))
  (defgenrule trRl_ltx-disclose-at-1
    (forall ((z strd))
      (implies (p "ltx-disclose" z (idx 2)) (trans z (idx 1)))))
  (defgenrule trRl_ltx-disclose-at-0
    (forall ((z strd))
      (implies (p "ltx-disclose" z (idx 2)) (trans z (idx 0)))))
  (defgenrule gen-st-init-0
    (forall ((z strd) (a name) (la rndx))
      (implies
        (and (p "init" z (idx 1)) (p "init" "la" z la)
          (p "init" "a" z a)) (gen-st (pv a la)))))
  (defgenrule gen-st-resp-0
    (forall ((z strd) (b name) (lb rndx))
      (implies
        (and (p "resp" z (idx 1)) (p "resp" "lb" z lb)
          (p "resp" "b" z b)) (gen-st (pv b lb)))))
  (defgenrule gen-st-ltx-disclose-0
    (forall ((z strd) (self name) (l rndx))
      (implies
        (and (p "ltx-disclose" z (idx 1)) (p "ltx-disclose" "l" z l)
          (p "ltx-disclose" "self" z self)) (gen-st (pv self l)))))
  (lang (sig sign) (body (tuple 3)) (pv (tuple 2))))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (pt pval) (priv-stor locn) (lb rndx)
    (alpha expt) (y rndx) (zeta expt))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb lb) (y y) (alpha alpha) (zeta zeta))
  (non-orig (privk "sig" a))
  (uniq-orig nb)
  (uniq-gen y)
  (absent (y lb) (y alpha) (y zeta))
  (facts (neq a b) (undisclosed alpha))
  (traces
    ((load priv-stor (cat pt (pv b lb)))
      (recv
        (sig (body a (exp (gen) alpha) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul lb alpha))
              (exp (gen) (mul y zeta)))))) (recv nb)))
  (label 792)
  (unrealized (0 1))
  (origs (nb (0 3)))
  (ugens (y (0 3)))
  (comment "Not closed under rules"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (pt pval) (priv-stor locn) (lb rndx)
    (alpha expt) (y rndx) (zeta expt))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb lb) (y y) (alpha alpha) (zeta zeta))
  (non-orig (privk "sig" a))
  (uniq-orig nb)
  (uniq-gen y)
  (absent (y lb) (y alpha) (y zeta))
  (gen-st (pv b lb))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed alpha))
  (rule assume-resp-0 gen-st-ltx-disclose-0)
  (traces
    ((load priv-stor (cat pt (pv b lb)))
      (recv
        (sig (body a (exp (gen) alpha) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul lb alpha))
              (exp (gen) (mul y zeta)))))) (recv nb)))
  (label 793)
  (parent 792)
  (unrealized (0 0) (0 1))
  (origs (nb (0 3)))
  (ugens (y (0 3)))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (a b name) (pt pt-0 pval)
    (priv-stor locn) (alpha expt) (y rndx) (zeta expt) (l rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha alpha) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (precedes ((1 1) (0 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l)
  (uniq-gen y)
  (absent (y alpha) (y zeta) (y l))
  (gen-st (pv b l))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed alpha))
  (leads-to ((1 1) (0 0)))
  (rule assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor (cat pt (pv b l))) (0 0))
  (traces
    ((load priv-stor (cat pt (pv b l)))
      (recv
        (sig (body a (exp (gen) alpha) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul alpha l)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l)))))
  (label 794)
  (parent 793)
  (unrealized (0 1) (0 4))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta expt) (l l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((1 1) (0 0)) ((2 2) (0 1)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (gen-st (pv b l))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)))
  (rule assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation encryption-test (added-strand ltx-gen 3)
    (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)) (0 1))
  (traces
    ((load priv-stor (cat pt (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l-0)))
      (send
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))))
  (label 795)
  (parent 794)
  (unrealized (0 4))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta expt) (l l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (precedes ((0 3) (3 0)) ((1 1) (0 0)) ((2 2) (0 1)) ((3 1) (0 4)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (gen-st (pv b l))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)))
  (rule assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener
      (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))) nb (0 4)
    (enc na nb a b
      (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
  (traces
    ((load priv-stor (cat pt (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l-0)))
      (send
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
  (label 796)
  (parent 795)
  (unrealized (3 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta expt) (l l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (precedes ((0 3) (4 0)) ((1 1) (0 0)) ((2 2) (0 1)) ((3 1) (0 4))
    ((4 1) (3 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (gen-st (pv b l))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)))
  (rule assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation encryption-test
    (added-listener
      (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))) (3 0))
  (traces
    ((load priv-stor (cat pt (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l-0)))
      (send
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
  (label 797)
  (parent 796)
  (unrealized (4 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta expt) (l l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) l) l-0))
  (precedes ((0 3) (4 0)) ((1 1) (0 0)) ((2 1) (5 0)) ((2 2) (0 1))
    ((3 1) (0 4)) ((4 1) (3 0)) ((5 1) (4 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (gen-st (pv b l))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)))
  (rule assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l) l-0))
    (exp (gen) (mul l l-0)) (4 0))
  (traces
    ((load priv-stor (cat pt (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l-0)))
      (send
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0))))
  (label 798)
  (parent 797)
  (unrealized (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta expt) (l l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) l-0) l))
  (precedes ((0 3) (4 0)) ((1 1) (0 0)) ((1 1) (5 0)) ((2 2) (0 1))
    ((3 1) (0 4)) ((4 1) (3 0)) ((5 1) (4 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (gen-st (pv b l))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)))
  (rule assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l-0) l))
    (exp (gen) (mul l l-0)) (4 0))
  (traces
    ((load priv-stor (cat pt (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l-0)))
      (send
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l))))
  (label 799)
  (parent 797)
  (unrealized (5 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta expt) (l l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l-0) (y y) (alpha l) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l-0))
  (precedes ((0 3) (4 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((3 1) (0 4)) ((4 1) (3 0)) ((5 1) (4 0)) ((6 2) (5 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (gen-st (pv b l-0))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-disclose 3) l-0 (5 0)
    (ch-msg priv-stor (cat pt (pv b l-0))))
  (traces
    ((load priv-stor (cat pt (pv b l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l)))
      (send
        (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor (cat pt (pv b l-0)))
      (stor priv-stor (cat pt-3 "nil")) (send l-0)))
  (label 800)
  (parent 799)
  (unrealized (5 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta expt) (l l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (precedes ((0 3) (4 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((2 2) (5 0)) ((3 1) (0 4)) ((4 1) (3 0)) ((5 1) (4 0))
    ((6 2) (5 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (gen-st (pv b l))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 7 2 ltx-gen 3) (exp (gen) l-0) (5 0))
  (traces
    ((load priv-stor (cat pt (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l-0)))
      (send
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l)))
  (label 801)
  (parent 800)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta expt) (l l-0 rndx) (w expt))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l-0) (y y) (alpha l) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) (mul l (rec w))) w))
  (precedes ((0 3) (4 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((3 1) (0 4)) ((4 1) (3 0)) ((5 1) (4 0)) ((6 2) (5 0))
    ((7 1) (5 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (precur (7 0))
  (gen-st (pv b l-0))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul l (rec w))) w)) (exp (gen) l)
    (5 0))
  (traces
    ((load priv-stor (cat pt (pv b l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l)))
      (send
        (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor (cat pt (pv b l-0)))
      (stor priv-stor (cat pt-3 "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul l (rec w))) w))
      (send (cat (exp (gen) (mul l (rec w))) w))))
  (label 802)
  (parent 800)
  (unrealized (7 0))
  (comment "7 in cohort - 7 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta expt) (l l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (precedes ((0 3) (3 0)) ((1 1) (0 0)) ((1 1) (5 0)) ((2 2) (0 1))
    ((2 2) (4 0)) ((3 1) (0 4)) ((4 1) (3 0)) ((5 2) (4 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (gen-st (pv b l))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (5 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l-0)))
      (send
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l)))
  (label 803)
  (parent 801)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn)
    (lb l rndx) (zeta expt) (y rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb lb) (y y) (alpha l) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l lb))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l))
  (deflistener (hash (exp (gen) (mul lb l)) (exp (gen) (mul zeta y))))
  (deflistener (cat (exp (gen) (mul lb l)) (exp (gen) (mul zeta y))))
  (deflistener (cat (exp (gen) l) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l lb))
  (deflistener (cat (exp (gen) y) (mul l (rec y))))
  (precedes ((0 3) (7 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((3 1) (0 4)) ((4 1) (3 0)) ((5 1) (4 0)) ((6 2) (5 0))
    ((7 1) (5 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb lb l)
  (uniq-gen y)
  (absent (y lb) (y l) (y zeta))
  (precur (7 0))
  (gen-st (pv b lb))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 8 0 resp 4) (exp (gen) y-0) (7 0))
  (traces
    ((load priv-stor (cat pt (pv b lb)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul lb l)) (exp (gen) (mul zeta y))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b lb))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l)))
      (send
        (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a))))
    ((recv (hash (exp (gen) (mul lb l)) (exp (gen) (mul zeta y))))
      (send (hash (exp (gen) (mul lb l)) (exp (gen) (mul zeta y)))))
    ((recv (cat (exp (gen) (mul lb l)) (exp (gen) (mul zeta y))))
      (send (cat (exp (gen) (mul lb l)) (exp (gen) (mul zeta y)))))
    ((recv (cat (exp (gen) l) lb)) (send (cat (exp (gen) l) lb)))
    ((load priv-stor (cat pt (pv b lb)))
      (stor priv-stor (cat pt-3 "nil")) (send lb))
    ((recv (cat (exp (gen) y) (mul l (rec y))))
      (send (cat (exp (gen) y) (mul l (rec y))))))
  (label 804)
  (parent 802)
  (unrealized (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (a b a-0 b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y rndx) (zeta expt)
    (l la rndx) (beta expt) (l-0 x rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) x) (mul l-0 (rec x))))
  (defstrand init 3 (na na-0) (a a-0) (b b-0) (priv-stor priv-stor-1)
    (la la) (x x) (beta beta))
  (precedes ((0 3) (4 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((3 1) (0 4)) ((4 1) (3 0)) ((5 1) (4 0)) ((6 2) (5 0))
    ((7 1) (5 0)) ((8 2) (7 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb na-0 l l-0)
  (uniq-gen y x)
  (absent (y zeta) (y l) (y l-0) (x la) (x beta))
  (precur (7 0))
  (gen-st (pv b l) (pv a-0 la))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)))
  (rule assume-resp-0 gen-st-ltx-disclose-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand init 3) (exp (gen) x) (7 0))
  (traces
    ((load priv-stor (cat pt (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l-0)))
      (send
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) x) (mul l-0 (rec x))))
      (send (cat (exp (gen) x) (mul l-0 (rec x)))))
    ((load priv-stor-1 (cat pt-4 (pv a-0 la)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a-0 b-0 (exp (gen) x)))))
  (label 805)
  (parent 802)
  (unrealized (5 0) (7 0) (8 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta expt) (l l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (gen) l-0))
  (precedes ((0 3) (4 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (7 0))
    ((2 2) (0 1)) ((3 1) (0 4)) ((4 1) (3 0)) ((5 1) (4 0))
    ((6 2) (5 0)) ((7 1) (5 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (precur (7 0))
  (gen-st (pv b l))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (contracted (l-1 l-0) (w l-0)) (gen) (7 0))
  (traces
    ((load priv-stor (cat pt (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l-0)))
      (send
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0))))
  (label 806)
  (parent 802)
  (unrealized (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a self name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta expt) (l l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b self)
    (priv-stor priv-stor-0) (lb l-0) (y y) (alpha l) (zeta zeta))
  (defstrand ltx-gen 3 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l-0) (mul l (rec l-0))))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 3) (3 0)) ((1 2) (0 1)) ((2 1) (0 4)) ((3 1) (2 0))
    ((4 1) (3 0)) ((5 2) (4 0)) ((6 1) (4 0)) ((7 1) (0 0))
    ((7 1) (5 0)) ((7 2) (6 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (precur (6 0))
  (gen-st (pv self l-0))
  (facts (neq (exp (gen) zeta) (gen)) (neq a self) (undisclosed l))
  (leads-to ((7 1) (0 0)) ((7 1) (5 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 1 8 ltx-gen 3) (exp (gen) l-1) (7 0))
  (traces
    ((load priv-stor-0 (cat pt-3 (pv self l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a self (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv a l)))
      (send
        (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor-0 (cat pt-3 (pv self l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((recv (cat (exp (gen) l-0) (mul l (rec l-0))))
      (send (cat (exp (gen) l-0) (mul l (rec l-0)))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-3 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 807)
  (parent 802)
  (unrealized (4 0) (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (a b a-0 b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y rndx) (zeta expt)
    (l lb rndx) (alpha zeta-0 expt) (l-0 y-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b-0)
    (priv-stor priv-stor-1) (lb lb) (y y-0) (alpha alpha) (zeta zeta-0))
  (precedes ((0 3) (4 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((3 1) (0 4)) ((4 1) (3 0)) ((5 1) (4 0)) ((6 2) (5 0))
    ((7 1) (5 0)) ((8 3) (7 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb nb-0 l l-0)
  (uniq-gen y y-0)
  (absent (y zeta) (y l) (y l-0) (y-0 lb) (y-0 alpha) (y-0 zeta-0))
  (precur (7 0))
  (gen-st (pv b l) (pv b-0 lb))
  (facts (neq (exp (gen) zeta-0) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)))
  (rule assume-resp-0 gen-st-ltx-disclose-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand resp 4) (exp (gen) y-0) (7 0))
  (traces
    ((load priv-stor (cat pt (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l-0)))
      (send
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-0 (rec y-0)))))
    ((load priv-stor-1 (cat pt-4 (pv b-0 lb)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0)))
      (recv (cat na-0 a-0 b-0 (exp (gen) zeta-0)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul lb alpha))
              (exp (gen) (mul zeta-0 y-0))))))))
  (label 808)
  (parent 802)
  (unrealized (5 0) (7 0) (8 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta expt) (l l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (precedes ((0 3) (4 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((2 2) (7 0)) ((3 1) (0 4)) ((4 1) (3 0)) ((5 1) (4 0))
    ((6 2) (5 0)) ((7 1) (5 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (precur (7 0))
  (gen-st (pv b l))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 8 2 ltx-gen 3) (exp (gen) l-1) (7 0))
  (traces
    ((load priv-stor (cat pt (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l-0)))
      (send
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one)))))
  (label 809)
  (parent 802)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y rndx) (zeta expt)
    (l l-0 l-1 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 3) (4 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((3 1) (0 4)) ((4 1) (3 0)) ((5 1) (4 0)) ((6 2) (5 0))
    ((7 1) (5 0)) ((8 2) (7 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0 l-1)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (precur (7 0))
  (gen-st (pv b l))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 3) (exp (gen) l-1) (7 0))
  (traces
    ((load priv-stor (cat pt (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l-0)))
      (send
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
      (send (cat (exp (gen) l-1) (mul l-0 (rec l-1)))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-5 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))))
  (label 810)
  (parent 802)
  (unrealized (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta expt) (l l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (precedes ((1 1) (0 0)) ((1 1) (4 0)) ((2 2) (0 1)) ((2 2) (3 0))
    ((3 1) (0 4)) ((4 2) (3 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (gen-st (pv b l))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (4 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l-0)))
      (send
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l)))
  (label 811)
  (parent 803)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta beta expt) (l x l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l-0) (y y) (alpha l) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) x) (mul l (rec x))))
  (defstrand init 3 (na na-0) (a b) (b b-0) (priv-stor priv-stor)
    (la l-0) (x x) (beta beta))
  (precedes ((0 3) (4 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((1 1) (8 0))
    ((2 2) (0 1)) ((3 1) (0 4)) ((4 1) (3 0)) ((5 1) (4 0))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb na-0 l l-0)
  (uniq-gen y x)
  (absent (y zeta) (y l) (y l-0) (x beta) (x l-0))
  (precur (7 0))
  (gen-st (pv b l-0))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((1 1) (8 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 9 1 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-4 (pv a-0 l-1))) (8 0))
  (traces
    ((load priv-stor (cat pt (pv b l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l)))
      (send
        (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor (cat pt (pv b l-0)))
      (stor priv-stor (cat pt-3 "nil")) (send l-0))
    ((recv (cat (exp (gen) x) (mul l (rec x))))
      (send (cat (exp (gen) x) (mul l (rec x)))))
    ((load priv-stor (cat pt (pv b l-0)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 b b-0 (exp (gen) x)))))
  (label 812)
  (parent 805)
  (unrealized (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta expt) (l rndx) (beta expt) (x l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) x) (mul (rec x) l-0)))
  (defstrand init 3 (na na-0) (a a) (b b-0) (priv-stor priv-stor-0)
    (la l-0) (x x) (beta beta))
  (precedes ((0 3) (4 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (8 0))
    ((2 2) (0 1)) ((3 1) (0 4)) ((4 1) (3 0)) ((5 1) (4 0))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb na-0 l l-0)
  (uniq-gen y x)
  (absent (y zeta) (y l) (y l-0) (x beta) (x l-0))
  (precur (7 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (8 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 9 2 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-4 (pv a-0 l-1))) (8 0))
  (traces
    ((load priv-stor (cat pt (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l-0)))
      (send
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) x) (mul (rec x) l-0)))
      (send (cat (exp (gen) x) (mul (rec x) l-0))))
    ((load priv-stor-0 (cat pt-2 (pv a l-0)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a b-0 (exp (gen) x)))))
  (label 813)
  (parent 805)
  (unrealized (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (a b a-0 b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y rndx) (zeta expt)
    (l rndx) (beta expt) (l-0 x l-1 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) x) (mul l-0 (rec x))))
  (defstrand init 3 (na na-0) (a a-0) (b b-0) (priv-stor priv-stor-1)
    (la l-1) (x x) (beta beta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self a-0)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 3) (4 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((3 1) (0 4)) ((4 1) (3 0)) ((5 1) (4 0)) ((6 2) (5 0))
    ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (8 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb na-0 l l-0 l-1)
  (uniq-gen y x)
  (absent (y zeta) (y l) (y l-0) (x beta) (x l-1))
  (precur (7 0))
  (gen-st (pv b l) (pv a-0 l-1))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((9 1) (8 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-4 (pv a-0 l-1))) (8 0))
  (traces
    ((load priv-stor (cat pt (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l-0)))
      (send
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) x) (mul l-0 (rec x))))
      (send (cat (exp (gen) x) (mul l-0 (rec x)))))
    ((load priv-stor-1 (cat pt-4 (pv a-0 l-1)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a-0 b-0 (exp (gen) x))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv a-0 l-1)))))
  (label 814)
  (parent 805)
  (unrealized (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (a b a-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta alpha zeta-0 expt) (l y-0 l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l-0) (y y) (alpha l) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) y-0) (mul l (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b)
    (priv-stor priv-stor) (lb l-0) (y y-0) (alpha alpha) (zeta zeta-0))
  (precedes ((0 3) (4 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((1 1) (8 0))
    ((2 2) (0 1)) ((3 1) (0 4)) ((4 1) (3 0)) ((5 1) (4 0))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 3) (7 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb nb-0 l l-0)
  (uniq-gen y y-0)
  (absent (y zeta) (y l) (y l-0) (y-0 alpha) (y-0 zeta-0) (y-0 l-0))
  (precur (7 0))
  (gen-st (pv b l-0))
  (facts (neq (exp (gen) zeta-0) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((1 1) (8 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 9 1 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-4 (pv b-0 l-1))) (8 0))
  (traces
    ((load priv-stor (cat pt (pv b l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l)))
      (send
        (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor (cat pt (pv b l-0)))
      (stor priv-stor (cat pt-3 "nil")) (send l-0))
    ((recv (cat (exp (gen) y-0) (mul l (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l (rec y-0)))))
    ((load priv-stor (cat pt (pv b l-0)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b (exp (gen) zeta-0)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b
            (hash (exp (gen) (mul alpha l-0))
              (exp (gen) (mul zeta-0 y-0))))))))
  (label 815)
  (parent 808)
  (unrealized (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (a b a-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta expt) (l rndx) (alpha zeta-0 expt) (y-0 l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) y-0) (mul (rec y-0) l-0)))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b a)
    (priv-stor priv-stor-0) (lb l-0) (y y-0) (alpha alpha)
    (zeta zeta-0))
  (precedes ((0 3) (4 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (8 0))
    ((2 2) (0 1)) ((3 1) (0 4)) ((4 1) (3 0)) ((5 1) (4 0))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 3) (7 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb nb-0 l l-0)
  (uniq-gen y y-0)
  (absent (y zeta) (y l) (y l-0) (y-0 alpha) (y-0 zeta-0) (y-0 l-0))
  (precur (7 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq (exp (gen) zeta-0) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (8 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 9 2 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-4 (pv b-0 l-1))) (8 0))
  (traces
    ((load priv-stor (cat pt (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l-0)))
      (send
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) y-0) (mul (rec y-0) l-0)))
      (send (cat (exp (gen) y-0) (mul (rec y-0) l-0))))
    ((load priv-stor-0 (cat pt-2 (pv a l-0)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 a (exp (gen) zeta-0)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 a
            (hash (exp (gen) (mul alpha l-0))
              (exp (gen) (mul zeta-0 y-0))))))))
  (label 816)
  (parent 808)
  (unrealized (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y rndx) (zeta expt)
    (l rndx) (alpha zeta-0 expt) (l-0 y-0 l-1 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b-0)
    (priv-stor priv-stor-1) (lb l-1) (y y-0) (alpha alpha)
    (zeta zeta-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b-0)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 3) (4 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((3 1) (0 4)) ((4 1) (3 0)) ((5 1) (4 0)) ((6 2) (5 0))
    ((7 1) (5 0)) ((8 3) (7 0)) ((9 1) (8 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb nb-0 l l-0 l-1)
  (uniq-gen y y-0)
  (absent (y zeta) (y l) (y l-0) (y-0 alpha) (y-0 zeta-0) (y-0 l-1))
  (precur (7 0))
  (gen-st (pv b l) (pv b-0 l-1))
  (facts (neq (exp (gen) zeta-0) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((9 1) (8 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-4 (pv b-0 l-1))) (8 0))
  (traces
    ((load priv-stor (cat pt (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l-0)))
      (send
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-0 (rec y-0)))))
    ((load priv-stor-1 (cat pt-4 (pv b-0 l-1)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0)))
      (recv (cat na-0 a-0 b-0 (exp (gen) zeta-0)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul alpha l-1))
              (exp (gen) (mul zeta-0 y-0)))))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv b-0 l-1)))))
  (label 817)
  (parent 808)
  (unrealized (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta expt) (l l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (precedes ((0 3) (3 0)) ((1 1) (0 0)) ((1 1) (5 0)) ((2 2) (0 1))
    ((2 2) (6 0)) ((3 1) (0 4)) ((4 1) (3 0)) ((5 2) (4 0))
    ((6 1) (4 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (precur (6 0))
  (gen-st (pv b l))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (5 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l-0)))
      (send
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one)))))
  (label 818)
  (parent 809)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta expt) (l l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (precedes ((1 1) (0 0)) ((1 1) (3 0)) ((2 2) (0 1)) ((3 2) (0 4)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (gen-st (pv b l))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (3 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l-0)))
      (send
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a))))
    ((load priv-stor (cat pt (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l)))
  (label 819)
  (parent 811)
  (realized)
  (shape)
  (maps
    ((0)
      ((a a) (b b) (lb l) (alpha l-0) (y y) (zeta zeta) (na na) (nb nb)
        (priv-stor priv-stor))))
  (origs (l-0 (2 1)) (pt-2 (2 1)) (pt-3 (3 1)) (l (1 1)) (pt (1 1))
    (nb (0 3)))
  (ugens (y (0 3))))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta expt) (l l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (precedes ((1 1) (0 0)) ((1 1) (4 0)) ((2 2) (0 1)) ((2 2) (5 0))
    ((3 1) (0 4)) ((4 2) (3 0)) ((5 1) (3 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (precur (5 0))
  (gen-st (pv b l))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (4 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l-0)))
      (send
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one)))))
  (label 820)
  (parent 818)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta expt) (l l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (precedes ((1 1) (0 0)) ((1 1) (3 0)) ((2 2) (0 1)) ((2 2) (4 0))
    ((3 2) (0 4)) ((4 1) (0 4)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (precur (4 0))
  (gen-st (pv b l))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (3 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l-0)))
      (send
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a))))
    ((load priv-stor (cat pt (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one)))))
  (label 821)
  (parent 820)
  (seen 819)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(comment "Nothing left to do")

(defprotocol dhcr-um diffie-hellman
  (defrole init
    (vars (la x rndx) (beta upsilon expt) (a b name) (na nb data)
      (priv-stor locn))
    (trace (load priv-stor (pv a la))
      (recv
        (sig (body b (exp (gen) beta) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul la beta))
              (exp (gen) (mul x upsilon)))))) (send nb))
    (uniq-orig na)
    (uniq-gen x)
    (absent (x la) (x beta))
    (assume (fact neq (exp (gen) upsilon) (gen)))
    (gen-st (pv a la)))
  (defrole resp
    (vars (lb y rndx) (alpha zeta expt) (a b name) (na nb data)
      (priv-stor locn))
    (trace (load priv-stor (pv b lb))
      (recv
        (sig (body a (exp (gen) alpha) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul lb alpha))
              (exp (gen) (mul y zeta)))))) (recv nb))
    (uniq-orig nb)
    (uniq-gen y)
    (absent (y lb) (y alpha) (y zeta))
    (assume (fact neq (exp (gen) zeta) (gen)))
    (gen-st (pv b lb)))
  (defrole ltx-gen
    (vars (self name) (l rndx) (priv-stor locn) (ignore mesg))
    (trace (load priv-stor ignore) (stor priv-stor (pv self l))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    (uniq-orig l))
  (defrole ltx-disclose
    (vars (self name) (l rndx) (priv-stor locn))
    (trace (load priv-stor (pv self l)) (stor priv-stor "nil") (send l))
    (gen-st (pv self l)))
  (defrule undisclosed-not-disclosed
    (forall ((z strd) (l rndx))
      (implies
        (and (fact undisclosed l) (p "ltx-disclose" z (idx 2))
          (p "ltx-disclose" "l" z l))
        (false))))
  (defgenrule neqRl_indx
    (forall ((x indx)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_strd
    (forall ((x strd)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_mesg
    (forall ((x mesg)) (implies (fact neq x x) (false))))
  (defgenrule scissorsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (trans z2 i2)
          (leads-to z0 i0 z1 i1) (leads-to z0 i0 z2 i2))
        (and (= z1 z2) (= i1 i2)))))
  (defgenrule cakeRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (leads-to z0 i0 z1 i1)
          (leads-to z0 i0 z2 i2) (prec z1 i1 z2 i2)) (false))))
  (defgenrule no-interruption
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (leads-to z0 i0 z2 i2) (trans z1 i1)
          (same-locn z0 i0 z1 i1) (prec z0 i0 z1 i1) (prec z1 i1 z2 i2))
        (false))))
  (defgenrule shearsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (trans z2 i2)
          (leads-to z0 i0 z1 i1) (same-locn z0 i0 z2 i2)
          (prec z0 i0 z2 i2))
        (or (and (= z1 z2) (= i1 i2)) (prec z1 i1 z2 i2)))))
  (defgenrule invShearsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (same-locn z0 i0 z1 i1)
          (leads-to z1 i1 z2 i2) (prec z0 i0 z2 i2))
        (or (and (= z0 z1) (= i0 i1)) (prec z0 i0 z1 i1)))))
  (defgenrule assume-init-0
    (forall ((z strd) (upsilon expt))
      (implies (and (p "init" z (idx 4)) (p "init" "upsilon" z upsilon))
        (fact neq (exp (gen) upsilon) (gen)))))
  (defgenrule assume-resp-0
    (forall ((z strd) (zeta expt))
      (implies (and (p "resp" z (idx 3)) (p "resp" "zeta" z zeta))
        (fact neq (exp (gen) zeta) (gen)))))
  (defgenrule trRl_ltx-gen-at-1
    (forall ((z strd))
      (implies (p "ltx-gen" z (idx 2)) (trans z (idx 1)))))
  (defgenrule trRl_ltx-gen-at-0
    (forall ((z strd))
      (implies (p "ltx-gen" z (idx 2)) (trans z (idx 0)))))
  (defgenrule trRl_ltx-disclose-at-1
    (forall ((z strd))
      (implies (p "ltx-disclose" z (idx 2)) (trans z (idx 1)))))
  (defgenrule trRl_ltx-disclose-at-0
    (forall ((z strd))
      (implies (p "ltx-disclose" z (idx 2)) (trans z (idx 0)))))
  (defgenrule gen-st-init-0
    (forall ((z strd) (a name) (la rndx))
      (implies
        (and (p "init" z (idx 1)) (p "init" "la" z la)
          (p "init" "a" z a)) (gen-st (pv a la)))))
  (defgenrule gen-st-resp-0
    (forall ((z strd) (b name) (lb rndx))
      (implies
        (and (p "resp" z (idx 1)) (p "resp" "lb" z lb)
          (p "resp" "b" z b)) (gen-st (pv b lb)))))
  (defgenrule gen-st-ltx-disclose-0
    (forall ((z strd) (self name) (l rndx))
      (implies
        (and (p "ltx-disclose" z (idx 1)) (p "ltx-disclose" "l" z l)
          (p "ltx-disclose" "self" z self)) (gen-st (pv self l)))))
  (lang (sig sign) (body (tuple 3)) (pv (tuple 2))))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (pt pval) (priv-stor locn) (lb y rndx)
    (alpha zeta expt))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb lb) (y y) (alpha alpha) (zeta zeta))
  (non-orig (privk "sig" a))
  (uniq-orig nb)
  (uniq-gen y)
  (absent (y lb) (y alpha) (y zeta))
  (facts (neq a b) (undisclosed lb))
  (traces
    ((load priv-stor (cat pt (pv b lb)))
      (recv
        (sig (body a (exp (gen) alpha) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul lb alpha))
              (exp (gen) (mul y zeta)))))) (recv nb)))
  (label 822)
  (unrealized (0 1))
  (origs (nb (0 3)))
  (ugens (y (0 3)))
  (comment "Not closed under rules"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (pt pval) (priv-stor locn) (lb y rndx)
    (alpha zeta expt))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb lb) (y y) (alpha alpha) (zeta zeta))
  (non-orig (privk "sig" a))
  (uniq-orig nb)
  (uniq-gen y)
  (absent (y lb) (y alpha) (y zeta))
  (gen-st (pv b lb))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed lb))
  (rule assume-resp-0 gen-st-ltx-disclose-0)
  (traces
    ((load priv-stor (cat pt (pv b lb)))
      (recv
        (sig (body a (exp (gen) alpha) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul lb alpha))
              (exp (gen) (mul y zeta)))))) (recv nb)))
  (label 823)
  (parent 822)
  (unrealized (0 0) (0 1))
  (origs (nb (0 3)))
  (ugens (y (0 3)))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (a b name) (pt pt-0 pval)
    (priv-stor locn) (y rndx) (alpha zeta expt) (l rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha alpha) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (precedes ((1 1) (0 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l)
  (uniq-gen y)
  (absent (y alpha) (y zeta) (y l))
  (gen-st (pv b l))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)))
  (rule assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor (cat pt (pv b l))) (0 0))
  (traces
    ((load priv-stor (cat pt (pv b l)))
      (recv
        (sig (body a (exp (gen) alpha) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul alpha l)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l)))))
  (label 824)
  (parent 823)
  (unrealized (0 1) (0 4))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta expt) (l l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((1 1) (0 0)) ((2 2) (0 1)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (gen-st (pv b l))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)))
  (rule assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation encryption-test (added-strand ltx-gen 3)
    (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)) (0 1))
  (traces
    ((load priv-stor (cat pt (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l-0)))
      (send
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))))
  (label 825)
  (parent 824)
  (unrealized (0 4))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta expt) (l l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (precedes ((0 3) (3 0)) ((1 1) (0 0)) ((2 2) (0 1)) ((3 1) (0 4)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (gen-st (pv b l))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)))
  (rule assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener
      (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))) nb (0 4)
    (enc na nb a b
      (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
  (traces
    ((load priv-stor (cat pt (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l-0)))
      (send
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
  (label 826)
  (parent 825)
  (unrealized (3 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta expt) (l l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (precedes ((0 3) (4 0)) ((1 1) (0 0)) ((2 2) (0 1)) ((3 1) (0 4))
    ((4 1) (3 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (gen-st (pv b l))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)))
  (rule assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation encryption-test
    (added-listener
      (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))) (3 0))
  (traces
    ((load priv-stor (cat pt (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l-0)))
      (send
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
  (label 827)
  (parent 826)
  (unrealized (4 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta expt) (l l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) l) l-0))
  (precedes ((0 3) (4 0)) ((1 1) (0 0)) ((2 1) (5 0)) ((2 2) (0 1))
    ((3 1) (0 4)) ((4 1) (3 0)) ((5 1) (4 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (gen-st (pv b l))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)))
  (rule assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l) l-0))
    (exp (gen) (mul l l-0)) (4 0))
  (traces
    ((load priv-stor (cat pt (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l-0)))
      (send
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0))))
  (label 828)
  (parent 827)
  (unrealized (5 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta expt) (l l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) l-0) l))
  (precedes ((0 3) (4 0)) ((1 1) (0 0)) ((1 1) (5 0)) ((2 2) (0 1))
    ((3 1) (0 4)) ((4 1) (3 0)) ((5 1) (4 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (gen-st (pv b l))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)))
  (rule assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l-0) l))
    (exp (gen) (mul l l-0)) (4 0))
  (traces
    ((load priv-stor (cat pt (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l-0)))
      (send
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l))))
  (label 829)
  (parent 827)
  (unrealized (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta expt) (l l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 3) (4 0)) ((1 1) (0 0)) ((2 1) (6 0)) ((2 2) (0 1))
    ((3 1) (0 4)) ((4 1) (3 0)) ((5 1) (4 0)) ((6 2) (5 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)))
  (rule assume-resp-0 gen-st-ltx-disclose-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-disclose 3) l-0 (5 0)
    (ch-msg priv-stor-0 (cat pt-2 (pv a l-0))))
  (traces
    ((load priv-stor (cat pt (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l-0)))
      (send
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv a l-0)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l-0)))
  (label 830)
  (parent 828)
  (unrealized (5 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a self name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta expt) (l l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b self)
    (priv-stor priv-stor-0) (lb l-0) (y y) (alpha l) (zeta zeta))
  (defstrand ltx-gen 3 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 3) (3 0)) ((1 1) (5 0)) ((1 2) (0 1)) ((2 1) (0 4))
    ((3 1) (2 0)) ((4 1) (3 0)) ((5 2) (4 0)) ((6 1) (0 0))
    ((6 2) (4 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (gen-st (pv a l) (pv self l-0))
  (facts (neq (exp (gen) zeta) (gen)) (neq a self) (undisclosed l-0))
  (leads-to ((1 1) (5 0)) ((6 1) (0 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 1 7 ltx-gen 3) (exp (gen) l-0) (5 0))
  (traces
    ((load priv-stor-0 (cat pt-3 (pv self l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a self (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv a l)))
      (send
        (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-0 (pv a l)))
      (stor priv-stor (cat pt-1 "nil")) (send l))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-3 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 831)
  (parent 830)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta expt) (l l-0 rndx) (w expt))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) (mul l (rec w))) w))
  (precedes ((0 3) (4 0)) ((1 1) (0 0)) ((2 1) (6 0)) ((2 2) (0 1))
    ((3 1) (0 4)) ((4 1) (3 0)) ((5 1) (4 0)) ((6 2) (5 0))
    ((7 1) (5 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (precur (7 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul l (rec w))) w)) (exp (gen) l)
    (5 0))
  (traces
    ((load priv-stor (cat pt (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l-0)))
      (send
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv a l-0)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul l (rec w))) w))
      (send (cat (exp (gen) (mul l (rec w))) w))))
  (label 832)
  (parent 830)
  (unrealized (7 0))
  (comment "7 in cohort - 7 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a self name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta expt) (l l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b self)
    (priv-stor priv-stor-0) (lb l-0) (y y) (alpha l) (zeta zeta))
  (defstrand ltx-gen 3 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 3) (2 0)) ((1 1) (4 0)) ((1 2) (0 1)) ((2 1) (0 4))
    ((3 1) (2 0)) ((4 2) (3 0)) ((5 1) (0 0)) ((5 2) (3 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (gen-st (pv a l) (pv self l-0))
  (facts (neq (exp (gen) zeta) (gen)) (neq a self) (undisclosed l-0))
  (leads-to ((1 1) (4 0)) ((5 1) (0 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (2 0))
  (traces
    ((load priv-stor-0 (cat pt-3 (pv self l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a self (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv a l)))
      (send
        (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-0 (pv a l)))
      (stor priv-stor (cat pt-1 "nil")) (send l))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-3 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 833)
  (parent 831)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn)
    (l l-0 rndx) (zeta expt) (y rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul zeta y))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul zeta y))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) y) (mul l (rec y))))
  (precedes ((0 3) (7 0)) ((1 1) (0 0)) ((2 1) (6 0)) ((2 2) (0 1))
    ((3 1) (0 4)) ((4 1) (3 0)) ((5 1) (4 0)) ((6 2) (5 0))
    ((7 1) (5 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0)
  (uniq-gen y)
  (absent (y l) (y l-0) (y zeta))
  (precur (7 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 8 0 resp 4) (exp (gen) y-0) (7 0))
  (traces
    ((load priv-stor (cat pt (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul zeta y))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l-0)))
      (send
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul zeta y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul zeta y)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul zeta y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul zeta y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv a l-0)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l-0))
    ((recv (cat (exp (gen) y) (mul l (rec y))))
      (send (cat (exp (gen) y) (mul l (rec y))))))
  (label 834)
  (parent 832)
  (unrealized (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (a b a-0 b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y rndx) (zeta expt)
    (l la rndx) (beta expt) (l-0 x rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l-0) (y y) (alpha l) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) x) (mul l-0 (rec x))))
  (defstrand init 3 (na na-0) (a a-0) (b b-0) (priv-stor priv-stor-1)
    (la la) (x x) (beta beta))
  (precedes ((0 3) (4 0)) ((1 1) (0 0)) ((2 1) (6 0)) ((2 2) (0 1))
    ((3 1) (0 4)) ((4 1) (3 0)) ((5 1) (4 0)) ((6 2) (5 0))
    ((7 1) (5 0)) ((8 2) (7 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb na-0 l l-0)
  (uniq-gen y x)
  (absent (y zeta) (y l) (y l-0) (x la) (x beta))
  (precur (7 0))
  (gen-st (pv a l) (pv b l-0) (pv a-0 la))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)))
  (rule assume-resp-0 gen-st-ltx-disclose-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand init 3) (exp (gen) x) (7 0))
  (traces
    ((load priv-stor (cat pt (pv b l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l)))
      (send
        (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-2 (pv a l)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) x) (mul l-0 (rec x))))
      (send (cat (exp (gen) x) (mul l-0 (rec x)))))
    ((load priv-stor-1 (cat pt-4 (pv a-0 la)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a-0 b-0 (exp (gen) x)))))
  (label 835)
  (parent 832)
  (unrealized (5 0) (7 0) (8 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta expt) (l l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l-0) (y y) (alpha l) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (gen) l-0))
  (precedes ((0 3) (4 0)) ((1 1) (0 0)) ((1 1) (7 0)) ((2 1) (6 0))
    ((2 2) (0 1)) ((3 1) (0 4)) ((4 1) (3 0)) ((5 1) (4 0))
    ((6 2) (5 0)) ((7 1) (5 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (precur (7 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (contracted (l-1 l-0) (w l-0)) (gen) (7 0))
  (traces
    ((load priv-stor (cat pt (pv b l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l)))
      (send
        (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-2 (pv a l)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0))))
  (label 836)
  (parent 832)
  (unrealized (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a self name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta expt) (l l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b self)
    (priv-stor priv-stor-0) (lb l-0) (y y) (alpha l) (zeta zeta))
  (defstrand ltx-gen 3 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 3) (3 0)) ((1 1) (5 0)) ((1 2) (0 1)) ((2 1) (0 4))
    ((3 1) (2 0)) ((4 1) (3 0)) ((5 2) (4 0)) ((6 1) (4 0))
    ((7 1) (0 0)) ((7 2) (6 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (precur (6 0))
  (gen-st (pv a l) (pv self l-0))
  (facts (neq (exp (gen) zeta) (gen)) (neq a self) (undisclosed l-0))
  (leads-to ((1 1) (5 0)) ((7 1) (0 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 1 8 ltx-gen 3) (exp (gen) l-1) (7 0))
  (traces
    ((load priv-stor-0 (cat pt-3 (pv self l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a self (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv a l)))
      (send
        (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-0 (pv a l)))
      (stor priv-stor (cat pt-1 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-3 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 837)
  (parent 832)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (a b a-0 b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y rndx) (zeta expt)
    (l lb rndx) (alpha zeta-0 expt) (l-0 y-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l-0) (y y) (alpha l) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b-0)
    (priv-stor priv-stor-1) (lb lb) (y y-0) (alpha alpha) (zeta zeta-0))
  (precedes ((0 3) (4 0)) ((1 1) (0 0)) ((2 1) (6 0)) ((2 2) (0 1))
    ((3 1) (0 4)) ((4 1) (3 0)) ((5 1) (4 0)) ((6 2) (5 0))
    ((7 1) (5 0)) ((8 3) (7 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb nb-0 l l-0)
  (uniq-gen y y-0)
  (absent (y zeta) (y l) (y l-0) (y-0 lb) (y-0 alpha) (y-0 zeta-0))
  (precur (7 0))
  (gen-st (pv a l) (pv b l-0) (pv b-0 lb))
  (facts (neq (exp (gen) zeta-0) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)))
  (rule assume-resp-0 gen-st-ltx-disclose-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand resp 4) (exp (gen) y-0) (7 0))
  (traces
    ((load priv-stor (cat pt (pv b l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l)))
      (send
        (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-2 (pv a l)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-0 (rec y-0)))))
    ((load priv-stor-1 (cat pt-4 (pv b-0 lb)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0)))
      (recv (cat na-0 a-0 b-0 (exp (gen) zeta-0)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul lb alpha))
              (exp (gen) (mul zeta-0 y-0))))))))
  (label 838)
  (parent 832)
  (unrealized (5 0) (7 0) (8 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta expt) (l l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l-0) (mul l (rec l-0))))
  (precedes ((0 3) (4 0)) ((1 1) (0 0)) ((2 1) (6 0)) ((2 2) (0 1))
    ((2 2) (7 0)) ((3 1) (0 4)) ((4 1) (3 0)) ((5 1) (4 0))
    ((6 2) (5 0)) ((7 1) (5 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (precur (7 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 8 2 ltx-gen 3) (exp (gen) l-1) (7 0))
  (traces
    ((load priv-stor (cat pt (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l-0)))
      (send
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv a l-0)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l-0))
    ((recv (cat (exp (gen) l-0) (mul l (rec l-0))))
      (send (cat (exp (gen) l-0) (mul l (rec l-0))))))
  (label 839)
  (parent 832)
  (unrealized (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y rndx) (zeta expt)
    (l l-0 l-1 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l-0) (y y) (alpha l) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 3) (4 0)) ((1 1) (0 0)) ((2 1) (6 0)) ((2 2) (0 1))
    ((3 1) (0 4)) ((4 1) (3 0)) ((5 1) (4 0)) ((6 2) (5 0))
    ((7 1) (5 0)) ((8 2) (7 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0 l-1)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (precur (7 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 3) (exp (gen) l-1) (7 0))
  (traces
    ((load priv-stor (cat pt (pv b l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l)))
      (send
        (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-2 (pv a l)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
      (send (cat (exp (gen) l-1) (mul l-0 (rec l-1)))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-5 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))))
  (label 840)
  (parent 832)
  (unrealized (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a self name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta expt) (l l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b self)
    (priv-stor priv-stor-0) (lb l-0) (y y) (alpha l) (zeta zeta))
  (defstrand ltx-gen 3 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((1 1) (3 0)) ((1 2) (0 1)) ((2 1) (0 4)) ((3 2) (2 0))
    ((4 1) (0 0)) ((4 2) (2 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (gen-st (pv a l) (pv self l-0))
  (facts (neq (exp (gen) zeta) (gen)) (neq a self) (undisclosed l-0))
  (leads-to ((1 1) (3 0)) ((4 1) (0 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (2 0))
  (traces
    ((load priv-stor-0 (cat pt-3 (pv self l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a self (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv a l)))
      (send
        (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-0 (pv a l)))
      (stor priv-stor (cat pt-1 "nil")) (send l))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-3 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 841)
  (parent 833)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta expt) (l rndx) (beta expt) (x l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l-0) (y y) (alpha l) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) x) (mul (rec x) l-0)))
  (defstrand init 3 (na na-0) (a b) (b b-0) (priv-stor priv-stor)
    (la l-0) (x x) (beta beta))
  (precedes ((0 3) (4 0)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (6 0))
    ((2 2) (0 1)) ((3 1) (0 4)) ((4 1) (3 0)) ((5 1) (4 0))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb na-0 l l-0)
  (uniq-gen y x)
  (absent (y zeta) (y l) (y l-0) (x beta) (x l-0))
  (precur (7 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (6 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 9 1 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-4 (pv a-0 l-1))) (8 0))
  (traces
    ((load priv-stor (cat pt (pv b l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l)))
      (send
        (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-2 (pv a l)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) x) (mul (rec x) l-0)))
      (send (cat (exp (gen) x) (mul (rec x) l-0))))
    ((load priv-stor (cat pt (pv b l-0)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 b b-0 (exp (gen) x)))))
  (label 842)
  (parent 835)
  (unrealized (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta beta expt) (l x l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) x) (mul l (rec x))))
  (defstrand init 3 (na na-0) (a a) (b b-0) (priv-stor priv-stor-0)
    (la l-0) (x x) (beta beta))
  (precedes ((0 3) (4 0)) ((1 1) (0 0)) ((2 1) (6 0)) ((2 1) (8 0))
    ((2 2) (0 1)) ((3 1) (0 4)) ((4 1) (3 0)) ((5 1) (4 0))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb na-0 l l-0)
  (uniq-gen y x)
  (absent (y zeta) (y l) (y l-0) (x beta) (x l-0))
  (precur (7 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)) ((2 1) (8 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 9 2 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-4 (pv a-0 l-1))) (8 0))
  (traces
    ((load priv-stor (cat pt (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l-0)))
      (send
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv a l-0)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l-0))
    ((recv (cat (exp (gen) x) (mul l (rec x))))
      (send (cat (exp (gen) x) (mul l (rec x)))))
    ((load priv-stor-0 (cat pt-2 (pv a l-0)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a b-0 (exp (gen) x)))))
  (label 843)
  (parent 835)
  (unrealized (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (a b a-0 b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y rndx) (zeta expt)
    (l rndx) (beta expt) (l-0 x l-1 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l-0) (y y) (alpha l) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) x) (mul l-0 (rec x))))
  (defstrand init 3 (na na-0) (a a-0) (b b-0) (priv-stor priv-stor-1)
    (la l-1) (x x) (beta beta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self a-0)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 3) (4 0)) ((1 1) (0 0)) ((2 1) (6 0)) ((2 2) (0 1))
    ((3 1) (0 4)) ((4 1) (3 0)) ((5 1) (4 0)) ((6 2) (5 0))
    ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (8 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb na-0 l l-0 l-1)
  (uniq-gen y x)
  (absent (y zeta) (y l) (y l-0) (x beta) (x l-1))
  (precur (7 0))
  (gen-st (pv a l) (pv b l-0) (pv a-0 l-1))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)) ((9 1) (8 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-4 (pv a-0 l-1))) (8 0))
  (traces
    ((load priv-stor (cat pt (pv b l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l)))
      (send
        (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-2 (pv a l)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) x) (mul l-0 (rec x))))
      (send (cat (exp (gen) x) (mul l-0 (rec x)))))
    ((load priv-stor-1 (cat pt-4 (pv a-0 l-1)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a-0 b-0 (exp (gen) x))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv a-0 l-1)))))
  (label 844)
  (parent 835)
  (unrealized (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a self name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta expt) (l l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b self)
    (priv-stor priv-stor-0) (lb l-0) (y y) (alpha l) (zeta zeta))
  (defstrand ltx-gen 3 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 3) (2 0)) ((1 1) (4 0)) ((1 2) (0 1)) ((2 1) (0 4))
    ((3 1) (2 0)) ((4 2) (3 0)) ((5 1) (3 0)) ((6 1) (0 0))
    ((6 2) (5 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (precur (5 0))
  (gen-st (pv a l) (pv self l-0))
  (facts (neq (exp (gen) zeta) (gen)) (neq a self) (undisclosed l-0))
  (leads-to ((1 1) (4 0)) ((6 1) (0 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (2 0))
  (traces
    ((load priv-stor-0 (cat pt-3 (pv self l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a self (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv a l)))
      (send
        (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-0 (pv a l)))
      (stor priv-stor (cat pt-1 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-3 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 845)
  (parent 837)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (a b a-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta expt) (l rndx) (alpha zeta-0 expt) (y-0 l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l-0) (y y) (alpha l) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) y-0) (mul (rec y-0) l-0)))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b)
    (priv-stor priv-stor) (lb l-0) (y y-0) (alpha alpha) (zeta zeta-0))
  (precedes ((0 3) (4 0)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (6 0))
    ((2 2) (0 1)) ((3 1) (0 4)) ((4 1) (3 0)) ((5 1) (4 0))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 3) (7 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb nb-0 l l-0)
  (uniq-gen y y-0)
  (absent (y zeta) (y l) (y l-0) (y-0 alpha) (y-0 zeta-0) (y-0 l-0))
  (precur (7 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq (exp (gen) zeta-0) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (6 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 9 1 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-4 (pv b-0 l-1))) (8 0))
  (traces
    ((load priv-stor (cat pt (pv b l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l)))
      (send
        (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-2 (pv a l)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) y-0) (mul (rec y-0) l-0)))
      (send (cat (exp (gen) y-0) (mul (rec y-0) l-0))))
    ((load priv-stor (cat pt (pv b l-0)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b (exp (gen) zeta-0)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b
            (hash (exp (gen) (mul alpha l-0))
              (exp (gen) (mul zeta-0 y-0))))))))
  (label 846)
  (parent 838)
  (unrealized (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (a b a-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta alpha zeta-0 expt) (l y-0 l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) y-0) (mul l (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b a)
    (priv-stor priv-stor-0) (lb l-0) (y y-0) (alpha alpha)
    (zeta zeta-0))
  (precedes ((0 3) (4 0)) ((1 1) (0 0)) ((2 1) (6 0)) ((2 1) (8 0))
    ((2 2) (0 1)) ((3 1) (0 4)) ((4 1) (3 0)) ((5 1) (4 0))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 3) (7 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb nb-0 l l-0)
  (uniq-gen y y-0)
  (absent (y zeta) (y l) (y l-0) (y-0 alpha) (y-0 zeta-0) (y-0 l-0))
  (precur (7 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq (exp (gen) zeta-0) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b) (undisclosed l))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)) ((2 1) (8 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 9 2 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-4 (pv b-0 l-1))) (8 0))
  (traces
    ((load priv-stor (cat pt (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l-0)))
      (send
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv a l-0)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l-0))
    ((recv (cat (exp (gen) y-0) (mul l (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l (rec y-0)))))
    ((load priv-stor-0 (cat pt-2 (pv a l-0)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 a (exp (gen) zeta-0)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 a
            (hash (exp (gen) (mul alpha l-0))
              (exp (gen) (mul zeta-0 y-0))))))))
  (label 847)
  (parent 838)
  (unrealized (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y rndx) (zeta expt)
    (l rndx) (alpha zeta-0 expt) (l-0 y-0 l-1 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l-0) (y y) (alpha l) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b-0)
    (priv-stor priv-stor-1) (lb l-1) (y y-0) (alpha alpha)
    (zeta zeta-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b-0)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 3) (4 0)) ((1 1) (0 0)) ((2 1) (6 0)) ((2 2) (0 1))
    ((3 1) (0 4)) ((4 1) (3 0)) ((5 1) (4 0)) ((6 2) (5 0))
    ((7 1) (5 0)) ((8 3) (7 0)) ((9 1) (8 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb nb-0 l l-0 l-1)
  (uniq-gen y y-0)
  (absent (y zeta) (y l) (y l-0) (y-0 alpha) (y-0 zeta-0) (y-0 l-1))
  (precur (7 0))
  (gen-st (pv a l) (pv b l-0) (pv b-0 l-1))
  (facts (neq (exp (gen) zeta-0) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b) (undisclosed l-0))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)) ((9 1) (8 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-4 (pv b-0 l-1))) (8 0))
  (traces
    ((load priv-stor (cat pt (pv b l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l)))
      (send
        (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-2 (pv a l)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-0 (rec y-0)))))
    ((load priv-stor-1 (cat pt-4 (pv b-0 l-1)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0)))
      (recv (cat na-0 a-0 b-0 (exp (gen) zeta-0)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul alpha l-1))
              (exp (gen) (mul zeta-0 y-0)))))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv b-0 l-1)))))
  (label 848)
  (parent 838)
  (unrealized (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a self name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta expt) (l l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b self)
    (priv-stor priv-stor-0) (lb l-0) (y y) (alpha l) (zeta zeta))
  (defstrand ltx-gen 3 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((1 1) (2 0)) ((1 2) (0 1)) ((2 2) (0 4)) ((3 1) (0 0))
    ((3 2) (0 4)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (gen-st (pv a l) (pv self l-0))
  (facts (neq (exp (gen) zeta) (gen)) (neq a self) (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (2 0))
  (traces
    ((load priv-stor-0 (cat pt-3 (pv self l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a self (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv a l)))
      (send
        (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a))))
    ((load priv-stor (cat pt-0 (pv a l)))
      (stor priv-stor (cat pt-1 "nil")) (send l))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-3 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 849)
  (parent 841)
  (realized)
  (shape)
  (maps
    ((0)
      ((a a) (b self) (lb l-0) (y y) (alpha l) (zeta zeta) (na na)
        (nb nb) (priv-stor priv-stor-0))))
  (origs (l-0 (3 1)) (pt-3 (3 1)) (pt-1 (2 1)) (l (1 1)) (pt-0 (1 1))
    (nb (0 3)))
  (ugens (y (0 3))))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a self name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta expt) (l l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b self)
    (priv-stor priv-stor-0) (lb l-0) (y y) (alpha l) (zeta zeta))
  (defstrand ltx-gen 3 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((1 1) (3 0)) ((1 2) (0 1)) ((2 1) (0 4)) ((3 2) (2 0))
    ((4 1) (2 0)) ((5 1) (0 0)) ((5 2) (4 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (precur (4 0))
  (gen-st (pv a l) (pv self l-0))
  (facts (neq (exp (gen) zeta) (gen)) (neq a self) (undisclosed l-0))
  (leads-to ((1 1) (3 0)) ((5 1) (0 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (2 0))
  (traces
    ((load priv-stor-0 (cat pt-3 (pv self l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a self (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv a l)))
      (send
        (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-0 (pv a l)))
      (stor priv-stor (cat pt-1 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-3 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 850)
  (parent 845)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a self name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta expt) (l l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b self)
    (priv-stor priv-stor-0) (lb l-0) (y y) (alpha l) (zeta zeta))
  (defstrand ltx-gen 3 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((1 1) (2 0)) ((1 2) (0 1)) ((2 2) (0 4)) ((3 1) (0 4))
    ((4 1) (0 0)) ((4 2) (3 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (precur (3 0))
  (gen-st (pv a l) (pv self l-0))
  (facts (neq (exp (gen) zeta) (gen)) (neq a self) (undisclosed l-0))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (2 0))
  (traces
    ((load priv-stor-0 (cat pt-3 (pv self l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a self (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv a l)))
      (send
        (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a))))
    ((load priv-stor (cat pt-0 (pv a l)))
      (stor priv-stor (cat pt-1 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-3 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 851)
  (parent 850)
  (seen 849)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(comment "Nothing left to do")

(defprotocol dhcr-um diffie-hellman
  (defrole init
    (vars (la x rndx) (beta upsilon expt) (a b name) (na nb data)
      (priv-stor locn))
    (trace (load priv-stor (pv a la))
      (recv
        (sig (body b (exp (gen) beta) (pubk "sig" b)) (privk "sig" b)))
      (send (cat na a b (exp (gen) x)))
      (recv
        (cat (exp (gen) upsilon)
          (enc na nb a b
            (hash (exp (gen) (mul la beta))
              (exp (gen) (mul x upsilon)))))) (send nb))
    (uniq-orig na)
    (uniq-gen x)
    (absent (x la) (x beta))
    (assume (fact neq (exp (gen) upsilon) (gen)))
    (gen-st (pv a la)))
  (defrole resp
    (vars (lb y rndx) (alpha zeta expt) (a b name) (na nb data)
      (priv-stor locn))
    (trace (load priv-stor (pv b lb))
      (recv
        (sig (body a (exp (gen) alpha) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul lb alpha))
              (exp (gen) (mul y zeta)))))) (recv nb))
    (uniq-orig nb)
    (uniq-gen y)
    (absent (y lb) (y alpha) (y zeta))
    (assume (fact neq (exp (gen) zeta) (gen)))
    (gen-st (pv b lb)))
  (defrole ltx-gen
    (vars (self name) (l rndx) (priv-stor locn) (ignore mesg))
    (trace (load priv-stor ignore) (stor priv-stor (pv self l))
      (send
        (sig (body self (exp (gen) l) (pubk "sig" self))
          (privk "sig" self))))
    (uniq-orig l))
  (defrole ltx-disclose
    (vars (self name) (l rndx) (priv-stor locn))
    (trace (load priv-stor (pv self l)) (stor priv-stor "nil") (send l))
    (gen-st (pv self l)))
  (defrule undisclosed-not-disclosed
    (forall ((z strd) (l rndx))
      (implies
        (and (fact undisclosed l) (p "ltx-disclose" z (idx 2))
          (p "ltx-disclose" "l" z l))
        (false))))
  (defgenrule neqRl_indx
    (forall ((x indx)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_strd
    (forall ((x strd)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_mesg
    (forall ((x mesg)) (implies (fact neq x x) (false))))
  (defgenrule scissorsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (trans z2 i2)
          (leads-to z0 i0 z1 i1) (leads-to z0 i0 z2 i2))
        (and (= z1 z2) (= i1 i2)))))
  (defgenrule cakeRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (leads-to z0 i0 z1 i1)
          (leads-to z0 i0 z2 i2) (prec z1 i1 z2 i2)) (false))))
  (defgenrule no-interruption
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (leads-to z0 i0 z2 i2) (trans z1 i1)
          (same-locn z0 i0 z1 i1) (prec z0 i0 z1 i1) (prec z1 i1 z2 i2))
        (false))))
  (defgenrule shearsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (trans z2 i2)
          (leads-to z0 i0 z1 i1) (same-locn z0 i0 z2 i2)
          (prec z0 i0 z2 i2))
        (or (and (= z1 z2) (= i1 i2)) (prec z1 i1 z2 i2)))))
  (defgenrule invShearsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (same-locn z0 i0 z1 i1)
          (leads-to z1 i1 z2 i2) (prec z0 i0 z2 i2))
        (or (and (= z0 z1) (= i0 i1)) (prec z0 i0 z1 i1)))))
  (defgenrule assume-init-0
    (forall ((z strd) (upsilon expt))
      (implies (and (p "init" z (idx 4)) (p "init" "upsilon" z upsilon))
        (fact neq (exp (gen) upsilon) (gen)))))
  (defgenrule assume-resp-0
    (forall ((z strd) (zeta expt))
      (implies (and (p "resp" z (idx 3)) (p "resp" "zeta" z zeta))
        (fact neq (exp (gen) zeta) (gen)))))
  (defgenrule trRl_ltx-gen-at-1
    (forall ((z strd))
      (implies (p "ltx-gen" z (idx 2)) (trans z (idx 1)))))
  (defgenrule trRl_ltx-gen-at-0
    (forall ((z strd))
      (implies (p "ltx-gen" z (idx 2)) (trans z (idx 0)))))
  (defgenrule trRl_ltx-disclose-at-1
    (forall ((z strd))
      (implies (p "ltx-disclose" z (idx 2)) (trans z (idx 1)))))
  (defgenrule trRl_ltx-disclose-at-0
    (forall ((z strd))
      (implies (p "ltx-disclose" z (idx 2)) (trans z (idx 0)))))
  (defgenrule gen-st-init-0
    (forall ((z strd) (a name) (la rndx))
      (implies
        (and (p "init" z (idx 1)) (p "init" "la" z la)
          (p "init" "a" z a)) (gen-st (pv a la)))))
  (defgenrule gen-st-resp-0
    (forall ((z strd) (b name) (lb rndx))
      (implies
        (and (p "resp" z (idx 1)) (p "resp" "lb" z lb)
          (p "resp" "b" z b)) (gen-st (pv b lb)))))
  (defgenrule gen-st-ltx-disclose-0
    (forall ((z strd) (self name) (l rndx))
      (implies
        (and (p "ltx-disclose" z (idx 1)) (p "ltx-disclose" "l" z l)
          (p "ltx-disclose" "self" z self)) (gen-st (pv self l)))))
  (lang (sig sign) (body (tuple 3)) (pv (tuple 2))))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (pt pval) (priv-stor locn) (lb y rndx)
    (alpha zeta expt))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb lb) (y y) (alpha alpha) (zeta zeta))
  (non-orig (privk "sig" a))
  (uniq-orig nb)
  (uniq-gen y)
  (absent (y lb) (y alpha) (y zeta))
  (facts (neq a b))
  (traces
    ((load priv-stor (cat pt (pv b lb)))
      (recv
        (sig (body a (exp (gen) alpha) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul lb alpha))
              (exp (gen) (mul y zeta)))))) (recv nb)))
  (label 852)
  (unrealized (0 1))
  (origs (nb (0 3)))
  (ugens (y (0 3)))
  (comment "Not closed under rules"))

(defskeleton dhcr-um
  (vars (na nb data) (a b name) (pt pval) (priv-stor locn) (lb y rndx)
    (alpha zeta expt))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb lb) (y y) (alpha alpha) (zeta zeta))
  (non-orig (privk "sig" a))
  (uniq-orig nb)
  (uniq-gen y)
  (absent (y lb) (y alpha) (y zeta))
  (gen-st (pv b lb))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b))
  (rule assume-resp-0 gen-st-ltx-disclose-0)
  (traces
    ((load priv-stor (cat pt (pv b lb)))
      (recv
        (sig (body a (exp (gen) alpha) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul lb alpha))
              (exp (gen) (mul y zeta)))))) (recv nb)))
  (label 853)
  (parent 852)
  (unrealized (0 0) (0 1))
  (origs (nb (0 3)))
  (ugens (y (0 3)))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore mesg) (na nb data) (a b name) (pt pt-0 pval)
    (priv-stor locn) (y rndx) (alpha zeta expt) (l rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha alpha) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (precedes ((1 1) (0 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l)
  (uniq-gen y)
  (absent (y alpha) (y zeta) (y l))
  (gen-st (pv b l))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)))
  (rule assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor (cat pt (pv b l))) (0 0))
  (traces
    ((load priv-stor (cat pt (pv b l)))
      (recv
        (sig (body a (exp (gen) alpha) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul alpha l)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l)))))
  (label 854)
  (parent 853)
  (unrealized (0 1) (0 4))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta expt) (l l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((1 1) (0 0)) ((2 2) (0 1)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (gen-st (pv b l))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)))
  (rule assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation encryption-test (added-strand ltx-gen 3)
    (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)) (0 1))
  (traces
    ((load priv-stor (cat pt (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l-0)))
      (send
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))))
  (label 855)
  (parent 854)
  (unrealized (0 4))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta expt) (l l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (precedes ((0 3) (3 0)) ((1 1) (0 0)) ((2 2) (0 1)) ((3 1) (0 4)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (gen-st (pv b l))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)))
  (rule assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener
      (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))) nb (0 4)
    (enc na nb a b
      (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
  (traces
    ((load priv-stor (cat pt (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l-0)))
      (send
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
  (label 856)
  (parent 855)
  (unrealized (3 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta expt) (l l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (precedes ((0 3) (4 0)) ((1 1) (0 0)) ((2 2) (0 1)) ((3 1) (0 4))
    ((4 1) (3 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (gen-st (pv b l))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)))
  (rule assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation encryption-test
    (added-listener
      (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
    (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))) (3 0))
  (traces
    ((load priv-stor (cat pt (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l-0)))
      (send
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
  (label 857)
  (parent 856)
  (unrealized (4 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta expt) (l l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) l) l-0))
  (precedes ((0 3) (4 0)) ((1 1) (0 0)) ((2 1) (5 0)) ((2 2) (0 1))
    ((3 1) (0 4)) ((4 1) (3 0)) ((5 1) (4 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (gen-st (pv b l))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)))
  (rule assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l) l-0))
    (exp (gen) (mul l l-0)) (4 0))
  (traces
    ((load priv-stor (cat pt (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l-0)))
      (send
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0))))
  (label 858)
  (parent 857)
  (unrealized (5 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta expt) (l l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) l-0) l))
  (precedes ((0 3) (4 0)) ((1 1) (0 0)) ((1 1) (5 0)) ((2 2) (0 1))
    ((3 1) (0 4)) ((4 1) (3 0)) ((5 1) (4 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (gen-st (pv b l))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)))
  (rule assume-resp-0 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-listener (cat (exp (gen) l-0) l))
    (exp (gen) (mul l l-0)) (4 0))
  (traces
    ((load priv-stor (cat pt (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l-0)))
      (send
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l))))
  (label 859)
  (parent 857)
  (unrealized (5 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta expt) (l l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 3) (4 0)) ((1 1) (0 0)) ((2 1) (6 0)) ((2 2) (0 1))
    ((3 1) (0 4)) ((4 1) (3 0)) ((5 1) (4 0)) ((6 2) (5 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)))
  (rule assume-resp-0 gen-st-ltx-disclose-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-disclose 3) l-0 (5 0)
    (ch-msg priv-stor-0 (cat pt-2 (pv a l-0))))
  (traces
    ((load priv-stor (cat pt (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l-0)))
      (send
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv a l-0)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l-0)))
  (label 860)
  (parent 858)
  (unrealized (5 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta expt) (l l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l-0) (y y) (alpha l) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l-0))
  (precedes ((0 3) (4 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((3 1) (0 4)) ((4 1) (3 0)) ((5 1) (4 0)) ((6 2) (5 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (gen-st (pv b l-0))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-disclose 3) l-0 (5 0)
    (ch-msg priv-stor (cat pt (pv b l-0))))
  (traces
    ((load priv-stor (cat pt (pv b l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l)))
      (send
        (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor (cat pt (pv b l-0)))
      (stor priv-stor (cat pt-3 "nil")) (send l-0)))
  (label 861)
  (parent 859)
  (unrealized (5 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a self name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta expt) (l l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b self)
    (priv-stor priv-stor-0) (lb l-0) (y y) (alpha l) (zeta zeta))
  (defstrand ltx-gen 3 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 3) (3 0)) ((1 1) (5 0)) ((1 2) (0 1)) ((2 1) (0 4))
    ((3 1) (2 0)) ((4 1) (3 0)) ((5 2) (4 0)) ((6 1) (0 0))
    ((6 2) (4 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (gen-st (pv a l) (pv self l-0))
  (facts (neq (exp (gen) zeta) (gen)) (neq a self))
  (leads-to ((1 1) (5 0)) ((6 1) (0 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 1 7 ltx-gen 3) (exp (gen) l-0) (5 0))
  (traces
    ((load priv-stor-0 (cat pt-3 (pv self l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a self (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv a l)))
      (send
        (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-0 (pv a l)))
      (stor priv-stor (cat pt-1 "nil")) (send l))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-3 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 862)
  (parent 860)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta expt) (l l-0 rndx) (w expt))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) (mul l (rec w))) w))
  (precedes ((0 3) (4 0)) ((1 1) (0 0)) ((2 1) (6 0)) ((2 2) (0 1))
    ((3 1) (0 4)) ((4 1) (3 0)) ((5 1) (4 0)) ((6 2) (5 0))
    ((7 1) (5 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (precur (7 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul l (rec w))) w)) (exp (gen) l)
    (5 0))
  (traces
    ((load priv-stor (cat pt (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l-0)))
      (send
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv a l-0)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul l (rec w))) w))
      (send (cat (exp (gen) (mul l (rec w))) w))))
  (label 863)
  (parent 860)
  (unrealized (7 0))
  (comment "7 in cohort - 7 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta expt) (l l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (precedes ((0 3) (4 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((2 2) (5 0)) ((3 1) (0 4)) ((4 1) (3 0)) ((5 1) (4 0))
    ((6 2) (5 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (gen-st (pv b l))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 7 2 ltx-gen 3) (exp (gen) l-0) (5 0))
  (traces
    ((load priv-stor (cat pt (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l-0)))
      (send
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l)))
  (label 864)
  (parent 861)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta expt) (l l-0 rndx) (w expt))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l-0) (y y) (alpha l) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) (mul l (rec w))) w))
  (precedes ((0 3) (4 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((3 1) (0 4)) ((4 1) (3 0)) ((5 1) (4 0)) ((6 2) (5 0))
    ((7 1) (5 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (precur (7 0))
  (gen-st (pv b l-0))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul l (rec w))) w)) (exp (gen) l)
    (5 0))
  (traces
    ((load priv-stor (cat pt (pv b l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l)))
      (send
        (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor (cat pt (pv b l-0)))
      (stor priv-stor (cat pt-3 "nil")) (send l-0))
    ((recv (cat (exp (gen) (mul l (rec w))) w))
      (send (cat (exp (gen) (mul l (rec w))) w))))
  (label 865)
  (parent 861)
  (unrealized (7 0))
  (comment "7 in cohort - 7 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a self name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta expt) (l l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b self)
    (priv-stor priv-stor-0) (lb l-0) (y y) (alpha l) (zeta zeta))
  (defstrand ltx-gen 3 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 3) (2 0)) ((1 1) (4 0)) ((1 2) (0 1)) ((2 1) (0 4))
    ((3 1) (2 0)) ((4 2) (3 0)) ((5 1) (0 0)) ((5 2) (3 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (gen-st (pv a l) (pv self l-0))
  (facts (neq (exp (gen) zeta) (gen)) (neq a self))
  (leads-to ((1 1) (4 0)) ((5 1) (0 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (2 0))
  (traces
    ((load priv-stor-0 (cat pt-3 (pv self l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a self (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv a l)))
      (send
        (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-0 (pv a l)))
      (stor priv-stor (cat pt-1 "nil")) (send l))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-3 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 866)
  (parent 862)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn)
    (l l-0 rndx) (zeta expt) (y rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul zeta y))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul zeta y))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) y) (mul l (rec y))))
  (precedes ((0 3) (7 0)) ((1 1) (0 0)) ((2 1) (6 0)) ((2 2) (0 1))
    ((3 1) (0 4)) ((4 1) (3 0)) ((5 1) (4 0)) ((6 2) (5 0))
    ((7 1) (5 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0)
  (uniq-gen y)
  (absent (y l) (y l-0) (y zeta))
  (precur (7 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 8 0 resp 4) (exp (gen) y-0) (7 0))
  (traces
    ((load priv-stor (cat pt (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul zeta y))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l-0)))
      (send
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul zeta y))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul zeta y)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul zeta y))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul zeta y)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv a l-0)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l-0))
    ((recv (cat (exp (gen) y) (mul l (rec y))))
      (send (cat (exp (gen) y) (mul l (rec y))))))
  (label 867)
  (parent 863)
  (unrealized (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (a b a-0 b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y rndx) (zeta expt)
    (l la rndx) (beta expt) (l-0 x rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l-0) (y y) (alpha l) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) x) (mul l-0 (rec x))))
  (defstrand init 3 (na na-0) (a a-0) (b b-0) (priv-stor priv-stor-1)
    (la la) (x x) (beta beta))
  (precedes ((0 3) (4 0)) ((1 1) (0 0)) ((2 1) (6 0)) ((2 2) (0 1))
    ((3 1) (0 4)) ((4 1) (3 0)) ((5 1) (4 0)) ((6 2) (5 0))
    ((7 1) (5 0)) ((8 2) (7 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb na-0 l l-0)
  (uniq-gen y x)
  (absent (y zeta) (y l) (y l-0) (x la) (x beta))
  (precur (7 0))
  (gen-st (pv a l) (pv b l-0) (pv a-0 la))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)))
  (rule assume-resp-0 gen-st-ltx-disclose-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand init 3) (exp (gen) x) (7 0))
  (traces
    ((load priv-stor (cat pt (pv b l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l)))
      (send
        (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-2 (pv a l)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) x) (mul l-0 (rec x))))
      (send (cat (exp (gen) x) (mul l-0 (rec x)))))
    ((load priv-stor-1 (cat pt-4 (pv a-0 la)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a-0 b-0 (exp (gen) x)))))
  (label 868)
  (parent 863)
  (unrealized (5 0) (7 0) (8 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta expt) (l l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l-0) (y y) (alpha l) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (gen) l-0))
  (precedes ((0 3) (4 0)) ((1 1) (0 0)) ((1 1) (7 0)) ((2 1) (6 0))
    ((2 2) (0 1)) ((3 1) (0 4)) ((4 1) (3 0)) ((5 1) (4 0))
    ((6 2) (5 0)) ((7 1) (5 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (precur (7 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (contracted (l-1 l-0) (w l-0)) (gen) (7 0))
  (traces
    ((load priv-stor (cat pt (pv b l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l)))
      (send
        (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-2 (pv a l)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0))))
  (label 869)
  (parent 863)
  (unrealized (7 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a self name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta expt) (l l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b self)
    (priv-stor priv-stor-0) (lb l-0) (y y) (alpha l) (zeta zeta))
  (defstrand ltx-gen 3 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 3) (3 0)) ((1 1) (5 0)) ((1 2) (0 1)) ((2 1) (0 4))
    ((3 1) (2 0)) ((4 1) (3 0)) ((5 2) (4 0)) ((6 1) (4 0))
    ((7 1) (0 0)) ((7 2) (6 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (precur (6 0))
  (gen-st (pv a l) (pv self l-0))
  (facts (neq (exp (gen) zeta) (gen)) (neq a self))
  (leads-to ((1 1) (5 0)) ((7 1) (0 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 1 8 ltx-gen 3) (exp (gen) l-1) (7 0))
  (traces
    ((load priv-stor-0 (cat pt-3 (pv self l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a self (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv a l)))
      (send
        (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-0 (pv a l)))
      (stor priv-stor (cat pt-1 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-3 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 870)
  (parent 863)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (a b a-0 b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y rndx) (zeta expt)
    (l lb rndx) (alpha zeta-0 expt) (l-0 y-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l-0) (y y) (alpha l) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b-0)
    (priv-stor priv-stor-1) (lb lb) (y y-0) (alpha alpha) (zeta zeta-0))
  (precedes ((0 3) (4 0)) ((1 1) (0 0)) ((2 1) (6 0)) ((2 2) (0 1))
    ((3 1) (0 4)) ((4 1) (3 0)) ((5 1) (4 0)) ((6 2) (5 0))
    ((7 1) (5 0)) ((8 3) (7 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb nb-0 l l-0)
  (uniq-gen y y-0)
  (absent (y zeta) (y l) (y l-0) (y-0 lb) (y-0 alpha) (y-0 zeta-0))
  (precur (7 0))
  (gen-st (pv a l) (pv b l-0) (pv b-0 lb))
  (facts (neq (exp (gen) zeta-0) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)))
  (rule assume-resp-0 gen-st-ltx-disclose-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand resp 4) (exp (gen) y-0) (7 0))
  (traces
    ((load priv-stor (cat pt (pv b l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l)))
      (send
        (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-2 (pv a l)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-0 (rec y-0)))))
    ((load priv-stor-1 (cat pt-4 (pv b-0 lb)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0)))
      (recv (cat na-0 a-0 b-0 (exp (gen) zeta-0)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul lb alpha))
              (exp (gen) (mul zeta-0 y-0))))))))
  (label 871)
  (parent 863)
  (unrealized (5 0) (7 0) (8 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta expt) (l l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l-0) (mul l (rec l-0))))
  (precedes ((0 3) (4 0)) ((1 1) (0 0)) ((2 1) (6 0)) ((2 2) (0 1))
    ((2 2) (7 0)) ((3 1) (0 4)) ((4 1) (3 0)) ((5 1) (4 0))
    ((6 2) (5 0)) ((7 1) (5 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (precur (7 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 8 2 ltx-gen 3) (exp (gen) l-1) (7 0))
  (traces
    ((load priv-stor (cat pt (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l-0)))
      (send
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv a l-0)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l-0))
    ((recv (cat (exp (gen) l-0) (mul l (rec l-0))))
      (send (cat (exp (gen) l-0) (mul l (rec l-0))))))
  (label 872)
  (parent 863)
  (unrealized (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y rndx) (zeta expt)
    (l l-0 l-1 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l-0) (y y) (alpha l) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 3) (4 0)) ((1 1) (0 0)) ((2 1) (6 0)) ((2 2) (0 1))
    ((3 1) (0 4)) ((4 1) (3 0)) ((5 1) (4 0)) ((6 2) (5 0))
    ((7 1) (5 0)) ((8 2) (7 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0 l-1)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (precur (7 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 3) (exp (gen) l-1) (7 0))
  (traces
    ((load priv-stor (cat pt (pv b l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l)))
      (send
        (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-2 (pv a l)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
      (send (cat (exp (gen) l-1) (mul l-0 (rec l-1)))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-5 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))))
  (label 873)
  (parent 863)
  (unrealized (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta expt) (l l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (precedes ((0 3) (3 0)) ((1 1) (0 0)) ((1 1) (5 0)) ((2 2) (0 1))
    ((2 2) (4 0)) ((3 1) (0 4)) ((4 1) (3 0)) ((5 2) (4 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (gen-st (pv b l))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (5 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l-0)))
      (send
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l)))
  (label 874)
  (parent 864)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn)
    (lb l rndx) (zeta expt) (y rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb lb) (y y) (alpha l) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l lb))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l))
  (deflistener (hash (exp (gen) (mul lb l)) (exp (gen) (mul zeta y))))
  (deflistener (cat (exp (gen) (mul lb l)) (exp (gen) (mul zeta y))))
  (deflistener (cat (exp (gen) l) lb))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l lb))
  (deflistener (cat (exp (gen) y) (mul l (rec y))))
  (precedes ((0 3) (7 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((3 1) (0 4)) ((4 1) (3 0)) ((5 1) (4 0)) ((6 2) (5 0))
    ((7 1) (5 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb lb l)
  (uniq-gen y)
  (absent (y lb) (y l) (y zeta))
  (precur (7 0))
  (gen-st (pv b lb))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 8 0 resp 4) (exp (gen) y-0) (7 0))
  (traces
    ((load priv-stor (cat pt (pv b lb)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul lb l)) (exp (gen) (mul zeta y))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b lb))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l)))
      (send
        (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a))))
    ((recv (hash (exp (gen) (mul lb l)) (exp (gen) (mul zeta y))))
      (send (hash (exp (gen) (mul lb l)) (exp (gen) (mul zeta y)))))
    ((recv (cat (exp (gen) (mul lb l)) (exp (gen) (mul zeta y))))
      (send (cat (exp (gen) (mul lb l)) (exp (gen) (mul zeta y)))))
    ((recv (cat (exp (gen) l) lb)) (send (cat (exp (gen) l) lb)))
    ((load priv-stor (cat pt (pv b lb)))
      (stor priv-stor (cat pt-3 "nil")) (send lb))
    ((recv (cat (exp (gen) y) (mul l (rec y))))
      (send (cat (exp (gen) y) (mul l (rec y))))))
  (label 875)
  (parent 865)
  (unrealized (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (a b a-0 b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y rndx) (zeta expt)
    (l la rndx) (beta expt) (l-0 x rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) x) (mul l-0 (rec x))))
  (defstrand init 3 (na na-0) (a a-0) (b b-0) (priv-stor priv-stor-1)
    (la la) (x x) (beta beta))
  (precedes ((0 3) (4 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((3 1) (0 4)) ((4 1) (3 0)) ((5 1) (4 0)) ((6 2) (5 0))
    ((7 1) (5 0)) ((8 2) (7 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb na-0 l l-0)
  (uniq-gen y x)
  (absent (y zeta) (y l) (y l-0) (x la) (x beta))
  (precur (7 0))
  (gen-st (pv b l) (pv a-0 la))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)))
  (rule assume-resp-0 gen-st-ltx-disclose-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand init 3) (exp (gen) x) (7 0))
  (traces
    ((load priv-stor (cat pt (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l-0)))
      (send
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) x) (mul l-0 (rec x))))
      (send (cat (exp (gen) x) (mul l-0 (rec x)))))
    ((load priv-stor-1 (cat pt-4 (pv a-0 la)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a-0 b-0 (exp (gen) x)))))
  (label 876)
  (parent 865)
  (unrealized (5 0) (7 0) (8 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta expt) (l l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (gen) l-0))
  (precedes ((0 3) (4 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (7 0))
    ((2 2) (0 1)) ((3 1) (0 4)) ((4 1) (3 0)) ((5 1) (4 0))
    ((6 2) (5 0)) ((7 1) (5 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (precur (7 0))
  (gen-st (pv b l))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (contracted (l-1 l-0) (w l-0)) (gen) (7 0))
  (traces
    ((load priv-stor (cat pt (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l-0)))
      (send
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0))))
  (label 877)
  (parent 865)
  (unrealized (7 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a self name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta expt) (l l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b self)
    (priv-stor priv-stor-0) (lb l-0) (y y) (alpha l) (zeta zeta))
  (defstrand ltx-gen 3 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-disclose 3 (self self) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l-0) (mul l (rec l-0))))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 3) (3 0)) ((1 2) (0 1)) ((2 1) (0 4)) ((3 1) (2 0))
    ((4 1) (3 0)) ((5 2) (4 0)) ((6 1) (4 0)) ((7 1) (0 0))
    ((7 1) (5 0)) ((7 2) (6 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (precur (6 0))
  (gen-st (pv self l-0))
  (facts (neq (exp (gen) zeta) (gen)) (neq a self))
  (leads-to ((7 1) (0 0)) ((7 1) (5 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 1 8 ltx-gen 3) (exp (gen) l-1) (7 0))
  (traces
    ((load priv-stor-0 (cat pt-3 (pv self l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a self (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv a l)))
      (send
        (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor-0 (cat pt-3 (pv self l-0)))
      (stor priv-stor-0 (cat pt-1 "nil")) (send l-0))
    ((recv (cat (exp (gen) l-0) (mul l (rec l-0))))
      (send (cat (exp (gen) l-0) (mul l (rec l-0)))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-3 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 878)
  (parent 865)
  (unrealized (4 0) (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (a b a-0 b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y rndx) (zeta expt)
    (l lb rndx) (alpha zeta-0 expt) (l-0 y-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b-0)
    (priv-stor priv-stor-1) (lb lb) (y y-0) (alpha alpha) (zeta zeta-0))
  (precedes ((0 3) (4 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((3 1) (0 4)) ((4 1) (3 0)) ((5 1) (4 0)) ((6 2) (5 0))
    ((7 1) (5 0)) ((8 3) (7 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb nb-0 l l-0)
  (uniq-gen y y-0)
  (absent (y zeta) (y l) (y l-0) (y-0 lb) (y-0 alpha) (y-0 zeta-0))
  (precur (7 0))
  (gen-st (pv b l) (pv b-0 lb))
  (facts (neq (exp (gen) zeta-0) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)))
  (rule assume-resp-0 gen-st-ltx-disclose-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand resp 4) (exp (gen) y-0) (7 0))
  (traces
    ((load priv-stor (cat pt (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l-0)))
      (send
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-0 (rec y-0)))))
    ((load priv-stor-1 (cat pt-4 (pv b-0 lb)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0)))
      (recv (cat na-0 a-0 b-0 (exp (gen) zeta-0)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul lb alpha))
              (exp (gen) (mul zeta-0 y-0))))))))
  (label 879)
  (parent 865)
  (unrealized (5 0) (7 0) (8 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta expt) (l l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (precedes ((0 3) (4 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((2 2) (7 0)) ((3 1) (0 4)) ((4 1) (3 0)) ((5 1) (4 0))
    ((6 2) (5 0)) ((7 1) (5 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (precur (7 0))
  (gen-st (pv b l))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (displaced 8 2 ltx-gen 3) (exp (gen) l-1) (7 0))
  (traces
    ((load priv-stor (cat pt (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l-0)))
      (send
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one)))))
  (label 880)
  (parent 865)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb data) (a b self name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y rndx) (zeta expt)
    (l l-0 l-1 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
  (defstrand ltx-gen 3 (ignore ignore-1) (self self)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 3) (4 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((3 1) (0 4)) ((4 1) (3 0)) ((5 1) (4 0)) ((6 2) (5 0))
    ((7 1) (5 0)) ((8 2) (7 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0 l-1)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (precur (7 0))
  (gen-st (pv b l))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-gen 3) (exp (gen) l-1) (7 0))
  (traces
    ((load priv-stor (cat pt (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l-0)))
      (send
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-1) (mul l-0 (rec l-1))))
      (send (cat (exp (gen) l-1) (mul l-0 (rec l-1)))))
    ((load priv-stor-1 (cat pt-4 ignore-1))
      (stor priv-stor-1 (cat pt-5 (pv self l-1)))
      (send
        (sig (body self (exp (gen) l-1) (pubk "sig" self))
          (privk "sig" self)))))
  (label 881)
  (parent 865)
  (unrealized (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a self name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta expt) (l l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b self)
    (priv-stor priv-stor-0) (lb l-0) (y y) (alpha l) (zeta zeta))
  (defstrand ltx-gen 3 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((1 1) (3 0)) ((1 2) (0 1)) ((2 1) (0 4)) ((3 2) (2 0))
    ((4 1) (0 0)) ((4 2) (2 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (gen-st (pv a l) (pv self l-0))
  (facts (neq (exp (gen) zeta) (gen)) (neq a self))
  (leads-to ((1 1) (3 0)) ((4 1) (0 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (2 0))
  (traces
    ((load priv-stor-0 (cat pt-3 (pv self l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a self (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv a l)))
      (send
        (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-0 (pv a l)))
      (stor priv-stor (cat pt-1 "nil")) (send l))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-3 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 882)
  (parent 866)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta expt) (l rndx) (beta expt) (x l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l-0) (y y) (alpha l) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) x) (mul (rec x) l-0)))
  (defstrand init 3 (na na-0) (a b) (b b-0) (priv-stor priv-stor)
    (la l-0) (x x) (beta beta))
  (precedes ((0 3) (4 0)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (6 0))
    ((2 2) (0 1)) ((3 1) (0 4)) ((4 1) (3 0)) ((5 1) (4 0))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb na-0 l l-0)
  (uniq-gen y x)
  (absent (y zeta) (y l) (y l-0) (x beta) (x l-0))
  (precur (7 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (6 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 9 1 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-4 (pv a-0 l-1))) (8 0))
  (traces
    ((load priv-stor (cat pt (pv b l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l)))
      (send
        (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-2 (pv a l)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) x) (mul (rec x) l-0)))
      (send (cat (exp (gen) x) (mul (rec x) l-0))))
    ((load priv-stor (cat pt (pv b l-0)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 b b-0 (exp (gen) x)))))
  (label 883)
  (parent 868)
  (unrealized (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta beta expt) (l x l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) x) (mul l (rec x))))
  (defstrand init 3 (na na-0) (a a) (b b-0) (priv-stor priv-stor-0)
    (la l-0) (x x) (beta beta))
  (precedes ((0 3) (4 0)) ((1 1) (0 0)) ((2 1) (6 0)) ((2 1) (8 0))
    ((2 2) (0 1)) ((3 1) (0 4)) ((4 1) (3 0)) ((5 1) (4 0))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb na-0 l l-0)
  (uniq-gen y x)
  (absent (y zeta) (y l) (y l-0) (x beta) (x l-0))
  (precur (7 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)) ((2 1) (8 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 9 2 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-4 (pv a-0 l-1))) (8 0))
  (traces
    ((load priv-stor (cat pt (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l-0)))
      (send
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv a l-0)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l-0))
    ((recv (cat (exp (gen) x) (mul l (rec x))))
      (send (cat (exp (gen) x) (mul l (rec x)))))
    ((load priv-stor-0 (cat pt-2 (pv a l-0)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a b-0 (exp (gen) x)))))
  (label 884)
  (parent 868)
  (unrealized (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (a b a-0 b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y rndx) (zeta expt)
    (l rndx) (beta expt) (l-0 x l-1 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l-0) (y y) (alpha l) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) x) (mul l-0 (rec x))))
  (defstrand init 3 (na na-0) (a a-0) (b b-0) (priv-stor priv-stor-1)
    (la l-1) (x x) (beta beta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self a-0)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 3) (4 0)) ((1 1) (0 0)) ((2 1) (6 0)) ((2 2) (0 1))
    ((3 1) (0 4)) ((4 1) (3 0)) ((5 1) (4 0)) ((6 2) (5 0))
    ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (8 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb na-0 l l-0 l-1)
  (uniq-gen y x)
  (absent (y zeta) (y l) (y l-0) (x beta) (x l-1))
  (precur (7 0))
  (gen-st (pv a l) (pv b l-0) (pv a-0 l-1))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)) ((9 1) (8 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-4 (pv a-0 l-1))) (8 0))
  (traces
    ((load priv-stor (cat pt (pv b l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l)))
      (send
        (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-2 (pv a l)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) x) (mul l-0 (rec x))))
      (send (cat (exp (gen) x) (mul l-0 (rec x)))))
    ((load priv-stor-1 (cat pt-4 (pv a-0 l-1)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a-0 b-0 (exp (gen) x))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv a-0 l-1)))))
  (label 885)
  (parent 868)
  (unrealized (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (y rndx) (zeta expt) (l l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l-0) (y y) (alpha l) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l-0))
  (precedes ((0 3) (4 0)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (6 0))
    ((2 2) (0 1)) ((3 1) (0 4)) ((4 1) (3 0)) ((5 1) (4 0))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (precur (7 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (6 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-disclose 3) l-0 (7 0)
    (ch-msg priv-stor (cat pt (pv b l-0))))
  (traces
    ((load priv-stor (cat pt (pv b l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l)))
      (send
        (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-2 (pv a l)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor (cat pt (pv b l-0)))
      (stor priv-stor (cat pt-4 "nil")) (send l-0)))
  (label 886)
  (parent 869)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a self name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta expt) (l l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b self)
    (priv-stor priv-stor-0) (lb l-0) (y y) (alpha l) (zeta zeta))
  (defstrand ltx-gen 3 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 3) (2 0)) ((1 1) (4 0)) ((1 2) (0 1)) ((2 1) (0 4))
    ((3 1) (2 0)) ((4 2) (3 0)) ((5 1) (3 0)) ((6 1) (0 0))
    ((6 2) (5 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (precur (5 0))
  (gen-st (pv a l) (pv self l-0))
  (facts (neq (exp (gen) zeta) (gen)) (neq a self))
  (leads-to ((1 1) (4 0)) ((6 1) (0 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (2 0))
  (traces
    ((load priv-stor-0 (cat pt-3 (pv self l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a self (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv a l)))
      (send
        (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-0 (pv a l)))
      (stor priv-stor (cat pt-1 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-3 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 887)
  (parent 870)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (a b a-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta expt) (l rndx) (alpha zeta-0 expt) (y-0 l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l-0) (y y) (alpha l) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) y-0) (mul (rec y-0) l-0)))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b)
    (priv-stor priv-stor) (lb l-0) (y y-0) (alpha alpha) (zeta zeta-0))
  (precedes ((0 3) (4 0)) ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (6 0))
    ((2 2) (0 1)) ((3 1) (0 4)) ((4 1) (3 0)) ((5 1) (4 0))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 3) (7 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb nb-0 l l-0)
  (uniq-gen y y-0)
  (absent (y zeta) (y l) (y l-0) (y-0 alpha) (y-0 zeta-0) (y-0 l-0))
  (precur (7 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq (exp (gen) zeta-0) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (8 0)) ((2 1) (6 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 9 1 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-4 (pv b-0 l-1))) (8 0))
  (traces
    ((load priv-stor (cat pt (pv b l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l)))
      (send
        (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-2 (pv a l)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) y-0) (mul (rec y-0) l-0)))
      (send (cat (exp (gen) y-0) (mul (rec y-0) l-0))))
    ((load priv-stor (cat pt (pv b l-0)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b (exp (gen) zeta-0)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b
            (hash (exp (gen) (mul alpha l-0))
              (exp (gen) (mul zeta-0 y-0))))))))
  (label 888)
  (parent 871)
  (unrealized (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (a b a-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta alpha zeta-0 expt) (l y-0 l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) y-0) (mul l (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b a)
    (priv-stor priv-stor-0) (lb l-0) (y y-0) (alpha alpha)
    (zeta zeta-0))
  (precedes ((0 3) (4 0)) ((1 1) (0 0)) ((2 1) (6 0)) ((2 1) (8 0))
    ((2 2) (0 1)) ((3 1) (0 4)) ((4 1) (3 0)) ((5 1) (4 0))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 3) (7 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb nb-0 l l-0)
  (uniq-gen y y-0)
  (absent (y zeta) (y l) (y l-0) (y-0 alpha) (y-0 zeta-0) (y-0 l-0))
  (precur (7 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq (exp (gen) zeta-0) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)) ((2 1) (8 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 9 2 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-4 (pv b-0 l-1))) (8 0))
  (traces
    ((load priv-stor (cat pt (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l-0)))
      (send
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv a l-0)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l-0))
    ((recv (cat (exp (gen) y-0) (mul l (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l (rec y-0)))))
    ((load priv-stor-0 (cat pt-2 (pv a l-0)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 a (exp (gen) zeta-0)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 a
            (hash (exp (gen) (mul alpha l-0))
              (exp (gen) (mul zeta-0 y-0))))))))
  (label 889)
  (parent 871)
  (unrealized (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y rndx) (zeta expt)
    (l rndx) (alpha zeta-0 expt) (l-0 y-0 l-1 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l-0) (y y) (alpha l) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b-0)
    (priv-stor priv-stor-1) (lb l-1) (y y-0) (alpha alpha)
    (zeta zeta-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b-0)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 3) (4 0)) ((1 1) (0 0)) ((2 1) (6 0)) ((2 2) (0 1))
    ((3 1) (0 4)) ((4 1) (3 0)) ((5 1) (4 0)) ((6 2) (5 0))
    ((7 1) (5 0)) ((8 3) (7 0)) ((9 1) (8 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb nb-0 l l-0 l-1)
  (uniq-gen y y-0)
  (absent (y zeta) (y l) (y l-0) (y-0 alpha) (y-0 zeta-0) (y-0 l-1))
  (precur (7 0))
  (gen-st (pv a l) (pv b l-0) (pv b-0 l-1))
  (facts (neq (exp (gen) zeta-0) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b))
  (leads-to ((1 1) (0 0)) ((2 1) (6 0)) ((9 1) (8 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-4 (pv b-0 l-1))) (8 0))
  (traces
    ((load priv-stor (cat pt (pv b l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l)))
      (send
        (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-2 (pv a l)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-0 (rec y-0)))))
    ((load priv-stor-1 (cat pt-4 (pv b-0 l-1)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0)))
      (recv (cat na-0 a-0 b-0 (exp (gen) zeta-0)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul alpha l-1))
              (exp (gen) (mul zeta-0 y-0)))))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv b-0 l-1)))))
  (label 890)
  (parent 871)
  (unrealized (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta expt) (l l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (precedes ((1 1) (0 0)) ((1 1) (4 0)) ((2 2) (0 1)) ((2 2) (3 0))
    ((3 1) (0 4)) ((4 2) (3 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (gen-st (pv b l))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (4 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l-0)))
      (send
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l)))
  (label 891)
  (parent 874)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta beta expt) (l x l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l-0) (y y) (alpha l) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) x) (mul l (rec x))))
  (defstrand init 3 (na na-0) (a b) (b b-0) (priv-stor priv-stor)
    (la l-0) (x x) (beta beta))
  (precedes ((0 3) (4 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((1 1) (8 0))
    ((2 2) (0 1)) ((3 1) (0 4)) ((4 1) (3 0)) ((5 1) (4 0))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb na-0 l l-0)
  (uniq-gen y x)
  (absent (y zeta) (y l) (y l-0) (x beta) (x l-0))
  (precur (7 0))
  (gen-st (pv b l-0))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((1 1) (8 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 9 1 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-4 (pv a-0 l-1))) (8 0))
  (traces
    ((load priv-stor (cat pt (pv b l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l)))
      (send
        (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor (cat pt (pv b l-0)))
      (stor priv-stor (cat pt-3 "nil")) (send l-0))
    ((recv (cat (exp (gen) x) (mul l (rec x))))
      (send (cat (exp (gen) x) (mul l (rec x)))))
    ((load priv-stor (cat pt (pv b l-0)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 b b-0 (exp (gen) x)))))
  (label 892)
  (parent 876)
  (unrealized (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 data) (a b b-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta expt) (l rndx) (beta expt) (x l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) x) (mul (rec x) l-0)))
  (defstrand init 3 (na na-0) (a a) (b b-0) (priv-stor priv-stor-0)
    (la l-0) (x x) (beta beta))
  (precedes ((0 3) (4 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (8 0))
    ((2 2) (0 1)) ((3 1) (0 4)) ((4 1) (3 0)) ((5 1) (4 0))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb na-0 l l-0)
  (uniq-gen y x)
  (absent (y zeta) (y l) (y l-0) (x beta) (x l-0))
  (precur (7 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (8 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 9 2 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-4 (pv a-0 l-1))) (8 0))
  (traces
    ((load priv-stor (cat pt (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l-0)))
      (send
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) x) (mul (rec x) l-0)))
      (send (cat (exp (gen) x) (mul (rec x) l-0))))
    ((load priv-stor-0 (cat pt-2 (pv a l-0)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a b-0 (exp (gen) x)))))
  (label 893)
  (parent 876)
  (unrealized (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 data)
    (a b a-0 b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y rndx) (zeta expt)
    (l rndx) (beta expt) (l-0 x l-1 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) x) (mul l-0 (rec x))))
  (defstrand init 3 (na na-0) (a a-0) (b b-0) (priv-stor priv-stor-1)
    (la l-1) (x x) (beta beta))
  (defstrand ltx-gen 2 (ignore ignore-1) (self a-0)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 3) (4 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((3 1) (0 4)) ((4 1) (3 0)) ((5 1) (4 0)) ((6 2) (5 0))
    ((7 1) (5 0)) ((8 2) (7 0)) ((9 1) (8 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb na-0 l l-0 l-1)
  (uniq-gen y x)
  (absent (y zeta) (y l) (y l-0) (x beta) (x l-1))
  (precur (7 0))
  (gen-st (pv b l) (pv a-0 l-1))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((9 1) (8 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-4 (pv a-0 l-1))) (8 0))
  (traces
    ((load priv-stor (cat pt (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l-0)))
      (send
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) x) (mul l-0 (rec x))))
      (send (cat (exp (gen) x) (mul l-0 (rec x)))))
    ((load priv-stor-1 (cat pt-4 (pv a-0 l-1)))
      (recv
        (sig (body b-0 (exp (gen) beta) (pubk "sig" b-0))
          (privk "sig" b-0))) (send (cat na-0 a-0 b-0 (exp (gen) x))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv a-0 l-1)))))
  (label 894)
  (parent 876)
  (unrealized (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (y rndx) (zeta expt) (l l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 3) (4 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (8 0))
    ((2 2) (0 1)) ((3 1) (0 4)) ((4 1) (3 0)) ((5 1) (4 0))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 2) (7 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (precur (7 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (8 0)))
  (rule assume-resp-0 gen-st-ltx-disclose-0 trRl_ltx-disclose-at-0
    trRl_ltx-disclose-at-1 trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation nonce-test (added-strand ltx-disclose 3) l-0 (7 0)
    (ch-msg priv-stor-0 (cat pt-2 (pv a l-0))))
  (traces
    ((load priv-stor (cat pt (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l-0)))
      (send
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv a l-0)))
      (stor priv-stor-0 (cat pt-4 "nil")) (send l-0)))
  (label 895)
  (parent 877)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (a b a-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta alpha zeta-0 expt) (l y-0 l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l-0) (y y) (alpha l) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) l) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l-0))
  (deflistener (cat (exp (gen) y-0) (mul l (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b)
    (priv-stor priv-stor) (lb l-0) (y y-0) (alpha alpha) (zeta zeta-0))
  (precedes ((0 3) (4 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((1 1) (8 0))
    ((2 2) (0 1)) ((3 1) (0 4)) ((4 1) (3 0)) ((5 1) (4 0))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 3) (7 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb nb-0 l l-0)
  (uniq-gen y y-0)
  (absent (y zeta) (y l) (y l-0) (y-0 alpha) (y-0 zeta-0) (y-0 l-0))
  (precur (7 0))
  (gen-st (pv b l-0))
  (facts (neq (exp (gen) zeta-0) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((1 1) (8 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 9 1 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-4 (pv b-0 l-1))) (8 0))
  (traces
    ((load priv-stor (cat pt (pv b l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l)))
      (send
        (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) l) l-0)) (send (cat (exp (gen) l) l-0)))
    ((load priv-stor (cat pt (pv b l-0)))
      (stor priv-stor (cat pt-3 "nil")) (send l-0))
    ((recv (cat (exp (gen) y-0) (mul l (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l (rec y-0)))))
    ((load priv-stor (cat pt (pv b l-0)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 b (exp (gen) zeta-0)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b
            (hash (exp (gen) (mul alpha l-0))
              (exp (gen) (mul zeta-0 y-0))))))))
  (label 896)
  (parent 879)
  (unrealized (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb na-0 nb-0 data) (a b a-0 name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta expt) (l rndx) (alpha zeta-0 expt) (y-0 l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) y-0) (mul (rec y-0) l-0)))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b a)
    (priv-stor priv-stor-0) (lb l-0) (y y-0) (alpha alpha)
    (zeta zeta-0))
  (precedes ((0 3) (4 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (8 0))
    ((2 2) (0 1)) ((3 1) (0 4)) ((4 1) (3 0)) ((5 1) (4 0))
    ((6 2) (5 0)) ((7 1) (5 0)) ((8 3) (7 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb nb-0 l l-0)
  (uniq-gen y y-0)
  (absent (y zeta) (y l) (y l-0) (y-0 alpha) (y-0 zeta-0) (y-0 l-0))
  (precur (7 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq (exp (gen) zeta-0) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (8 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (displaced 9 2 ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-4 (pv b-0 l-1))) (8 0))
  (traces
    ((load priv-stor (cat pt (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l-0)))
      (send
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) y-0) (mul (rec y-0) l-0)))
      (send (cat (exp (gen) y-0) (mul (rec y-0) l-0))))
    ((load priv-stor-0 (cat pt-2 (pv a l-0)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0))) (recv (cat na-0 a-0 a (exp (gen) zeta-0)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 a
            (hash (exp (gen) (mul alpha l-0))
              (exp (gen) (mul zeta-0 y-0))))))))
  (label 897)
  (parent 879)
  (unrealized (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 ignore-1 mesg) (na nb na-0 nb-0 data)
    (a b a-0 b-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pt-5 pval)
    (priv-stor priv-stor-0 priv-stor-1 locn) (y rndx) (zeta expt)
    (l rndx) (alpha zeta-0 expt) (l-0 y-0 l-1 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
  (defstrand resp 4 (na na-0) (nb nb-0) (a a-0) (b b-0)
    (priv-stor priv-stor-1) (lb l-1) (y y-0) (alpha alpha)
    (zeta zeta-0))
  (defstrand ltx-gen 2 (ignore ignore-1) (self b-0)
    (priv-stor priv-stor-1) (l l-1))
  (precedes ((0 3) (4 0)) ((1 1) (0 0)) ((1 1) (6 0)) ((2 2) (0 1))
    ((3 1) (0 4)) ((4 1) (3 0)) ((5 1) (4 0)) ((6 2) (5 0))
    ((7 1) (5 0)) ((8 3) (7 0)) ((9 1) (8 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb nb-0 l l-0 l-1)
  (uniq-gen y y-0)
  (absent (y zeta) (y l) (y l-0) (y-0 alpha) (y-0 zeta-0) (y-0 l-1))
  (precur (7 0))
  (gen-st (pv b l) (pv b-0 l-1))
  (facts (neq (exp (gen) zeta-0) (gen)) (neq (exp (gen) zeta) (gen))
    (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((9 1) (8 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation channel-test (added-strand ltx-gen 2)
    (ch-msg priv-stor-1 (cat pt-4 (pv b-0 l-1))) (8 0))
  (traces
    ((load priv-stor (cat pt (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l-0)))
      (send
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a))))
    ((recv (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) y-0) (mul l-0 (rec y-0))))
      (send (cat (exp (gen) y-0) (mul l-0 (rec y-0)))))
    ((load priv-stor-1 (cat pt-4 (pv b-0 l-1)))
      (recv
        (sig (body a-0 (exp (gen) alpha) (pubk "sig" a-0))
          (privk "sig" a-0)))
      (recv (cat na-0 a-0 b-0 (exp (gen) zeta-0)))
      (send
        (cat (exp (gen) y-0)
          (enc na-0 nb-0 a-0 b-0
            (hash (exp (gen) (mul alpha l-1))
              (exp (gen) (mul zeta-0 y-0)))))))
    ((load priv-stor-1 (cat pt-5 ignore-1))
      (stor priv-stor-1 (cat pt-4 (pv b-0 l-1)))))
  (label 898)
  (parent 879)
  (unrealized (5 0) (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta expt) (l l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (precedes ((0 3) (3 0)) ((1 1) (0 0)) ((1 1) (5 0)) ((2 2) (0 1))
    ((2 2) (6 0)) ((3 1) (0 4)) ((4 1) (3 0)) ((5 2) (4 0))
    ((6 1) (4 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (precur (6 0))
  (gen-st (pv b l))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (5 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l-0)))
      (send
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one)))))
  (label 899)
  (parent 880)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a self name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta expt) (l l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b self)
    (priv-stor priv-stor-0) (lb l-0) (y y) (alpha l) (zeta zeta))
  (defstrand ltx-gen 3 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((1 1) (2 0)) ((1 2) (0 1)) ((2 2) (0 4)) ((3 1) (0 0))
    ((3 2) (0 4)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (gen-st (pv a l) (pv self l-0))
  (facts (neq (exp (gen) zeta) (gen)) (neq a self))
  (leads-to ((1 1) (2 0)) ((3 1) (0 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (2 0))
  (traces
    ((load priv-stor-0 (cat pt-3 (pv self l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a self (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv a l)))
      (send
        (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a))))
    ((load priv-stor (cat pt-0 (pv a l)))
      (stor priv-stor (cat pt-1 "nil")) (send l))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-3 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 900)
  (parent 882)
  (realized)
  (shape)
  (maps
    ((0)
      ((a a) (b self) (lb l-0) (y y) (alpha l) (zeta zeta) (na na)
        (nb nb) (priv-stor priv-stor-0))))
  (origs (l-0 (3 1)) (pt-3 (3 1)) (pt-1 (2 1)) (l (1 1)) (pt-0 (1 1))
    (nb (0 3)))
  (ugens (y (0 3))))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (y rndx) (zeta expt) (l l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l-0) (y y) (alpha l) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l-0))
  (precedes ((0 3) (3 0)) ((1 1) (0 0)) ((1 1) (7 0)) ((2 1) (5 0))
    ((2 2) (0 1)) ((3 1) (0 4)) ((4 1) (3 0)) ((5 2) (4 0))
    ((6 1) (4 0)) ((7 2) (6 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (precur (6 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (7 0)) ((2 1) (5 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv b l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l)))
      (send
        (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-2 (pv a l)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor (cat pt (pv b l-0)))
      (stor priv-stor (cat pt-4 "nil")) (send l-0)))
  (label 901)
  (parent 886)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a self name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta expt) (l l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b self)
    (priv-stor priv-stor-0) (lb l-0) (y y) (alpha l) (zeta zeta))
  (defstrand ltx-gen 3 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((1 1) (3 0)) ((1 2) (0 1)) ((2 1) (0 4)) ((3 2) (2 0))
    ((4 1) (2 0)) ((5 1) (0 0)) ((5 2) (4 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (precur (4 0))
  (gen-st (pv a l) (pv self l-0))
  (facts (neq (exp (gen) zeta) (gen)) (neq a self))
  (leads-to ((1 1) (3 0)) ((5 1) (0 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (2 0))
  (traces
    ((load priv-stor-0 (cat pt-3 (pv self l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a self (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv a l)))
      (send
        (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt-0 (pv a l)))
      (stor priv-stor (cat pt-1 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-3 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 902)
  (parent 887)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta expt) (l l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (precedes ((1 1) (0 0)) ((1 1) (3 0)) ((2 2) (0 1)) ((3 2) (0 4)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (gen-st (pv b l))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (3 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l-0)))
      (send
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a))))
    ((load priv-stor (cat pt (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l)))
  (label 903)
  (parent 891)
  (realized)
  (shape)
  (maps
    ((0)
      ((a a) (b b) (lb l) (y y) (alpha l-0) (zeta zeta) (na na) (nb nb)
        (priv-stor priv-stor))))
  (origs (l-0 (2 1)) (pt-2 (2 1)) (pt-3 (3 1)) (l (1 1)) (pt (1 1))
    (nb (0 3)))
  (ugens (y (0 3))))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (y rndx) (zeta expt) (l l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor-0) (l l-0))
  (precedes ((0 3) (3 0)) ((1 1) (0 0)) ((1 1) (5 0)) ((2 1) (7 0))
    ((2 2) (0 1)) ((3 1) (0 4)) ((4 1) (3 0)) ((5 2) (4 0))
    ((6 1) (4 0)) ((7 2) (6 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (precur (6 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (5 0)) ((2 1) (7 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l-0)))
      (send
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a))))
    ((recv (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))
      (send (cat (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta)))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv a l-0)))
      (stor priv-stor-0 (cat pt-4 "nil")) (send l-0)))
  (label 904)
  (parent 895)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta expt) (l l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (precedes ((1 1) (0 0)) ((1 1) (4 0)) ((2 2) (0 1)) ((2 2) (5 0))
    ((3 1) (0 4)) ((4 2) (3 0)) ((5 1) (3 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (precur (5 0))
  (gen-st (pv b l))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (4 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l-0)))
      (send
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one)))))
  (label 905)
  (parent 899)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (y rndx) (zeta expt) (l l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l-0) (y y) (alpha l) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l-0))
  (precedes ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (4 0)) ((2 2) (0 1))
    ((3 1) (0 4)) ((4 2) (3 0)) ((5 1) (3 0)) ((6 2) (5 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (precur (5 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (6 0)) ((2 1) (4 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv b l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l)))
      (send
        (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor-0 (cat pt-2 (pv a l)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor (cat pt (pv b l-0)))
      (stor priv-stor (cat pt-4 "nil")) (send l-0)))
  (label 906)
  (parent 901)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a self name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta expt) (l l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b self)
    (priv-stor priv-stor-0) (lb l-0) (y y) (alpha l) (zeta zeta))
  (defstrand ltx-gen 3 (ignore ignore) (self a) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (defstrand ltx-gen 3 (ignore ignore-0) (self self)
    (priv-stor priv-stor-0) (l l-0))
  (precedes ((1 1) (2 0)) ((1 2) (0 1)) ((2 2) (0 4)) ((3 1) (0 4))
    ((4 1) (0 0)) ((4 2) (3 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (precur (3 0))
  (gen-st (pv a l) (pv self l-0))
  (facts (neq (exp (gen) zeta) (gen)) (neq a self))
  (leads-to ((1 1) (2 0)) ((4 1) (0 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (2 0))
  (traces
    ((load priv-stor-0 (cat pt-3 (pv self l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a self (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a self
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt ignore))
      (stor priv-stor (cat pt-0 (pv a l)))
      (send
        (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a))))
    ((load priv-stor (cat pt-0 (pv a l)))
      (stor priv-stor (cat pt-1 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one))))
    ((load priv-stor-0 (cat pt-2 ignore-0))
      (stor priv-stor-0 (cat pt-3 (pv self l-0)))
      (send
        (sig (body self (exp (gen) l-0) (pubk "sig" self))
          (privk "sig" self)))))
  (label 907)
  (parent 902)
  (seen 900)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (y rndx) (zeta expt) (l l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l-0))
  (deflistener (cat (exp (gen) l-0) l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor-0) (l l-0))
  (precedes ((1 1) (0 0)) ((1 1) (4 0)) ((2 1) (6 0)) ((2 2) (0 1))
    ((3 1) (0 4)) ((4 2) (3 0)) ((5 1) (3 0)) ((6 2) (5 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (precur (5 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (4 0)) ((2 1) (6 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l-0)))
      (send
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a))))
    ((recv (cat (exp (gen) l-0) l)) (send (cat (exp (gen) l-0) l)))
    ((load priv-stor (cat pt (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv a l-0)))
      (stor priv-stor-0 (cat pt-4 "nil")) (send l-0)))
  (label 908)
  (parent 904)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta expt) (l l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (exp (gen) l-0) (one)))
  (precedes ((1 1) (0 0)) ((1 1) (3 0)) ((2 2) (0 1)) ((2 2) (4 0))
    ((3 2) (0 4)) ((4 1) (0 4)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (precur (4 0))
  (gen-st (pv b l))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (3 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l-0)))
      (send
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a))))
    ((load priv-stor (cat pt (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (exp (gen) l-0) (one)))
      (send (cat (exp (gen) l-0) (one)))))
  (label 909)
  (parent 905)
  (seen 903)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (y rndx) (zeta expt) (l l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l-0) (y y) (alpha l) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor-0) (l l))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l-0))
  (precedes ((1 1) (0 0)) ((1 1) (5 0)) ((2 1) (3 0)) ((2 2) (0 1))
    ((3 2) (0 4)) ((4 1) (0 4)) ((5 2) (4 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (precur (4 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (5 0)) ((2 1) (3 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv b l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l)))
      (send
        (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a))))
    ((load priv-stor-0 (cat pt-2 (pv a l)))
      (stor priv-stor-0 (cat pt-3 "nil")) (send l))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor (cat pt (pv b l-0)))
      (stor priv-stor (cat pt-4 "nil")) (send l-0)))
  (label 910)
  (parent 906)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (y rndx) (zeta expt) (l l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor-0) (l l-0))
  (precedes ((1 1) (0 0)) ((1 1) (3 0)) ((2 1) (5 0)) ((2 2) (0 1))
    ((3 2) (0 4)) ((4 1) (0 4)) ((5 2) (4 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (precur (4 0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (3 0)) ((2 1) (5 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l-0)))
      (send
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a))))
    ((load priv-stor (cat pt (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor-0 (cat pt-2 (pv a l-0)))
      (stor priv-stor-0 (cat pt-4 "nil")) (send l-0)))
  (label 911)
  (parent 908)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta expt) (l l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l-0) (y y) (alpha l) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l))
  (deflistener (cat (gen) l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l-0))
  (precedes ((1 1) (0 0)) ((1 1) (4 0)) ((2 2) (0 1)) ((3 1) (0 4))
    ((4 2) (3 0)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (precur (3 0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (4 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv b l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l)))
      (send
        (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a))))
    ((recv (cat (gen) l-0)) (send (cat (gen) l-0)))
    ((load priv-stor (cat pt (pv b l-0)))
      (stor priv-stor (cat pt-3 "nil")) (send l-0)))
  (label 912)
  (parent 910)
  (realized)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval) (priv-stor priv-stor-0 locn)
    (y rndx) (zeta expt) (l l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l) (y y) (alpha l-0) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l-0))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l))
  (defstrand ltx-disclose 3 (self a) (priv-stor priv-stor-0) (l l-0))
  (precedes ((1 1) (0 0)) ((1 1) (3 0)) ((2 1) (4 0)) ((2 2) (0 1))
    ((3 2) (0 4)) ((4 2) (0 4)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (gen-st (pv a l-0) (pv b l))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (3 0)) ((2 1) (4 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (4 0))
  (traces
    ((load priv-stor (cat pt (pv b l)))
      (recv
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l-0)))
      (send
        (sig (body a (exp (gen) l-0) (pubk "sig" a)) (privk "sig" a))))
    ((load priv-stor (cat pt (pv b l)))
      (stor priv-stor (cat pt-3 "nil")) (send l))
    ((load priv-stor-0 (cat pt-2 (pv a l-0)))
      (stor priv-stor-0 (cat pt-4 "nil")) (send l-0)))
  (label 913)
  (parent 911)
  (seen 914)
  (realized)
  (comment "1 in cohort - 0 not yet seen"))

(defskeleton dhcr-um
  (vars (ignore ignore-0 mesg) (na nb data) (a b name)
    (pt pt-0 pt-1 pt-2 pt-3 pval) (priv-stor priv-stor-0 locn) (y rndx)
    (zeta expt) (l l-0 rndx))
  (defstrand resp 5 (na na) (nb nb) (a a) (b b) (priv-stor priv-stor)
    (lb l-0) (y y) (alpha l) (zeta zeta))
  (defstrand ltx-gen 2 (ignore ignore) (self b) (priv-stor priv-stor)
    (l l-0))
  (defstrand ltx-gen 3 (ignore ignore-0) (self a)
    (priv-stor priv-stor-0) (l l))
  (defstrand ltx-disclose 3 (self b) (priv-stor priv-stor) (l l-0))
  (precedes ((1 1) (0 0)) ((1 1) (3 0)) ((2 2) (0 1)) ((3 2) (0 4)))
  (non-orig (privk "sig" a))
  (uniq-orig nb l l-0)
  (uniq-gen y)
  (absent (y zeta) (y l) (y l-0))
  (gen-st (pv a l) (pv b l-0))
  (facts (neq (exp (gen) zeta) (gen)) (neq a b))
  (leads-to ((1 1) (0 0)) ((1 1) (3 0)))
  (rule assume-resp-0 trRl_ltx-disclose-at-0 trRl_ltx-disclose-at-1
    trRl_ltx-gen-at-0 trRl_ltx-gen-at-1)
  (operation generalization deleted (3 0))
  (traces
    ((load priv-stor (cat pt (pv b l-0)))
      (recv (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a)))
      (recv (cat na a b (exp (gen) zeta)))
      (send
        (cat (exp (gen) y)
          (enc na nb a b
            (hash (exp (gen) (mul l l-0)) (exp (gen) (mul y zeta))))))
      (recv nb))
    ((load priv-stor (cat pt-0 ignore))
      (stor priv-stor (cat pt (pv b l-0))))
    ((load priv-stor-0 (cat pt-1 ignore-0))
      (stor priv-stor-0 (cat pt-2 (pv a l)))
      (send
        (sig (body a (exp (gen) l) (pubk "sig" a)) (privk "sig" a))))
    ((load priv-stor (cat pt (pv b l-0)))
      (stor priv-stor (cat pt-3 "nil")) (send l-0)))
  (label 914)
  (parent 912)
  (realized)
  (shape)
  (maps
    ((0)
      ((a a) (b b) (lb l-0) (y y) (alpha l) (zeta zeta) (na na) (nb nb)
        (priv-stor priv-stor))))
  (origs (pt-3 (3 1)) (l (2 1)) (pt-2 (2 1)) (l-0 (1 1)) (pt (1 1))
    (nb (0 3)))
  (ugens (y (0 3))))

(comment "Nothing left to do")
