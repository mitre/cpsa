(herald dhstatic-state (algebra diffie-hellman) (bound 16))

(comment "CPSA 4.3.1")
(comment "All input read from tst/dhstatic-state.scm")
(comment "Strand count bounded at 16")

(defprotocol dhstatic-state diffie-hellman
  (defrole cert
    (vars (subj ca name) (serial data) (galpha mesg))
    (trace (recv (sig (cert-req subj galpha ca) (privk "sig" subj)))
      (send (sig (cert subj galpha ca serial) (privk "sig" ca))))
    (uniq-orig serial)
    (comment "Certificate Authority"))
  (defrole get-cert
    (vars (self ca name) (serial data) (ra rndx) (static-key locn)
      (ignore mesg))
    (trace
      (send (sig (cert-req self (exp (gen) ra) ca) (privk "sig" self)))
      (recv (sig (cert self (exp (gen) ra) ca serial) (privk "sig" ca)))
      (load static-key ignore)
      (stor static-key (cat "privkey" self ra serial ca)))
    (uniq-gen ra)
    (comment "Get certified"))
  (defrole init
    (vars (a b ca name) (ra rndx) (serial-a serial-b data) (galpha base)
      (n text) (static-key locn))
    (trace (load static-key (cat "privkey" a ra serial-a ca))
      (recv (sig (cert b galpha ca serial-b) (privk "sig" ca)))
      (send (enc n a b serial-a serial-b (exp galpha ra))) (recv n))
    (uniq-orig n)
    (gen-st (cat "privkey" a ra serial-a ca))
    (facts (neq a b))
    (comment "Initiator is A"))
  (defrole resp
    (vars (a b ca name) (rb rndx) (serial-b serial-a data) (galpha base)
      (n text) (static-key locn))
    (trace (load static-key (cat "privkey" b rb serial-b ca))
      (recv (sig (cert a galpha ca serial-a) (privk "sig" ca)))
      (recv (enc n a b serial-a serial-b (exp galpha rb))) (send n))
    (facts (neq a b))
    (gen-st (cat "privkey" b rb serial-b ca))
    (comment "Responder is B"))
  (defgenrule neqRl_indx
    (forall ((x indx)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_strd
    (forall ((x strd)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_mesg
    (forall ((x mesg)) (implies (fact neq x x) (false))))
  (defgenrule scissorsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (trans z2 i2)
          (leads-to z0 i0 z1 i1) (leads-to z0 i0 z2 i2))
        (and (= z1 z2) (= i1 i2)))))
  (defgenrule cakeRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (leads-to z0 i0 z1 i1)
          (leads-to z0 i0 z2 i2) (prec z1 i1 z2 i2)) (false))))
  (defgenrule no-interruption
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (leads-to z0 i0 z2 i2) (trans z1 i1)
          (same-locn z0 i0 z1 i1) (prec z0 i0 z1 i1) (prec z1 i1 z2 i2))
        (false))))
  (defgenrule shearsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (trans z2 i2)
          (leads-to z0 i0 z1 i1) (same-locn z0 i0 z2 i2)
          (prec z0 i0 z2 i2))
        (or (and (= z1 z2) (= i1 i2)) (prec z1 i1 z2 i2)))))
  (defgenrule invShearsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (same-locn z0 i0 z1 i1)
          (leads-to z1 i1 z2 i2) (prec z0 i0 z2 i2))
        (or (and (= z0 z1) (= i0 i1)) (prec z0 i0 z1 i1)))))
  (defgenrule fact-init-neq0
    (forall ((z strd) (b a name))
      (implies
        (and (p "init" z 2) (p "init" "b" z b) (p "init" "a" z a))
        (fact neq a b))))
  (defgenrule fact-resp-neq0
    (forall ((z strd) (b a name))
      (implies
        (and (p "resp" z 2) (p "resp" "b" z b) (p "resp" "a" z a))
        (fact neq a b))))
  (defgenrule trRl_get-cert-at-3
    (forall ((z strd)) (implies (p "get-cert" z 4) (trans z 3))))
  (defgenrule trRl_get-cert-at-2
    (forall ((z strd)) (implies (p "get-cert" z 4) (trans z 2))))
  (defgenrule gen-st-init-0
    (forall ((z strd) (serial-a data) (ra rndx) (ca a name))
      (implies
        (and (p "init" z 1) (p "init" "serial-a" z serial-a)
          (p "init" "ra" z ra) (p "init" "ca" z ca) (p "init" "a" z a))
        (gen-st (cat "privkey" a ra serial-a ca)))))
  (defgenrule gen-st-resp-0
    (forall ((z strd) (serial-b data) (rb rndx) (ca b name))
      (implies
        (and (p "resp" z 1) (p "resp" "serial-b" z serial-b)
          (p "resp" "rb" z rb) (p "resp" "ca" z ca) (p "resp" "b" z b))
        (gen-st (cat "privkey" b rb serial-b ca)))))
  (lang (cert-req (tupl 3)) (cert (tupl 4)) (sig sign)))

(defskeleton dhstatic-state
  (vars (serial-a serial-b data) (n text) (ca b a name) (pt pval)
    (galpha base) (static-key locn) (ra rndx))
  (defstrand init 4 (serial-a serial-a) (serial-b serial-b) (n n) (a a)
    (b b) (ca ca) (galpha galpha) (static-key static-key) (ra ra))
  (non-orig (privk "sig" ca) (privk "sig" b))
  (uniq-orig n)
  (traces
    ((load static-key (cat pt "privkey" a ra serial-a ca))
      (recv (sig (cert b galpha ca serial-b) (privk "sig" ca)))
      (send (enc n a b serial-a serial-b (exp galpha ra))) (recv n)))
  (label 0)
  (unrealized (0 1))
  (origs (n (0 2)))
  (comment "Not closed under rules"))

(defskeleton dhstatic-state
  (vars (serial-a serial-b data) (n text) (ca b a name) (pt pval)
    (galpha base) (static-key locn) (ra rndx))
  (defstrand init 4 (serial-a serial-a) (serial-b serial-b) (n n) (a a)
    (b b) (ca ca) (galpha galpha) (static-key static-key) (ra ra))
  (non-orig (privk "sig" ca) (privk "sig" b))
  (uniq-orig n)
  (gen-st (cat "privkey" a ra serial-a ca))
  (facts (neq a b) (neq b a))
  (rule fact-init-neq0 fact-resp-neq0 gen-st-resp-0)
  (traces
    ((load static-key (cat pt "privkey" a ra serial-a ca))
      (recv (sig (cert b galpha ca serial-b) (privk "sig" ca)))
      (send (enc n a b serial-a serial-b (exp galpha ra))) (recv n)))
  (label 1)
  (parent 0)
  (unrealized (0 0) (0 1))
  (origs (n (0 2)))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhstatic-state
  (vars (ignore mesg) (serial-a serial-b data) (n text) (ca b a name)
    (pt pt-0 pval) (galpha base) (static-key locn) (ra rndx))
  (defstrand init 4 (serial-a serial-a) (serial-b serial-b) (n n) (a a)
    (b b) (ca ca) (galpha galpha) (static-key static-key) (ra ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-a) (self a)
    (ca ca) (static-key static-key) (ra ra))
  (precedes ((1 3) (0 0)))
  (non-orig (privk "sig" ca) (privk "sig" b))
  (uniq-orig n)
  (uniq-gen ra)
  (gen-st (cat "privkey" a ra serial-a ca))
  (facts (neq a b) (neq b a))
  (rule fact-init-neq0 fact-resp-neq0 trRl_get-cert-at-2
    trRl_get-cert-at-3)
  (operation channel-test (added-strand get-cert 4)
    (ch-msg static-key (cat pt "privkey" a ra serial-a ca)) (0 0))
  (traces
    ((load static-key (cat pt "privkey" a ra serial-a ca))
      (recv (sig (cert b galpha ca serial-b) (privk "sig" ca)))
      (send (enc n a b serial-a serial-b (exp galpha ra))) (recv n))
    ((send (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (recv (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" a ra serial-a ca))))
  (label 2)
  (parent 1)
  (unrealized (0 1) (0 3) (1 1))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhstatic-state
  (vars (ignore mesg) (serial-a serial-b data) (n text) (ca b a name)
    (pt pt-0 pval) (galpha base) (static-key locn) (ra rndx))
  (defstrand init 4 (serial-a serial-a) (serial-b serial-b) (n n) (a a)
    (b b) (ca ca) (galpha galpha) (static-key static-key) (ra ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-a) (self a)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-a) (subj a)
    (ca ca))
  (precedes ((1 0) (2 0)) ((1 3) (0 0)) ((2 1) (1 1)))
  (non-orig (privk "sig" ca) (privk "sig" b))
  (uniq-orig serial-a n)
  (uniq-gen ra)
  (gen-st (cat "privkey" a ra serial-a ca))
  (facts (neq a b) (neq b a))
  (rule fact-init-neq0 fact-resp-neq0 trRl_get-cert-at-2
    trRl_get-cert-at-3)
  (operation encryption-test (added-strand cert 2)
    (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca)) (1 1))
  (traces
    ((load static-key (cat pt "privkey" a ra serial-a ca))
      (recv (sig (cert b galpha ca serial-b) (privk "sig" ca)))
      (send (enc n a b serial-a serial-b (exp galpha ra))) (recv n))
    ((send (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (recv (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" a ra serial-a ca)))
    ((recv (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (send
        (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca)))))
  (label 3)
  (parent 2)
  (unrealized (0 1) (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhstatic-state
  (vars (ignore mesg) (serial-a data) (n text) (ca a name)
    (pt pt-0 pval) (static-key locn) (ra rndx))
  (defstrand init 4 (serial-a serial-a) (serial-b serial-a) (n n) (a a)
    (b a) (ca ca) (galpha (exp (gen) ra)) (static-key static-key)
    (ra ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-a) (self a)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-a) (subj a)
    (ca ca))
  (precedes ((1 0) (2 0)) ((1 3) (0 0)) ((2 1) (1 1)))
  (non-orig (privk "sig" ca) (privk "sig" a))
  (uniq-orig serial-a n)
  (uniq-gen ra)
  (gen-st (cat "privkey" a ra serial-a ca))
  (facts (neq a a))
  (rule fact-resp-neq0 trRl_get-cert-at-2 trRl_get-cert-at-3)
  (operation encryption-test (displaced 3 2 cert 2)
    (sig (cert b galpha ca serial-b) (privk "sig" ca)) (0 1))
  (traces
    ((load static-key (cat pt "privkey" a ra serial-a ca))
      (recv (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca)))
      (send (enc n a a serial-a serial-a (exp (gen) (mul ra ra))))
      (recv n))
    ((send (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (recv (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" a ra serial-a ca)))
    ((recv (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (send
        (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca)))))
  (label 4)
  (parent 3)
  (unrealized (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhstatic-state
  (vars (ignore mesg) (serial-a serial-b data) (n text) (ca b a name)
    (pt pt-0 pval) (galpha base) (static-key locn) (ra rndx))
  (defstrand init 4 (serial-a serial-a) (serial-b serial-b) (n n) (a a)
    (b b) (ca ca) (galpha galpha) (static-key static-key) (ra ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-a) (self a)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-a) (subj a)
    (ca ca))
  (defstrand cert 2 (galpha galpha) (serial serial-b) (subj b) (ca ca))
  (precedes ((1 0) (2 0)) ((1 3) (0 0)) ((2 1) (1 1)) ((3 1) (0 1)))
  (non-orig (privk "sig" ca) (privk "sig" b))
  (uniq-orig serial-a serial-b n)
  (uniq-gen ra)
  (gen-st (cat "privkey" a ra serial-a ca))
  (facts (neq a b) (neq b a))
  (rule fact-init-neq0 fact-resp-neq0 trRl_get-cert-at-2
    trRl_get-cert-at-3)
  (operation encryption-test (added-strand cert 2)
    (sig (cert b galpha ca serial-b) (privk "sig" ca)) (0 1))
  (traces
    ((load static-key (cat pt "privkey" a ra serial-a ca))
      (recv (sig (cert b galpha ca serial-b) (privk "sig" ca)))
      (send (enc n a b serial-a serial-b (exp galpha ra))) (recv n))
    ((send (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (recv (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" a ra serial-a ca)))
    ((recv (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (send (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca))))
    ((recv (sig (cert-req b galpha ca) (privk "sig" b)))
      (send (sig (cert b galpha ca serial-b) (privk "sig" ca)))))
  (label 5)
  (parent 3)
  (unrealized (0 3) (3 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhstatic-state
  (vars (ignore mesg) (serial-a data) (n text) (ca a ca-0 name)
    (pt pt-0 pt-1 pval) (static-key static-key-0 locn) (ra rb rndx))
  (defstrand init 4 (serial-a serial-a) (serial-b serial-a) (n n) (a a)
    (b a) (ca ca) (galpha (exp (gen) ra)) (static-key static-key)
    (ra ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-a) (self a)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-a) (subj a)
    (ca ca))
  (defstrand resp 4 (serial-b serial-a) (serial-a serial-a) (n n) (a a)
    (b a) (ca ca-0) (galpha (exp (gen) (mul ra ra (rec rb))))
    (static-key static-key-0) (rb rb))
  (precedes ((0 2) (3 2)) ((1 0) (2 0)) ((1 3) (0 0)) ((2 1) (1 1))
    ((2 1) (3 0)) ((3 3) (0 3)))
  (non-orig (privk "sig" ca) (privk "sig" a))
  (uniq-orig serial-a n)
  (uniq-gen ra)
  (gen-st (cat "privkey" a ra serial-a ca)
    (cat "privkey" a rb serial-a ca-0))
  (facts (neq a a))
  (rule fact-resp-neq0 gen-st-resp-0 trRl_get-cert-at-2
    trRl_get-cert-at-3)
  (operation nonce-test (added-strand resp 4) n (0 3)
    (enc n a a serial-a serial-a (exp (gen) (mul ra ra))))
  (traces
    ((load static-key (cat pt "privkey" a ra serial-a ca))
      (recv (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca)))
      (send (enc n a a serial-a serial-a (exp (gen) (mul ra ra))))
      (recv n))
    ((send (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (recv (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" a ra serial-a ca)))
    ((recv (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (send (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca))))
    ((load static-key-0 (cat pt-1 "privkey" a rb serial-a ca-0))
      (recv
        (sig (cert a (exp (gen) (mul ra ra (rec rb))) ca-0 serial-a)
          (privk "sig" ca-0)))
      (recv (enc n a a serial-a serial-a (exp (gen) (mul ra ra))))
      (send n)))
  (label 6)
  (parent 4)
  (unrealized (3 0) (3 1))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhstatic-state
  (vars (ignore mesg) (serial-a data) (n text) (ca a name)
    (pt pt-0 pval) (static-key locn) (ra rndx))
  (defstrand init 4 (serial-a serial-a) (serial-b serial-a) (n n) (a a)
    (b a) (ca ca) (galpha (exp (gen) ra)) (static-key static-key)
    (ra ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-a) (self a)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-a) (subj a)
    (ca ca))
  (deflistener (exp (gen) (mul ra ra)))
  (precedes ((1 0) (2 0)) ((1 0) (3 0)) ((1 3) (0 0)) ((2 1) (1 1))
    ((3 1) (0 3)))
  (non-orig (privk "sig" ca) (privk "sig" a))
  (uniq-orig serial-a n)
  (uniq-gen ra)
  (gen-st (cat "privkey" a ra serial-a ca))
  (facts (neq a a))
  (rule fact-resp-neq0 trRl_get-cert-at-2 trRl_get-cert-at-3)
  (operation nonce-test (added-listener (exp (gen) (mul ra ra))) n (0 3)
    (enc n a a serial-a serial-a (exp (gen) (mul ra ra))))
  (traces
    ((load static-key (cat pt "privkey" a ra serial-a ca))
      (recv (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca)))
      (send (enc n a a serial-a serial-a (exp (gen) (mul ra ra))))
      (recv n))
    ((send (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (recv (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" a ra serial-a ca)))
    ((recv (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (send (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca))))
    ((recv (exp (gen) (mul ra ra))) (send (exp (gen) (mul ra ra)))))
  (label 7)
  (parent 4)
  (unrealized (3 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhstatic-state
  (vars (ignore mesg) (serial-a serial-b data) (n text) (ca a name)
    (pt pt-0 pval) (static-key locn) (ra rndx))
  (defstrand init 4 (serial-a serial-a) (serial-b serial-b) (n n) (a a)
    (b a) (ca ca) (galpha (exp (gen) ra)) (static-key static-key)
    (ra ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-a) (self a)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-a) (subj a)
    (ca ca))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-b) (subj a)
    (ca ca))
  (precedes ((1 0) (2 0)) ((1 0) (3 0)) ((1 3) (0 0)) ((2 1) (1 1))
    ((3 1) (0 1)))
  (non-orig (privk "sig" ca) (privk "sig" a))
  (uniq-orig serial-a serial-b n)
  (uniq-gen ra)
  (gen-st (cat "privkey" a ra serial-a ca))
  (facts (neq a a))
  (rule fact-resp-neq0 trRl_get-cert-at-2 trRl_get-cert-at-3)
  (operation encryption-test (displaced 4 1 get-cert 1)
    (sig (cert-req b (exp (gen) ra-0) ca) (privk "sig" b)) (3 0))
  (traces
    ((load static-key (cat pt "privkey" a ra serial-a ca))
      (recv (sig (cert a (exp (gen) ra) ca serial-b) (privk "sig" ca)))
      (send (enc n a a serial-a serial-b (exp (gen) (mul ra ra))))
      (recv n))
    ((send (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (recv (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" a ra serial-a ca)))
    ((recv (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (send (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca))))
    ((recv (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (send
        (sig (cert a (exp (gen) ra) ca serial-b) (privk "sig" ca)))))
  (label 8)
  (parent 5)
  (unrealized (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhstatic-state
  (vars (ignore mesg) (serial-a serial-b data) (n text) (ca b a name)
    (pt pt-0 pval) (static-key locn) (ra ra-0 rndx))
  (defstrand init 4 (serial-a serial-a) (serial-b serial-b) (n n) (a a)
    (b b) (ca ca) (galpha (exp (gen) ra-0)) (static-key static-key)
    (ra ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-a) (self a)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-a) (subj a)
    (ca ca))
  (defstrand cert 2 (galpha (exp (gen) ra-0)) (serial serial-b) (subj b)
    (ca ca))
  (defstrand get-cert 1 (self b) (ca ca) (ra ra-0))
  (precedes ((1 0) (2 0)) ((1 3) (0 0)) ((2 1) (1 1)) ((3 1) (0 1))
    ((4 0) (3 0)))
  (non-orig (privk "sig" ca) (privk "sig" b))
  (uniq-orig serial-a serial-b n)
  (uniq-gen ra ra-0)
  (gen-st (cat "privkey" a ra serial-a ca))
  (facts (neq a b) (neq b a))
  (rule fact-init-neq0 fact-resp-neq0 trRl_get-cert-at-2
    trRl_get-cert-at-3)
  (operation encryption-test (added-strand get-cert 1)
    (sig (cert-req b (exp (gen) ra-0) ca) (privk "sig" b)) (3 0))
  (traces
    ((load static-key (cat pt "privkey" a ra serial-a ca))
      (recv
        (sig (cert b (exp (gen) ra-0) ca serial-b) (privk "sig" ca)))
      (send (enc n a b serial-a serial-b (exp (gen) (mul ra ra-0))))
      (recv n))
    ((send (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (recv (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" a ra serial-a ca)))
    ((recv (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (send (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca))))
    ((recv (sig (cert-req b (exp (gen) ra-0) ca) (privk "sig" b)))
      (send
        (sig (cert b (exp (gen) ra-0) ca serial-b) (privk "sig" ca))))
    ((send (sig (cert-req b (exp (gen) ra-0) ca) (privk "sig" b)))))
  (label 9)
  (parent 5)
  (unrealized (0 3))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhstatic-state
  (vars (ignore mesg) (serial-a data) (n text) (ca a name)
    (pt pt-0 pval) (static-key locn) (ra rndx))
  (defstrand init 4 (serial-a serial-a) (serial-b serial-a) (n n) (a a)
    (b a) (ca ca) (galpha (exp (gen) ra)) (static-key static-key)
    (ra ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-a) (self a)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-a) (subj a)
    (ca ca))
  (defstrand resp 4 (serial-b serial-a) (serial-a serial-a) (n n) (a a)
    (b a) (ca ca) (galpha (exp (gen) ra)) (static-key static-key)
    (rb ra))
  (precedes ((0 2) (3 2)) ((1 0) (2 0)) ((1 3) (0 0)) ((1 3) (3 0))
    ((2 1) (1 1)) ((3 3) (0 3)))
  (non-orig (privk "sig" ca) (privk "sig" a))
  (uniq-orig serial-a n)
  (uniq-gen ra)
  (gen-st (cat "privkey" a ra serial-a ca))
  (facts (neq a a))
  (rule fact-resp-neq0 trRl_get-cert-at-2 trRl_get-cert-at-3)
  (operation channel-test (displaced 4 1 get-cert 4)
    (ch-msg static-key-0 (cat pt-1 "privkey" a ra-0 serial-a ca-0))
    (3 0))
  (traces
    ((load static-key (cat pt "privkey" a ra serial-a ca))
      (recv (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca)))
      (send (enc n a a serial-a serial-a (exp (gen) (mul ra ra))))
      (recv n))
    ((send (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (recv (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" a ra serial-a ca)))
    ((recv (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (send (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca))))
    ((load static-key (cat pt "privkey" a ra serial-a ca))
      (recv (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca)))
      (recv (enc n a a serial-a serial-a (exp (gen) (mul ra ra))))
      (send n)))
  (label 10)
  (parent 6)
  (realized)
  (shape)
  (maps
    ((0)
      ((ca ca) (b a) (a a) (ra ra) (serial-a serial-a)
        (serial-b serial-a) (galpha (exp (gen) ra)) (n n)
        (static-key static-key))))
  (origs (pt (1 3)) (serial-a (2 1)) (n (0 2))))

(defskeleton dhstatic-state
  (vars (ignore ignore-0 mesg) (serial-a data) (n text) (ca a ca-0 name)
    (pt pt-0 pt-1 pt-2 pval) (static-key static-key-0 locn)
    (ra ra-0 rndx))
  (defstrand init 4 (serial-a serial-a) (serial-b serial-a) (n n) (a a)
    (b a) (ca ca) (galpha (exp (gen) ra)) (static-key static-key)
    (ra ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-a) (self a)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-a) (subj a)
    (ca ca))
  (defstrand resp 4 (serial-b serial-a) (serial-a serial-a) (n n) (a a)
    (b a) (ca ca-0) (galpha (exp (gen) (mul ra ra (rec ra-0))))
    (static-key static-key-0) (rb ra-0))
  (defstrand get-cert 4 (ignore ignore-0) (serial serial-a) (self a)
    (ca ca-0) (static-key static-key-0) (ra ra-0))
  (precedes ((0 2) (3 2)) ((1 0) (2 0)) ((1 3) (0 0)) ((2 1) (1 1))
    ((2 1) (4 1)) ((3 3) (0 3)) ((4 3) (3 0)))
  (non-orig (privk "sig" ca) (privk "sig" a))
  (uniq-orig serial-a n)
  (uniq-gen ra ra-0)
  (gen-st (cat "privkey" a ra serial-a ca)
    (cat "privkey" a ra-0 serial-a ca-0))
  (facts (neq a a))
  (rule fact-resp-neq0 trRl_get-cert-at-2 trRl_get-cert-at-3)
  (operation channel-test (added-strand get-cert 4)
    (ch-msg static-key-0 (cat pt-1 "privkey" a ra-0 serial-a ca-0))
    (3 0))
  (traces
    ((load static-key (cat pt "privkey" a ra serial-a ca))
      (recv (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca)))
      (send (enc n a a serial-a serial-a (exp (gen) (mul ra ra))))
      (recv n))
    ((send (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (recv (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" a ra serial-a ca)))
    ((recv (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (send (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca))))
    ((load static-key-0 (cat pt-1 "privkey" a ra-0 serial-a ca-0))
      (recv
        (sig (cert a (exp (gen) (mul ra ra (rec ra-0))) ca-0 serial-a)
          (privk "sig" ca-0)))
      (recv (enc n a a serial-a serial-a (exp (gen) (mul ra ra))))
      (send n))
    ((send (sig (cert-req a (exp (gen) ra-0) ca-0) (privk "sig" a)))
      (recv
        (sig (cert a (exp (gen) ra-0) ca-0 serial-a)
          (privk "sig" ca-0))) (load static-key-0 (cat pt-2 ignore-0))
      (stor static-key-0 (cat pt-1 "privkey" a ra-0 serial-a ca-0))))
  (label 11)
  (parent 6)
  (unrealized (3 1))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhstatic-state
  (vars (ignore mesg) (serial-a data) (n text) (ca a name)
    (pt pt-0 pval) (static-key locn) (ra rndx) (w expt))
  (defstrand init 4 (serial-a serial-a) (serial-b serial-a) (n n) (a a)
    (b a) (ca ca) (galpha (exp (gen) ra)) (static-key static-key)
    (ra ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-a) (self a)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-a) (subj a)
    (ca ca))
  (deflistener (exp (gen) (mul ra ra)))
  (deflistener (cat (exp (gen) (mul ra ra (rec w))) w))
  (precedes ((1 0) (2 0)) ((1 0) (4 0)) ((1 3) (0 0)) ((2 1) (1 1))
    ((3 1) (0 3)) ((4 1) (3 0)))
  (non-orig (privk "sig" ca) (privk "sig" a))
  (uniq-orig serial-a n)
  (uniq-gen ra)
  (precur (4 0))
  (gen-st (cat "privkey" a ra serial-a ca))
  (facts (neq a a))
  (rule fact-resp-neq0 trRl_get-cert-at-2 trRl_get-cert-at-3)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul ra ra (rec w))) w))
    (exp (gen) (mul ra ra)) (3 0))
  (traces
    ((load static-key (cat pt "privkey" a ra serial-a ca))
      (recv (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca)))
      (send (enc n a a serial-a serial-a (exp (gen) (mul ra ra))))
      (recv n))
    ((send (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (recv (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" a ra serial-a ca)))
    ((recv (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (send (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca))))
    ((recv (exp (gen) (mul ra ra))) (send (exp (gen) (mul ra ra))))
    ((recv (cat (exp (gen) (mul ra ra (rec w))) w))
      (send (cat (exp (gen) (mul ra ra (rec w))) w))))
  (label 12)
  (parent 7)
  (unrealized (4 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhstatic-state
  (vars (ignore mesg) (serial-a serial-b data) (n text) (ca a ca-0 name)
    (pt pt-0 pt-1 pval) (static-key static-key-0 locn) (ra rb rndx))
  (defstrand init 4 (serial-a serial-a) (serial-b serial-b) (n n) (a a)
    (b a) (ca ca) (galpha (exp (gen) ra)) (static-key static-key)
    (ra ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-a) (self a)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-a) (subj a)
    (ca ca))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-b) (subj a)
    (ca ca))
  (defstrand resp 4 (serial-b serial-b) (serial-a serial-a) (n n) (a a)
    (b a) (ca ca-0) (galpha (exp (gen) (mul ra ra (rec rb))))
    (static-key static-key-0) (rb rb))
  (precedes ((0 2) (4 2)) ((1 0) (2 0)) ((1 0) (3 0)) ((1 3) (0 0))
    ((2 1) (1 1)) ((2 1) (4 1)) ((3 1) (0 1)) ((3 1) (4 0))
    ((4 3) (0 3)))
  (non-orig (privk "sig" ca) (privk "sig" a))
  (uniq-orig serial-a serial-b n)
  (uniq-gen ra)
  (gen-st (cat "privkey" a ra serial-a ca)
    (cat "privkey" a rb serial-b ca-0))
  (facts (neq a a))
  (rule fact-resp-neq0 gen-st-resp-0 trRl_get-cert-at-2
    trRl_get-cert-at-3)
  (operation nonce-test (added-strand resp 4) n (0 3)
    (enc n a a serial-a serial-b (exp (gen) (mul ra ra))))
  (traces
    ((load static-key (cat pt "privkey" a ra serial-a ca))
      (recv (sig (cert a (exp (gen) ra) ca serial-b) (privk "sig" ca)))
      (send (enc n a a serial-a serial-b (exp (gen) (mul ra ra))))
      (recv n))
    ((send (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (recv (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" a ra serial-a ca)))
    ((recv (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (send (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca))))
    ((recv (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (send (sig (cert a (exp (gen) ra) ca serial-b) (privk "sig" ca))))
    ((load static-key-0 (cat pt-1 "privkey" a rb serial-b ca-0))
      (recv
        (sig (cert a (exp (gen) (mul ra ra (rec rb))) ca-0 serial-a)
          (privk "sig" ca-0)))
      (recv (enc n a a serial-a serial-b (exp (gen) (mul ra ra))))
      (send n)))
  (label 13)
  (parent 8)
  (unrealized (4 0) (4 1))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhstatic-state
  (vars (ignore mesg) (serial-a serial-b data) (n text) (ca a name)
    (pt pt-0 pval) (static-key locn) (ra rndx))
  (defstrand init 4 (serial-a serial-a) (serial-b serial-b) (n n) (a a)
    (b a) (ca ca) (galpha (exp (gen) ra)) (static-key static-key)
    (ra ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-a) (self a)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-a) (subj a)
    (ca ca))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-b) (subj a)
    (ca ca))
  (deflistener (exp (gen) (mul ra ra)))
  (precedes ((1 0) (2 0)) ((1 0) (3 0)) ((1 0) (4 0)) ((1 3) (0 0))
    ((2 1) (1 1)) ((3 1) (0 1)) ((4 1) (0 3)))
  (non-orig (privk "sig" ca) (privk "sig" a))
  (uniq-orig serial-a serial-b n)
  (uniq-gen ra)
  (gen-st (cat "privkey" a ra serial-a ca))
  (facts (neq a a))
  (rule fact-resp-neq0 trRl_get-cert-at-2 trRl_get-cert-at-3)
  (operation nonce-test (added-listener (exp (gen) (mul ra ra))) n (0 3)
    (enc n a a serial-a serial-b (exp (gen) (mul ra ra))))
  (traces
    ((load static-key (cat pt "privkey" a ra serial-a ca))
      (recv (sig (cert a (exp (gen) ra) ca serial-b) (privk "sig" ca)))
      (send (enc n a a serial-a serial-b (exp (gen) (mul ra ra))))
      (recv n))
    ((send (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (recv (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" a ra serial-a ca)))
    ((recv (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (send (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca))))
    ((recv (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (send (sig (cert a (exp (gen) ra) ca serial-b) (privk "sig" ca))))
    ((recv (exp (gen) (mul ra ra))) (send (exp (gen) (mul ra ra)))))
  (label 14)
  (parent 8)
  (unrealized (4 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhstatic-state
  (vars (ignore mesg) (serial-a serial-b data) (n text)
    (ca b a ca-0 name) (pt pt-0 pt-1 pval)
    (static-key static-key-0 locn) (ra ra-0 rb rndx))
  (defstrand init 4 (serial-a serial-a) (serial-b serial-b) (n n) (a a)
    (b b) (ca ca) (galpha (exp (gen) ra-0)) (static-key static-key)
    (ra ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-a) (self a)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-a) (subj a)
    (ca ca))
  (defstrand cert 2 (galpha (exp (gen) ra-0)) (serial serial-b) (subj b)
    (ca ca))
  (defstrand get-cert 1 (self b) (ca ca) (ra ra-0))
  (defstrand resp 4 (serial-b serial-b) (serial-a serial-a) (n n) (a a)
    (b b) (ca ca-0) (galpha (exp (gen) (mul ra ra-0 (rec rb))))
    (static-key static-key-0) (rb rb))
  (precedes ((0 2) (5 2)) ((1 0) (2 0)) ((1 3) (0 0)) ((2 1) (1 1))
    ((2 1) (5 1)) ((3 1) (0 1)) ((3 1) (5 0)) ((4 0) (3 0))
    ((5 3) (0 3)))
  (non-orig (privk "sig" ca) (privk "sig" b))
  (uniq-orig serial-a serial-b n)
  (uniq-gen ra ra-0)
  (gen-st (cat "privkey" b rb serial-b ca-0)
    (cat "privkey" a ra serial-a ca))
  (facts (neq a b) (neq b a))
  (rule fact-resp-neq0 gen-st-resp-0 trRl_get-cert-at-2
    trRl_get-cert-at-3)
  (operation nonce-test (added-strand resp 4) n (0 3)
    (enc n a b serial-a serial-b (exp (gen) (mul ra ra-0))))
  (traces
    ((load static-key (cat pt "privkey" a ra serial-a ca))
      (recv
        (sig (cert b (exp (gen) ra-0) ca serial-b) (privk "sig" ca)))
      (send (enc n a b serial-a serial-b (exp (gen) (mul ra ra-0))))
      (recv n))
    ((send (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (recv (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" a ra serial-a ca)))
    ((recv (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (send (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca))))
    ((recv (sig (cert-req b (exp (gen) ra-0) ca) (privk "sig" b)))
      (send
        (sig (cert b (exp (gen) ra-0) ca serial-b) (privk "sig" ca))))
    ((send (sig (cert-req b (exp (gen) ra-0) ca) (privk "sig" b))))
    ((load static-key-0 (cat pt-1 "privkey" b rb serial-b ca-0))
      (recv
        (sig (cert a (exp (gen) (mul ra ra-0 (rec rb))) ca-0 serial-a)
          (privk "sig" ca-0)))
      (recv (enc n a b serial-a serial-b (exp (gen) (mul ra ra-0))))
      (send n)))
  (label 15)
  (parent 9)
  (unrealized (5 0) (5 1))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhstatic-state
  (vars (ignore mesg) (serial-a serial-b data) (n text) (ca b a name)
    (pt pt-0 pval) (static-key locn) (ra ra-0 rndx))
  (defstrand init 4 (serial-a serial-a) (serial-b serial-b) (n n) (a a)
    (b b) (ca ca) (galpha (exp (gen) ra-0)) (static-key static-key)
    (ra ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-a) (self a)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-a) (subj a)
    (ca ca))
  (defstrand cert 2 (galpha (exp (gen) ra-0)) (serial serial-b) (subj b)
    (ca ca))
  (defstrand get-cert 1 (self b) (ca ca) (ra ra-0))
  (deflistener (exp (gen) (mul ra ra-0)))
  (precedes ((1 0) (2 0)) ((1 0) (5 0)) ((1 3) (0 0)) ((2 1) (1 1))
    ((3 1) (0 1)) ((4 0) (3 0)) ((4 0) (5 0)) ((5 1) (0 3)))
  (non-orig (privk "sig" ca) (privk "sig" b))
  (uniq-orig serial-a serial-b n)
  (uniq-gen ra ra-0)
  (gen-st (cat "privkey" a ra serial-a ca))
  (facts (neq a b) (neq b a))
  (rule fact-init-neq0 fact-resp-neq0 trRl_get-cert-at-2
    trRl_get-cert-at-3)
  (operation nonce-test (added-listener (exp (gen) (mul ra ra-0))) n
    (0 3) (enc n a b serial-a serial-b (exp (gen) (mul ra ra-0))))
  (traces
    ((load static-key (cat pt "privkey" a ra serial-a ca))
      (recv
        (sig (cert b (exp (gen) ra-0) ca serial-b) (privk "sig" ca)))
      (send (enc n a b serial-a serial-b (exp (gen) (mul ra ra-0))))
      (recv n))
    ((send (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (recv (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" a ra serial-a ca)))
    ((recv (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (send (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca))))
    ((recv (sig (cert-req b (exp (gen) ra-0) ca) (privk "sig" b)))
      (send
        (sig (cert b (exp (gen) ra-0) ca serial-b) (privk "sig" ca))))
    ((send (sig (cert-req b (exp (gen) ra-0) ca) (privk "sig" b))))
    ((recv (exp (gen) (mul ra ra-0))) (send (exp (gen) (mul ra ra-0)))))
  (label 16)
  (parent 9)
  (unrealized (5 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhstatic-state
  (vars (ignore ignore-0 mesg) (serial-a data) (n text) (ca a ca-0 name)
    (pt pt-0 pt-1 pt-2 pval) (static-key static-key-0 locn)
    (ra ra-0 rndx))
  (defstrand init 4 (serial-a serial-a) (serial-b serial-a) (n n) (a a)
    (b a) (ca ca) (galpha (exp (gen) ra)) (static-key static-key)
    (ra ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-a) (self a)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-a) (subj a)
    (ca ca))
  (defstrand resp 4 (serial-b serial-a) (serial-a serial-a) (n n) (a a)
    (b a) (ca ca-0) (galpha (exp (gen) (mul ra ra (rec ra-0))))
    (static-key static-key-0) (rb ra-0))
  (defstrand get-cert 4 (ignore ignore-0) (serial serial-a) (self a)
    (ca ca-0) (static-key static-key-0) (ra ra-0))
  (deflistener (cat (exp (gen) (mul ra ra)) ra-0))
  (precedes ((0 2) (3 2)) ((1 0) (2 0)) ((1 0) (5 0)) ((1 3) (0 0))
    ((2 1) (1 1)) ((2 1) (4 1)) ((3 3) (0 3)) ((4 0) (5 0))
    ((4 3) (3 0)) ((5 1) (3 1)))
  (non-orig (privk "sig" ca) (privk "sig" a))
  (uniq-orig serial-a n)
  (uniq-gen ra ra-0)
  (gen-st (cat "privkey" a ra serial-a ca)
    (cat "privkey" a ra-0 serial-a ca-0))
  (facts (neq a a))
  (rule fact-resp-neq0 trRl_get-cert-at-2 trRl_get-cert-at-3)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul ra ra)) ra-0))
    (exp (gen) (mul ra ra (rec ra-0))) (3 1))
  (traces
    ((load static-key (cat pt "privkey" a ra serial-a ca))
      (recv (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca)))
      (send (enc n a a serial-a serial-a (exp (gen) (mul ra ra))))
      (recv n))
    ((send (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (recv (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" a ra serial-a ca)))
    ((recv (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (send (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca))))
    ((load static-key-0 (cat pt-1 "privkey" a ra-0 serial-a ca-0))
      (recv
        (sig (cert a (exp (gen) (mul ra ra (rec ra-0))) ca-0 serial-a)
          (privk "sig" ca-0)))
      (recv (enc n a a serial-a serial-a (exp (gen) (mul ra ra))))
      (send n))
    ((send (sig (cert-req a (exp (gen) ra-0) ca-0) (privk "sig" a)))
      (recv
        (sig (cert a (exp (gen) ra-0) ca-0 serial-a)
          (privk "sig" ca-0))) (load static-key-0 (cat pt-2 ignore-0))
      (stor static-key-0 (cat pt-1 "privkey" a ra-0 serial-a ca-0)))
    ((recv (cat (exp (gen) (mul ra ra)) ra-0))
      (send (cat (exp (gen) (mul ra ra)) ra-0))))
  (label 17)
  (parent 11)
  (unrealized (5 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhstatic-state
  (vars (ignore ignore-0 mesg) (serial-a data) (n text) (ca a ca-0 name)
    (pt pt-0 pt-1 pt-2 pval) (static-key static-key-0 locn)
    (ra ra-0 rndx))
  (defstrand init 4 (serial-a serial-a) (serial-b serial-a) (n n) (a a)
    (b a) (ca ca) (galpha (exp (gen) ra)) (static-key static-key)
    (ra ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-a) (self a)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-a) (subj a)
    (ca ca))
  (defstrand resp 4 (serial-b serial-a) (serial-a serial-a) (n n) (a a)
    (b a) (ca ca-0) (galpha (exp (gen) (mul ra ra (rec ra-0))))
    (static-key static-key-0) (rb ra-0))
  (defstrand get-cert 4 (ignore ignore-0) (serial serial-a) (self a)
    (ca ca-0) (static-key static-key-0) (ra ra-0))
  (deflistener (cat (exp (gen) (rec ra-0)) ra))
  (precedes ((0 2) (3 2)) ((1 0) (2 0)) ((1 0) (5 0)) ((1 3) (0 0))
    ((2 1) (1 1)) ((2 1) (4 1)) ((3 3) (0 3)) ((4 0) (5 0))
    ((4 3) (3 0)) ((5 1) (3 1)))
  (non-orig (privk "sig" ca) (privk "sig" a))
  (uniq-orig serial-a n)
  (uniq-gen ra ra-0)
  (gen-st (cat "privkey" a ra serial-a ca)
    (cat "privkey" a ra-0 serial-a ca-0))
  (facts (neq a a))
  (rule fact-resp-neq0 trRl_get-cert-at-2 trRl_get-cert-at-3)
  (operation nonce-test (added-listener (cat (exp (gen) (rec ra-0)) ra))
    (exp (gen) (mul ra ra (rec ra-0))) (3 1))
  (traces
    ((load static-key (cat pt "privkey" a ra serial-a ca))
      (recv (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca)))
      (send (enc n a a serial-a serial-a (exp (gen) (mul ra ra))))
      (recv n))
    ((send (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (recv (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" a ra serial-a ca)))
    ((recv (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (send (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca))))
    ((load static-key-0 (cat pt-1 "privkey" a ra-0 serial-a ca-0))
      (recv
        (sig (cert a (exp (gen) (mul ra ra (rec ra-0))) ca-0 serial-a)
          (privk "sig" ca-0)))
      (recv (enc n a a serial-a serial-a (exp (gen) (mul ra ra))))
      (send n))
    ((send (sig (cert-req a (exp (gen) ra-0) ca-0) (privk "sig" a)))
      (recv
        (sig (cert a (exp (gen) ra-0) ca-0 serial-a)
          (privk "sig" ca-0))) (load static-key-0 (cat pt-2 ignore-0))
      (stor static-key-0 (cat pt-1 "privkey" a ra-0 serial-a ca-0)))
    ((recv (cat (exp (gen) (rec ra-0)) ra))
      (send (cat (exp (gen) (rec ra-0)) ra))))
  (label 18)
  (parent 11)
  (unrealized (5 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhstatic-state
  (vars (ignore mesg) (serial-a data) (n text) (ca a name)
    (pt pt-0 pval) (static-key locn) (ra rndx))
  (defstrand init 4 (serial-a serial-a) (serial-b serial-a) (n n) (a a)
    (b a) (ca ca) (galpha (exp (gen) ra)) (static-key static-key)
    (ra ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-a) (self a)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-a) (subj a)
    (ca ca))
  (deflistener (exp (gen) (mul ra ra)))
  (deflistener (cat (gen) (mul ra ra)))
  (precedes ((1 0) (2 0)) ((1 0) (4 0)) ((1 3) (0 0)) ((2 1) (1 1))
    ((3 1) (0 3)) ((4 1) (3 0)))
  (non-orig (privk "sig" ca) (privk "sig" a))
  (uniq-orig serial-a n)
  (uniq-gen ra)
  (precur (4 0))
  (gen-st (cat "privkey" a ra serial-a ca))
  (facts (neq a a))
  (rule fact-resp-neq0 trRl_get-cert-at-2 trRl_get-cert-at-3)
  (operation nonce-test (contracted (ra-0 ra) (w (mul ra ra))) (gen)
    (4 0))
  (traces
    ((load static-key (cat pt "privkey" a ra serial-a ca))
      (recv (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca)))
      (send (enc n a a serial-a serial-a (exp (gen) (mul ra ra))))
      (recv n))
    ((send (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (recv (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" a ra serial-a ca)))
    ((recv (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (send (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca))))
    ((recv (exp (gen) (mul ra ra))) (send (exp (gen) (mul ra ra))))
    ((recv (cat (gen) (mul ra ra))) (send (cat (gen) (mul ra ra)))))
  (label 19)
  (parent 12)
  (unrealized (3 0) (4 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhstatic-state
  (vars (ignore mesg) (serial-a data) (n text) (ca a name)
    (pt pt-0 pval) (static-key locn) (ra rndx))
  (defstrand init 4 (serial-a serial-a) (serial-b serial-a) (n n) (a a)
    (b a) (ca ca) (galpha (exp (gen) ra)) (static-key static-key)
    (ra ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-a) (self a)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-a) (subj a)
    (ca ca))
  (deflistener (exp (gen) (mul ra ra)))
  (deflistener (cat (exp (gen) ra) ra))
  (precedes ((1 0) (2 0)) ((1 0) (4 0)) ((1 3) (0 0)) ((2 1) (1 1))
    ((3 1) (0 3)) ((4 1) (3 0)))
  (non-orig (privk "sig" ca) (privk "sig" a))
  (uniq-orig serial-a n)
  (uniq-gen ra)
  (precur (4 0))
  (gen-st (cat "privkey" a ra serial-a ca))
  (facts (neq a a))
  (rule fact-resp-neq0 trRl_get-cert-at-2 trRl_get-cert-at-3)
  (operation nonce-test (displaced 5 1 get-cert 1) (exp (gen) ra-0)
    (4 0))
  (traces
    ((load static-key (cat pt "privkey" a ra serial-a ca))
      (recv (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca)))
      (send (enc n a a serial-a serial-a (exp (gen) (mul ra ra))))
      (recv n))
    ((send (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (recv (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" a ra serial-a ca)))
    ((recv (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (send (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca))))
    ((recv (exp (gen) (mul ra ra))) (send (exp (gen) (mul ra ra))))
    ((recv (cat (exp (gen) ra) ra)) (send (cat (exp (gen) ra) ra))))
  (label 20)
  (parent 12)
  (unrealized (4 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhstatic-state
  (vars (ignore mesg) (serial-a data) (n text) (ca a self ca-0 name)
    (pt pt-0 pval) (static-key locn) (ra ra-0 rndx))
  (defstrand init 4 (serial-a serial-a) (serial-b serial-a) (n n) (a a)
    (b a) (ca ca) (galpha (exp (gen) ra)) (static-key static-key)
    (ra ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-a) (self a)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-a) (subj a)
    (ca ca))
  (deflistener (exp (gen) (mul ra ra)))
  (deflistener (cat (exp (gen) ra-0) (mul ra ra (rec ra-0))))
  (defstrand get-cert 1 (self self) (ca ca-0) (ra ra-0))
  (precedes ((1 0) (2 0)) ((1 0) (4 0)) ((1 3) (0 0)) ((2 1) (1 1))
    ((3 1) (0 3)) ((4 1) (3 0)) ((5 0) (4 0)))
  (non-orig (privk "sig" ca) (privk "sig" a))
  (uniq-orig serial-a n)
  (uniq-gen ra ra-0)
  (precur (4 0))
  (gen-st (cat "privkey" a ra serial-a ca))
  (facts (neq a a))
  (rule fact-resp-neq0 trRl_get-cert-at-2 trRl_get-cert-at-3)
  (operation nonce-test (added-strand get-cert 1) (exp (gen) ra-0)
    (4 0))
  (traces
    ((load static-key (cat pt "privkey" a ra serial-a ca))
      (recv (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca)))
      (send (enc n a a serial-a serial-a (exp (gen) (mul ra ra))))
      (recv n))
    ((send (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (recv (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" a ra serial-a ca)))
    ((recv (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (send (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca))))
    ((recv (exp (gen) (mul ra ra))) (send (exp (gen) (mul ra ra))))
    ((recv (cat (exp (gen) ra-0) (mul ra ra (rec ra-0))))
      (send (cat (exp (gen) ra-0) (mul ra ra (rec ra-0)))))
    ((send
       (sig (cert-req self (exp (gen) ra-0) ca-0) (privk "sig" self)))))
  (label 21)
  (parent 12)
  (unrealized (3 0) (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhstatic-state
  (vars (ignore ignore-0 mesg) (serial-a serial-b data) (n text)
    (ca a ca-0 name) (pt pt-0 pt-1 pt-2 pval)
    (static-key static-key-0 locn) (ra ra-0 rndx))
  (defstrand init 4 (serial-a serial-a) (serial-b serial-b) (n n) (a a)
    (b a) (ca ca) (galpha (exp (gen) ra)) (static-key static-key)
    (ra ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-a) (self a)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-a) (subj a)
    (ca ca))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-b) (subj a)
    (ca ca))
  (defstrand resp 4 (serial-b serial-b) (serial-a serial-a) (n n) (a a)
    (b a) (ca ca-0) (galpha (exp (gen) (mul ra ra (rec ra-0))))
    (static-key static-key-0) (rb ra-0))
  (defstrand get-cert 4 (ignore ignore-0) (serial serial-b) (self a)
    (ca ca-0) (static-key static-key-0) (ra ra-0))
  (precedes ((0 2) (4 2)) ((1 0) (2 0)) ((1 0) (3 0)) ((1 3) (0 0))
    ((2 1) (1 1)) ((2 1) (4 1)) ((3 1) (0 1)) ((3 1) (5 1))
    ((4 3) (0 3)) ((5 3) (4 0)))
  (non-orig (privk "sig" ca) (privk "sig" a))
  (uniq-orig serial-a serial-b n)
  (uniq-gen ra ra-0)
  (gen-st (cat "privkey" a ra serial-a ca)
    (cat "privkey" a ra-0 serial-b ca-0))
  (facts (neq a a))
  (rule fact-resp-neq0 trRl_get-cert-at-2 trRl_get-cert-at-3)
  (operation channel-test (added-strand get-cert 4)
    (ch-msg static-key-0 (cat pt-1 "privkey" a ra-0 serial-b ca-0))
    (4 0))
  (traces
    ((load static-key (cat pt "privkey" a ra serial-a ca))
      (recv (sig (cert a (exp (gen) ra) ca serial-b) (privk "sig" ca)))
      (send (enc n a a serial-a serial-b (exp (gen) (mul ra ra))))
      (recv n))
    ((send (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (recv (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" a ra serial-a ca)))
    ((recv (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (send (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca))))
    ((recv (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (send (sig (cert a (exp (gen) ra) ca serial-b) (privk "sig" ca))))
    ((load static-key-0 (cat pt-1 "privkey" a ra-0 serial-b ca-0))
      (recv
        (sig (cert a (exp (gen) (mul ra ra (rec ra-0))) ca-0 serial-a)
          (privk "sig" ca-0)))
      (recv (enc n a a serial-a serial-b (exp (gen) (mul ra ra))))
      (send n))
    ((send (sig (cert-req a (exp (gen) ra-0) ca-0) (privk "sig" a)))
      (recv
        (sig (cert a (exp (gen) ra-0) ca-0 serial-b)
          (privk "sig" ca-0))) (load static-key-0 (cat pt-2 ignore-0))
      (stor static-key-0 (cat pt-1 "privkey" a ra-0 serial-b ca-0))))
  (label 22)
  (parent 13)
  (unrealized (4 1))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhstatic-state
  (vars (ignore mesg) (serial-a serial-b data) (n text) (ca a name)
    (pt pt-0 pval) (static-key locn) (ra rndx) (w expt))
  (defstrand init 4 (serial-a serial-a) (serial-b serial-b) (n n) (a a)
    (b a) (ca ca) (galpha (exp (gen) ra)) (static-key static-key)
    (ra ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-a) (self a)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-a) (subj a)
    (ca ca))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-b) (subj a)
    (ca ca))
  (deflistener (exp (gen) (mul ra ra)))
  (deflistener (cat (exp (gen) (mul ra ra (rec w))) w))
  (precedes ((1 0) (2 0)) ((1 0) (3 0)) ((1 0) (5 0)) ((1 3) (0 0))
    ((2 1) (1 1)) ((3 1) (0 1)) ((4 1) (0 3)) ((5 1) (4 0)))
  (non-orig (privk "sig" ca) (privk "sig" a))
  (uniq-orig serial-a serial-b n)
  (uniq-gen ra)
  (precur (5 0))
  (gen-st (cat "privkey" a ra serial-a ca))
  (facts (neq a a))
  (rule fact-resp-neq0 trRl_get-cert-at-2 trRl_get-cert-at-3)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul ra ra (rec w))) w))
    (exp (gen) (mul ra ra)) (4 0))
  (traces
    ((load static-key (cat pt "privkey" a ra serial-a ca))
      (recv (sig (cert a (exp (gen) ra) ca serial-b) (privk "sig" ca)))
      (send (enc n a a serial-a serial-b (exp (gen) (mul ra ra))))
      (recv n))
    ((send (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (recv (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" a ra serial-a ca)))
    ((recv (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (send (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca))))
    ((recv (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (send (sig (cert a (exp (gen) ra) ca serial-b) (privk "sig" ca))))
    ((recv (exp (gen) (mul ra ra))) (send (exp (gen) (mul ra ra))))
    ((recv (cat (exp (gen) (mul ra ra (rec w))) w))
      (send (cat (exp (gen) (mul ra ra (rec w))) w))))
  (label 23)
  (parent 14)
  (unrealized (5 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhstatic-state
  (vars (ignore ignore-0 mesg) (serial-a serial-b data) (n text)
    (b a ca name) (pt pt-0 pt-1 pt-2 pval)
    (static-key static-key-0 locn) (ra ra-0 rndx))
  (defstrand init 4 (serial-a serial-a) (serial-b serial-b) (n n) (a a)
    (b b) (ca ca) (galpha (exp (gen) ra-0)) (static-key static-key)
    (ra ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-a) (self a)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-a) (subj a)
    (ca ca))
  (defstrand cert 2 (galpha (exp (gen) ra-0)) (serial serial-b) (subj b)
    (ca ca))
  (defstrand resp 4 (serial-b serial-b) (serial-a serial-a) (n n) (a a)
    (b b) (ca ca) (galpha (exp (gen) ra)) (static-key static-key-0)
    (rb ra-0))
  (defstrand get-cert 4 (ignore ignore-0) (serial serial-b) (self b)
    (ca ca) (static-key static-key-0) (ra ra-0))
  (precedes ((0 2) (4 2)) ((1 0) (2 0)) ((1 3) (0 0)) ((2 1) (1 1))
    ((2 1) (4 1)) ((3 1) (0 1)) ((3 1) (5 1)) ((4 3) (0 3))
    ((5 0) (3 0)) ((5 3) (4 0)))
  (non-orig (privk "sig" b) (privk "sig" ca))
  (uniq-orig serial-a serial-b n)
  (uniq-gen ra ra-0)
  (gen-st (cat "privkey" b ra-0 serial-b ca)
    (cat "privkey" a ra serial-a ca))
  (facts (neq a b) (neq b a))
  (rule fact-resp-neq0 trRl_get-cert-at-2 trRl_get-cert-at-3)
  (operation channel-test (displaced 4 6 get-cert 4)
    (ch-msg static-key-0 (cat pt-1 "privkey" b ra-1 serial-b ca)) (5 0))
  (traces
    ((load static-key (cat pt "privkey" a ra serial-a ca))
      (recv
        (sig (cert b (exp (gen) ra-0) ca serial-b) (privk "sig" ca)))
      (send (enc n a b serial-a serial-b (exp (gen) (mul ra ra-0))))
      (recv n))
    ((send (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (recv (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" a ra serial-a ca)))
    ((recv (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (send (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca))))
    ((recv (sig (cert-req b (exp (gen) ra-0) ca) (privk "sig" b)))
      (send
        (sig (cert b (exp (gen) ra-0) ca serial-b) (privk "sig" ca))))
    ((load static-key-0 (cat pt-1 "privkey" b ra-0 serial-b ca))
      (recv (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca)))
      (recv (enc n a b serial-a serial-b (exp (gen) (mul ra ra-0))))
      (send n))
    ((send (sig (cert-req b (exp (gen) ra-0) ca) (privk "sig" b)))
      (recv
        (sig (cert b (exp (gen) ra-0) ca serial-b) (privk "sig" ca)))
      (load static-key-0 (cat pt-2 ignore-0))
      (stor static-key-0 (cat pt-1 "privkey" b ra-0 serial-b ca))))
  (label 24)
  (parent 15)
  (realized)
  (shape)
  (maps
    ((0)
      ((ca ca) (b b) (a a) (ra ra) (serial-a serial-a)
        (serial-b serial-b) (galpha (exp (gen) ra-0)) (n n)
        (static-key static-key))))
  (origs (pt-1 (5 3)) (serial-b (3 1)) (serial-a (2 1)) (pt (1 3))
    (n (0 2))))

(defskeleton dhstatic-state
  (vars (ignore ignore-0 mesg) (serial-a serial-b data) (n text)
    (ca b a ca-0 name) (pt pt-0 pt-1 pt-2 pval)
    (static-key static-key-0 locn) (ra ra-0 ra-1 rndx))
  (defstrand init 4 (serial-a serial-a) (serial-b serial-b) (n n) (a a)
    (b b) (ca ca) (galpha (exp (gen) ra-0)) (static-key static-key)
    (ra ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-a) (self a)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-a) (subj a)
    (ca ca))
  (defstrand cert 2 (galpha (exp (gen) ra-0)) (serial serial-b) (subj b)
    (ca ca))
  (defstrand get-cert 1 (self b) (ca ca) (ra ra-0))
  (defstrand resp 4 (serial-b serial-b) (serial-a serial-a) (n n) (a a)
    (b b) (ca ca-0) (galpha (exp (gen) (mul ra ra-0 (rec ra-1))))
    (static-key static-key-0) (rb ra-1))
  (defstrand get-cert 4 (ignore ignore-0) (serial serial-b) (self b)
    (ca ca-0) (static-key static-key-0) (ra ra-1))
  (precedes ((0 2) (5 2)) ((1 0) (2 0)) ((1 3) (0 0)) ((2 1) (1 1))
    ((2 1) (5 1)) ((3 1) (0 1)) ((3 1) (6 1)) ((4 0) (3 0))
    ((5 3) (0 3)) ((6 3) (5 0)))
  (non-orig (privk "sig" ca) (privk "sig" b))
  (uniq-orig serial-a serial-b n)
  (uniq-gen ra ra-0 ra-1)
  (gen-st (cat "privkey" b ra-1 serial-b ca-0)
    (cat "privkey" a ra serial-a ca))
  (facts (neq a b) (neq b a))
  (rule fact-resp-neq0 trRl_get-cert-at-2 trRl_get-cert-at-3)
  (operation channel-test (added-strand get-cert 4)
    (ch-msg static-key-0 (cat pt-1 "privkey" b ra-1 serial-b ca-0))
    (5 0))
  (traces
    ((load static-key (cat pt "privkey" a ra serial-a ca))
      (recv
        (sig (cert b (exp (gen) ra-0) ca serial-b) (privk "sig" ca)))
      (send (enc n a b serial-a serial-b (exp (gen) (mul ra ra-0))))
      (recv n))
    ((send (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (recv (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" a ra serial-a ca)))
    ((recv (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (send (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca))))
    ((recv (sig (cert-req b (exp (gen) ra-0) ca) (privk "sig" b)))
      (send
        (sig (cert b (exp (gen) ra-0) ca serial-b) (privk "sig" ca))))
    ((send (sig (cert-req b (exp (gen) ra-0) ca) (privk "sig" b))))
    ((load static-key-0 (cat pt-1 "privkey" b ra-1 serial-b ca-0))
      (recv
        (sig (cert a (exp (gen) (mul ra ra-0 (rec ra-1))) ca-0 serial-a)
          (privk "sig" ca-0)))
      (recv (enc n a b serial-a serial-b (exp (gen) (mul ra ra-0))))
      (send n))
    ((send (sig (cert-req b (exp (gen) ra-1) ca-0) (privk "sig" b)))
      (recv
        (sig (cert b (exp (gen) ra-1) ca-0 serial-b)
          (privk "sig" ca-0))) (load static-key-0 (cat pt-2 ignore-0))
      (stor static-key-0 (cat pt-1 "privkey" b ra-1 serial-b ca-0))))
  (label 25)
  (parent 15)
  (unrealized (5 1))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhstatic-state
  (vars (ignore mesg) (serial-a serial-b data) (n text) (ca b a name)
    (pt pt-0 pval) (static-key locn) (ra ra-0 rndx))
  (defstrand init 4 (serial-a serial-a) (serial-b serial-b) (n n) (a a)
    (b b) (ca ca) (galpha (exp (gen) ra-0)) (static-key static-key)
    (ra ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-a) (self a)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-a) (subj a)
    (ca ca))
  (defstrand cert 2 (galpha (exp (gen) ra-0)) (serial serial-b) (subj b)
    (ca ca))
  (defstrand get-cert 1 (self b) (ca ca) (ra ra-0))
  (deflistener (exp (gen) (mul ra ra-0)))
  (deflistener (cat (exp (gen) ra) ra-0))
  (precedes ((1 0) (2 0)) ((1 0) (6 0)) ((1 3) (0 0)) ((2 1) (1 1))
    ((3 1) (0 1)) ((4 0) (3 0)) ((4 0) (6 0)) ((5 1) (0 3))
    ((6 1) (5 0)))
  (non-orig (privk "sig" ca) (privk "sig" b))
  (uniq-orig serial-a serial-b n)
  (uniq-gen ra ra-0)
  (gen-st (cat "privkey" a ra serial-a ca))
  (facts (neq a b) (neq b a))
  (rule fact-init-neq0 fact-resp-neq0 trRl_get-cert-at-2
    trRl_get-cert-at-3)
  (operation nonce-test (added-listener (cat (exp (gen) ra) ra-0))
    (exp (gen) (mul ra ra-0)) (5 0))
  (traces
    ((load static-key (cat pt "privkey" a ra serial-a ca))
      (recv
        (sig (cert b (exp (gen) ra-0) ca serial-b) (privk "sig" ca)))
      (send (enc n a b serial-a serial-b (exp (gen) (mul ra ra-0))))
      (recv n))
    ((send (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (recv (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" a ra serial-a ca)))
    ((recv (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (send (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca))))
    ((recv (sig (cert-req b (exp (gen) ra-0) ca) (privk "sig" b)))
      (send
        (sig (cert b (exp (gen) ra-0) ca serial-b) (privk "sig" ca))))
    ((send (sig (cert-req b (exp (gen) ra-0) ca) (privk "sig" b))))
    ((recv (exp (gen) (mul ra ra-0))) (send (exp (gen) (mul ra ra-0))))
    ((recv (cat (exp (gen) ra) ra-0)) (send (cat (exp (gen) ra) ra-0))))
  (label 26)
  (parent 16)
  (unrealized (6 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhstatic-state
  (vars (ignore mesg) (serial-a serial-b data) (n text) (ca b a name)
    (pt pt-0 pval) (static-key locn) (ra ra-0 rndx))
  (defstrand init 4 (serial-a serial-a) (serial-b serial-b) (n n) (a a)
    (b b) (ca ca) (galpha (exp (gen) ra-0)) (static-key static-key)
    (ra ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-a) (self a)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-a) (subj a)
    (ca ca))
  (defstrand cert 2 (galpha (exp (gen) ra-0)) (serial serial-b) (subj b)
    (ca ca))
  (defstrand get-cert 1 (self b) (ca ca) (ra ra-0))
  (deflistener (exp (gen) (mul ra ra-0)))
  (deflistener (cat (exp (gen) ra-0) ra))
  (precedes ((1 0) (2 0)) ((1 0) (6 0)) ((1 3) (0 0)) ((2 1) (1 1))
    ((3 1) (0 1)) ((4 0) (3 0)) ((4 0) (6 0)) ((5 1) (0 3))
    ((6 1) (5 0)))
  (non-orig (privk "sig" ca) (privk "sig" b))
  (uniq-orig serial-a serial-b n)
  (uniq-gen ra ra-0)
  (gen-st (cat "privkey" a ra serial-a ca))
  (facts (neq a b) (neq b a))
  (rule fact-init-neq0 fact-resp-neq0 trRl_get-cert-at-2
    trRl_get-cert-at-3)
  (operation nonce-test (added-listener (cat (exp (gen) ra-0) ra))
    (exp (gen) (mul ra ra-0)) (5 0))
  (traces
    ((load static-key (cat pt "privkey" a ra serial-a ca))
      (recv
        (sig (cert b (exp (gen) ra-0) ca serial-b) (privk "sig" ca)))
      (send (enc n a b serial-a serial-b (exp (gen) (mul ra ra-0))))
      (recv n))
    ((send (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (recv (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" a ra serial-a ca)))
    ((recv (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (send (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca))))
    ((recv (sig (cert-req b (exp (gen) ra-0) ca) (privk "sig" b)))
      (send
        (sig (cert b (exp (gen) ra-0) ca serial-b) (privk "sig" ca))))
    ((send (sig (cert-req b (exp (gen) ra-0) ca) (privk "sig" b))))
    ((recv (exp (gen) (mul ra ra-0))) (send (exp (gen) (mul ra ra-0))))
    ((recv (cat (exp (gen) ra-0) ra)) (send (cat (exp (gen) ra-0) ra))))
  (label 27)
  (parent 16)
  (unrealized (6 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhstatic-state
  (vars (ignore ignore-0 mesg) (serial-a data) (n text) (ca a ca-0 name)
    (pt pt-0 pt-1 pt-2 pval) (static-key static-key-0 locn)
    (ra ra-0 rndx))
  (defstrand init 4 (serial-a serial-a) (serial-b serial-a) (n n) (a a)
    (b a) (ca ca) (galpha (exp (gen) ra)) (static-key static-key)
    (ra ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-a) (self a)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-a) (subj a)
    (ca ca))
  (defstrand resp 4 (serial-b serial-a) (serial-a serial-a) (n n) (a a)
    (b a) (ca ca-0) (galpha (exp (gen) (mul ra ra (rec ra-0))))
    (static-key static-key-0) (rb ra-0))
  (defstrand get-cert 4 (ignore ignore-0) (serial serial-a) (self a)
    (ca ca-0) (static-key static-key-0) (ra ra-0))
  (deflistener (cat (exp (gen) (mul ra ra)) ra-0))
  (precedes ((0 2) (3 2)) ((1 0) (2 0)) ((1 3) (0 0)) ((2 1) (1 1))
    ((2 1) (4 1)) ((3 3) (0 3)) ((4 3) (3 0)) ((4 3) (5 0))
    ((5 1) (3 1)))
  (non-orig (privk "sig" ca) (privk "sig" a))
  (uniq-orig serial-a n)
  (uniq-gen ra ra-0)
  (gen-st (cat "privkey" a ra serial-a ca)
    (cat "privkey" a ra-0 serial-a ca-0))
  (facts (neq a a))
  (rule fact-resp-neq0 trRl_get-cert-at-2 trRl_get-cert-at-3)
  (operation nonce-test (displaced 6 4 get-cert 4) ra-0 (5 0))
  (traces
    ((load static-key (cat pt "privkey" a ra serial-a ca))
      (recv (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca)))
      (send (enc n a a serial-a serial-a (exp (gen) (mul ra ra))))
      (recv n))
    ((send (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (recv (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" a ra serial-a ca)))
    ((recv (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (send (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca))))
    ((load static-key-0 (cat pt-1 "privkey" a ra-0 serial-a ca-0))
      (recv
        (sig (cert a (exp (gen) (mul ra ra (rec ra-0))) ca-0 serial-a)
          (privk "sig" ca-0)))
      (recv (enc n a a serial-a serial-a (exp (gen) (mul ra ra))))
      (send n))
    ((send (sig (cert-req a (exp (gen) ra-0) ca-0) (privk "sig" a)))
      (recv
        (sig (cert a (exp (gen) ra-0) ca-0 serial-a)
          (privk "sig" ca-0))) (load static-key-0 (cat pt-2 ignore-0))
      (stor static-key-0 (cat pt-1 "privkey" a ra-0 serial-a ca-0)))
    ((recv (cat (exp (gen) (mul ra ra)) ra-0))
      (send (cat (exp (gen) (mul ra ra)) ra-0))))
  (label 28)
  (parent 17)
  (unrealized (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhstatic-state
  (vars (ignore ignore-0 mesg) (serial-a data) (n text) (ca a ca-0 name)
    (pt pt-0 pt-1 pt-2 pval) (static-key static-key-0 locn)
    (ra ra-0 rndx))
  (defstrand init 4 (serial-a serial-a) (serial-b serial-a) (n n) (a a)
    (b a) (ca ca) (galpha (exp (gen) ra-0)) (static-key static-key)
    (ra ra-0))
  (defstrand get-cert 4 (ignore ignore) (serial serial-a) (self a)
    (ca ca) (static-key static-key) (ra ra-0))
  (defstrand cert 2 (galpha (exp (gen) ra-0)) (serial serial-a) (subj a)
    (ca ca))
  (defstrand resp 4 (serial-b serial-a) (serial-a serial-a) (n n) (a a)
    (b a) (ca ca-0) (galpha (exp (gen) (mul (rec ra) ra-0 ra-0)))
    (static-key static-key-0) (rb ra))
  (defstrand get-cert 4 (ignore ignore-0) (serial serial-a) (self a)
    (ca ca-0) (static-key static-key-0) (ra ra))
  (deflistener (cat (exp (gen) (rec ra)) ra-0))
  (precedes ((0 2) (3 2)) ((1 0) (2 0)) ((1 3) (0 0)) ((1 3) (5 0))
    ((2 1) (1 1)) ((2 1) (4 1)) ((3 3) (0 3)) ((4 0) (5 0))
    ((4 3) (3 0)) ((5 1) (3 1)))
  (non-orig (privk "sig" ca) (privk "sig" a))
  (uniq-orig serial-a n)
  (uniq-gen ra ra-0)
  (gen-st (cat "privkey" a ra serial-a ca-0)
    (cat "privkey" a ra-0 serial-a ca))
  (facts (neq a a))
  (rule fact-resp-neq0 trRl_get-cert-at-2 trRl_get-cert-at-3)
  (operation nonce-test (displaced 6 1 get-cert 4) ra-0 (5 0))
  (traces
    ((load static-key (cat pt "privkey" a ra-0 serial-a ca))
      (recv
        (sig (cert a (exp (gen) ra-0) ca serial-a) (privk "sig" ca)))
      (send (enc n a a serial-a serial-a (exp (gen) (mul ra-0 ra-0))))
      (recv n))
    ((send (sig (cert-req a (exp (gen) ra-0) ca) (privk "sig" a)))
      (recv
        (sig (cert a (exp (gen) ra-0) ca serial-a) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" a ra-0 serial-a ca)))
    ((recv (sig (cert-req a (exp (gen) ra-0) ca) (privk "sig" a)))
      (send
        (sig (cert a (exp (gen) ra-0) ca serial-a) (privk "sig" ca))))
    ((load static-key-0 (cat pt-1 "privkey" a ra serial-a ca-0))
      (recv
        (sig (cert a (exp (gen) (mul (rec ra) ra-0 ra-0)) ca-0 serial-a)
          (privk "sig" ca-0)))
      (recv (enc n a a serial-a serial-a (exp (gen) (mul ra-0 ra-0))))
      (send n))
    ((send (sig (cert-req a (exp (gen) ra) ca-0) (privk "sig" a)))
      (recv
        (sig (cert a (exp (gen) ra) ca-0 serial-a) (privk "sig" ca-0)))
      (load static-key-0 (cat pt-2 ignore-0))
      (stor static-key-0 (cat pt-1 "privkey" a ra serial-a ca-0)))
    ((recv (cat (exp (gen) (rec ra)) ra-0))
      (send (cat (exp (gen) (rec ra)) ra-0))))
  (label 29)
  (parent 18)
  (unrealized (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhstatic-state
  (vars (ignore mesg) (serial-a data) (n text) (ca a name)
    (pt pt-0 pval) (static-key locn) (ra rndx))
  (defstrand init 4 (serial-a serial-a) (serial-b serial-a) (n n) (a a)
    (b a) (ca ca) (galpha (exp (gen) ra)) (static-key static-key)
    (ra ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-a) (self a)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-a) (subj a)
    (ca ca))
  (deflistener (exp (gen) (mul ra ra)))
  (deflistener (cat (gen) (mul ra ra)))
  (deflistener ra)
  (precedes ((1 0) (2 0)) ((1 0) (5 0)) ((1 3) (0 0)) ((2 1) (1 1))
    ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0)))
  (non-orig (privk "sig" ca) (privk "sig" a))
  (uniq-orig serial-a n)
  (uniq-gen ra)
  (precur (4 0))
  (gen-st (cat "privkey" a ra serial-a ca))
  (facts (neq a a))
  (rule fact-resp-neq0 trRl_get-cert-at-2 trRl_get-cert-at-3)
  (operation nonce-test (added-listener ra) (mul ra ra) (4 0))
  (traces
    ((load static-key (cat pt "privkey" a ra serial-a ca))
      (recv (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca)))
      (send (enc n a a serial-a serial-a (exp (gen) (mul ra ra))))
      (recv n))
    ((send (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (recv (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" a ra serial-a ca)))
    ((recv (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (send (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca))))
    ((recv (exp (gen) (mul ra ra))) (send (exp (gen) (mul ra ra))))
    ((recv (cat (gen) (mul ra ra))) (send (cat (gen) (mul ra ra))))
    ((recv ra) (send ra)))
  (label 30)
  (parent 19)
  (unrealized (5 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhstatic-state
  (vars (ignore mesg) (serial-a data) (n text) (ca a name)
    (pt pt-0 pval) (static-key locn) (ra rndx))
  (defstrand init 4 (serial-a serial-a) (serial-b serial-a) (n n) (a a)
    (b a) (ca ca) (galpha (exp (gen) ra)) (static-key static-key)
    (ra ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-a) (self a)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-a) (subj a)
    (ca ca))
  (deflistener (exp (gen) (mul ra ra)))
  (deflistener (cat (exp (gen) ra) ra))
  (precedes ((1 0) (2 0)) ((1 3) (0 0)) ((1 3) (4 0)) ((2 1) (1 1))
    ((3 1) (0 3)) ((4 1) (3 0)))
  (non-orig (privk "sig" ca) (privk "sig" a))
  (uniq-orig serial-a n)
  (uniq-gen ra)
  (precur (4 0))
  (gen-st (cat "privkey" a ra serial-a ca))
  (facts (neq a a))
  (rule fact-resp-neq0 trRl_get-cert-at-2 trRl_get-cert-at-3)
  (operation nonce-test (displaced 5 1 get-cert 4) ra (4 0))
  (traces
    ((load static-key (cat pt "privkey" a ra serial-a ca))
      (recv (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca)))
      (send (enc n a a serial-a serial-a (exp (gen) (mul ra ra))))
      (recv n))
    ((send (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (recv (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" a ra serial-a ca)))
    ((recv (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (send (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca))))
    ((recv (exp (gen) (mul ra ra))) (send (exp (gen) (mul ra ra))))
    ((recv (cat (exp (gen) ra) ra)) (send (cat (exp (gen) ra) ra))))
  (label 31)
  (parent 20)
  (unrealized (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhstatic-state
  (vars (ignore ignore-0 mesg) (serial-a serial-b data) (n text)
    (ca a ca-0 name) (pt pt-0 pt-1 pt-2 pval)
    (static-key static-key-0 locn) (ra ra-0 rndx))
  (defstrand init 4 (serial-a serial-a) (serial-b serial-b) (n n) (a a)
    (b a) (ca ca) (galpha (exp (gen) ra)) (static-key static-key)
    (ra ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-a) (self a)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-a) (subj a)
    (ca ca))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-b) (subj a)
    (ca ca))
  (defstrand resp 4 (serial-b serial-b) (serial-a serial-a) (n n) (a a)
    (b a) (ca ca-0) (galpha (exp (gen) (mul ra ra (rec ra-0))))
    (static-key static-key-0) (rb ra-0))
  (defstrand get-cert 4 (ignore ignore-0) (serial serial-b) (self a)
    (ca ca-0) (static-key static-key-0) (ra ra-0))
  (deflistener (cat (exp (gen) (mul ra ra)) ra-0))
  (precedes ((0 2) (4 2)) ((1 0) (2 0)) ((1 0) (3 0)) ((1 0) (6 0))
    ((1 3) (0 0)) ((2 1) (1 1)) ((2 1) (4 1)) ((3 1) (0 1))
    ((3 1) (5 1)) ((4 3) (0 3)) ((5 0) (6 0)) ((5 3) (4 0))
    ((6 1) (4 1)))
  (non-orig (privk "sig" ca) (privk "sig" a))
  (uniq-orig serial-a serial-b n)
  (uniq-gen ra ra-0)
  (gen-st (cat "privkey" a ra serial-a ca)
    (cat "privkey" a ra-0 serial-b ca-0))
  (facts (neq a a))
  (rule fact-resp-neq0 trRl_get-cert-at-2 trRl_get-cert-at-3)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul ra ra)) ra-0))
    (exp (gen) (mul ra ra (rec ra-0))) (4 1))
  (traces
    ((load static-key (cat pt "privkey" a ra serial-a ca))
      (recv (sig (cert a (exp (gen) ra) ca serial-b) (privk "sig" ca)))
      (send (enc n a a serial-a serial-b (exp (gen) (mul ra ra))))
      (recv n))
    ((send (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (recv (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" a ra serial-a ca)))
    ((recv (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (send (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca))))
    ((recv (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (send (sig (cert a (exp (gen) ra) ca serial-b) (privk "sig" ca))))
    ((load static-key-0 (cat pt-1 "privkey" a ra-0 serial-b ca-0))
      (recv
        (sig (cert a (exp (gen) (mul ra ra (rec ra-0))) ca-0 serial-a)
          (privk "sig" ca-0)))
      (recv (enc n a a serial-a serial-b (exp (gen) (mul ra ra))))
      (send n))
    ((send (sig (cert-req a (exp (gen) ra-0) ca-0) (privk "sig" a)))
      (recv
        (sig (cert a (exp (gen) ra-0) ca-0 serial-b)
          (privk "sig" ca-0))) (load static-key-0 (cat pt-2 ignore-0))
      (stor static-key-0 (cat pt-1 "privkey" a ra-0 serial-b ca-0)))
    ((recv (cat (exp (gen) (mul ra ra)) ra-0))
      (send (cat (exp (gen) (mul ra ra)) ra-0))))
  (label 32)
  (parent 22)
  (unrealized (6 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhstatic-state
  (vars (ignore ignore-0 mesg) (serial-a serial-b data) (n text)
    (ca a ca-0 name) (pt pt-0 pt-1 pt-2 pval)
    (static-key static-key-0 locn) (ra ra-0 rndx))
  (defstrand init 4 (serial-a serial-a) (serial-b serial-b) (n n) (a a)
    (b a) (ca ca) (galpha (exp (gen) ra)) (static-key static-key)
    (ra ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-a) (self a)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-a) (subj a)
    (ca ca))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-b) (subj a)
    (ca ca))
  (defstrand resp 4 (serial-b serial-b) (serial-a serial-a) (n n) (a a)
    (b a) (ca ca-0) (galpha (exp (gen) (mul ra ra (rec ra-0))))
    (static-key static-key-0) (rb ra-0))
  (defstrand get-cert 4 (ignore ignore-0) (serial serial-b) (self a)
    (ca ca-0) (static-key static-key-0) (ra ra-0))
  (deflistener (cat (exp (gen) (rec ra-0)) ra))
  (precedes ((0 2) (4 2)) ((1 0) (2 0)) ((1 0) (3 0)) ((1 0) (6 0))
    ((1 3) (0 0)) ((2 1) (1 1)) ((2 1) (4 1)) ((3 1) (0 1))
    ((3 1) (5 1)) ((4 3) (0 3)) ((5 0) (6 0)) ((5 3) (4 0))
    ((6 1) (4 1)))
  (non-orig (privk "sig" ca) (privk "sig" a))
  (uniq-orig serial-a serial-b n)
  (uniq-gen ra ra-0)
  (gen-st (cat "privkey" a ra serial-a ca)
    (cat "privkey" a ra-0 serial-b ca-0))
  (facts (neq a a))
  (rule fact-resp-neq0 trRl_get-cert-at-2 trRl_get-cert-at-3)
  (operation nonce-test (added-listener (cat (exp (gen) (rec ra-0)) ra))
    (exp (gen) (mul ra ra (rec ra-0))) (4 1))
  (traces
    ((load static-key (cat pt "privkey" a ra serial-a ca))
      (recv (sig (cert a (exp (gen) ra) ca serial-b) (privk "sig" ca)))
      (send (enc n a a serial-a serial-b (exp (gen) (mul ra ra))))
      (recv n))
    ((send (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (recv (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" a ra serial-a ca)))
    ((recv (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (send (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca))))
    ((recv (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (send (sig (cert a (exp (gen) ra) ca serial-b) (privk "sig" ca))))
    ((load static-key-0 (cat pt-1 "privkey" a ra-0 serial-b ca-0))
      (recv
        (sig (cert a (exp (gen) (mul ra ra (rec ra-0))) ca-0 serial-a)
          (privk "sig" ca-0)))
      (recv (enc n a a serial-a serial-b (exp (gen) (mul ra ra))))
      (send n))
    ((send (sig (cert-req a (exp (gen) ra-0) ca-0) (privk "sig" a)))
      (recv
        (sig (cert a (exp (gen) ra-0) ca-0 serial-b)
          (privk "sig" ca-0))) (load static-key-0 (cat pt-2 ignore-0))
      (stor static-key-0 (cat pt-1 "privkey" a ra-0 serial-b ca-0)))
    ((recv (cat (exp (gen) (rec ra-0)) ra))
      (send (cat (exp (gen) (rec ra-0)) ra))))
  (label 33)
  (parent 22)
  (unrealized (6 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhstatic-state
  (vars (ignore mesg) (serial-a serial-b data) (n text) (ca a name)
    (pt pt-0 pval) (static-key locn) (ra rndx))
  (defstrand init 4 (serial-a serial-a) (serial-b serial-b) (n n) (a a)
    (b a) (ca ca) (galpha (exp (gen) ra)) (static-key static-key)
    (ra ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-a) (self a)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-a) (subj a)
    (ca ca))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-b) (subj a)
    (ca ca))
  (deflistener (exp (gen) (mul ra ra)))
  (deflistener (cat (gen) (mul ra ra)))
  (precedes ((1 0) (2 0)) ((1 0) (3 0)) ((1 0) (5 0)) ((1 3) (0 0))
    ((2 1) (1 1)) ((3 1) (0 1)) ((4 1) (0 3)) ((5 1) (4 0)))
  (non-orig (privk "sig" ca) (privk "sig" a))
  (uniq-orig serial-a serial-b n)
  (uniq-gen ra)
  (precur (5 0))
  (gen-st (cat "privkey" a ra serial-a ca))
  (facts (neq a a))
  (rule fact-resp-neq0 trRl_get-cert-at-2 trRl_get-cert-at-3)
  (operation nonce-test (contracted (ra-0 ra) (w (mul ra ra))) (gen)
    (5 0))
  (traces
    ((load static-key (cat pt "privkey" a ra serial-a ca))
      (recv (sig (cert a (exp (gen) ra) ca serial-b) (privk "sig" ca)))
      (send (enc n a a serial-a serial-b (exp (gen) (mul ra ra))))
      (recv n))
    ((send (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (recv (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" a ra serial-a ca)))
    ((recv (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (send (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca))))
    ((recv (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (send (sig (cert a (exp (gen) ra) ca serial-b) (privk "sig" ca))))
    ((recv (exp (gen) (mul ra ra))) (send (exp (gen) (mul ra ra))))
    ((recv (cat (gen) (mul ra ra))) (send (cat (gen) (mul ra ra)))))
  (label 34)
  (parent 23)
  (unrealized (4 0) (5 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhstatic-state
  (vars (ignore mesg) (serial-a serial-b data) (n text) (ca a name)
    (pt pt-0 pval) (static-key locn) (ra rndx))
  (defstrand init 4 (serial-a serial-a) (serial-b serial-b) (n n) (a a)
    (b a) (ca ca) (galpha (exp (gen) ra)) (static-key static-key)
    (ra ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-a) (self a)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-a) (subj a)
    (ca ca))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-b) (subj a)
    (ca ca))
  (deflistener (exp (gen) (mul ra ra)))
  (deflistener (cat (exp (gen) ra) ra))
  (precedes ((1 0) (2 0)) ((1 0) (3 0)) ((1 0) (5 0)) ((1 3) (0 0))
    ((2 1) (1 1)) ((3 1) (0 1)) ((4 1) (0 3)) ((5 1) (4 0)))
  (non-orig (privk "sig" ca) (privk "sig" a))
  (uniq-orig serial-a serial-b n)
  (uniq-gen ra)
  (precur (5 0))
  (gen-st (cat "privkey" a ra serial-a ca))
  (facts (neq a a))
  (rule fact-resp-neq0 trRl_get-cert-at-2 trRl_get-cert-at-3)
  (operation nonce-test (displaced 6 1 get-cert 1) (exp (gen) ra-0)
    (5 0))
  (traces
    ((load static-key (cat pt "privkey" a ra serial-a ca))
      (recv (sig (cert a (exp (gen) ra) ca serial-b) (privk "sig" ca)))
      (send (enc n a a serial-a serial-b (exp (gen) (mul ra ra))))
      (recv n))
    ((send (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (recv (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" a ra serial-a ca)))
    ((recv (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (send (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca))))
    ((recv (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (send (sig (cert a (exp (gen) ra) ca serial-b) (privk "sig" ca))))
    ((recv (exp (gen) (mul ra ra))) (send (exp (gen) (mul ra ra))))
    ((recv (cat (exp (gen) ra) ra)) (send (cat (exp (gen) ra) ra))))
  (label 35)
  (parent 23)
  (unrealized (5 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhstatic-state
  (vars (ignore mesg) (serial-a serial-b data) (n text)
    (ca a self ca-0 name) (pt pt-0 pval) (static-key locn)
    (ra ra-0 rndx))
  (defstrand init 4 (serial-a serial-a) (serial-b serial-b) (n n) (a a)
    (b a) (ca ca) (galpha (exp (gen) ra)) (static-key static-key)
    (ra ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-a) (self a)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-a) (subj a)
    (ca ca))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-b) (subj a)
    (ca ca))
  (deflistener (exp (gen) (mul ra ra)))
  (deflistener (cat (exp (gen) ra-0) (mul ra ra (rec ra-0))))
  (defstrand get-cert 1 (self self) (ca ca-0) (ra ra-0))
  (precedes ((1 0) (2 0)) ((1 0) (3 0)) ((1 0) (5 0)) ((1 3) (0 0))
    ((2 1) (1 1)) ((3 1) (0 1)) ((4 1) (0 3)) ((5 1) (4 0))
    ((6 0) (5 0)))
  (non-orig (privk "sig" ca) (privk "sig" a))
  (uniq-orig serial-a serial-b n)
  (uniq-gen ra ra-0)
  (precur (5 0))
  (gen-st (cat "privkey" a ra serial-a ca))
  (facts (neq a a))
  (rule fact-resp-neq0 trRl_get-cert-at-2 trRl_get-cert-at-3)
  (operation nonce-test (added-strand get-cert 1) (exp (gen) ra-0)
    (5 0))
  (traces
    ((load static-key (cat pt "privkey" a ra serial-a ca))
      (recv (sig (cert a (exp (gen) ra) ca serial-b) (privk "sig" ca)))
      (send (enc n a a serial-a serial-b (exp (gen) (mul ra ra))))
      (recv n))
    ((send (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (recv (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" a ra serial-a ca)))
    ((recv (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (send (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca))))
    ((recv (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (send (sig (cert a (exp (gen) ra) ca serial-b) (privk "sig" ca))))
    ((recv (exp (gen) (mul ra ra))) (send (exp (gen) (mul ra ra))))
    ((recv (cat (exp (gen) ra-0) (mul ra ra (rec ra-0))))
      (send (cat (exp (gen) ra-0) (mul ra ra (rec ra-0)))))
    ((send
       (sig (cert-req self (exp (gen) ra-0) ca-0) (privk "sig" self)))))
  (label 36)
  (parent 23)
  (unrealized (4 0) (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhstatic-state
  (vars (ignore ignore-0 mesg) (serial-a serial-b data) (n text)
    (ca b a ca-0 name) (pt pt-0 pt-1 pt-2 pval)
    (static-key static-key-0 locn) (ra ra-0 ra-1 rndx))
  (defstrand init 4 (serial-a serial-a) (serial-b serial-b) (n n) (a a)
    (b b) (ca ca) (galpha (exp (gen) ra-0)) (static-key static-key)
    (ra ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-a) (self a)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-a) (subj a)
    (ca ca))
  (defstrand cert 2 (galpha (exp (gen) ra-0)) (serial serial-b) (subj b)
    (ca ca))
  (defstrand get-cert 1 (self b) (ca ca) (ra ra-0))
  (defstrand resp 4 (serial-b serial-b) (serial-a serial-a) (n n) (a a)
    (b b) (ca ca-0) (galpha (exp (gen) (mul ra ra-0 (rec ra-1))))
    (static-key static-key-0) (rb ra-1))
  (defstrand get-cert 4 (ignore ignore-0) (serial serial-b) (self b)
    (ca ca-0) (static-key static-key-0) (ra ra-1))
  (deflistener (cat (exp (gen) (mul ra ra-0)) ra-1))
  (precedes ((0 2) (5 2)) ((1 0) (2 0)) ((1 0) (7 0)) ((1 3) (0 0))
    ((2 1) (1 1)) ((2 1) (5 1)) ((3 1) (0 1)) ((3 1) (6 1))
    ((4 0) (3 0)) ((4 0) (7 0)) ((5 3) (0 3)) ((6 0) (7 0))
    ((6 3) (5 0)) ((7 1) (5 1)))
  (non-orig (privk "sig" ca) (privk "sig" b))
  (uniq-orig serial-a serial-b n)
  (uniq-gen ra ra-0 ra-1)
  (gen-st (cat "privkey" b ra-1 serial-b ca-0)
    (cat "privkey" a ra serial-a ca))
  (facts (neq a b) (neq b a))
  (rule fact-resp-neq0 trRl_get-cert-at-2 trRl_get-cert-at-3)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul ra ra-0)) ra-1))
    (exp (gen) (mul ra ra-0 (rec ra-1))) (5 1))
  (traces
    ((load static-key (cat pt "privkey" a ra serial-a ca))
      (recv
        (sig (cert b (exp (gen) ra-0) ca serial-b) (privk "sig" ca)))
      (send (enc n a b serial-a serial-b (exp (gen) (mul ra ra-0))))
      (recv n))
    ((send (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (recv (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" a ra serial-a ca)))
    ((recv (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (send (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca))))
    ((recv (sig (cert-req b (exp (gen) ra-0) ca) (privk "sig" b)))
      (send
        (sig (cert b (exp (gen) ra-0) ca serial-b) (privk "sig" ca))))
    ((send (sig (cert-req b (exp (gen) ra-0) ca) (privk "sig" b))))
    ((load static-key-0 (cat pt-1 "privkey" b ra-1 serial-b ca-0))
      (recv
        (sig (cert a (exp (gen) (mul ra ra-0 (rec ra-1))) ca-0 serial-a)
          (privk "sig" ca-0)))
      (recv (enc n a b serial-a serial-b (exp (gen) (mul ra ra-0))))
      (send n))
    ((send (sig (cert-req b (exp (gen) ra-1) ca-0) (privk "sig" b)))
      (recv
        (sig (cert b (exp (gen) ra-1) ca-0 serial-b)
          (privk "sig" ca-0))) (load static-key-0 (cat pt-2 ignore-0))
      (stor static-key-0 (cat pt-1 "privkey" b ra-1 serial-b ca-0)))
    ((recv (cat (exp (gen) (mul ra ra-0)) ra-1))
      (send (cat (exp (gen) (mul ra ra-0)) ra-1))))
  (label 37)
  (parent 25)
  (unrealized (7 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhstatic-state
  (vars (ignore ignore-0 mesg) (serial-a serial-b data) (n text)
    (ca b a ca-0 name) (pt pt-0 pt-1 pt-2 pval)
    (static-key static-key-0 locn) (ra ra-0 ra-1 rndx))
  (defstrand init 4 (serial-a serial-a) (serial-b serial-b) (n n) (a a)
    (b b) (ca ca) (galpha (exp (gen) ra-0)) (static-key static-key)
    (ra ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-a) (self a)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-a) (subj a)
    (ca ca))
  (defstrand cert 2 (galpha (exp (gen) ra-0)) (serial serial-b) (subj b)
    (ca ca))
  (defstrand get-cert 1 (self b) (ca ca) (ra ra-0))
  (defstrand resp 4 (serial-b serial-b) (serial-a serial-a) (n n) (a a)
    (b b) (ca ca-0) (galpha (exp (gen) (mul ra ra-0 (rec ra-1))))
    (static-key static-key-0) (rb ra-1))
  (defstrand get-cert 4 (ignore ignore-0) (serial serial-b) (self b)
    (ca ca-0) (static-key static-key-0) (ra ra-1))
  (deflistener (cat (exp (gen) (mul ra (rec ra-1))) ra-0))
  (precedes ((0 2) (5 2)) ((1 0) (2 0)) ((1 0) (7 0)) ((1 3) (0 0))
    ((2 1) (1 1)) ((2 1) (5 1)) ((3 1) (0 1)) ((3 1) (6 1))
    ((4 0) (3 0)) ((4 0) (7 0)) ((5 3) (0 3)) ((6 0) (7 0))
    ((6 3) (5 0)) ((7 1) (5 1)))
  (non-orig (privk "sig" ca) (privk "sig" b))
  (uniq-orig serial-a serial-b n)
  (uniq-gen ra ra-0 ra-1)
  (gen-st (cat "privkey" b ra-1 serial-b ca-0)
    (cat "privkey" a ra serial-a ca))
  (facts (neq a b) (neq b a))
  (rule fact-resp-neq0 trRl_get-cert-at-2 trRl_get-cert-at-3)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul ra (rec ra-1))) ra-0))
    (exp (gen) (mul ra ra-0 (rec ra-1))) (5 1))
  (traces
    ((load static-key (cat pt "privkey" a ra serial-a ca))
      (recv
        (sig (cert b (exp (gen) ra-0) ca serial-b) (privk "sig" ca)))
      (send (enc n a b serial-a serial-b (exp (gen) (mul ra ra-0))))
      (recv n))
    ((send (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (recv (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" a ra serial-a ca)))
    ((recv (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (send (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca))))
    ((recv (sig (cert-req b (exp (gen) ra-0) ca) (privk "sig" b)))
      (send
        (sig (cert b (exp (gen) ra-0) ca serial-b) (privk "sig" ca))))
    ((send (sig (cert-req b (exp (gen) ra-0) ca) (privk "sig" b))))
    ((load static-key-0 (cat pt-1 "privkey" b ra-1 serial-b ca-0))
      (recv
        (sig (cert a (exp (gen) (mul ra ra-0 (rec ra-1))) ca-0 serial-a)
          (privk "sig" ca-0)))
      (recv (enc n a b serial-a serial-b (exp (gen) (mul ra ra-0))))
      (send n))
    ((send (sig (cert-req b (exp (gen) ra-1) ca-0) (privk "sig" b)))
      (recv
        (sig (cert b (exp (gen) ra-1) ca-0 serial-b)
          (privk "sig" ca-0))) (load static-key-0 (cat pt-2 ignore-0))
      (stor static-key-0 (cat pt-1 "privkey" b ra-1 serial-b ca-0)))
    ((recv (cat (exp (gen) (mul ra (rec ra-1))) ra-0))
      (send (cat (exp (gen) (mul ra (rec ra-1))) ra-0))))
  (label 38)
  (parent 25)
  (unrealized (7 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhstatic-state
  (vars (ignore ignore-0 mesg) (serial-a serial-b data) (n text)
    (ca b a ca-0 name) (pt pt-0 pt-1 pt-2 pval)
    (static-key static-key-0 locn) (ra ra-0 ra-1 rndx))
  (defstrand init 4 (serial-a serial-a) (serial-b serial-b) (n n) (a a)
    (b b) (ca ca) (galpha (exp (gen) ra-0)) (static-key static-key)
    (ra ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-a) (self a)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-a) (subj a)
    (ca ca))
  (defstrand cert 2 (galpha (exp (gen) ra-0)) (serial serial-b) (subj b)
    (ca ca))
  (defstrand get-cert 1 (self b) (ca ca) (ra ra-0))
  (defstrand resp 4 (serial-b serial-b) (serial-a serial-a) (n n) (a a)
    (b b) (ca ca-0) (galpha (exp (gen) (mul ra ra-0 (rec ra-1))))
    (static-key static-key-0) (rb ra-1))
  (defstrand get-cert 4 (ignore ignore-0) (serial serial-b) (self b)
    (ca ca-0) (static-key static-key-0) (ra ra-1))
  (deflistener (cat (exp (gen) (mul ra-0 (rec ra-1))) ra))
  (precedes ((0 2) (5 2)) ((1 0) (2 0)) ((1 0) (7 0)) ((1 3) (0 0))
    ((2 1) (1 1)) ((2 1) (5 1)) ((3 1) (0 1)) ((3 1) (6 1))
    ((4 0) (3 0)) ((4 0) (7 0)) ((5 3) (0 3)) ((6 0) (7 0))
    ((6 3) (5 0)) ((7 1) (5 1)))
  (non-orig (privk "sig" ca) (privk "sig" b))
  (uniq-orig serial-a serial-b n)
  (uniq-gen ra ra-0 ra-1)
  (gen-st (cat "privkey" b ra-1 serial-b ca-0)
    (cat "privkey" a ra serial-a ca))
  (facts (neq a b) (neq b a))
  (rule fact-resp-neq0 trRl_get-cert-at-2 trRl_get-cert-at-3)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul ra-0 (rec ra-1))) ra))
    (exp (gen) (mul ra ra-0 (rec ra-1))) (5 1))
  (traces
    ((load static-key (cat pt "privkey" a ra serial-a ca))
      (recv
        (sig (cert b (exp (gen) ra-0) ca serial-b) (privk "sig" ca)))
      (send (enc n a b serial-a serial-b (exp (gen) (mul ra ra-0))))
      (recv n))
    ((send (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (recv (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" a ra serial-a ca)))
    ((recv (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (send (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca))))
    ((recv (sig (cert-req b (exp (gen) ra-0) ca) (privk "sig" b)))
      (send
        (sig (cert b (exp (gen) ra-0) ca serial-b) (privk "sig" ca))))
    ((send (sig (cert-req b (exp (gen) ra-0) ca) (privk "sig" b))))
    ((load static-key-0 (cat pt-1 "privkey" b ra-1 serial-b ca-0))
      (recv
        (sig (cert a (exp (gen) (mul ra ra-0 (rec ra-1))) ca-0 serial-a)
          (privk "sig" ca-0)))
      (recv (enc n a b serial-a serial-b (exp (gen) (mul ra ra-0))))
      (send n))
    ((send (sig (cert-req b (exp (gen) ra-1) ca-0) (privk "sig" b)))
      (recv
        (sig (cert b (exp (gen) ra-1) ca-0 serial-b)
          (privk "sig" ca-0))) (load static-key-0 (cat pt-2 ignore-0))
      (stor static-key-0 (cat pt-1 "privkey" b ra-1 serial-b ca-0)))
    ((recv (cat (exp (gen) (mul ra-0 (rec ra-1))) ra))
      (send (cat (exp (gen) (mul ra-0 (rec ra-1))) ra))))
  (label 39)
  (parent 25)
  (unrealized (7 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhstatic-state
  (vars (ignore ignore-0 mesg) (serial-a serial-b serial data) (n text)
    (a self ca name) (pt pt-0 pt-1 pt-2 pval)
    (static-key static-key-0 locn) (ra ra-0 rndx))
  (defstrand init 4 (serial-a serial-a) (serial-b serial-b) (n n) (a a)
    (b self) (ca ca) (galpha (exp (gen) ra-0)) (static-key static-key)
    (ra ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-a) (self a)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-a) (subj a)
    (ca ca))
  (defstrand cert 2 (galpha (exp (gen) ra-0)) (serial serial-b)
    (subj self) (ca ca))
  (deflistener (exp (gen) (mul ra ra-0)))
  (deflistener (cat (exp (gen) ra) ra-0))
  (defstrand get-cert 4 (ignore ignore-0) (serial serial) (self self)
    (ca ca) (static-key static-key-0) (ra ra-0))
  (precedes ((1 0) (2 0)) ((1 0) (5 0)) ((1 3) (0 0)) ((2 1) (1 1))
    ((3 1) (0 1)) ((4 1) (0 3)) ((5 1) (4 0)) ((6 0) (3 0))
    ((6 3) (5 0)))
  (non-orig (privk "sig" self) (privk "sig" ca))
  (uniq-orig serial-a serial-b n)
  (uniq-gen ra ra-0)
  (gen-st (cat "privkey" a ra serial-a ca))
  (facts (neq a self) (neq self a))
  (rule fact-init-neq0 fact-resp-neq0 trRl_get-cert-at-2
    trRl_get-cert-at-3)
  (operation nonce-test (displaced 4 7 get-cert 4) ra-0 (6 0))
  (traces
    ((load static-key (cat pt "privkey" a ra serial-a ca))
      (recv
        (sig (cert self (exp (gen) ra-0) ca serial-b) (privk "sig" ca)))
      (send (enc n a self serial-a serial-b (exp (gen) (mul ra ra-0))))
      (recv n))
    ((send (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (recv (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" a ra serial-a ca)))
    ((recv (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (send (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca))))
    ((recv (sig (cert-req self (exp (gen) ra-0) ca) (privk "sig" self)))
      (send
        (sig (cert self (exp (gen) ra-0) ca serial-b)
          (privk "sig" ca))))
    ((recv (exp (gen) (mul ra ra-0))) (send (exp (gen) (mul ra ra-0))))
    ((recv (cat (exp (gen) ra) ra-0)) (send (cat (exp (gen) ra) ra-0)))
    ((send (sig (cert-req self (exp (gen) ra-0) ca) (privk "sig" self)))
      (recv
        (sig (cert self (exp (gen) ra-0) ca serial) (privk "sig" ca)))
      (load static-key-0 (cat pt-1 ignore-0))
      (stor static-key-0 (cat pt-2 "privkey" self ra-0 serial ca))))
  (label 40)
  (parent 26)
  (unrealized (5 0) (6 1))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhstatic-state
  (vars (ignore mesg) (serial-a serial-b data) (n text) (ca b a name)
    (pt pt-0 pval) (static-key locn) (ra ra-0 rndx))
  (defstrand init 4 (serial-a serial-a) (serial-b serial-b) (n n) (a a)
    (b b) (ca ca) (galpha (exp (gen) ra)) (static-key static-key)
    (ra ra-0))
  (defstrand get-cert 4 (ignore ignore) (serial serial-a) (self a)
    (ca ca) (static-key static-key) (ra ra-0))
  (defstrand cert 2 (galpha (exp (gen) ra-0)) (serial serial-a) (subj a)
    (ca ca))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-b) (subj b)
    (ca ca))
  (defstrand get-cert 1 (self b) (ca ca) (ra ra))
  (deflistener (exp (gen) (mul ra ra-0)))
  (deflistener (cat (exp (gen) ra) ra-0))
  (precedes ((1 0) (2 0)) ((1 3) (0 0)) ((1 3) (6 0)) ((2 1) (1 1))
    ((3 1) (0 1)) ((4 0) (3 0)) ((4 0) (6 0)) ((5 1) (0 3))
    ((6 1) (5 0)))
  (non-orig (privk "sig" ca) (privk "sig" b))
  (uniq-orig serial-a serial-b n)
  (uniq-gen ra ra-0)
  (gen-st (cat "privkey" a ra-0 serial-a ca))
  (facts (neq a b) (neq b a))
  (rule fact-init-neq0 fact-resp-neq0 trRl_get-cert-at-2
    trRl_get-cert-at-3)
  (operation nonce-test (displaced 7 1 get-cert 4) ra-0 (6 0))
  (traces
    ((load static-key (cat pt "privkey" a ra-0 serial-a ca))
      (recv (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca)))
      (send (enc n a b serial-a serial-b (exp (gen) (mul ra ra-0))))
      (recv n))
    ((send (sig (cert-req a (exp (gen) ra-0) ca) (privk "sig" a)))
      (recv
        (sig (cert a (exp (gen) ra-0) ca serial-a) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" a ra-0 serial-a ca)))
    ((recv (sig (cert-req a (exp (gen) ra-0) ca) (privk "sig" a)))
      (send
        (sig (cert a (exp (gen) ra-0) ca serial-a) (privk "sig" ca))))
    ((recv (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (send (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca))))
    ((send (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b))))
    ((recv (exp (gen) (mul ra ra-0))) (send (exp (gen) (mul ra ra-0))))
    ((recv (cat (exp (gen) ra) ra-0)) (send (cat (exp (gen) ra) ra-0))))
  (label 41)
  (parent 27)
  (unrealized (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhstatic-state
  (vars (ignore mesg) (serial-a data) (n text) (ca a name)
    (pt pt-0 pval) (static-key locn) (ra rndx))
  (defstrand init 4 (serial-a serial-a) (serial-b serial-a) (n n) (a a)
    (b a) (ca ca) (galpha (exp (gen) ra)) (static-key static-key)
    (ra ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-a) (self a)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-a) (subj a)
    (ca ca))
  (deflistener (exp (gen) (mul ra ra)))
  (deflistener (cat (gen) (mul ra ra)))
  (deflistener ra)
  (precedes ((1 0) (2 0)) ((1 3) (0 0)) ((1 3) (5 0)) ((2 1) (1 1))
    ((3 1) (0 3)) ((4 1) (3 0)) ((5 1) (4 0)))
  (non-orig (privk "sig" ca) (privk "sig" a))
  (uniq-orig serial-a n)
  (uniq-gen ra)
  (precur (4 0))
  (gen-st (cat "privkey" a ra serial-a ca))
  (facts (neq a a))
  (rule fact-resp-neq0 trRl_get-cert-at-2 trRl_get-cert-at-3)
  (operation nonce-test (displaced 6 1 get-cert 4) ra (5 0))
  (traces
    ((load static-key (cat pt "privkey" a ra serial-a ca))
      (recv (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca)))
      (send (enc n a a serial-a serial-a (exp (gen) (mul ra ra))))
      (recv n))
    ((send (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (recv (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" a ra serial-a ca)))
    ((recv (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (send (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca))))
    ((recv (exp (gen) (mul ra ra))) (send (exp (gen) (mul ra ra))))
    ((recv (cat (gen) (mul ra ra))) (send (cat (gen) (mul ra ra))))
    ((recv ra) (send ra)))
  (label 42)
  (parent 30)
  (unrealized (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhstatic-state
  (vars (ignore ignore-0 mesg) (serial-a serial-b data) (n text)
    (ca a ca-0 name) (pt pt-0 pt-1 pt-2 pval)
    (static-key static-key-0 locn) (ra ra-0 rndx))
  (defstrand init 4 (serial-a serial-a) (serial-b serial-b) (n n) (a a)
    (b a) (ca ca) (galpha (exp (gen) ra)) (static-key static-key)
    (ra ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-a) (self a)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-a) (subj a)
    (ca ca))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-b) (subj a)
    (ca ca))
  (defstrand resp 4 (serial-b serial-b) (serial-a serial-a) (n n) (a a)
    (b a) (ca ca-0) (galpha (exp (gen) (mul ra ra (rec ra-0))))
    (static-key static-key-0) (rb ra-0))
  (defstrand get-cert 4 (ignore ignore-0) (serial serial-b) (self a)
    (ca ca-0) (static-key static-key-0) (ra ra-0))
  (deflistener (cat (exp (gen) (mul ra ra)) ra-0))
  (precedes ((0 2) (4 2)) ((1 0) (2 0)) ((1 0) (3 0)) ((1 3) (0 0))
    ((2 1) (1 1)) ((2 1) (4 1)) ((3 1) (0 1)) ((3 1) (5 1))
    ((4 3) (0 3)) ((5 3) (4 0)) ((5 3) (6 0)) ((6 1) (4 1)))
  (non-orig (privk "sig" ca) (privk "sig" a))
  (uniq-orig serial-a serial-b n)
  (uniq-gen ra ra-0)
  (gen-st (cat "privkey" a ra serial-a ca)
    (cat "privkey" a ra-0 serial-b ca-0))
  (facts (neq a a))
  (rule fact-resp-neq0 trRl_get-cert-at-2 trRl_get-cert-at-3)
  (operation nonce-test (displaced 7 5 get-cert 4) ra-0 (6 0))
  (traces
    ((load static-key (cat pt "privkey" a ra serial-a ca))
      (recv (sig (cert a (exp (gen) ra) ca serial-b) (privk "sig" ca)))
      (send (enc n a a serial-a serial-b (exp (gen) (mul ra ra))))
      (recv n))
    ((send (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (recv (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" a ra serial-a ca)))
    ((recv (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (send (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca))))
    ((recv (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (send (sig (cert a (exp (gen) ra) ca serial-b) (privk "sig" ca))))
    ((load static-key-0 (cat pt-1 "privkey" a ra-0 serial-b ca-0))
      (recv
        (sig (cert a (exp (gen) (mul ra ra (rec ra-0))) ca-0 serial-a)
          (privk "sig" ca-0)))
      (recv (enc n a a serial-a serial-b (exp (gen) (mul ra ra))))
      (send n))
    ((send (sig (cert-req a (exp (gen) ra-0) ca-0) (privk "sig" a)))
      (recv
        (sig (cert a (exp (gen) ra-0) ca-0 serial-b)
          (privk "sig" ca-0))) (load static-key-0 (cat pt-2 ignore-0))
      (stor static-key-0 (cat pt-1 "privkey" a ra-0 serial-b ca-0)))
    ((recv (cat (exp (gen) (mul ra ra)) ra-0))
      (send (cat (exp (gen) (mul ra ra)) ra-0))))
  (label 43)
  (parent 32)
  (unrealized (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhstatic-state
  (vars (ignore ignore-0 mesg) (serial-a serial-b data) (n text)
    (ca a ca-0 name) (pt pt-0 pt-1 pt-2 pval)
    (static-key static-key-0 locn) (ra ra-0 rndx))
  (defstrand init 4 (serial-a serial-a) (serial-b serial-b) (n n) (a a)
    (b a) (ca ca) (galpha (exp (gen) ra-0)) (static-key static-key)
    (ra ra-0))
  (defstrand get-cert 4 (ignore ignore) (serial serial-a) (self a)
    (ca ca) (static-key static-key) (ra ra-0))
  (defstrand cert 2 (galpha (exp (gen) ra-0)) (serial serial-a) (subj a)
    (ca ca))
  (defstrand cert 2 (galpha (exp (gen) ra-0)) (serial serial-b) (subj a)
    (ca ca))
  (defstrand resp 4 (serial-b serial-b) (serial-a serial-a) (n n) (a a)
    (b a) (ca ca-0) (galpha (exp (gen) (mul (rec ra) ra-0 ra-0)))
    (static-key static-key-0) (rb ra))
  (defstrand get-cert 4 (ignore ignore-0) (serial serial-b) (self a)
    (ca ca-0) (static-key static-key-0) (ra ra))
  (deflistener (cat (exp (gen) (rec ra)) ra-0))
  (precedes ((0 2) (4 2)) ((1 0) (2 0)) ((1 0) (3 0)) ((1 3) (0 0))
    ((1 3) (6 0)) ((2 1) (1 1)) ((3 1) (0 1)) ((3 1) (5 1))
    ((4 3) (0 3)) ((5 0) (6 0)) ((5 3) (4 0)) ((6 1) (4 1)))
  (non-orig (privk "sig" ca) (privk "sig" a))
  (uniq-orig serial-a serial-b n)
  (uniq-gen ra ra-0)
  (gen-st (cat "privkey" a ra serial-b ca-0)
    (cat "privkey" a ra-0 serial-a ca))
  (facts (neq a a))
  (rule fact-resp-neq0 trRl_get-cert-at-2 trRl_get-cert-at-3)
  (operation nonce-test (displaced 7 1 get-cert 4) ra-0 (6 0))
  (traces
    ((load static-key (cat pt "privkey" a ra-0 serial-a ca))
      (recv
        (sig (cert a (exp (gen) ra-0) ca serial-b) (privk "sig" ca)))
      (send (enc n a a serial-a serial-b (exp (gen) (mul ra-0 ra-0))))
      (recv n))
    ((send (sig (cert-req a (exp (gen) ra-0) ca) (privk "sig" a)))
      (recv
        (sig (cert a (exp (gen) ra-0) ca serial-a) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" a ra-0 serial-a ca)))
    ((recv (sig (cert-req a (exp (gen) ra-0) ca) (privk "sig" a)))
      (send
        (sig (cert a (exp (gen) ra-0) ca serial-a) (privk "sig" ca))))
    ((recv (sig (cert-req a (exp (gen) ra-0) ca) (privk "sig" a)))
      (send
        (sig (cert a (exp (gen) ra-0) ca serial-b) (privk "sig" ca))))
    ((load static-key-0 (cat pt-1 "privkey" a ra serial-b ca-0))
      (recv
        (sig (cert a (exp (gen) (mul (rec ra) ra-0 ra-0)) ca-0 serial-a)
          (privk "sig" ca-0)))
      (recv (enc n a a serial-a serial-b (exp (gen) (mul ra-0 ra-0))))
      (send n))
    ((send (sig (cert-req a (exp (gen) ra) ca-0) (privk "sig" a)))
      (recv
        (sig (cert a (exp (gen) ra) ca-0 serial-b) (privk "sig" ca-0)))
      (load static-key-0 (cat pt-2 ignore-0))
      (stor static-key-0 (cat pt-1 "privkey" a ra serial-b ca-0)))
    ((recv (cat (exp (gen) (rec ra)) ra-0))
      (send (cat (exp (gen) (rec ra)) ra-0))))
  (label 44)
  (parent 33)
  (unrealized (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhstatic-state
  (vars (ignore mesg) (serial-a serial-b data) (n text) (ca a name)
    (pt pt-0 pval) (static-key locn) (ra rndx))
  (defstrand init 4 (serial-a serial-a) (serial-b serial-b) (n n) (a a)
    (b a) (ca ca) (galpha (exp (gen) ra)) (static-key static-key)
    (ra ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-a) (self a)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-a) (subj a)
    (ca ca))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-b) (subj a)
    (ca ca))
  (deflistener (exp (gen) (mul ra ra)))
  (deflistener (cat (gen) (mul ra ra)))
  (deflistener ra)
  (precedes ((1 0) (2 0)) ((1 0) (3 0)) ((1 0) (6 0)) ((1 3) (0 0))
    ((2 1) (1 1)) ((3 1) (0 1)) ((4 1) (0 3)) ((5 1) (4 0))
    ((6 1) (5 0)))
  (non-orig (privk "sig" ca) (privk "sig" a))
  (uniq-orig serial-a serial-b n)
  (uniq-gen ra)
  (precur (5 0))
  (gen-st (cat "privkey" a ra serial-a ca))
  (facts (neq a a))
  (rule fact-resp-neq0 trRl_get-cert-at-2 trRl_get-cert-at-3)
  (operation nonce-test (added-listener ra) (mul ra ra) (5 0))
  (traces
    ((load static-key (cat pt "privkey" a ra serial-a ca))
      (recv (sig (cert a (exp (gen) ra) ca serial-b) (privk "sig" ca)))
      (send (enc n a a serial-a serial-b (exp (gen) (mul ra ra))))
      (recv n))
    ((send (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (recv (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" a ra serial-a ca)))
    ((recv (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (send (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca))))
    ((recv (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (send (sig (cert a (exp (gen) ra) ca serial-b) (privk "sig" ca))))
    ((recv (exp (gen) (mul ra ra))) (send (exp (gen) (mul ra ra))))
    ((recv (cat (gen) (mul ra ra))) (send (cat (gen) (mul ra ra))))
    ((recv ra) (send ra)))
  (label 45)
  (parent 34)
  (unrealized (6 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhstatic-state
  (vars (ignore mesg) (serial-a serial-b data) (n text) (ca a name)
    (pt pt-0 pval) (static-key locn) (ra rndx))
  (defstrand init 4 (serial-a serial-a) (serial-b serial-b) (n n) (a a)
    (b a) (ca ca) (galpha (exp (gen) ra)) (static-key static-key)
    (ra ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-a) (self a)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-a) (subj a)
    (ca ca))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-b) (subj a)
    (ca ca))
  (deflistener (exp (gen) (mul ra ra)))
  (deflistener (cat (exp (gen) ra) ra))
  (precedes ((1 0) (2 0)) ((1 0) (3 0)) ((1 3) (0 0)) ((1 3) (5 0))
    ((2 1) (1 1)) ((3 1) (0 1)) ((4 1) (0 3)) ((5 1) (4 0)))
  (non-orig (privk "sig" ca) (privk "sig" a))
  (uniq-orig serial-a serial-b n)
  (uniq-gen ra)
  (precur (5 0))
  (gen-st (cat "privkey" a ra serial-a ca))
  (facts (neq a a))
  (rule fact-resp-neq0 trRl_get-cert-at-2 trRl_get-cert-at-3)
  (operation nonce-test (displaced 6 1 get-cert 4) ra (5 0))
  (traces
    ((load static-key (cat pt "privkey" a ra serial-a ca))
      (recv (sig (cert a (exp (gen) ra) ca serial-b) (privk "sig" ca)))
      (send (enc n a a serial-a serial-b (exp (gen) (mul ra ra))))
      (recv n))
    ((send (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (recv (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" a ra serial-a ca)))
    ((recv (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (send (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca))))
    ((recv (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (send (sig (cert a (exp (gen) ra) ca serial-b) (privk "sig" ca))))
    ((recv (exp (gen) (mul ra ra))) (send (exp (gen) (mul ra ra))))
    ((recv (cat (exp (gen) ra) ra)) (send (cat (exp (gen) ra) ra))))
  (label 46)
  (parent 35)
  (unrealized (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhstatic-state
  (vars (ignore ignore-0 mesg) (serial-a serial-b data) (n text)
    (ca b a ca-0 name) (pt pt-0 pt-1 pt-2 pval)
    (static-key static-key-0 locn) (ra ra-0 ra-1 rndx))
  (defstrand init 4 (serial-a serial-a) (serial-b serial-b) (n n) (a a)
    (b b) (ca ca) (galpha (exp (gen) ra-0)) (static-key static-key)
    (ra ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-a) (self a)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-a) (subj a)
    (ca ca))
  (defstrand cert 2 (galpha (exp (gen) ra-0)) (serial serial-b) (subj b)
    (ca ca))
  (defstrand get-cert 1 (self b) (ca ca) (ra ra-0))
  (defstrand resp 4 (serial-b serial-b) (serial-a serial-a) (n n) (a a)
    (b b) (ca ca-0) (galpha (exp (gen) (mul ra ra-0 (rec ra-1))))
    (static-key static-key-0) (rb ra-1))
  (defstrand get-cert 4 (ignore ignore-0) (serial serial-b) (self b)
    (ca ca-0) (static-key static-key-0) (ra ra-1))
  (deflistener (cat (exp (gen) (mul ra ra-0)) ra-1))
  (precedes ((0 2) (5 2)) ((1 0) (2 0)) ((1 0) (7 0)) ((1 3) (0 0))
    ((2 1) (1 1)) ((2 1) (5 1)) ((3 1) (0 1)) ((3 1) (6 1))
    ((4 0) (3 0)) ((5 3) (0 3)) ((6 3) (5 0)) ((6 3) (7 0))
    ((7 1) (5 1)))
  (non-orig (privk "sig" ca) (privk "sig" b))
  (uniq-orig serial-a serial-b n)
  (uniq-gen ra ra-0 ra-1)
  (gen-st (cat "privkey" b ra-1 serial-b ca-0)
    (cat "privkey" a ra serial-a ca))
  (facts (neq a b) (neq b a))
  (rule fact-resp-neq0 trRl_get-cert-at-2 trRl_get-cert-at-3)
  (operation nonce-test (displaced 8 6 get-cert 4) ra-1 (7 0))
  (traces
    ((load static-key (cat pt "privkey" a ra serial-a ca))
      (recv
        (sig (cert b (exp (gen) ra-0) ca serial-b) (privk "sig" ca)))
      (send (enc n a b serial-a serial-b (exp (gen) (mul ra ra-0))))
      (recv n))
    ((send (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (recv (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" a ra serial-a ca)))
    ((recv (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (send (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca))))
    ((recv (sig (cert-req b (exp (gen) ra-0) ca) (privk "sig" b)))
      (send
        (sig (cert b (exp (gen) ra-0) ca serial-b) (privk "sig" ca))))
    ((send (sig (cert-req b (exp (gen) ra-0) ca) (privk "sig" b))))
    ((load static-key-0 (cat pt-1 "privkey" b ra-1 serial-b ca-0))
      (recv
        (sig (cert a (exp (gen) (mul ra ra-0 (rec ra-1))) ca-0 serial-a)
          (privk "sig" ca-0)))
      (recv (enc n a b serial-a serial-b (exp (gen) (mul ra ra-0))))
      (send n))
    ((send (sig (cert-req b (exp (gen) ra-1) ca-0) (privk "sig" b)))
      (recv
        (sig (cert b (exp (gen) ra-1) ca-0 serial-b)
          (privk "sig" ca-0))) (load static-key-0 (cat pt-2 ignore-0))
      (stor static-key-0 (cat pt-1 "privkey" b ra-1 serial-b ca-0)))
    ((recv (cat (exp (gen) (mul ra ra-0)) ra-1))
      (send (cat (exp (gen) (mul ra ra-0)) ra-1))))
  (label 47)
  (parent 37)
  (unrealized (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhstatic-state
  (vars (ignore ignore-0 ignore-1 mesg) (serial-a serial-b serial data)
    (n text) (a ca self ca-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (static-key static-key-0 static-key-1 locn) (ra ra-0 ra-1 rndx))
  (defstrand init 4 (serial-a serial-a) (serial-b serial-b) (n n) (a a)
    (b self) (ca ca-0) (galpha (exp (gen) ra-1)) (static-key static-key)
    (ra ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-a) (self a)
    (ca ca-0) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-a) (subj a)
    (ca ca-0))
  (defstrand cert 2 (galpha (exp (gen) ra-1)) (serial serial-b)
    (subj self) (ca ca-0))
  (defstrand resp 4 (serial-b serial-b) (serial-a serial-a) (n n) (a a)
    (b self) (ca ca) (galpha (exp (gen) (mul ra (rec ra-0) ra-1)))
    (static-key static-key-0) (rb ra-0))
  (defstrand get-cert 4 (ignore ignore-0) (serial serial-b) (self self)
    (ca ca) (static-key static-key-0) (ra ra-0))
  (deflistener (cat (exp (gen) (mul ra (rec ra-0))) ra-1))
  (defstrand get-cert 4 (ignore ignore-1) (serial serial) (self self)
    (ca ca-0) (static-key static-key-1) (ra ra-1))
  (precedes ((0 2) (4 2)) ((1 0) (2 0)) ((1 0) (6 0)) ((1 3) (0 0))
    ((2 1) (1 1)) ((2 1) (4 1)) ((3 1) (0 1)) ((3 1) (5 1))
    ((4 3) (0 3)) ((5 0) (6 0)) ((5 3) (4 0)) ((6 1) (4 1))
    ((7 0) (3 0)) ((7 3) (6 0)))
  (non-orig (privk "sig" self) (privk "sig" ca-0))
  (uniq-orig serial-a serial-b n)
  (uniq-gen ra ra-0 ra-1)
  (gen-st (cat "privkey" a ra serial-a ca-0)
    (cat "privkey" self ra-0 serial-b ca))
  (facts (neq a self) (neq self a))
  (rule fact-resp-neq0 trRl_get-cert-at-2 trRl_get-cert-at-3)
  (operation nonce-test (displaced 4 8 get-cert 4) ra-1 (7 0))
  (traces
    ((load static-key (cat pt "privkey" a ra serial-a ca-0))
      (recv
        (sig (cert self (exp (gen) ra-1) ca-0 serial-b)
          (privk "sig" ca-0)))
      (send (enc n a self serial-a serial-b (exp (gen) (mul ra ra-1))))
      (recv n))
    ((send (sig (cert-req a (exp (gen) ra) ca-0) (privk "sig" a)))
      (recv
        (sig (cert a (exp (gen) ra) ca-0 serial-a) (privk "sig" ca-0)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" a ra serial-a ca-0)))
    ((recv (sig (cert-req a (exp (gen) ra) ca-0) (privk "sig" a)))
      (send
        (sig (cert a (exp (gen) ra) ca-0 serial-a) (privk "sig" ca-0))))
    ((recv
       (sig (cert-req self (exp (gen) ra-1) ca-0) (privk "sig" self)))
      (send
        (sig (cert self (exp (gen) ra-1) ca-0 serial-b)
          (privk "sig" ca-0))))
    ((load static-key-0 (cat pt-1 "privkey" self ra-0 serial-b ca))
      (recv
        (sig (cert a (exp (gen) (mul ra (rec ra-0) ra-1)) ca serial-a)
          (privk "sig" ca)))
      (recv (enc n a self serial-a serial-b (exp (gen) (mul ra ra-1))))
      (send n))
    ((send (sig (cert-req self (exp (gen) ra-0) ca) (privk "sig" self)))
      (recv
        (sig (cert self (exp (gen) ra-0) ca serial-b) (privk "sig" ca)))
      (load static-key-0 (cat pt-2 ignore-0))
      (stor static-key-0 (cat pt-1 "privkey" self ra-0 serial-b ca)))
    ((recv (cat (exp (gen) (mul ra (rec ra-0))) ra-1))
      (send (cat (exp (gen) (mul ra (rec ra-0))) ra-1)))
    ((send
       (sig (cert-req self (exp (gen) ra-1) ca-0) (privk "sig" self)))
      (recv
        (sig (cert self (exp (gen) ra-1) ca-0 serial)
          (privk "sig" ca-0))) (load static-key-1 (cat pt-3 ignore-1))
      (stor static-key-1 (cat pt-4 "privkey" self ra-1 serial ca-0))))
  (label 48)
  (parent 38)
  (unrealized (6 0) (7 1))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhstatic-state
  (vars (ignore ignore-0 mesg) (serial-a serial-b data) (n text)
    (ca b a ca-0 name) (pt pt-0 pt-1 pt-2 pval)
    (static-key static-key-0 locn) (ra ra-0 ra-1 rndx))
  (defstrand init 4 (serial-a serial-a) (serial-b serial-b) (n n) (a a)
    (b b) (ca ca) (galpha (exp (gen) ra)) (static-key static-key)
    (ra ra-1))
  (defstrand get-cert 4 (ignore ignore) (serial serial-a) (self a)
    (ca ca) (static-key static-key) (ra ra-1))
  (defstrand cert 2 (galpha (exp (gen) ra-1)) (serial serial-a) (subj a)
    (ca ca))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-b) (subj b)
    (ca ca))
  (defstrand get-cert 1 (self b) (ca ca) (ra ra))
  (defstrand resp 4 (serial-b serial-b) (serial-a serial-a) (n n) (a a)
    (b b) (ca ca-0) (galpha (exp (gen) (mul ra (rec ra-0) ra-1)))
    (static-key static-key-0) (rb ra-0))
  (defstrand get-cert 4 (ignore ignore-0) (serial serial-b) (self b)
    (ca ca-0) (static-key static-key-0) (ra ra-0))
  (deflistener (cat (exp (gen) (mul ra (rec ra-0))) ra-1))
  (precedes ((0 2) (5 2)) ((1 0) (2 0)) ((1 3) (0 0)) ((1 3) (7 0))
    ((2 1) (1 1)) ((3 1) (0 1)) ((3 1) (6 1)) ((4 0) (3 0))
    ((4 0) (7 0)) ((5 3) (0 3)) ((6 0) (7 0)) ((6 3) (5 0))
    ((7 1) (5 1)))
  (non-orig (privk "sig" ca) (privk "sig" b))
  (uniq-orig serial-a serial-b n)
  (uniq-gen ra ra-0 ra-1)
  (gen-st (cat "privkey" b ra-0 serial-b ca-0)
    (cat "privkey" a ra-1 serial-a ca))
  (facts (neq a b) (neq b a))
  (rule fact-resp-neq0 trRl_get-cert-at-2 trRl_get-cert-at-3)
  (operation nonce-test (displaced 8 1 get-cert 4) ra-1 (7 0))
  (traces
    ((load static-key (cat pt "privkey" a ra-1 serial-a ca))
      (recv (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca)))
      (send (enc n a b serial-a serial-b (exp (gen) (mul ra ra-1))))
      (recv n))
    ((send (sig (cert-req a (exp (gen) ra-1) ca) (privk "sig" a)))
      (recv
        (sig (cert a (exp (gen) ra-1) ca serial-a) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" a ra-1 serial-a ca)))
    ((recv (sig (cert-req a (exp (gen) ra-1) ca) (privk "sig" a)))
      (send
        (sig (cert a (exp (gen) ra-1) ca serial-a) (privk "sig" ca))))
    ((recv (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (send (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca))))
    ((send (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b))))
    ((load static-key-0 (cat pt-1 "privkey" b ra-0 serial-b ca-0))
      (recv
        (sig (cert a (exp (gen) (mul ra (rec ra-0) ra-1)) ca-0 serial-a)
          (privk "sig" ca-0)))
      (recv (enc n a b serial-a serial-b (exp (gen) (mul ra ra-1))))
      (send n))
    ((send (sig (cert-req b (exp (gen) ra-0) ca-0) (privk "sig" b)))
      (recv
        (sig (cert b (exp (gen) ra-0) ca-0 serial-b)
          (privk "sig" ca-0))) (load static-key-0 (cat pt-2 ignore-0))
      (stor static-key-0 (cat pt-1 "privkey" b ra-0 serial-b ca-0)))
    ((recv (cat (exp (gen) (mul ra (rec ra-0))) ra-1))
      (send (cat (exp (gen) (mul ra (rec ra-0))) ra-1))))
  (label 49)
  (parent 39)
  (unrealized (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhstatic-state
  (vars (ignore ignore-0 mesg) (serial-a serial-b data) (n text)
    (a self ca name) (pt pt-0 pt-1 pt-2 pval)
    (static-key static-key-0 locn) (ra ra-0 rndx))
  (defstrand init 4 (serial-a serial-a) (serial-b serial-b) (n n) (a a)
    (b self) (ca ca) (galpha (exp (gen) ra-0)) (static-key static-key)
    (ra ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-a) (self a)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-a) (subj a)
    (ca ca))
  (defstrand cert 2 (galpha (exp (gen) ra-0)) (serial serial-b)
    (subj self) (ca ca))
  (deflistener (exp (gen) (mul ra ra-0)))
  (deflistener (cat (exp (gen) ra) ra-0))
  (defstrand get-cert 4 (ignore ignore-0) (serial serial-b) (self self)
    (ca ca) (static-key static-key-0) (ra ra-0))
  (precedes ((1 0) (2 0)) ((1 0) (5 0)) ((1 3) (0 0)) ((2 1) (1 1))
    ((3 1) (0 1)) ((3 1) (6 1)) ((4 1) (0 3)) ((5 1) (4 0))
    ((6 0) (3 0)) ((6 3) (5 0)))
  (non-orig (privk "sig" self) (privk "sig" ca))
  (uniq-orig serial-a serial-b n)
  (uniq-gen ra ra-0)
  (gen-st (cat "privkey" a ra serial-a ca))
  (facts (neq a self) (neq self a))
  (rule fact-init-neq0 fact-resp-neq0 trRl_get-cert-at-2
    trRl_get-cert-at-3)
  (operation encryption-test (displaced 7 3 cert 2)
    (sig (cert self (exp (gen) ra-0) ca serial) (privk "sig" ca)) (6 1))
  (traces
    ((load static-key (cat pt "privkey" a ra serial-a ca))
      (recv
        (sig (cert self (exp (gen) ra-0) ca serial-b) (privk "sig" ca)))
      (send (enc n a self serial-a serial-b (exp (gen) (mul ra ra-0))))
      (recv n))
    ((send (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (recv (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" a ra serial-a ca)))
    ((recv (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (send (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca))))
    ((recv (sig (cert-req self (exp (gen) ra-0) ca) (privk "sig" self)))
      (send
        (sig (cert self (exp (gen) ra-0) ca serial-b)
          (privk "sig" ca))))
    ((recv (exp (gen) (mul ra ra-0))) (send (exp (gen) (mul ra ra-0))))
    ((recv (cat (exp (gen) ra) ra-0)) (send (cat (exp (gen) ra) ra-0)))
    ((send (sig (cert-req self (exp (gen) ra-0) ca) (privk "sig" self)))
      (recv
        (sig (cert self (exp (gen) ra-0) ca serial-b) (privk "sig" ca)))
      (load static-key-0 (cat pt-1 ignore-0))
      (stor static-key-0 (cat pt-2 "privkey" self ra-0 serial-b ca))))
  (label 50)
  (parent 40)
  (unrealized (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhstatic-state
  (vars (ignore ignore-0 mesg) (serial-a serial-b serial data) (n text)
    (a self ca name) (pt pt-0 pt-1 pt-2 pval)
    (static-key static-key-0 locn) (ra ra-0 rndx))
  (defstrand init 4 (serial-a serial-a) (serial-b serial-b) (n n) (a a)
    (b self) (ca ca) (galpha (exp (gen) ra-0)) (static-key static-key)
    (ra ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-a) (self a)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-a) (subj a)
    (ca ca))
  (defstrand cert 2 (galpha (exp (gen) ra-0)) (serial serial-b)
    (subj self) (ca ca))
  (deflistener (exp (gen) (mul ra ra-0)))
  (deflistener (cat (exp (gen) ra) ra-0))
  (defstrand get-cert 4 (ignore ignore-0) (serial serial) (self self)
    (ca ca) (static-key static-key-0) (ra ra-0))
  (defstrand cert 2 (galpha (exp (gen) ra-0)) (serial serial)
    (subj self) (ca ca))
  (precedes ((1 0) (2 0)) ((1 0) (5 0)) ((1 3) (0 0)) ((2 1) (1 1))
    ((3 1) (0 1)) ((4 1) (0 3)) ((5 1) (4 0)) ((6 0) (3 0))
    ((6 0) (7 0)) ((6 3) (5 0)) ((7 1) (6 1)))
  (non-orig (privk "sig" self) (privk "sig" ca))
  (uniq-orig serial-a serial-b serial n)
  (uniq-gen ra ra-0)
  (gen-st (cat "privkey" a ra serial-a ca))
  (facts (neq a self) (neq self a))
  (rule fact-init-neq0 fact-resp-neq0 trRl_get-cert-at-2
    trRl_get-cert-at-3)
  (operation encryption-test (added-strand cert 2)
    (sig (cert self (exp (gen) ra-0) ca serial) (privk "sig" ca)) (6 1))
  (traces
    ((load static-key (cat pt "privkey" a ra serial-a ca))
      (recv
        (sig (cert self (exp (gen) ra-0) ca serial-b) (privk "sig" ca)))
      (send (enc n a self serial-a serial-b (exp (gen) (mul ra ra-0))))
      (recv n))
    ((send (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (recv (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" a ra serial-a ca)))
    ((recv (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (send (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca))))
    ((recv (sig (cert-req self (exp (gen) ra-0) ca) (privk "sig" self)))
      (send
        (sig (cert self (exp (gen) ra-0) ca serial-b)
          (privk "sig" ca))))
    ((recv (exp (gen) (mul ra ra-0))) (send (exp (gen) (mul ra ra-0))))
    ((recv (cat (exp (gen) ra) ra-0)) (send (cat (exp (gen) ra) ra-0)))
    ((send (sig (cert-req self (exp (gen) ra-0) ca) (privk "sig" self)))
      (recv
        (sig (cert self (exp (gen) ra-0) ca serial) (privk "sig" ca)))
      (load static-key-0 (cat pt-1 ignore-0))
      (stor static-key-0 (cat pt-2 "privkey" self ra-0 serial ca)))
    ((recv (sig (cert-req self (exp (gen) ra-0) ca) (privk "sig" self)))
      (send
        (sig (cert self (exp (gen) ra-0) ca serial) (privk "sig" ca)))))
  (label 51)
  (parent 40)
  (unrealized (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhstatic-state
  (vars (ignore mesg) (serial-a serial-b data) (n text) (ca a name)
    (pt pt-0 pval) (static-key locn) (ra rndx))
  (defstrand init 4 (serial-a serial-a) (serial-b serial-b) (n n) (a a)
    (b a) (ca ca) (galpha (exp (gen) ra)) (static-key static-key)
    (ra ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-a) (self a)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-a) (subj a)
    (ca ca))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-b) (subj a)
    (ca ca))
  (deflistener (exp (gen) (mul ra ra)))
  (deflistener (cat (gen) (mul ra ra)))
  (deflistener ra)
  (precedes ((1 0) (2 0)) ((1 0) (3 0)) ((1 3) (0 0)) ((1 3) (6 0))
    ((2 1) (1 1)) ((3 1) (0 1)) ((4 1) (0 3)) ((5 1) (4 0))
    ((6 1) (5 0)))
  (non-orig (privk "sig" ca) (privk "sig" a))
  (uniq-orig serial-a serial-b n)
  (uniq-gen ra)
  (precur (5 0))
  (gen-st (cat "privkey" a ra serial-a ca))
  (facts (neq a a))
  (rule fact-resp-neq0 trRl_get-cert-at-2 trRl_get-cert-at-3)
  (operation nonce-test (displaced 7 1 get-cert 4) ra (6 0))
  (traces
    ((load static-key (cat pt "privkey" a ra serial-a ca))
      (recv (sig (cert a (exp (gen) ra) ca serial-b) (privk "sig" ca)))
      (send (enc n a a serial-a serial-b (exp (gen) (mul ra ra))))
      (recv n))
    ((send (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (recv (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" a ra serial-a ca)))
    ((recv (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (send (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca))))
    ((recv (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (send (sig (cert a (exp (gen) ra) ca serial-b) (privk "sig" ca))))
    ((recv (exp (gen) (mul ra ra))) (send (exp (gen) (mul ra ra))))
    ((recv (cat (gen) (mul ra ra))) (send (cat (gen) (mul ra ra))))
    ((recv ra) (send ra)))
  (label 52)
  (parent 45)
  (unrealized (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhstatic-state
  (vars (ignore ignore-0 ignore-1 mesg) (serial-a serial-b data)
    (n text) (a ca self ca-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (static-key static-key-0 static-key-1 locn) (ra ra-0 ra-1 rndx))
  (defstrand init 4 (serial-a serial-a) (serial-b serial-b) (n n) (a a)
    (b self) (ca ca-0) (galpha (exp (gen) ra-1)) (static-key static-key)
    (ra ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-a) (self a)
    (ca ca-0) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-a) (subj a)
    (ca ca-0))
  (defstrand cert 2 (galpha (exp (gen) ra-1)) (serial serial-b)
    (subj self) (ca ca-0))
  (defstrand resp 4 (serial-b serial-b) (serial-a serial-a) (n n) (a a)
    (b self) (ca ca) (galpha (exp (gen) (mul ra (rec ra-0) ra-1)))
    (static-key static-key-0) (rb ra-0))
  (defstrand get-cert 4 (ignore ignore-0) (serial serial-b) (self self)
    (ca ca) (static-key static-key-0) (ra ra-0))
  (deflistener (cat (exp (gen) (mul ra (rec ra-0))) ra-1))
  (defstrand get-cert 4 (ignore ignore-1) (serial serial-b) (self self)
    (ca ca-0) (static-key static-key-1) (ra ra-1))
  (precedes ((0 2) (4 2)) ((1 0) (2 0)) ((1 0) (6 0)) ((1 3) (0 0))
    ((2 1) (1 1)) ((2 1) (4 1)) ((3 1) (0 1)) ((3 1) (5 1))
    ((3 1) (7 1)) ((4 3) (0 3)) ((5 0) (6 0)) ((5 3) (4 0))
    ((6 1) (4 1)) ((7 0) (3 0)) ((7 3) (6 0)))
  (non-orig (privk "sig" self) (privk "sig" ca-0))
  (uniq-orig serial-a serial-b n)
  (uniq-gen ra ra-0 ra-1)
  (gen-st (cat "privkey" a ra serial-a ca-0)
    (cat "privkey" self ra-0 serial-b ca))
  (facts (neq a self) (neq self a))
  (rule fact-resp-neq0 trRl_get-cert-at-2 trRl_get-cert-at-3)
  (operation encryption-test (displaced 8 3 cert 2)
    (sig (cert self (exp (gen) ra-1) ca-0 serial) (privk "sig" ca-0))
    (7 1))
  (traces
    ((load static-key (cat pt "privkey" a ra serial-a ca-0))
      (recv
        (sig (cert self (exp (gen) ra-1) ca-0 serial-b)
          (privk "sig" ca-0)))
      (send (enc n a self serial-a serial-b (exp (gen) (mul ra ra-1))))
      (recv n))
    ((send (sig (cert-req a (exp (gen) ra) ca-0) (privk "sig" a)))
      (recv
        (sig (cert a (exp (gen) ra) ca-0 serial-a) (privk "sig" ca-0)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" a ra serial-a ca-0)))
    ((recv (sig (cert-req a (exp (gen) ra) ca-0) (privk "sig" a)))
      (send
        (sig (cert a (exp (gen) ra) ca-0 serial-a) (privk "sig" ca-0))))
    ((recv
       (sig (cert-req self (exp (gen) ra-1) ca-0) (privk "sig" self)))
      (send
        (sig (cert self (exp (gen) ra-1) ca-0 serial-b)
          (privk "sig" ca-0))))
    ((load static-key-0 (cat pt-1 "privkey" self ra-0 serial-b ca))
      (recv
        (sig (cert a (exp (gen) (mul ra (rec ra-0) ra-1)) ca serial-a)
          (privk "sig" ca)))
      (recv (enc n a self serial-a serial-b (exp (gen) (mul ra ra-1))))
      (send n))
    ((send (sig (cert-req self (exp (gen) ra-0) ca) (privk "sig" self)))
      (recv
        (sig (cert self (exp (gen) ra-0) ca serial-b) (privk "sig" ca)))
      (load static-key-0 (cat pt-2 ignore-0))
      (stor static-key-0 (cat pt-1 "privkey" self ra-0 serial-b ca)))
    ((recv (cat (exp (gen) (mul ra (rec ra-0))) ra-1))
      (send (cat (exp (gen) (mul ra (rec ra-0))) ra-1)))
    ((send
       (sig (cert-req self (exp (gen) ra-1) ca-0) (privk "sig" self)))
      (recv
        (sig (cert self (exp (gen) ra-1) ca-0 serial-b)
          (privk "sig" ca-0))) (load static-key-1 (cat pt-3 ignore-1))
      (stor static-key-1 (cat pt-4 "privkey" self ra-1 serial-b ca-0))))
  (label 53)
  (parent 48)
  (unrealized (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhstatic-state
  (vars (ignore ignore-0 ignore-1 mesg) (serial-a serial-b serial data)
    (n text) (a ca self ca-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (static-key static-key-0 static-key-1 locn) (ra ra-0 ra-1 rndx))
  (defstrand init 4 (serial-a serial-a) (serial-b serial-b) (n n) (a a)
    (b self) (ca ca-0) (galpha (exp (gen) ra-1)) (static-key static-key)
    (ra ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-a) (self a)
    (ca ca-0) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-a) (subj a)
    (ca ca-0))
  (defstrand cert 2 (galpha (exp (gen) ra-1)) (serial serial-b)
    (subj self) (ca ca-0))
  (defstrand resp 4 (serial-b serial-b) (serial-a serial-a) (n n) (a a)
    (b self) (ca ca) (galpha (exp (gen) (mul ra (rec ra-0) ra-1)))
    (static-key static-key-0) (rb ra-0))
  (defstrand get-cert 4 (ignore ignore-0) (serial serial-b) (self self)
    (ca ca) (static-key static-key-0) (ra ra-0))
  (deflistener (cat (exp (gen) (mul ra (rec ra-0))) ra-1))
  (defstrand get-cert 4 (ignore ignore-1) (serial serial) (self self)
    (ca ca-0) (static-key static-key-1) (ra ra-1))
  (defstrand cert 2 (galpha (exp (gen) ra-1)) (serial serial)
    (subj self) (ca ca-0))
  (precedes ((0 2) (4 2)) ((1 0) (2 0)) ((1 0) (6 0)) ((1 3) (0 0))
    ((2 1) (1 1)) ((2 1) (4 1)) ((3 1) (0 1)) ((3 1) (5 1))
    ((4 3) (0 3)) ((5 0) (6 0)) ((5 3) (4 0)) ((6 1) (4 1))
    ((7 0) (3 0)) ((7 0) (8 0)) ((7 3) (6 0)) ((8 1) (7 1)))
  (non-orig (privk "sig" self) (privk "sig" ca-0))
  (uniq-orig serial-a serial-b serial n)
  (uniq-gen ra ra-0 ra-1)
  (gen-st (cat "privkey" a ra serial-a ca-0)
    (cat "privkey" self ra-0 serial-b ca))
  (facts (neq a self) (neq self a))
  (rule fact-resp-neq0 trRl_get-cert-at-2 trRl_get-cert-at-3)
  (operation encryption-test (added-strand cert 2)
    (sig (cert self (exp (gen) ra-1) ca-0 serial) (privk "sig" ca-0))
    (7 1))
  (traces
    ((load static-key (cat pt "privkey" a ra serial-a ca-0))
      (recv
        (sig (cert self (exp (gen) ra-1) ca-0 serial-b)
          (privk "sig" ca-0)))
      (send (enc n a self serial-a serial-b (exp (gen) (mul ra ra-1))))
      (recv n))
    ((send (sig (cert-req a (exp (gen) ra) ca-0) (privk "sig" a)))
      (recv
        (sig (cert a (exp (gen) ra) ca-0 serial-a) (privk "sig" ca-0)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" a ra serial-a ca-0)))
    ((recv (sig (cert-req a (exp (gen) ra) ca-0) (privk "sig" a)))
      (send
        (sig (cert a (exp (gen) ra) ca-0 serial-a) (privk "sig" ca-0))))
    ((recv
       (sig (cert-req self (exp (gen) ra-1) ca-0) (privk "sig" self)))
      (send
        (sig (cert self (exp (gen) ra-1) ca-0 serial-b)
          (privk "sig" ca-0))))
    ((load static-key-0 (cat pt-1 "privkey" self ra-0 serial-b ca))
      (recv
        (sig (cert a (exp (gen) (mul ra (rec ra-0) ra-1)) ca serial-a)
          (privk "sig" ca)))
      (recv (enc n a self serial-a serial-b (exp (gen) (mul ra ra-1))))
      (send n))
    ((send (sig (cert-req self (exp (gen) ra-0) ca) (privk "sig" self)))
      (recv
        (sig (cert self (exp (gen) ra-0) ca serial-b) (privk "sig" ca)))
      (load static-key-0 (cat pt-2 ignore-0))
      (stor static-key-0 (cat pt-1 "privkey" self ra-0 serial-b ca)))
    ((recv (cat (exp (gen) (mul ra (rec ra-0))) ra-1))
      (send (cat (exp (gen) (mul ra (rec ra-0))) ra-1)))
    ((send
       (sig (cert-req self (exp (gen) ra-1) ca-0) (privk "sig" self)))
      (recv
        (sig (cert self (exp (gen) ra-1) ca-0 serial)
          (privk "sig" ca-0))) (load static-key-1 (cat pt-3 ignore-1))
      (stor static-key-1 (cat pt-4 "privkey" self ra-1 serial ca-0)))
    ((recv
       (sig (cert-req self (exp (gen) ra-1) ca-0) (privk "sig" self)))
      (send
        (sig (cert self (exp (gen) ra-1) ca-0 serial)
          (privk "sig" ca-0)))))
  (label 54)
  (parent 48)
  (unrealized (6 0))
  (dead)
  (comment "empty cohort"))

(comment "Nothing left to do")

(defprotocol dhstatic-state diffie-hellman
  (defrole cert
    (vars (subj ca name) (serial data) (galpha mesg))
    (trace (recv (sig (cert-req subj galpha ca) (privk "sig" subj)))
      (send (sig (cert subj galpha ca serial) (privk "sig" ca))))
    (uniq-orig serial)
    (comment "Certificate Authority"))
  (defrole get-cert
    (vars (self ca name) (serial data) (ra rndx) (static-key locn)
      (ignore mesg))
    (trace
      (send (sig (cert-req self (exp (gen) ra) ca) (privk "sig" self)))
      (recv (sig (cert self (exp (gen) ra) ca serial) (privk "sig" ca)))
      (load static-key ignore)
      (stor static-key (cat "privkey" self ra serial ca)))
    (uniq-gen ra)
    (comment "Get certified"))
  (defrole init
    (vars (a b ca name) (ra rndx) (serial-a serial-b data) (galpha base)
      (n text) (static-key locn))
    (trace (load static-key (cat "privkey" a ra serial-a ca))
      (recv (sig (cert b galpha ca serial-b) (privk "sig" ca)))
      (send (enc n a b serial-a serial-b (exp galpha ra))) (recv n))
    (uniq-orig n)
    (gen-st (cat "privkey" a ra serial-a ca))
    (facts (neq a b))
    (comment "Initiator is A"))
  (defrole resp
    (vars (a b ca name) (rb rndx) (serial-b serial-a data) (galpha base)
      (n text) (static-key locn))
    (trace (load static-key (cat "privkey" b rb serial-b ca))
      (recv (sig (cert a galpha ca serial-a) (privk "sig" ca)))
      (recv (enc n a b serial-a serial-b (exp galpha rb))) (send n))
    (facts (neq a b))
    (gen-st (cat "privkey" b rb serial-b ca))
    (comment "Responder is B"))
  (defgenrule neqRl_indx
    (forall ((x indx)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_strd
    (forall ((x strd)) (implies (fact neq x x) (false))))
  (defgenrule neqRl_mesg
    (forall ((x mesg)) (implies (fact neq x x) (false))))
  (defgenrule scissorsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (trans z2 i2)
          (leads-to z0 i0 z1 i1) (leads-to z0 i0 z2 i2))
        (and (= z1 z2) (= i1 i2)))))
  (defgenrule cakeRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (leads-to z0 i0 z1 i1)
          (leads-to z0 i0 z2 i2) (prec z1 i1 z2 i2)) (false))))
  (defgenrule no-interruption
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (leads-to z0 i0 z2 i2) (trans z1 i1)
          (same-locn z0 i0 z1 i1) (prec z0 i0 z1 i1) (prec z1 i1 z2 i2))
        (false))))
  (defgenrule shearsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (trans z2 i2)
          (leads-to z0 i0 z1 i1) (same-locn z0 i0 z2 i2)
          (prec z0 i0 z2 i2))
        (or (and (= z1 z2) (= i1 i2)) (prec z1 i1 z2 i2)))))
  (defgenrule invShearsRule
    (forall ((z0 z1 z2 strd) (i0 i1 i2 indx))
      (implies
        (and (trans z0 i0) (trans z1 i1) (same-locn z0 i0 z1 i1)
          (leads-to z1 i1 z2 i2) (prec z0 i0 z2 i2))
        (or (and (= z0 z1) (= i0 i1)) (prec z0 i0 z1 i1)))))
  (defgenrule fact-init-neq0
    (forall ((z strd) (b a name))
      (implies
        (and (p "init" z 2) (p "init" "b" z b) (p "init" "a" z a))
        (fact neq a b))))
  (defgenrule fact-resp-neq0
    (forall ((z strd) (b a name))
      (implies
        (and (p "resp" z 2) (p "resp" "b" z b) (p "resp" "a" z a))
        (fact neq a b))))
  (defgenrule trRl_get-cert-at-3
    (forall ((z strd)) (implies (p "get-cert" z 4) (trans z 3))))
  (defgenrule trRl_get-cert-at-2
    (forall ((z strd)) (implies (p "get-cert" z 4) (trans z 2))))
  (defgenrule gen-st-init-0
    (forall ((z strd) (serial-a data) (ra rndx) (ca a name))
      (implies
        (and (p "init" z 1) (p "init" "serial-a" z serial-a)
          (p "init" "ra" z ra) (p "init" "ca" z ca) (p "init" "a" z a))
        (gen-st (cat "privkey" a ra serial-a ca)))))
  (defgenrule gen-st-resp-0
    (forall ((z strd) (serial-b data) (rb rndx) (ca b name))
      (implies
        (and (p "resp" z 1) (p "resp" "serial-b" z serial-b)
          (p "resp" "rb" z rb) (p "resp" "ca" z ca) (p "resp" "b" z b))
        (gen-st (cat "privkey" b rb serial-b ca)))))
  (lang (cert-req (tupl 3)) (cert (tupl 4)) (sig sign)))

(defskeleton dhstatic-state
  (vars (serial-b serial-a data) (n text) (ca a b name) (pt pval)
    (galpha base) (static-key locn) (rb rndx))
  (defstrand resp 4 (serial-b serial-b) (serial-a serial-a) (n n) (a a)
    (b b) (ca ca) (galpha galpha) (static-key static-key) (rb rb))
  (non-orig (privk "sig" ca) (privk "sig" a))
  (traces
    ((load static-key (cat pt "privkey" b rb serial-b ca))
      (recv (sig (cert a galpha ca serial-a) (privk "sig" ca)))
      (recv (enc n a b serial-a serial-b (exp galpha rb))) (send n)))
  (label 55)
  (unrealized (0 1))
  (origs)
  (comment "Not closed under rules"))

(defskeleton dhstatic-state
  (vars (serial-b serial-a data) (n text) (ca a b name) (pt pval)
    (galpha base) (static-key locn) (rb rndx))
  (defstrand resp 4 (serial-b serial-b) (serial-a serial-a) (n n) (a a)
    (b b) (ca ca) (galpha galpha) (static-key static-key) (rb rb))
  (non-orig (privk "sig" ca) (privk "sig" a))
  (gen-st (cat "privkey" b rb serial-b ca))
  (facts (neq b a) (neq a b))
  (rule fact-init-neq0 fact-resp-neq0 gen-st-resp-0)
  (traces
    ((load static-key (cat pt "privkey" b rb serial-b ca))
      (recv (sig (cert a galpha ca serial-a) (privk "sig" ca)))
      (recv (enc n a b serial-a serial-b (exp galpha rb))) (send n)))
  (label 56)
  (parent 55)
  (unrealized (0 0) (0 1))
  (origs)
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhstatic-state
  (vars (ignore mesg) (serial-b serial-a data) (n text) (ca a b name)
    (pt pt-0 pval) (galpha base) (static-key locn) (ra rndx))
  (defstrand resp 4 (serial-b serial-b) (serial-a serial-a) (n n) (a a)
    (b b) (ca ca) (galpha galpha) (static-key static-key) (rb ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-b) (self b)
    (ca ca) (static-key static-key) (ra ra))
  (precedes ((1 3) (0 0)))
  (non-orig (privk "sig" ca) (privk "sig" a))
  (uniq-gen ra)
  (gen-st (cat "privkey" b ra serial-b ca))
  (facts (neq b a) (neq a b))
  (rule fact-init-neq0 fact-resp-neq0 trRl_get-cert-at-2
    trRl_get-cert-at-3)
  (operation channel-test (added-strand get-cert 4)
    (ch-msg static-key (cat pt "privkey" b ra serial-b ca)) (0 0))
  (traces
    ((load static-key (cat pt "privkey" b ra serial-b ca))
      (recv (sig (cert a galpha ca serial-a) (privk "sig" ca)))
      (recv (enc n a b serial-a serial-b (exp galpha ra))) (send n))
    ((send (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (recv (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" b ra serial-b ca))))
  (label 57)
  (parent 56)
  (unrealized (0 1) (0 2) (1 1))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhstatic-state
  (vars (ignore mesg) (serial-b serial-a data) (n text) (ca a b name)
    (pt pt-0 pval) (galpha base) (static-key locn) (ra rndx))
  (defstrand resp 4 (serial-b serial-b) (serial-a serial-a) (n n) (a a)
    (b b) (ca ca) (galpha galpha) (static-key static-key) (rb ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-b) (self b)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-b) (subj b)
    (ca ca))
  (precedes ((1 0) (2 0)) ((1 3) (0 0)) ((2 1) (1 1)))
  (non-orig (privk "sig" ca) (privk "sig" a))
  (uniq-orig serial-b)
  (uniq-gen ra)
  (gen-st (cat "privkey" b ra serial-b ca))
  (facts (neq b a) (neq a b))
  (rule fact-init-neq0 fact-resp-neq0 trRl_get-cert-at-2
    trRl_get-cert-at-3)
  (operation encryption-test (added-strand cert 2)
    (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca)) (1 1))
  (traces
    ((load static-key (cat pt "privkey" b ra serial-b ca))
      (recv (sig (cert a galpha ca serial-a) (privk "sig" ca)))
      (recv (enc n a b serial-a serial-b (exp galpha ra))) (send n))
    ((send (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (recv (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" b ra serial-b ca)))
    ((recv (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (send
        (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca)))))
  (label 58)
  (parent 57)
  (unrealized (0 1) (0 2))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhstatic-state
  (vars (ignore mesg) (serial-b data) (n text) (ca b name)
    (pt pt-0 pval) (static-key locn) (ra rndx))
  (defstrand resp 4 (serial-b serial-b) (serial-a serial-b) (n n) (a b)
    (b b) (ca ca) (galpha (exp (gen) ra)) (static-key static-key)
    (rb ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-b) (self b)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-b) (subj b)
    (ca ca))
  (precedes ((1 0) (2 0)) ((1 3) (0 0)) ((2 1) (1 1)))
  (non-orig (privk "sig" ca) (privk "sig" b))
  (uniq-orig serial-b)
  (uniq-gen ra)
  (gen-st (cat "privkey" b ra serial-b ca))
  (facts (neq b b))
  (rule fact-resp-neq0 trRl_get-cert-at-2 trRl_get-cert-at-3)
  (operation encryption-test (displaced 3 2 cert 2)
    (sig (cert a galpha ca serial-a) (privk "sig" ca)) (0 1))
  (traces
    ((load static-key (cat pt "privkey" b ra serial-b ca))
      (recv (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca)))
      (recv (enc n b b serial-b serial-b (exp (gen) (mul ra ra))))
      (send n))
    ((send (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (recv (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" b ra serial-b ca)))
    ((recv (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (send
        (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca)))))
  (label 59)
  (parent 58)
  (unrealized (0 2))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhstatic-state
  (vars (ignore mesg) (serial-b serial-a data) (n text) (ca a b name)
    (pt pt-0 pval) (galpha base) (static-key locn) (ra rndx))
  (defstrand resp 4 (serial-b serial-b) (serial-a serial-a) (n n) (a a)
    (b b) (ca ca) (galpha galpha) (static-key static-key) (rb ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-b) (self b)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-b) (subj b)
    (ca ca))
  (defstrand cert 2 (galpha galpha) (serial serial-a) (subj a) (ca ca))
  (precedes ((1 0) (2 0)) ((1 3) (0 0)) ((2 1) (1 1)) ((3 1) (0 1)))
  (non-orig (privk "sig" ca) (privk "sig" a))
  (uniq-orig serial-b serial-a)
  (uniq-gen ra)
  (gen-st (cat "privkey" b ra serial-b ca))
  (facts (neq b a) (neq a b))
  (rule fact-init-neq0 fact-resp-neq0 trRl_get-cert-at-2
    trRl_get-cert-at-3)
  (operation encryption-test (added-strand cert 2)
    (sig (cert a galpha ca serial-a) (privk "sig" ca)) (0 1))
  (traces
    ((load static-key (cat pt "privkey" b ra serial-b ca))
      (recv (sig (cert a galpha ca serial-a) (privk "sig" ca)))
      (recv (enc n a b serial-a serial-b (exp galpha ra))) (send n))
    ((send (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (recv (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" b ra serial-b ca)))
    ((recv (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (send (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca))))
    ((recv (sig (cert-req a galpha ca) (privk "sig" a)))
      (send (sig (cert a galpha ca serial-a) (privk "sig" ca)))))
  (label 60)
  (parent 58)
  (unrealized (0 2) (3 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhstatic-state
  (vars (ignore mesg) (serial-b data) (n text) (ca b ca-0 name)
    (pt pt-0 pt-1 pval) (static-key static-key-0 locn) (ra ra-0 rndx))
  (defstrand resp 4 (serial-b serial-b) (serial-a serial-b) (n n) (a b)
    (b b) (ca ca) (galpha (exp (gen) ra)) (static-key static-key)
    (rb ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-b) (self b)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-b) (subj b)
    (ca ca))
  (defstrand init 3 (serial-a serial-b) (serial-b serial-b) (n n) (a b)
    (b b) (ca ca-0) (galpha (exp (gen) (mul ra ra (rec ra-0))))
    (static-key static-key-0) (ra ra-0))
  (precedes ((1 0) (2 0)) ((1 3) (0 0)) ((2 1) (1 1)) ((2 1) (3 0))
    ((3 2) (0 2)))
  (non-orig (privk "sig" ca) (privk "sig" b))
  (uniq-orig serial-b n)
  (uniq-gen ra)
  (gen-st (cat "privkey" b ra serial-b ca)
    (cat "privkey" b ra-0 serial-b ca-0))
  (facts (neq b b))
  (rule fact-resp-neq0 gen-st-resp-0 trRl_get-cert-at-2
    trRl_get-cert-at-3)
  (operation encryption-test (added-strand init 3)
    (enc n b b serial-b serial-b (exp (gen) (mul ra ra))) (0 2))
  (traces
    ((load static-key (cat pt "privkey" b ra serial-b ca))
      (recv (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca)))
      (recv (enc n b b serial-b serial-b (exp (gen) (mul ra ra))))
      (send n))
    ((send (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (recv (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" b ra serial-b ca)))
    ((recv (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (send (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca))))
    ((load static-key-0 (cat pt-1 "privkey" b ra-0 serial-b ca-0))
      (recv
        (sig (cert b (exp (gen) (mul ra ra (rec ra-0))) ca-0 serial-b)
          (privk "sig" ca-0)))
      (send (enc n b b serial-b serial-b (exp (gen) (mul ra ra))))))
  (label 61)
  (parent 59)
  (unrealized (3 0) (3 1))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhstatic-state
  (vars (ignore mesg) (serial-b data) (n text) (ca b name)
    (pt pt-0 pval) (static-key locn) (ra rndx))
  (defstrand resp 4 (serial-b serial-b) (serial-a serial-b) (n n) (a b)
    (b b) (ca ca) (galpha (exp (gen) ra)) (static-key static-key)
    (rb ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-b) (self b)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-b) (subj b)
    (ca ca))
  (deflistener (exp (gen) (mul ra ra)))
  (precedes ((1 0) (2 0)) ((1 0) (3 0)) ((1 3) (0 0)) ((2 1) (1 1))
    ((3 1) (0 2)))
  (non-orig (privk "sig" ca) (privk "sig" b))
  (uniq-orig serial-b)
  (uniq-gen ra)
  (gen-st (cat "privkey" b ra serial-b ca))
  (facts (neq b b))
  (rule fact-resp-neq0 trRl_get-cert-at-2 trRl_get-cert-at-3)
  (operation encryption-test (added-listener (exp (gen) (mul ra ra)))
    (enc n b b serial-b serial-b (exp (gen) (mul ra ra))) (0 2))
  (traces
    ((load static-key (cat pt "privkey" b ra serial-b ca))
      (recv (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca)))
      (recv (enc n b b serial-b serial-b (exp (gen) (mul ra ra))))
      (send n))
    ((send (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (recv (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" b ra serial-b ca)))
    ((recv (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (send (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca))))
    ((recv (exp (gen) (mul ra ra))) (send (exp (gen) (mul ra ra)))))
  (label 62)
  (parent 59)
  (unrealized (3 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhstatic-state
  (vars (ignore mesg) (serial-b serial-a data) (n text) (ca b name)
    (pt pt-0 pval) (static-key locn) (ra rndx))
  (defstrand resp 4 (serial-b serial-b) (serial-a serial-a) (n n) (a b)
    (b b) (ca ca) (galpha (exp (gen) ra)) (static-key static-key)
    (rb ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-b) (self b)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-b) (subj b)
    (ca ca))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-a) (subj b)
    (ca ca))
  (precedes ((1 0) (2 0)) ((1 0) (3 0)) ((1 3) (0 0)) ((2 1) (1 1))
    ((3 1) (0 1)))
  (non-orig (privk "sig" ca) (privk "sig" b))
  (uniq-orig serial-b serial-a)
  (uniq-gen ra)
  (gen-st (cat "privkey" b ra serial-b ca))
  (facts (neq b b))
  (rule fact-resp-neq0 trRl_get-cert-at-2 trRl_get-cert-at-3)
  (operation encryption-test (displaced 4 1 get-cert 1)
    (sig (cert-req a (exp (gen) ra-0) ca) (privk "sig" a)) (3 0))
  (traces
    ((load static-key (cat pt "privkey" b ra serial-b ca))
      (recv (sig (cert b (exp (gen) ra) ca serial-a) (privk "sig" ca)))
      (recv (enc n b b serial-a serial-b (exp (gen) (mul ra ra))))
      (send n))
    ((send (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (recv (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" b ra serial-b ca)))
    ((recv (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (send (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca))))
    ((recv (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (send
        (sig (cert b (exp (gen) ra) ca serial-a) (privk "sig" ca)))))
  (label 63)
  (parent 60)
  (unrealized (0 2))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhstatic-state
  (vars (ignore mesg) (serial-b serial-a data) (n text) (ca a b name)
    (pt pt-0 pval) (static-key locn) (ra ra-0 rndx))
  (defstrand resp 4 (serial-b serial-b) (serial-a serial-a) (n n) (a a)
    (b b) (ca ca) (galpha (exp (gen) ra-0)) (static-key static-key)
    (rb ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-b) (self b)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-b) (subj b)
    (ca ca))
  (defstrand cert 2 (galpha (exp (gen) ra-0)) (serial serial-a) (subj a)
    (ca ca))
  (defstrand get-cert 1 (self a) (ca ca) (ra ra-0))
  (precedes ((1 0) (2 0)) ((1 3) (0 0)) ((2 1) (1 1)) ((3 1) (0 1))
    ((4 0) (3 0)))
  (non-orig (privk "sig" ca) (privk "sig" a))
  (uniq-orig serial-b serial-a)
  (uniq-gen ra ra-0)
  (gen-st (cat "privkey" b ra serial-b ca))
  (facts (neq b a) (neq a b))
  (rule fact-init-neq0 fact-resp-neq0 trRl_get-cert-at-2
    trRl_get-cert-at-3)
  (operation encryption-test (added-strand get-cert 1)
    (sig (cert-req a (exp (gen) ra-0) ca) (privk "sig" a)) (3 0))
  (traces
    ((load static-key (cat pt "privkey" b ra serial-b ca))
      (recv
        (sig (cert a (exp (gen) ra-0) ca serial-a) (privk "sig" ca)))
      (recv (enc n a b serial-a serial-b (exp (gen) (mul ra ra-0))))
      (send n))
    ((send (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (recv (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" b ra serial-b ca)))
    ((recv (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (send (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca))))
    ((recv (sig (cert-req a (exp (gen) ra-0) ca) (privk "sig" a)))
      (send
        (sig (cert a (exp (gen) ra-0) ca serial-a) (privk "sig" ca))))
    ((send (sig (cert-req a (exp (gen) ra-0) ca) (privk "sig" a)))))
  (label 64)
  (parent 60)
  (unrealized (0 2))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhstatic-state
  (vars (ignore mesg) (serial-b data) (n text) (ca b name)
    (pt pt-0 pval) (static-key locn) (ra rndx))
  (defstrand resp 4 (serial-b serial-b) (serial-a serial-b) (n n) (a b)
    (b b) (ca ca) (galpha (exp (gen) ra)) (static-key static-key)
    (rb ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-b) (self b)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-b) (subj b)
    (ca ca))
  (defstrand init 3 (serial-a serial-b) (serial-b serial-b) (n n) (a b)
    (b b) (ca ca) (galpha (exp (gen) ra)) (static-key static-key)
    (ra ra))
  (precedes ((1 0) (2 0)) ((1 3) (0 0)) ((1 3) (3 0)) ((2 1) (1 1))
    ((3 2) (0 2)))
  (non-orig (privk "sig" ca) (privk "sig" b))
  (uniq-orig serial-b n)
  (uniq-gen ra)
  (gen-st (cat "privkey" b ra serial-b ca))
  (facts (neq b b))
  (rule fact-resp-neq0 trRl_get-cert-at-2 trRl_get-cert-at-3)
  (operation channel-test (displaced 4 1 get-cert 4)
    (ch-msg static-key-0 (cat pt-1 "privkey" b ra-0 serial-b ca-0))
    (3 0))
  (traces
    ((load static-key (cat pt "privkey" b ra serial-b ca))
      (recv (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca)))
      (recv (enc n b b serial-b serial-b (exp (gen) (mul ra ra))))
      (send n))
    ((send (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (recv (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" b ra serial-b ca)))
    ((recv (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (send (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca))))
    ((load static-key (cat pt "privkey" b ra serial-b ca))
      (recv (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca)))
      (send (enc n b b serial-b serial-b (exp (gen) (mul ra ra))))))
  (label 65)
  (parent 61)
  (realized)
  (shape)
  (maps
    ((0)
      ((ca ca) (a b) (b b) (rb ra) (serial-b serial-b)
        (serial-a serial-b) (galpha (exp (gen) ra)) (n n)
        (static-key static-key))))
  (origs (pt (1 3)) (n (3 2)) (serial-b (2 1))))

(defskeleton dhstatic-state
  (vars (ignore ignore-0 mesg) (serial-b data) (n text) (ca b ca-0 name)
    (pt pt-0 pt-1 pt-2 pval) (static-key static-key-0 locn)
    (ra ra-0 rndx))
  (defstrand resp 4 (serial-b serial-b) (serial-a serial-b) (n n) (a b)
    (b b) (ca ca) (galpha (exp (gen) ra)) (static-key static-key)
    (rb ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-b) (self b)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-b) (subj b)
    (ca ca))
  (defstrand init 3 (serial-a serial-b) (serial-b serial-b) (n n) (a b)
    (b b) (ca ca-0) (galpha (exp (gen) (mul ra ra (rec ra-0))))
    (static-key static-key-0) (ra ra-0))
  (defstrand get-cert 4 (ignore ignore-0) (serial serial-b) (self b)
    (ca ca-0) (static-key static-key-0) (ra ra-0))
  (precedes ((1 0) (2 0)) ((1 3) (0 0)) ((2 1) (1 1)) ((2 1) (4 1))
    ((3 2) (0 2)) ((4 3) (3 0)))
  (non-orig (privk "sig" ca) (privk "sig" b))
  (uniq-orig serial-b n)
  (uniq-gen ra ra-0)
  (gen-st (cat "privkey" b ra serial-b ca)
    (cat "privkey" b ra-0 serial-b ca-0))
  (facts (neq b b))
  (rule fact-resp-neq0 trRl_get-cert-at-2 trRl_get-cert-at-3)
  (operation channel-test (added-strand get-cert 4)
    (ch-msg static-key-0 (cat pt-1 "privkey" b ra-0 serial-b ca-0))
    (3 0))
  (traces
    ((load static-key (cat pt "privkey" b ra serial-b ca))
      (recv (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca)))
      (recv (enc n b b serial-b serial-b (exp (gen) (mul ra ra))))
      (send n))
    ((send (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (recv (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" b ra serial-b ca)))
    ((recv (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (send (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca))))
    ((load static-key-0 (cat pt-1 "privkey" b ra-0 serial-b ca-0))
      (recv
        (sig (cert b (exp (gen) (mul ra ra (rec ra-0))) ca-0 serial-b)
          (privk "sig" ca-0)))
      (send (enc n b b serial-b serial-b (exp (gen) (mul ra ra)))))
    ((send (sig (cert-req b (exp (gen) ra-0) ca-0) (privk "sig" b)))
      (recv
        (sig (cert b (exp (gen) ra-0) ca-0 serial-b)
          (privk "sig" ca-0))) (load static-key-0 (cat pt-2 ignore-0))
      (stor static-key-0 (cat pt-1 "privkey" b ra-0 serial-b ca-0))))
  (label 66)
  (parent 61)
  (unrealized (3 1))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhstatic-state
  (vars (ignore mesg) (serial-b data) (n text) (ca b name)
    (pt pt-0 pval) (static-key locn) (ra rndx) (w expt))
  (defstrand resp 4 (serial-b serial-b) (serial-a serial-b) (n n) (a b)
    (b b) (ca ca) (galpha (exp (gen) ra)) (static-key static-key)
    (rb ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-b) (self b)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-b) (subj b)
    (ca ca))
  (deflistener (exp (gen) (mul ra ra)))
  (deflistener (cat (exp (gen) (mul ra ra (rec w))) w))
  (precedes ((1 0) (2 0)) ((1 0) (4 0)) ((1 3) (0 0)) ((2 1) (1 1))
    ((3 1) (0 2)) ((4 1) (3 0)))
  (non-orig (privk "sig" ca) (privk "sig" b))
  (uniq-orig serial-b)
  (uniq-gen ra)
  (precur (4 0))
  (gen-st (cat "privkey" b ra serial-b ca))
  (facts (neq b b))
  (rule fact-resp-neq0 trRl_get-cert-at-2 trRl_get-cert-at-3)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul ra ra (rec w))) w))
    (exp (gen) (mul ra ra)) (3 0))
  (traces
    ((load static-key (cat pt "privkey" b ra serial-b ca))
      (recv (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca)))
      (recv (enc n b b serial-b serial-b (exp (gen) (mul ra ra))))
      (send n))
    ((send (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (recv (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" b ra serial-b ca)))
    ((recv (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (send (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca))))
    ((recv (exp (gen) (mul ra ra))) (send (exp (gen) (mul ra ra))))
    ((recv (cat (exp (gen) (mul ra ra (rec w))) w))
      (send (cat (exp (gen) (mul ra ra (rec w))) w))))
  (label 67)
  (parent 62)
  (unrealized (4 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhstatic-state
  (vars (ignore mesg) (serial-b serial-a data) (n text) (ca b ca-0 name)
    (pt pt-0 pt-1 pval) (static-key static-key-0 locn) (ra ra-0 rndx))
  (defstrand resp 4 (serial-b serial-b) (serial-a serial-a) (n n) (a b)
    (b b) (ca ca) (galpha (exp (gen) ra)) (static-key static-key)
    (rb ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-b) (self b)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-b) (subj b)
    (ca ca))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-a) (subj b)
    (ca ca))
  (defstrand init 3 (serial-a serial-a) (serial-b serial-b) (n n) (a b)
    (b b) (ca ca-0) (galpha (exp (gen) (mul ra ra (rec ra-0))))
    (static-key static-key-0) (ra ra-0))
  (precedes ((1 0) (2 0)) ((1 0) (3 0)) ((1 3) (0 0)) ((2 1) (1 1))
    ((2 1) (4 1)) ((3 1) (0 1)) ((3 1) (4 0)) ((4 2) (0 2)))
  (non-orig (privk "sig" ca) (privk "sig" b))
  (uniq-orig serial-b serial-a n)
  (uniq-gen ra)
  (gen-st (cat "privkey" b ra serial-b ca)
    (cat "privkey" b ra-0 serial-a ca-0))
  (facts (neq b b))
  (rule fact-resp-neq0 gen-st-resp-0 trRl_get-cert-at-2
    trRl_get-cert-at-3)
  (operation encryption-test (added-strand init 3)
    (enc n b b serial-a serial-b (exp (gen) (mul ra ra))) (0 2))
  (traces
    ((load static-key (cat pt "privkey" b ra serial-b ca))
      (recv (sig (cert b (exp (gen) ra) ca serial-a) (privk "sig" ca)))
      (recv (enc n b b serial-a serial-b (exp (gen) (mul ra ra))))
      (send n))
    ((send (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (recv (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" b ra serial-b ca)))
    ((recv (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (send (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca))))
    ((recv (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (send (sig (cert b (exp (gen) ra) ca serial-a) (privk "sig" ca))))
    ((load static-key-0 (cat pt-1 "privkey" b ra-0 serial-a ca-0))
      (recv
        (sig (cert b (exp (gen) (mul ra ra (rec ra-0))) ca-0 serial-b)
          (privk "sig" ca-0)))
      (send (enc n b b serial-a serial-b (exp (gen) (mul ra ra))))))
  (label 68)
  (parent 63)
  (unrealized (4 0) (4 1))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhstatic-state
  (vars (ignore mesg) (serial-b serial-a data) (n text) (ca b name)
    (pt pt-0 pval) (static-key locn) (ra rndx))
  (defstrand resp 4 (serial-b serial-b) (serial-a serial-a) (n n) (a b)
    (b b) (ca ca) (galpha (exp (gen) ra)) (static-key static-key)
    (rb ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-b) (self b)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-b) (subj b)
    (ca ca))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-a) (subj b)
    (ca ca))
  (deflistener (exp (gen) (mul ra ra)))
  (precedes ((1 0) (2 0)) ((1 0) (3 0)) ((1 0) (4 0)) ((1 3) (0 0))
    ((2 1) (1 1)) ((3 1) (0 1)) ((4 1) (0 2)))
  (non-orig (privk "sig" ca) (privk "sig" b))
  (uniq-orig serial-b serial-a)
  (uniq-gen ra)
  (gen-st (cat "privkey" b ra serial-b ca))
  (facts (neq b b))
  (rule fact-resp-neq0 trRl_get-cert-at-2 trRl_get-cert-at-3)
  (operation encryption-test (added-listener (exp (gen) (mul ra ra)))
    (enc n b b serial-a serial-b (exp (gen) (mul ra ra))) (0 2))
  (traces
    ((load static-key (cat pt "privkey" b ra serial-b ca))
      (recv (sig (cert b (exp (gen) ra) ca serial-a) (privk "sig" ca)))
      (recv (enc n b b serial-a serial-b (exp (gen) (mul ra ra))))
      (send n))
    ((send (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (recv (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" b ra serial-b ca)))
    ((recv (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (send (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca))))
    ((recv (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (send (sig (cert b (exp (gen) ra) ca serial-a) (privk "sig" ca))))
    ((recv (exp (gen) (mul ra ra))) (send (exp (gen) (mul ra ra)))))
  (label 69)
  (parent 63)
  (unrealized (4 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhstatic-state
  (vars (ignore mesg) (serial-b serial-a data) (n text)
    (ca a b ca-0 name) (pt pt-0 pt-1 pval)
    (static-key static-key-0 locn) (ra ra-0 ra-1 rndx))
  (defstrand resp 4 (serial-b serial-b) (serial-a serial-a) (n n) (a a)
    (b b) (ca ca) (galpha (exp (gen) ra-0)) (static-key static-key)
    (rb ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-b) (self b)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-b) (subj b)
    (ca ca))
  (defstrand cert 2 (galpha (exp (gen) ra-0)) (serial serial-a) (subj a)
    (ca ca))
  (defstrand get-cert 1 (self a) (ca ca) (ra ra-0))
  (defstrand init 3 (serial-a serial-a) (serial-b serial-b) (n n) (a a)
    (b b) (ca ca-0) (galpha (exp (gen) (mul ra ra-0 (rec ra-1))))
    (static-key static-key-0) (ra ra-1))
  (precedes ((1 0) (2 0)) ((1 3) (0 0)) ((2 1) (1 1)) ((2 1) (5 1))
    ((3 1) (0 1)) ((3 1) (5 0)) ((4 0) (3 0)) ((5 2) (0 2)))
  (non-orig (privk "sig" ca) (privk "sig" a))
  (uniq-orig serial-b serial-a n)
  (uniq-gen ra ra-0)
  (gen-st (cat "privkey" a ra-1 serial-a ca-0)
    (cat "privkey" b ra serial-b ca))
  (facts (neq b a) (neq a b))
  (rule fact-resp-neq0 gen-st-resp-0 trRl_get-cert-at-2
    trRl_get-cert-at-3)
  (operation encryption-test (added-strand init 3)
    (enc n a b serial-a serial-b (exp (gen) (mul ra ra-0))) (0 2))
  (traces
    ((load static-key (cat pt "privkey" b ra serial-b ca))
      (recv
        (sig (cert a (exp (gen) ra-0) ca serial-a) (privk "sig" ca)))
      (recv (enc n a b serial-a serial-b (exp (gen) (mul ra ra-0))))
      (send n))
    ((send (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (recv (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" b ra serial-b ca)))
    ((recv (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (send (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca))))
    ((recv (sig (cert-req a (exp (gen) ra-0) ca) (privk "sig" a)))
      (send
        (sig (cert a (exp (gen) ra-0) ca serial-a) (privk "sig" ca))))
    ((send (sig (cert-req a (exp (gen) ra-0) ca) (privk "sig" a))))
    ((load static-key-0 (cat pt-1 "privkey" a ra-1 serial-a ca-0))
      (recv
        (sig (cert b (exp (gen) (mul ra ra-0 (rec ra-1))) ca-0 serial-b)
          (privk "sig" ca-0)))
      (send (enc n a b serial-a serial-b (exp (gen) (mul ra ra-0))))))
  (label 70)
  (parent 64)
  (unrealized (5 0) (5 1))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhstatic-state
  (vars (ignore mesg) (serial-b serial-a data) (n text) (ca a b name)
    (pt pt-0 pval) (static-key locn) (ra ra-0 rndx))
  (defstrand resp 4 (serial-b serial-b) (serial-a serial-a) (n n) (a a)
    (b b) (ca ca) (galpha (exp (gen) ra-0)) (static-key static-key)
    (rb ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-b) (self b)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-b) (subj b)
    (ca ca))
  (defstrand cert 2 (galpha (exp (gen) ra-0)) (serial serial-a) (subj a)
    (ca ca))
  (defstrand get-cert 1 (self a) (ca ca) (ra ra-0))
  (deflistener (exp (gen) (mul ra ra-0)))
  (precedes ((1 0) (2 0)) ((1 0) (5 0)) ((1 3) (0 0)) ((2 1) (1 1))
    ((3 1) (0 1)) ((4 0) (3 0)) ((4 0) (5 0)) ((5 1) (0 2)))
  (non-orig (privk "sig" ca) (privk "sig" a))
  (uniq-orig serial-b serial-a)
  (uniq-gen ra ra-0)
  (gen-st (cat "privkey" b ra serial-b ca))
  (facts (neq b a) (neq a b))
  (rule fact-init-neq0 fact-resp-neq0 trRl_get-cert-at-2
    trRl_get-cert-at-3)
  (operation encryption-test (added-listener (exp (gen) (mul ra ra-0)))
    (enc n a b serial-a serial-b (exp (gen) (mul ra ra-0))) (0 2))
  (traces
    ((load static-key (cat pt "privkey" b ra serial-b ca))
      (recv
        (sig (cert a (exp (gen) ra-0) ca serial-a) (privk "sig" ca)))
      (recv (enc n a b serial-a serial-b (exp (gen) (mul ra ra-0))))
      (send n))
    ((send (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (recv (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" b ra serial-b ca)))
    ((recv (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (send (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca))))
    ((recv (sig (cert-req a (exp (gen) ra-0) ca) (privk "sig" a)))
      (send
        (sig (cert a (exp (gen) ra-0) ca serial-a) (privk "sig" ca))))
    ((send (sig (cert-req a (exp (gen) ra-0) ca) (privk "sig" a))))
    ((recv (exp (gen) (mul ra ra-0))) (send (exp (gen) (mul ra ra-0)))))
  (label 71)
  (parent 64)
  (unrealized (5 0))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhstatic-state
  (vars (ignore ignore-0 mesg) (serial-b data) (n text) (ca b ca-0 name)
    (pt pt-0 pt-1 pt-2 pval) (static-key static-key-0 locn)
    (ra ra-0 rndx))
  (defstrand resp 4 (serial-b serial-b) (serial-a serial-b) (n n) (a b)
    (b b) (ca ca) (galpha (exp (gen) ra)) (static-key static-key)
    (rb ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-b) (self b)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-b) (subj b)
    (ca ca))
  (defstrand init 3 (serial-a serial-b) (serial-b serial-b) (n n) (a b)
    (b b) (ca ca-0) (galpha (exp (gen) (mul ra ra (rec ra-0))))
    (static-key static-key-0) (ra ra-0))
  (defstrand get-cert 4 (ignore ignore-0) (serial serial-b) (self b)
    (ca ca-0) (static-key static-key-0) (ra ra-0))
  (deflistener (cat (exp (gen) (mul ra ra)) ra-0))
  (precedes ((1 0) (2 0)) ((1 0) (5 0)) ((1 3) (0 0)) ((2 1) (1 1))
    ((2 1) (4 1)) ((3 2) (0 2)) ((4 0) (5 0)) ((4 3) (3 0))
    ((5 1) (3 1)))
  (non-orig (privk "sig" ca) (privk "sig" b))
  (uniq-orig serial-b n)
  (uniq-gen ra ra-0)
  (gen-st (cat "privkey" b ra serial-b ca)
    (cat "privkey" b ra-0 serial-b ca-0))
  (facts (neq b b))
  (rule fact-resp-neq0 trRl_get-cert-at-2 trRl_get-cert-at-3)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul ra ra)) ra-0))
    (exp (gen) (mul ra ra (rec ra-0))) (3 1))
  (traces
    ((load static-key (cat pt "privkey" b ra serial-b ca))
      (recv (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca)))
      (recv (enc n b b serial-b serial-b (exp (gen) (mul ra ra))))
      (send n))
    ((send (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (recv (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" b ra serial-b ca)))
    ((recv (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (send (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca))))
    ((load static-key-0 (cat pt-1 "privkey" b ra-0 serial-b ca-0))
      (recv
        (sig (cert b (exp (gen) (mul ra ra (rec ra-0))) ca-0 serial-b)
          (privk "sig" ca-0)))
      (send (enc n b b serial-b serial-b (exp (gen) (mul ra ra)))))
    ((send (sig (cert-req b (exp (gen) ra-0) ca-0) (privk "sig" b)))
      (recv
        (sig (cert b (exp (gen) ra-0) ca-0 serial-b)
          (privk "sig" ca-0))) (load static-key-0 (cat pt-2 ignore-0))
      (stor static-key-0 (cat pt-1 "privkey" b ra-0 serial-b ca-0)))
    ((recv (cat (exp (gen) (mul ra ra)) ra-0))
      (send (cat (exp (gen) (mul ra ra)) ra-0))))
  (label 72)
  (parent 66)
  (unrealized (5 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhstatic-state
  (vars (ignore ignore-0 mesg) (serial-b data) (n text) (ca b ca-0 name)
    (pt pt-0 pt-1 pt-2 pval) (static-key static-key-0 locn)
    (ra ra-0 rndx))
  (defstrand resp 4 (serial-b serial-b) (serial-a serial-b) (n n) (a b)
    (b b) (ca ca) (galpha (exp (gen) ra)) (static-key static-key)
    (rb ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-b) (self b)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-b) (subj b)
    (ca ca))
  (defstrand init 3 (serial-a serial-b) (serial-b serial-b) (n n) (a b)
    (b b) (ca ca-0) (galpha (exp (gen) (mul ra ra (rec ra-0))))
    (static-key static-key-0) (ra ra-0))
  (defstrand get-cert 4 (ignore ignore-0) (serial serial-b) (self b)
    (ca ca-0) (static-key static-key-0) (ra ra-0))
  (deflistener (cat (exp (gen) (rec ra-0)) ra))
  (precedes ((1 0) (2 0)) ((1 0) (5 0)) ((1 3) (0 0)) ((2 1) (1 1))
    ((2 1) (4 1)) ((3 2) (0 2)) ((4 0) (5 0)) ((4 3) (3 0))
    ((5 1) (3 1)))
  (non-orig (privk "sig" ca) (privk "sig" b))
  (uniq-orig serial-b n)
  (uniq-gen ra ra-0)
  (gen-st (cat "privkey" b ra serial-b ca)
    (cat "privkey" b ra-0 serial-b ca-0))
  (facts (neq b b))
  (rule fact-resp-neq0 trRl_get-cert-at-2 trRl_get-cert-at-3)
  (operation nonce-test (added-listener (cat (exp (gen) (rec ra-0)) ra))
    (exp (gen) (mul ra ra (rec ra-0))) (3 1))
  (traces
    ((load static-key (cat pt "privkey" b ra serial-b ca))
      (recv (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca)))
      (recv (enc n b b serial-b serial-b (exp (gen) (mul ra ra))))
      (send n))
    ((send (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (recv (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" b ra serial-b ca)))
    ((recv (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (send (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca))))
    ((load static-key-0 (cat pt-1 "privkey" b ra-0 serial-b ca-0))
      (recv
        (sig (cert b (exp (gen) (mul ra ra (rec ra-0))) ca-0 serial-b)
          (privk "sig" ca-0)))
      (send (enc n b b serial-b serial-b (exp (gen) (mul ra ra)))))
    ((send (sig (cert-req b (exp (gen) ra-0) ca-0) (privk "sig" b)))
      (recv
        (sig (cert b (exp (gen) ra-0) ca-0 serial-b)
          (privk "sig" ca-0))) (load static-key-0 (cat pt-2 ignore-0))
      (stor static-key-0 (cat pt-1 "privkey" b ra-0 serial-b ca-0)))
    ((recv (cat (exp (gen) (rec ra-0)) ra))
      (send (cat (exp (gen) (rec ra-0)) ra))))
  (label 73)
  (parent 66)
  (unrealized (5 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhstatic-state
  (vars (ignore mesg) (serial-b data) (n text) (ca b name)
    (pt pt-0 pval) (static-key locn) (ra rndx))
  (defstrand resp 4 (serial-b serial-b) (serial-a serial-b) (n n) (a b)
    (b b) (ca ca) (galpha (exp (gen) ra)) (static-key static-key)
    (rb ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-b) (self b)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-b) (subj b)
    (ca ca))
  (deflistener (exp (gen) (mul ra ra)))
  (deflistener (cat (gen) (mul ra ra)))
  (precedes ((1 0) (2 0)) ((1 0) (4 0)) ((1 3) (0 0)) ((2 1) (1 1))
    ((3 1) (0 2)) ((4 1) (3 0)))
  (non-orig (privk "sig" ca) (privk "sig" b))
  (uniq-orig serial-b)
  (uniq-gen ra)
  (precur (4 0))
  (gen-st (cat "privkey" b ra serial-b ca))
  (facts (neq b b))
  (rule fact-resp-neq0 trRl_get-cert-at-2 trRl_get-cert-at-3)
  (operation nonce-test (contracted (ra-0 ra) (w (mul ra ra))) (gen)
    (4 0))
  (traces
    ((load static-key (cat pt "privkey" b ra serial-b ca))
      (recv (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca)))
      (recv (enc n b b serial-b serial-b (exp (gen) (mul ra ra))))
      (send n))
    ((send (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (recv (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" b ra serial-b ca)))
    ((recv (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (send (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca))))
    ((recv (exp (gen) (mul ra ra))) (send (exp (gen) (mul ra ra))))
    ((recv (cat (gen) (mul ra ra))) (send (cat (gen) (mul ra ra)))))
  (label 74)
  (parent 67)
  (unrealized (3 0) (4 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhstatic-state
  (vars (ignore mesg) (serial-b data) (n text) (ca b name)
    (pt pt-0 pval) (static-key locn) (ra rndx))
  (defstrand resp 4 (serial-b serial-b) (serial-a serial-b) (n n) (a b)
    (b b) (ca ca) (galpha (exp (gen) ra)) (static-key static-key)
    (rb ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-b) (self b)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-b) (subj b)
    (ca ca))
  (deflistener (exp (gen) (mul ra ra)))
  (deflistener (cat (exp (gen) ra) ra))
  (precedes ((1 0) (2 0)) ((1 0) (4 0)) ((1 3) (0 0)) ((2 1) (1 1))
    ((3 1) (0 2)) ((4 1) (3 0)))
  (non-orig (privk "sig" ca) (privk "sig" b))
  (uniq-orig serial-b)
  (uniq-gen ra)
  (precur (4 0))
  (gen-st (cat "privkey" b ra serial-b ca))
  (facts (neq b b))
  (rule fact-resp-neq0 trRl_get-cert-at-2 trRl_get-cert-at-3)
  (operation nonce-test (displaced 5 1 get-cert 1) (exp (gen) ra-0)
    (4 0))
  (traces
    ((load static-key (cat pt "privkey" b ra serial-b ca))
      (recv (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca)))
      (recv (enc n b b serial-b serial-b (exp (gen) (mul ra ra))))
      (send n))
    ((send (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (recv (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" b ra serial-b ca)))
    ((recv (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (send (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca))))
    ((recv (exp (gen) (mul ra ra))) (send (exp (gen) (mul ra ra))))
    ((recv (cat (exp (gen) ra) ra)) (send (cat (exp (gen) ra) ra))))
  (label 75)
  (parent 67)
  (unrealized (4 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhstatic-state
  (vars (ignore mesg) (serial-b data) (n text) (ca b self ca-0 name)
    (pt pt-0 pval) (static-key locn) (ra ra-0 rndx))
  (defstrand resp 4 (serial-b serial-b) (serial-a serial-b) (n n) (a b)
    (b b) (ca ca) (galpha (exp (gen) ra)) (static-key static-key)
    (rb ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-b) (self b)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-b) (subj b)
    (ca ca))
  (deflistener (exp (gen) (mul ra ra)))
  (deflistener (cat (exp (gen) ra-0) (mul ra ra (rec ra-0))))
  (defstrand get-cert 1 (self self) (ca ca-0) (ra ra-0))
  (precedes ((1 0) (2 0)) ((1 0) (4 0)) ((1 3) (0 0)) ((2 1) (1 1))
    ((3 1) (0 2)) ((4 1) (3 0)) ((5 0) (4 0)))
  (non-orig (privk "sig" ca) (privk "sig" b))
  (uniq-orig serial-b)
  (uniq-gen ra ra-0)
  (precur (4 0))
  (gen-st (cat "privkey" b ra serial-b ca))
  (facts (neq b b))
  (rule fact-resp-neq0 trRl_get-cert-at-2 trRl_get-cert-at-3)
  (operation nonce-test (added-strand get-cert 1) (exp (gen) ra-0)
    (4 0))
  (traces
    ((load static-key (cat pt "privkey" b ra serial-b ca))
      (recv (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca)))
      (recv (enc n b b serial-b serial-b (exp (gen) (mul ra ra))))
      (send n))
    ((send (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (recv (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" b ra serial-b ca)))
    ((recv (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (send (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca))))
    ((recv (exp (gen) (mul ra ra))) (send (exp (gen) (mul ra ra))))
    ((recv (cat (exp (gen) ra-0) (mul ra ra (rec ra-0))))
      (send (cat (exp (gen) ra-0) (mul ra ra (rec ra-0)))))
    ((send
       (sig (cert-req self (exp (gen) ra-0) ca-0) (privk "sig" self)))))
  (label 76)
  (parent 67)
  (unrealized (3 0) (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhstatic-state
  (vars (ignore ignore-0 mesg) (serial-b serial-a data) (n text)
    (ca b ca-0 name) (pt pt-0 pt-1 pt-2 pval)
    (static-key static-key-0 locn) (ra ra-0 rndx))
  (defstrand resp 4 (serial-b serial-b) (serial-a serial-a) (n n) (a b)
    (b b) (ca ca) (galpha (exp (gen) ra)) (static-key static-key)
    (rb ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-b) (self b)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-b) (subj b)
    (ca ca))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-a) (subj b)
    (ca ca))
  (defstrand init 3 (serial-a serial-a) (serial-b serial-b) (n n) (a b)
    (b b) (ca ca-0) (galpha (exp (gen) (mul ra ra (rec ra-0))))
    (static-key static-key-0) (ra ra-0))
  (defstrand get-cert 4 (ignore ignore-0) (serial serial-a) (self b)
    (ca ca-0) (static-key static-key-0) (ra ra-0))
  (precedes ((1 0) (2 0)) ((1 0) (3 0)) ((1 3) (0 0)) ((2 1) (1 1))
    ((2 1) (4 1)) ((3 1) (0 1)) ((3 1) (5 1)) ((4 2) (0 2))
    ((5 3) (4 0)))
  (non-orig (privk "sig" ca) (privk "sig" b))
  (uniq-orig serial-b serial-a n)
  (uniq-gen ra ra-0)
  (gen-st (cat "privkey" b ra serial-b ca)
    (cat "privkey" b ra-0 serial-a ca-0))
  (facts (neq b b))
  (rule fact-resp-neq0 trRl_get-cert-at-2 trRl_get-cert-at-3)
  (operation channel-test (added-strand get-cert 4)
    (ch-msg static-key-0 (cat pt-1 "privkey" b ra-0 serial-a ca-0))
    (4 0))
  (traces
    ((load static-key (cat pt "privkey" b ra serial-b ca))
      (recv (sig (cert b (exp (gen) ra) ca serial-a) (privk "sig" ca)))
      (recv (enc n b b serial-a serial-b (exp (gen) (mul ra ra))))
      (send n))
    ((send (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (recv (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" b ra serial-b ca)))
    ((recv (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (send (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca))))
    ((recv (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (send (sig (cert b (exp (gen) ra) ca serial-a) (privk "sig" ca))))
    ((load static-key-0 (cat pt-1 "privkey" b ra-0 serial-a ca-0))
      (recv
        (sig (cert b (exp (gen) (mul ra ra (rec ra-0))) ca-0 serial-b)
          (privk "sig" ca-0)))
      (send (enc n b b serial-a serial-b (exp (gen) (mul ra ra)))))
    ((send (sig (cert-req b (exp (gen) ra-0) ca-0) (privk "sig" b)))
      (recv
        (sig (cert b (exp (gen) ra-0) ca-0 serial-a)
          (privk "sig" ca-0))) (load static-key-0 (cat pt-2 ignore-0))
      (stor static-key-0 (cat pt-1 "privkey" b ra-0 serial-a ca-0))))
  (label 77)
  (parent 68)
  (unrealized (4 1))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhstatic-state
  (vars (ignore mesg) (serial-b serial-a data) (n text) (ca b name)
    (pt pt-0 pval) (static-key locn) (ra rndx) (w expt))
  (defstrand resp 4 (serial-b serial-b) (serial-a serial-a) (n n) (a b)
    (b b) (ca ca) (galpha (exp (gen) ra)) (static-key static-key)
    (rb ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-b) (self b)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-b) (subj b)
    (ca ca))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-a) (subj b)
    (ca ca))
  (deflistener (exp (gen) (mul ra ra)))
  (deflistener (cat (exp (gen) (mul ra ra (rec w))) w))
  (precedes ((1 0) (2 0)) ((1 0) (3 0)) ((1 0) (5 0)) ((1 3) (0 0))
    ((2 1) (1 1)) ((3 1) (0 1)) ((4 1) (0 2)) ((5 1) (4 0)))
  (non-orig (privk "sig" ca) (privk "sig" b))
  (uniq-orig serial-b serial-a)
  (uniq-gen ra)
  (precur (5 0))
  (gen-st (cat "privkey" b ra serial-b ca))
  (facts (neq b b))
  (rule fact-resp-neq0 trRl_get-cert-at-2 trRl_get-cert-at-3)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul ra ra (rec w))) w))
    (exp (gen) (mul ra ra)) (4 0))
  (traces
    ((load static-key (cat pt "privkey" b ra serial-b ca))
      (recv (sig (cert b (exp (gen) ra) ca serial-a) (privk "sig" ca)))
      (recv (enc n b b serial-a serial-b (exp (gen) (mul ra ra))))
      (send n))
    ((send (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (recv (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" b ra serial-b ca)))
    ((recv (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (send (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca))))
    ((recv (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (send (sig (cert b (exp (gen) ra) ca serial-a) (privk "sig" ca))))
    ((recv (exp (gen) (mul ra ra))) (send (exp (gen) (mul ra ra))))
    ((recv (cat (exp (gen) (mul ra ra (rec w))) w))
      (send (cat (exp (gen) (mul ra ra (rec w))) w))))
  (label 78)
  (parent 69)
  (unrealized (5 0))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhstatic-state
  (vars (ignore ignore-0 mesg) (serial-b serial-a data) (n text)
    (a b ca name) (pt pt-0 pt-1 pt-2 pval)
    (static-key static-key-0 locn) (ra ra-0 rndx))
  (defstrand resp 4 (serial-b serial-b) (serial-a serial-a) (n n) (a a)
    (b b) (ca ca) (galpha (exp (gen) ra-0)) (static-key static-key)
    (rb ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-b) (self b)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-b) (subj b)
    (ca ca))
  (defstrand cert 2 (galpha (exp (gen) ra-0)) (serial serial-a) (subj a)
    (ca ca))
  (defstrand init 3 (serial-a serial-a) (serial-b serial-b) (n n) (a a)
    (b b) (ca ca) (galpha (exp (gen) ra)) (static-key static-key-0)
    (ra ra-0))
  (defstrand get-cert 4 (ignore ignore-0) (serial serial-a) (self a)
    (ca ca) (static-key static-key-0) (ra ra-0))
  (precedes ((1 0) (2 0)) ((1 3) (0 0)) ((2 1) (1 1)) ((2 1) (4 1))
    ((3 1) (0 1)) ((3 1) (5 1)) ((4 2) (0 2)) ((5 0) (3 0))
    ((5 3) (4 0)))
  (non-orig (privk "sig" a) (privk "sig" ca))
  (uniq-orig serial-b serial-a n)
  (uniq-gen ra ra-0)
  (gen-st (cat "privkey" a ra-0 serial-a ca)
    (cat "privkey" b ra serial-b ca))
  (facts (neq b a) (neq a b))
  (rule fact-resp-neq0 trRl_get-cert-at-2 trRl_get-cert-at-3)
  (operation channel-test (displaced 4 6 get-cert 4)
    (ch-msg static-key-0 (cat pt-1 "privkey" a ra-1 serial-a ca)) (5 0))
  (traces
    ((load static-key (cat pt "privkey" b ra serial-b ca))
      (recv
        (sig (cert a (exp (gen) ra-0) ca serial-a) (privk "sig" ca)))
      (recv (enc n a b serial-a serial-b (exp (gen) (mul ra ra-0))))
      (send n))
    ((send (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (recv (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" b ra serial-b ca)))
    ((recv (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (send (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca))))
    ((recv (sig (cert-req a (exp (gen) ra-0) ca) (privk "sig" a)))
      (send
        (sig (cert a (exp (gen) ra-0) ca serial-a) (privk "sig" ca))))
    ((load static-key-0 (cat pt-1 "privkey" a ra-0 serial-a ca))
      (recv (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca)))
      (send (enc n a b serial-a serial-b (exp (gen) (mul ra ra-0)))))
    ((send (sig (cert-req a (exp (gen) ra-0) ca) (privk "sig" a)))
      (recv
        (sig (cert a (exp (gen) ra-0) ca serial-a) (privk "sig" ca)))
      (load static-key-0 (cat pt-2 ignore-0))
      (stor static-key-0 (cat pt-1 "privkey" a ra-0 serial-a ca))))
  (label 79)
  (parent 70)
  (realized)
  (shape)
  (maps
    ((0)
      ((ca ca) (a a) (b b) (rb ra) (serial-b serial-b)
        (serial-a serial-a) (galpha (exp (gen) ra-0)) (n n)
        (static-key static-key))))
  (origs (pt-1 (5 3)) (n (4 2)) (serial-a (3 1)) (serial-b (2 1))
    (pt (1 3))))

(defskeleton dhstatic-state
  (vars (ignore ignore-0 mesg) (serial-b serial-a data) (n text)
    (ca a b ca-0 name) (pt pt-0 pt-1 pt-2 pval)
    (static-key static-key-0 locn) (ra ra-0 ra-1 rndx))
  (defstrand resp 4 (serial-b serial-b) (serial-a serial-a) (n n) (a a)
    (b b) (ca ca) (galpha (exp (gen) ra-0)) (static-key static-key)
    (rb ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-b) (self b)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-b) (subj b)
    (ca ca))
  (defstrand cert 2 (galpha (exp (gen) ra-0)) (serial serial-a) (subj a)
    (ca ca))
  (defstrand get-cert 1 (self a) (ca ca) (ra ra-0))
  (defstrand init 3 (serial-a serial-a) (serial-b serial-b) (n n) (a a)
    (b b) (ca ca-0) (galpha (exp (gen) (mul ra ra-0 (rec ra-1))))
    (static-key static-key-0) (ra ra-1))
  (defstrand get-cert 4 (ignore ignore-0) (serial serial-a) (self a)
    (ca ca-0) (static-key static-key-0) (ra ra-1))
  (precedes ((1 0) (2 0)) ((1 3) (0 0)) ((2 1) (1 1)) ((2 1) (5 1))
    ((3 1) (0 1)) ((3 1) (6 1)) ((4 0) (3 0)) ((5 2) (0 2))
    ((6 3) (5 0)))
  (non-orig (privk "sig" ca) (privk "sig" a))
  (uniq-orig serial-b serial-a n)
  (uniq-gen ra ra-0 ra-1)
  (gen-st (cat "privkey" a ra-1 serial-a ca-0)
    (cat "privkey" b ra serial-b ca))
  (facts (neq b a) (neq a b))
  (rule fact-resp-neq0 trRl_get-cert-at-2 trRl_get-cert-at-3)
  (operation channel-test (added-strand get-cert 4)
    (ch-msg static-key-0 (cat pt-1 "privkey" a ra-1 serial-a ca-0))
    (5 0))
  (traces
    ((load static-key (cat pt "privkey" b ra serial-b ca))
      (recv
        (sig (cert a (exp (gen) ra-0) ca serial-a) (privk "sig" ca)))
      (recv (enc n a b serial-a serial-b (exp (gen) (mul ra ra-0))))
      (send n))
    ((send (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (recv (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" b ra serial-b ca)))
    ((recv (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (send (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca))))
    ((recv (sig (cert-req a (exp (gen) ra-0) ca) (privk "sig" a)))
      (send
        (sig (cert a (exp (gen) ra-0) ca serial-a) (privk "sig" ca))))
    ((send (sig (cert-req a (exp (gen) ra-0) ca) (privk "sig" a))))
    ((load static-key-0 (cat pt-1 "privkey" a ra-1 serial-a ca-0))
      (recv
        (sig (cert b (exp (gen) (mul ra ra-0 (rec ra-1))) ca-0 serial-b)
          (privk "sig" ca-0)))
      (send (enc n a b serial-a serial-b (exp (gen) (mul ra ra-0)))))
    ((send (sig (cert-req a (exp (gen) ra-1) ca-0) (privk "sig" a)))
      (recv
        (sig (cert a (exp (gen) ra-1) ca-0 serial-a)
          (privk "sig" ca-0))) (load static-key-0 (cat pt-2 ignore-0))
      (stor static-key-0 (cat pt-1 "privkey" a ra-1 serial-a ca-0))))
  (label 80)
  (parent 70)
  (unrealized (5 1))
  (comment "3 in cohort - 3 not yet seen"))

(defskeleton dhstatic-state
  (vars (ignore mesg) (serial-b serial-a data) (n text) (ca a b name)
    (pt pt-0 pval) (static-key locn) (ra ra-0 rndx))
  (defstrand resp 4 (serial-b serial-b) (serial-a serial-a) (n n) (a a)
    (b b) (ca ca) (galpha (exp (gen) ra-0)) (static-key static-key)
    (rb ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-b) (self b)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-b) (subj b)
    (ca ca))
  (defstrand cert 2 (galpha (exp (gen) ra-0)) (serial serial-a) (subj a)
    (ca ca))
  (defstrand get-cert 1 (self a) (ca ca) (ra ra-0))
  (deflistener (exp (gen) (mul ra ra-0)))
  (deflistener (cat (exp (gen) ra) ra-0))
  (precedes ((1 0) (2 0)) ((1 0) (6 0)) ((1 3) (0 0)) ((2 1) (1 1))
    ((3 1) (0 1)) ((4 0) (3 0)) ((4 0) (6 0)) ((5 1) (0 2))
    ((6 1) (5 0)))
  (non-orig (privk "sig" ca) (privk "sig" a))
  (uniq-orig serial-b serial-a)
  (uniq-gen ra ra-0)
  (gen-st (cat "privkey" b ra serial-b ca))
  (facts (neq b a) (neq a b))
  (rule fact-init-neq0 fact-resp-neq0 trRl_get-cert-at-2
    trRl_get-cert-at-3)
  (operation nonce-test (added-listener (cat (exp (gen) ra) ra-0))
    (exp (gen) (mul ra ra-0)) (5 0))
  (traces
    ((load static-key (cat pt "privkey" b ra serial-b ca))
      (recv
        (sig (cert a (exp (gen) ra-0) ca serial-a) (privk "sig" ca)))
      (recv (enc n a b serial-a serial-b (exp (gen) (mul ra ra-0))))
      (send n))
    ((send (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (recv (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" b ra serial-b ca)))
    ((recv (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (send (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca))))
    ((recv (sig (cert-req a (exp (gen) ra-0) ca) (privk "sig" a)))
      (send
        (sig (cert a (exp (gen) ra-0) ca serial-a) (privk "sig" ca))))
    ((send (sig (cert-req a (exp (gen) ra-0) ca) (privk "sig" a))))
    ((recv (exp (gen) (mul ra ra-0))) (send (exp (gen) (mul ra ra-0))))
    ((recv (cat (exp (gen) ra) ra-0)) (send (cat (exp (gen) ra) ra-0))))
  (label 81)
  (parent 71)
  (unrealized (6 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhstatic-state
  (vars (ignore mesg) (serial-b serial-a data) (n text) (ca a b name)
    (pt pt-0 pval) (static-key locn) (ra ra-0 rndx))
  (defstrand resp 4 (serial-b serial-b) (serial-a serial-a) (n n) (a a)
    (b b) (ca ca) (galpha (exp (gen) ra-0)) (static-key static-key)
    (rb ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-b) (self b)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-b) (subj b)
    (ca ca))
  (defstrand cert 2 (galpha (exp (gen) ra-0)) (serial serial-a) (subj a)
    (ca ca))
  (defstrand get-cert 1 (self a) (ca ca) (ra ra-0))
  (deflistener (exp (gen) (mul ra ra-0)))
  (deflistener (cat (exp (gen) ra-0) ra))
  (precedes ((1 0) (2 0)) ((1 0) (6 0)) ((1 3) (0 0)) ((2 1) (1 1))
    ((3 1) (0 1)) ((4 0) (3 0)) ((4 0) (6 0)) ((5 1) (0 2))
    ((6 1) (5 0)))
  (non-orig (privk "sig" ca) (privk "sig" a))
  (uniq-orig serial-b serial-a)
  (uniq-gen ra ra-0)
  (gen-st (cat "privkey" b ra serial-b ca))
  (facts (neq b a) (neq a b))
  (rule fact-init-neq0 fact-resp-neq0 trRl_get-cert-at-2
    trRl_get-cert-at-3)
  (operation nonce-test (added-listener (cat (exp (gen) ra-0) ra))
    (exp (gen) (mul ra ra-0)) (5 0))
  (traces
    ((load static-key (cat pt "privkey" b ra serial-b ca))
      (recv
        (sig (cert a (exp (gen) ra-0) ca serial-a) (privk "sig" ca)))
      (recv (enc n a b serial-a serial-b (exp (gen) (mul ra ra-0))))
      (send n))
    ((send (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (recv (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" b ra serial-b ca)))
    ((recv (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (send (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca))))
    ((recv (sig (cert-req a (exp (gen) ra-0) ca) (privk "sig" a)))
      (send
        (sig (cert a (exp (gen) ra-0) ca serial-a) (privk "sig" ca))))
    ((send (sig (cert-req a (exp (gen) ra-0) ca) (privk "sig" a))))
    ((recv (exp (gen) (mul ra ra-0))) (send (exp (gen) (mul ra ra-0))))
    ((recv (cat (exp (gen) ra-0) ra)) (send (cat (exp (gen) ra-0) ra))))
  (label 82)
  (parent 71)
  (unrealized (6 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhstatic-state
  (vars (ignore ignore-0 mesg) (serial-b data) (n text) (ca b ca-0 name)
    (pt pt-0 pt-1 pt-2 pval) (static-key static-key-0 locn)
    (ra ra-0 rndx))
  (defstrand resp 4 (serial-b serial-b) (serial-a serial-b) (n n) (a b)
    (b b) (ca ca) (galpha (exp (gen) ra)) (static-key static-key)
    (rb ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-b) (self b)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-b) (subj b)
    (ca ca))
  (defstrand init 3 (serial-a serial-b) (serial-b serial-b) (n n) (a b)
    (b b) (ca ca-0) (galpha (exp (gen) (mul ra ra (rec ra-0))))
    (static-key static-key-0) (ra ra-0))
  (defstrand get-cert 4 (ignore ignore-0) (serial serial-b) (self b)
    (ca ca-0) (static-key static-key-0) (ra ra-0))
  (deflistener (cat (exp (gen) (mul ra ra)) ra-0))
  (precedes ((1 0) (2 0)) ((1 3) (0 0)) ((2 1) (1 1)) ((2 1) (4 1))
    ((3 2) (0 2)) ((4 3) (3 0)) ((4 3) (5 0)) ((5 1) (3 1)))
  (non-orig (privk "sig" ca) (privk "sig" b))
  (uniq-orig serial-b n)
  (uniq-gen ra ra-0)
  (gen-st (cat "privkey" b ra serial-b ca)
    (cat "privkey" b ra-0 serial-b ca-0))
  (facts (neq b b))
  (rule fact-resp-neq0 trRl_get-cert-at-2 trRl_get-cert-at-3)
  (operation nonce-test (displaced 6 4 get-cert 4) ra-0 (5 0))
  (traces
    ((load static-key (cat pt "privkey" b ra serial-b ca))
      (recv (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca)))
      (recv (enc n b b serial-b serial-b (exp (gen) (mul ra ra))))
      (send n))
    ((send (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (recv (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" b ra serial-b ca)))
    ((recv (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (send (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca))))
    ((load static-key-0 (cat pt-1 "privkey" b ra-0 serial-b ca-0))
      (recv
        (sig (cert b (exp (gen) (mul ra ra (rec ra-0))) ca-0 serial-b)
          (privk "sig" ca-0)))
      (send (enc n b b serial-b serial-b (exp (gen) (mul ra ra)))))
    ((send (sig (cert-req b (exp (gen) ra-0) ca-0) (privk "sig" b)))
      (recv
        (sig (cert b (exp (gen) ra-0) ca-0 serial-b)
          (privk "sig" ca-0))) (load static-key-0 (cat pt-2 ignore-0))
      (stor static-key-0 (cat pt-1 "privkey" b ra-0 serial-b ca-0)))
    ((recv (cat (exp (gen) (mul ra ra)) ra-0))
      (send (cat (exp (gen) (mul ra ra)) ra-0))))
  (label 83)
  (parent 72)
  (unrealized (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhstatic-state
  (vars (ignore ignore-0 mesg) (serial-b data) (n text) (ca b ca-0 name)
    (pt pt-0 pt-1 pt-2 pval) (static-key static-key-0 locn)
    (ra ra-0 rndx))
  (defstrand resp 4 (serial-b serial-b) (serial-a serial-b) (n n) (a b)
    (b b) (ca ca) (galpha (exp (gen) ra-0)) (static-key static-key)
    (rb ra-0))
  (defstrand get-cert 4 (ignore ignore) (serial serial-b) (self b)
    (ca ca) (static-key static-key) (ra ra-0))
  (defstrand cert 2 (galpha (exp (gen) ra-0)) (serial serial-b) (subj b)
    (ca ca))
  (defstrand init 3 (serial-a serial-b) (serial-b serial-b) (n n) (a b)
    (b b) (ca ca-0) (galpha (exp (gen) (mul (rec ra) ra-0 ra-0)))
    (static-key static-key-0) (ra ra))
  (defstrand get-cert 4 (ignore ignore-0) (serial serial-b) (self b)
    (ca ca-0) (static-key static-key-0) (ra ra))
  (deflistener (cat (exp (gen) (rec ra)) ra-0))
  (precedes ((1 0) (2 0)) ((1 3) (0 0)) ((1 3) (5 0)) ((2 1) (1 1))
    ((2 1) (4 1)) ((3 2) (0 2)) ((4 0) (5 0)) ((4 3) (3 0))
    ((5 1) (3 1)))
  (non-orig (privk "sig" ca) (privk "sig" b))
  (uniq-orig serial-b n)
  (uniq-gen ra ra-0)
  (gen-st (cat "privkey" b ra serial-b ca-0)
    (cat "privkey" b ra-0 serial-b ca))
  (facts (neq b b))
  (rule fact-resp-neq0 trRl_get-cert-at-2 trRl_get-cert-at-3)
  (operation nonce-test (displaced 6 1 get-cert 4) ra-0 (5 0))
  (traces
    ((load static-key (cat pt "privkey" b ra-0 serial-b ca))
      (recv
        (sig (cert b (exp (gen) ra-0) ca serial-b) (privk "sig" ca)))
      (recv (enc n b b serial-b serial-b (exp (gen) (mul ra-0 ra-0))))
      (send n))
    ((send (sig (cert-req b (exp (gen) ra-0) ca) (privk "sig" b)))
      (recv
        (sig (cert b (exp (gen) ra-0) ca serial-b) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" b ra-0 serial-b ca)))
    ((recv (sig (cert-req b (exp (gen) ra-0) ca) (privk "sig" b)))
      (send
        (sig (cert b (exp (gen) ra-0) ca serial-b) (privk "sig" ca))))
    ((load static-key-0 (cat pt-1 "privkey" b ra serial-b ca-0))
      (recv
        (sig (cert b (exp (gen) (mul (rec ra) ra-0 ra-0)) ca-0 serial-b)
          (privk "sig" ca-0)))
      (send (enc n b b serial-b serial-b (exp (gen) (mul ra-0 ra-0)))))
    ((send (sig (cert-req b (exp (gen) ra) ca-0) (privk "sig" b)))
      (recv
        (sig (cert b (exp (gen) ra) ca-0 serial-b) (privk "sig" ca-0)))
      (load static-key-0 (cat pt-2 ignore-0))
      (stor static-key-0 (cat pt-1 "privkey" b ra serial-b ca-0)))
    ((recv (cat (exp (gen) (rec ra)) ra-0))
      (send (cat (exp (gen) (rec ra)) ra-0))))
  (label 84)
  (parent 73)
  (unrealized (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhstatic-state
  (vars (ignore mesg) (serial-b data) (n text) (ca b name)
    (pt pt-0 pval) (static-key locn) (ra rndx))
  (defstrand resp 4 (serial-b serial-b) (serial-a serial-b) (n n) (a b)
    (b b) (ca ca) (galpha (exp (gen) ra)) (static-key static-key)
    (rb ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-b) (self b)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-b) (subj b)
    (ca ca))
  (deflistener (exp (gen) (mul ra ra)))
  (deflistener (cat (gen) (mul ra ra)))
  (deflistener ra)
  (precedes ((1 0) (2 0)) ((1 0) (5 0)) ((1 3) (0 0)) ((2 1) (1 1))
    ((3 1) (0 2)) ((4 1) (3 0)) ((5 1) (4 0)))
  (non-orig (privk "sig" ca) (privk "sig" b))
  (uniq-orig serial-b)
  (uniq-gen ra)
  (precur (4 0))
  (gen-st (cat "privkey" b ra serial-b ca))
  (facts (neq b b))
  (rule fact-resp-neq0 trRl_get-cert-at-2 trRl_get-cert-at-3)
  (operation nonce-test (added-listener ra) (mul ra ra) (4 0))
  (traces
    ((load static-key (cat pt "privkey" b ra serial-b ca))
      (recv (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca)))
      (recv (enc n b b serial-b serial-b (exp (gen) (mul ra ra))))
      (send n))
    ((send (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (recv (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" b ra serial-b ca)))
    ((recv (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (send (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca))))
    ((recv (exp (gen) (mul ra ra))) (send (exp (gen) (mul ra ra))))
    ((recv (cat (gen) (mul ra ra))) (send (cat (gen) (mul ra ra))))
    ((recv ra) (send ra)))
  (label 85)
  (parent 74)
  (unrealized (5 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhstatic-state
  (vars (ignore mesg) (serial-b data) (n text) (ca b name)
    (pt pt-0 pval) (static-key locn) (ra rndx))
  (defstrand resp 4 (serial-b serial-b) (serial-a serial-b) (n n) (a b)
    (b b) (ca ca) (galpha (exp (gen) ra)) (static-key static-key)
    (rb ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-b) (self b)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-b) (subj b)
    (ca ca))
  (deflistener (exp (gen) (mul ra ra)))
  (deflistener (cat (exp (gen) ra) ra))
  (precedes ((1 0) (2 0)) ((1 3) (0 0)) ((1 3) (4 0)) ((2 1) (1 1))
    ((3 1) (0 2)) ((4 1) (3 0)))
  (non-orig (privk "sig" ca) (privk "sig" b))
  (uniq-orig serial-b)
  (uniq-gen ra)
  (precur (4 0))
  (gen-st (cat "privkey" b ra serial-b ca))
  (facts (neq b b))
  (rule fact-resp-neq0 trRl_get-cert-at-2 trRl_get-cert-at-3)
  (operation nonce-test (displaced 5 1 get-cert 4) ra (4 0))
  (traces
    ((load static-key (cat pt "privkey" b ra serial-b ca))
      (recv (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca)))
      (recv (enc n b b serial-b serial-b (exp (gen) (mul ra ra))))
      (send n))
    ((send (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (recv (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" b ra serial-b ca)))
    ((recv (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (send (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca))))
    ((recv (exp (gen) (mul ra ra))) (send (exp (gen) (mul ra ra))))
    ((recv (cat (exp (gen) ra) ra)) (send (cat (exp (gen) ra) ra))))
  (label 86)
  (parent 75)
  (unrealized (4 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhstatic-state
  (vars (ignore ignore-0 mesg) (serial-b serial-a data) (n text)
    (ca b ca-0 name) (pt pt-0 pt-1 pt-2 pval)
    (static-key static-key-0 locn) (ra ra-0 rndx))
  (defstrand resp 4 (serial-b serial-b) (serial-a serial-a) (n n) (a b)
    (b b) (ca ca) (galpha (exp (gen) ra)) (static-key static-key)
    (rb ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-b) (self b)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-b) (subj b)
    (ca ca))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-a) (subj b)
    (ca ca))
  (defstrand init 3 (serial-a serial-a) (serial-b serial-b) (n n) (a b)
    (b b) (ca ca-0) (galpha (exp (gen) (mul ra ra (rec ra-0))))
    (static-key static-key-0) (ra ra-0))
  (defstrand get-cert 4 (ignore ignore-0) (serial serial-a) (self b)
    (ca ca-0) (static-key static-key-0) (ra ra-0))
  (deflistener (cat (exp (gen) (mul ra ra)) ra-0))
  (precedes ((1 0) (2 0)) ((1 0) (3 0)) ((1 0) (6 0)) ((1 3) (0 0))
    ((2 1) (1 1)) ((2 1) (4 1)) ((3 1) (0 1)) ((3 1) (5 1))
    ((4 2) (0 2)) ((5 0) (6 0)) ((5 3) (4 0)) ((6 1) (4 1)))
  (non-orig (privk "sig" ca) (privk "sig" b))
  (uniq-orig serial-b serial-a n)
  (uniq-gen ra ra-0)
  (gen-st (cat "privkey" b ra serial-b ca)
    (cat "privkey" b ra-0 serial-a ca-0))
  (facts (neq b b))
  (rule fact-resp-neq0 trRl_get-cert-at-2 trRl_get-cert-at-3)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul ra ra)) ra-0))
    (exp (gen) (mul ra ra (rec ra-0))) (4 1))
  (traces
    ((load static-key (cat pt "privkey" b ra serial-b ca))
      (recv (sig (cert b (exp (gen) ra) ca serial-a) (privk "sig" ca)))
      (recv (enc n b b serial-a serial-b (exp (gen) (mul ra ra))))
      (send n))
    ((send (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (recv (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" b ra serial-b ca)))
    ((recv (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (send (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca))))
    ((recv (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (send (sig (cert b (exp (gen) ra) ca serial-a) (privk "sig" ca))))
    ((load static-key-0 (cat pt-1 "privkey" b ra-0 serial-a ca-0))
      (recv
        (sig (cert b (exp (gen) (mul ra ra (rec ra-0))) ca-0 serial-b)
          (privk "sig" ca-0)))
      (send (enc n b b serial-a serial-b (exp (gen) (mul ra ra)))))
    ((send (sig (cert-req b (exp (gen) ra-0) ca-0) (privk "sig" b)))
      (recv
        (sig (cert b (exp (gen) ra-0) ca-0 serial-a)
          (privk "sig" ca-0))) (load static-key-0 (cat pt-2 ignore-0))
      (stor static-key-0 (cat pt-1 "privkey" b ra-0 serial-a ca-0)))
    ((recv (cat (exp (gen) (mul ra ra)) ra-0))
      (send (cat (exp (gen) (mul ra ra)) ra-0))))
  (label 87)
  (parent 77)
  (unrealized (6 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhstatic-state
  (vars (ignore ignore-0 mesg) (serial-b serial-a data) (n text)
    (ca b ca-0 name) (pt pt-0 pt-1 pt-2 pval)
    (static-key static-key-0 locn) (ra ra-0 rndx))
  (defstrand resp 4 (serial-b serial-b) (serial-a serial-a) (n n) (a b)
    (b b) (ca ca) (galpha (exp (gen) ra)) (static-key static-key)
    (rb ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-b) (self b)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-b) (subj b)
    (ca ca))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-a) (subj b)
    (ca ca))
  (defstrand init 3 (serial-a serial-a) (serial-b serial-b) (n n) (a b)
    (b b) (ca ca-0) (galpha (exp (gen) (mul ra ra (rec ra-0))))
    (static-key static-key-0) (ra ra-0))
  (defstrand get-cert 4 (ignore ignore-0) (serial serial-a) (self b)
    (ca ca-0) (static-key static-key-0) (ra ra-0))
  (deflistener (cat (exp (gen) (rec ra-0)) ra))
  (precedes ((1 0) (2 0)) ((1 0) (3 0)) ((1 0) (6 0)) ((1 3) (0 0))
    ((2 1) (1 1)) ((2 1) (4 1)) ((3 1) (0 1)) ((3 1) (5 1))
    ((4 2) (0 2)) ((5 0) (6 0)) ((5 3) (4 0)) ((6 1) (4 1)))
  (non-orig (privk "sig" ca) (privk "sig" b))
  (uniq-orig serial-b serial-a n)
  (uniq-gen ra ra-0)
  (gen-st (cat "privkey" b ra serial-b ca)
    (cat "privkey" b ra-0 serial-a ca-0))
  (facts (neq b b))
  (rule fact-resp-neq0 trRl_get-cert-at-2 trRl_get-cert-at-3)
  (operation nonce-test (added-listener (cat (exp (gen) (rec ra-0)) ra))
    (exp (gen) (mul ra ra (rec ra-0))) (4 1))
  (traces
    ((load static-key (cat pt "privkey" b ra serial-b ca))
      (recv (sig (cert b (exp (gen) ra) ca serial-a) (privk "sig" ca)))
      (recv (enc n b b serial-a serial-b (exp (gen) (mul ra ra))))
      (send n))
    ((send (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (recv (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" b ra serial-b ca)))
    ((recv (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (send (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca))))
    ((recv (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (send (sig (cert b (exp (gen) ra) ca serial-a) (privk "sig" ca))))
    ((load static-key-0 (cat pt-1 "privkey" b ra-0 serial-a ca-0))
      (recv
        (sig (cert b (exp (gen) (mul ra ra (rec ra-0))) ca-0 serial-b)
          (privk "sig" ca-0)))
      (send (enc n b b serial-a serial-b (exp (gen) (mul ra ra)))))
    ((send (sig (cert-req b (exp (gen) ra-0) ca-0) (privk "sig" b)))
      (recv
        (sig (cert b (exp (gen) ra-0) ca-0 serial-a)
          (privk "sig" ca-0))) (load static-key-0 (cat pt-2 ignore-0))
      (stor static-key-0 (cat pt-1 "privkey" b ra-0 serial-a ca-0)))
    ((recv (cat (exp (gen) (rec ra-0)) ra))
      (send (cat (exp (gen) (rec ra-0)) ra))))
  (label 88)
  (parent 77)
  (unrealized (6 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhstatic-state
  (vars (ignore mesg) (serial-b serial-a data) (n text) (ca b name)
    (pt pt-0 pval) (static-key locn) (ra rndx))
  (defstrand resp 4 (serial-b serial-b) (serial-a serial-a) (n n) (a b)
    (b b) (ca ca) (galpha (exp (gen) ra)) (static-key static-key)
    (rb ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-b) (self b)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-b) (subj b)
    (ca ca))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-a) (subj b)
    (ca ca))
  (deflistener (exp (gen) (mul ra ra)))
  (deflistener (cat (gen) (mul ra ra)))
  (precedes ((1 0) (2 0)) ((1 0) (3 0)) ((1 0) (5 0)) ((1 3) (0 0))
    ((2 1) (1 1)) ((3 1) (0 1)) ((4 1) (0 2)) ((5 1) (4 0)))
  (non-orig (privk "sig" ca) (privk "sig" b))
  (uniq-orig serial-b serial-a)
  (uniq-gen ra)
  (precur (5 0))
  (gen-st (cat "privkey" b ra serial-b ca))
  (facts (neq b b))
  (rule fact-resp-neq0 trRl_get-cert-at-2 trRl_get-cert-at-3)
  (operation nonce-test (contracted (ra-0 ra) (w (mul ra ra))) (gen)
    (5 0))
  (traces
    ((load static-key (cat pt "privkey" b ra serial-b ca))
      (recv (sig (cert b (exp (gen) ra) ca serial-a) (privk "sig" ca)))
      (recv (enc n b b serial-a serial-b (exp (gen) (mul ra ra))))
      (send n))
    ((send (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (recv (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" b ra serial-b ca)))
    ((recv (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (send (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca))))
    ((recv (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (send (sig (cert b (exp (gen) ra) ca serial-a) (privk "sig" ca))))
    ((recv (exp (gen) (mul ra ra))) (send (exp (gen) (mul ra ra))))
    ((recv (cat (gen) (mul ra ra))) (send (cat (gen) (mul ra ra)))))
  (label 89)
  (parent 78)
  (unrealized (4 0) (5 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhstatic-state
  (vars (ignore mesg) (serial-b serial-a data) (n text) (ca b name)
    (pt pt-0 pval) (static-key locn) (ra rndx))
  (defstrand resp 4 (serial-b serial-b) (serial-a serial-a) (n n) (a b)
    (b b) (ca ca) (galpha (exp (gen) ra)) (static-key static-key)
    (rb ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-b) (self b)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-b) (subj b)
    (ca ca))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-a) (subj b)
    (ca ca))
  (deflistener (exp (gen) (mul ra ra)))
  (deflistener (cat (exp (gen) ra) ra))
  (precedes ((1 0) (2 0)) ((1 0) (3 0)) ((1 0) (5 0)) ((1 3) (0 0))
    ((2 1) (1 1)) ((3 1) (0 1)) ((4 1) (0 2)) ((5 1) (4 0)))
  (non-orig (privk "sig" ca) (privk "sig" b))
  (uniq-orig serial-b serial-a)
  (uniq-gen ra)
  (precur (5 0))
  (gen-st (cat "privkey" b ra serial-b ca))
  (facts (neq b b))
  (rule fact-resp-neq0 trRl_get-cert-at-2 trRl_get-cert-at-3)
  (operation nonce-test (displaced 6 1 get-cert 1) (exp (gen) ra-0)
    (5 0))
  (traces
    ((load static-key (cat pt "privkey" b ra serial-b ca))
      (recv (sig (cert b (exp (gen) ra) ca serial-a) (privk "sig" ca)))
      (recv (enc n b b serial-a serial-b (exp (gen) (mul ra ra))))
      (send n))
    ((send (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (recv (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" b ra serial-b ca)))
    ((recv (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (send (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca))))
    ((recv (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (send (sig (cert b (exp (gen) ra) ca serial-a) (privk "sig" ca))))
    ((recv (exp (gen) (mul ra ra))) (send (exp (gen) (mul ra ra))))
    ((recv (cat (exp (gen) ra) ra)) (send (cat (exp (gen) ra) ra))))
  (label 90)
  (parent 78)
  (unrealized (5 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhstatic-state
  (vars (ignore mesg) (serial-b serial-a data) (n text)
    (ca b self ca-0 name) (pt pt-0 pval) (static-key locn)
    (ra ra-0 rndx))
  (defstrand resp 4 (serial-b serial-b) (serial-a serial-a) (n n) (a b)
    (b b) (ca ca) (galpha (exp (gen) ra)) (static-key static-key)
    (rb ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-b) (self b)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-b) (subj b)
    (ca ca))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-a) (subj b)
    (ca ca))
  (deflistener (exp (gen) (mul ra ra)))
  (deflistener (cat (exp (gen) ra-0) (mul ra ra (rec ra-0))))
  (defstrand get-cert 1 (self self) (ca ca-0) (ra ra-0))
  (precedes ((1 0) (2 0)) ((1 0) (3 0)) ((1 0) (5 0)) ((1 3) (0 0))
    ((2 1) (1 1)) ((3 1) (0 1)) ((4 1) (0 2)) ((5 1) (4 0))
    ((6 0) (5 0)))
  (non-orig (privk "sig" ca) (privk "sig" b))
  (uniq-orig serial-b serial-a)
  (uniq-gen ra ra-0)
  (precur (5 0))
  (gen-st (cat "privkey" b ra serial-b ca))
  (facts (neq b b))
  (rule fact-resp-neq0 trRl_get-cert-at-2 trRl_get-cert-at-3)
  (operation nonce-test (added-strand get-cert 1) (exp (gen) ra-0)
    (5 0))
  (traces
    ((load static-key (cat pt "privkey" b ra serial-b ca))
      (recv (sig (cert b (exp (gen) ra) ca serial-a) (privk "sig" ca)))
      (recv (enc n b b serial-a serial-b (exp (gen) (mul ra ra))))
      (send n))
    ((send (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (recv (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" b ra serial-b ca)))
    ((recv (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (send (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca))))
    ((recv (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (send (sig (cert b (exp (gen) ra) ca serial-a) (privk "sig" ca))))
    ((recv (exp (gen) (mul ra ra))) (send (exp (gen) (mul ra ra))))
    ((recv (cat (exp (gen) ra-0) (mul ra ra (rec ra-0))))
      (send (cat (exp (gen) ra-0) (mul ra ra (rec ra-0)))))
    ((send
       (sig (cert-req self (exp (gen) ra-0) ca-0) (privk "sig" self)))))
  (label 91)
  (parent 78)
  (unrealized (4 0) (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhstatic-state
  (vars (ignore ignore-0 mesg) (serial-b serial-a data) (n text)
    (ca a b ca-0 name) (pt pt-0 pt-1 pt-2 pval)
    (static-key static-key-0 locn) (ra ra-0 ra-1 rndx))
  (defstrand resp 4 (serial-b serial-b) (serial-a serial-a) (n n) (a a)
    (b b) (ca ca) (galpha (exp (gen) ra-0)) (static-key static-key)
    (rb ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-b) (self b)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-b) (subj b)
    (ca ca))
  (defstrand cert 2 (galpha (exp (gen) ra-0)) (serial serial-a) (subj a)
    (ca ca))
  (defstrand get-cert 1 (self a) (ca ca) (ra ra-0))
  (defstrand init 3 (serial-a serial-a) (serial-b serial-b) (n n) (a a)
    (b b) (ca ca-0) (galpha (exp (gen) (mul ra ra-0 (rec ra-1))))
    (static-key static-key-0) (ra ra-1))
  (defstrand get-cert 4 (ignore ignore-0) (serial serial-a) (self a)
    (ca ca-0) (static-key static-key-0) (ra ra-1))
  (deflistener (cat (exp (gen) (mul ra ra-0)) ra-1))
  (precedes ((1 0) (2 0)) ((1 0) (7 0)) ((1 3) (0 0)) ((2 1) (1 1))
    ((2 1) (5 1)) ((3 1) (0 1)) ((3 1) (6 1)) ((4 0) (3 0))
    ((4 0) (7 0)) ((5 2) (0 2)) ((6 0) (7 0)) ((6 3) (5 0))
    ((7 1) (5 1)))
  (non-orig (privk "sig" ca) (privk "sig" a))
  (uniq-orig serial-b serial-a n)
  (uniq-gen ra ra-0 ra-1)
  (gen-st (cat "privkey" a ra-1 serial-a ca-0)
    (cat "privkey" b ra serial-b ca))
  (facts (neq b a) (neq a b))
  (rule fact-resp-neq0 trRl_get-cert-at-2 trRl_get-cert-at-3)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul ra ra-0)) ra-1))
    (exp (gen) (mul ra ra-0 (rec ra-1))) (5 1))
  (traces
    ((load static-key (cat pt "privkey" b ra serial-b ca))
      (recv
        (sig (cert a (exp (gen) ra-0) ca serial-a) (privk "sig" ca)))
      (recv (enc n a b serial-a serial-b (exp (gen) (mul ra ra-0))))
      (send n))
    ((send (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (recv (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" b ra serial-b ca)))
    ((recv (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (send (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca))))
    ((recv (sig (cert-req a (exp (gen) ra-0) ca) (privk "sig" a)))
      (send
        (sig (cert a (exp (gen) ra-0) ca serial-a) (privk "sig" ca))))
    ((send (sig (cert-req a (exp (gen) ra-0) ca) (privk "sig" a))))
    ((load static-key-0 (cat pt-1 "privkey" a ra-1 serial-a ca-0))
      (recv
        (sig (cert b (exp (gen) (mul ra ra-0 (rec ra-1))) ca-0 serial-b)
          (privk "sig" ca-0)))
      (send (enc n a b serial-a serial-b (exp (gen) (mul ra ra-0)))))
    ((send (sig (cert-req a (exp (gen) ra-1) ca-0) (privk "sig" a)))
      (recv
        (sig (cert a (exp (gen) ra-1) ca-0 serial-a)
          (privk "sig" ca-0))) (load static-key-0 (cat pt-2 ignore-0))
      (stor static-key-0 (cat pt-1 "privkey" a ra-1 serial-a ca-0)))
    ((recv (cat (exp (gen) (mul ra ra-0)) ra-1))
      (send (cat (exp (gen) (mul ra ra-0)) ra-1))))
  (label 92)
  (parent 80)
  (unrealized (7 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhstatic-state
  (vars (ignore ignore-0 mesg) (serial-b serial-a data) (n text)
    (ca a b ca-0 name) (pt pt-0 pt-1 pt-2 pval)
    (static-key static-key-0 locn) (ra ra-0 ra-1 rndx))
  (defstrand resp 4 (serial-b serial-b) (serial-a serial-a) (n n) (a a)
    (b b) (ca ca) (galpha (exp (gen) ra-0)) (static-key static-key)
    (rb ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-b) (self b)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-b) (subj b)
    (ca ca))
  (defstrand cert 2 (galpha (exp (gen) ra-0)) (serial serial-a) (subj a)
    (ca ca))
  (defstrand get-cert 1 (self a) (ca ca) (ra ra-0))
  (defstrand init 3 (serial-a serial-a) (serial-b serial-b) (n n) (a a)
    (b b) (ca ca-0) (galpha (exp (gen) (mul ra ra-0 (rec ra-1))))
    (static-key static-key-0) (ra ra-1))
  (defstrand get-cert 4 (ignore ignore-0) (serial serial-a) (self a)
    (ca ca-0) (static-key static-key-0) (ra ra-1))
  (deflistener (cat (exp (gen) (mul ra (rec ra-1))) ra-0))
  (precedes ((1 0) (2 0)) ((1 0) (7 0)) ((1 3) (0 0)) ((2 1) (1 1))
    ((2 1) (5 1)) ((3 1) (0 1)) ((3 1) (6 1)) ((4 0) (3 0))
    ((4 0) (7 0)) ((5 2) (0 2)) ((6 0) (7 0)) ((6 3) (5 0))
    ((7 1) (5 1)))
  (non-orig (privk "sig" ca) (privk "sig" a))
  (uniq-orig serial-b serial-a n)
  (uniq-gen ra ra-0 ra-1)
  (gen-st (cat "privkey" a ra-1 serial-a ca-0)
    (cat "privkey" b ra serial-b ca))
  (facts (neq b a) (neq a b))
  (rule fact-resp-neq0 trRl_get-cert-at-2 trRl_get-cert-at-3)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul ra (rec ra-1))) ra-0))
    (exp (gen) (mul ra ra-0 (rec ra-1))) (5 1))
  (traces
    ((load static-key (cat pt "privkey" b ra serial-b ca))
      (recv
        (sig (cert a (exp (gen) ra-0) ca serial-a) (privk "sig" ca)))
      (recv (enc n a b serial-a serial-b (exp (gen) (mul ra ra-0))))
      (send n))
    ((send (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (recv (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" b ra serial-b ca)))
    ((recv (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (send (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca))))
    ((recv (sig (cert-req a (exp (gen) ra-0) ca) (privk "sig" a)))
      (send
        (sig (cert a (exp (gen) ra-0) ca serial-a) (privk "sig" ca))))
    ((send (sig (cert-req a (exp (gen) ra-0) ca) (privk "sig" a))))
    ((load static-key-0 (cat pt-1 "privkey" a ra-1 serial-a ca-0))
      (recv
        (sig (cert b (exp (gen) (mul ra ra-0 (rec ra-1))) ca-0 serial-b)
          (privk "sig" ca-0)))
      (send (enc n a b serial-a serial-b (exp (gen) (mul ra ra-0)))))
    ((send (sig (cert-req a (exp (gen) ra-1) ca-0) (privk "sig" a)))
      (recv
        (sig (cert a (exp (gen) ra-1) ca-0 serial-a)
          (privk "sig" ca-0))) (load static-key-0 (cat pt-2 ignore-0))
      (stor static-key-0 (cat pt-1 "privkey" a ra-1 serial-a ca-0)))
    ((recv (cat (exp (gen) (mul ra (rec ra-1))) ra-0))
      (send (cat (exp (gen) (mul ra (rec ra-1))) ra-0))))
  (label 93)
  (parent 80)
  (unrealized (7 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhstatic-state
  (vars (ignore ignore-0 mesg) (serial-b serial-a data) (n text)
    (ca a b ca-0 name) (pt pt-0 pt-1 pt-2 pval)
    (static-key static-key-0 locn) (ra ra-0 ra-1 rndx))
  (defstrand resp 4 (serial-b serial-b) (serial-a serial-a) (n n) (a a)
    (b b) (ca ca) (galpha (exp (gen) ra-0)) (static-key static-key)
    (rb ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-b) (self b)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-b) (subj b)
    (ca ca))
  (defstrand cert 2 (galpha (exp (gen) ra-0)) (serial serial-a) (subj a)
    (ca ca))
  (defstrand get-cert 1 (self a) (ca ca) (ra ra-0))
  (defstrand init 3 (serial-a serial-a) (serial-b serial-b) (n n) (a a)
    (b b) (ca ca-0) (galpha (exp (gen) (mul ra ra-0 (rec ra-1))))
    (static-key static-key-0) (ra ra-1))
  (defstrand get-cert 4 (ignore ignore-0) (serial serial-a) (self a)
    (ca ca-0) (static-key static-key-0) (ra ra-1))
  (deflistener (cat (exp (gen) (mul ra-0 (rec ra-1))) ra))
  (precedes ((1 0) (2 0)) ((1 0) (7 0)) ((1 3) (0 0)) ((2 1) (1 1))
    ((2 1) (5 1)) ((3 1) (0 1)) ((3 1) (6 1)) ((4 0) (3 0))
    ((4 0) (7 0)) ((5 2) (0 2)) ((6 0) (7 0)) ((6 3) (5 0))
    ((7 1) (5 1)))
  (non-orig (privk "sig" ca) (privk "sig" a))
  (uniq-orig serial-b serial-a n)
  (uniq-gen ra ra-0 ra-1)
  (gen-st (cat "privkey" a ra-1 serial-a ca-0)
    (cat "privkey" b ra serial-b ca))
  (facts (neq b a) (neq a b))
  (rule fact-resp-neq0 trRl_get-cert-at-2 trRl_get-cert-at-3)
  (operation nonce-test
    (added-listener (cat (exp (gen) (mul ra-0 (rec ra-1))) ra))
    (exp (gen) (mul ra ra-0 (rec ra-1))) (5 1))
  (traces
    ((load static-key (cat pt "privkey" b ra serial-b ca))
      (recv
        (sig (cert a (exp (gen) ra-0) ca serial-a) (privk "sig" ca)))
      (recv (enc n a b serial-a serial-b (exp (gen) (mul ra ra-0))))
      (send n))
    ((send (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (recv (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" b ra serial-b ca)))
    ((recv (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (send (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca))))
    ((recv (sig (cert-req a (exp (gen) ra-0) ca) (privk "sig" a)))
      (send
        (sig (cert a (exp (gen) ra-0) ca serial-a) (privk "sig" ca))))
    ((send (sig (cert-req a (exp (gen) ra-0) ca) (privk "sig" a))))
    ((load static-key-0 (cat pt-1 "privkey" a ra-1 serial-a ca-0))
      (recv
        (sig (cert b (exp (gen) (mul ra ra-0 (rec ra-1))) ca-0 serial-b)
          (privk "sig" ca-0)))
      (send (enc n a b serial-a serial-b (exp (gen) (mul ra ra-0)))))
    ((send (sig (cert-req a (exp (gen) ra-1) ca-0) (privk "sig" a)))
      (recv
        (sig (cert a (exp (gen) ra-1) ca-0 serial-a)
          (privk "sig" ca-0))) (load static-key-0 (cat pt-2 ignore-0))
      (stor static-key-0 (cat pt-1 "privkey" a ra-1 serial-a ca-0)))
    ((recv (cat (exp (gen) (mul ra-0 (rec ra-1))) ra))
      (send (cat (exp (gen) (mul ra-0 (rec ra-1))) ra))))
  (label 94)
  (parent 80)
  (unrealized (7 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhstatic-state
  (vars (ignore ignore-0 mesg) (serial-b serial-a serial data) (n text)
    (b self ca name) (pt pt-0 pt-1 pt-2 pval)
    (static-key static-key-0 locn) (ra ra-0 rndx))
  (defstrand resp 4 (serial-b serial-b) (serial-a serial-a) (n n)
    (a self) (b b) (ca ca) (galpha (exp (gen) ra-0))
    (static-key static-key) (rb ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-b) (self b)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-b) (subj b)
    (ca ca))
  (defstrand cert 2 (galpha (exp (gen) ra-0)) (serial serial-a)
    (subj self) (ca ca))
  (deflistener (exp (gen) (mul ra ra-0)))
  (deflistener (cat (exp (gen) ra) ra-0))
  (defstrand get-cert 4 (ignore ignore-0) (serial serial) (self self)
    (ca ca) (static-key static-key-0) (ra ra-0))
  (precedes ((1 0) (2 0)) ((1 0) (5 0)) ((1 3) (0 0)) ((2 1) (1 1))
    ((3 1) (0 1)) ((4 1) (0 2)) ((5 1) (4 0)) ((6 0) (3 0))
    ((6 3) (5 0)))
  (non-orig (privk "sig" self) (privk "sig" ca))
  (uniq-orig serial-b serial-a)
  (uniq-gen ra ra-0)
  (gen-st (cat "privkey" b ra serial-b ca))
  (facts (neq b self) (neq self b))
  (rule fact-init-neq0 fact-resp-neq0 trRl_get-cert-at-2
    trRl_get-cert-at-3)
  (operation nonce-test (displaced 4 7 get-cert 4) ra-0 (6 0))
  (traces
    ((load static-key (cat pt "privkey" b ra serial-b ca))
      (recv
        (sig (cert self (exp (gen) ra-0) ca serial-a) (privk "sig" ca)))
      (recv (enc n self b serial-a serial-b (exp (gen) (mul ra ra-0))))
      (send n))
    ((send (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (recv (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" b ra serial-b ca)))
    ((recv (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (send (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca))))
    ((recv (sig (cert-req self (exp (gen) ra-0) ca) (privk "sig" self)))
      (send
        (sig (cert self (exp (gen) ra-0) ca serial-a)
          (privk "sig" ca))))
    ((recv (exp (gen) (mul ra ra-0))) (send (exp (gen) (mul ra ra-0))))
    ((recv (cat (exp (gen) ra) ra-0)) (send (cat (exp (gen) ra) ra-0)))
    ((send (sig (cert-req self (exp (gen) ra-0) ca) (privk "sig" self)))
      (recv
        (sig (cert self (exp (gen) ra-0) ca serial) (privk "sig" ca)))
      (load static-key-0 (cat pt-1 ignore-0))
      (stor static-key-0 (cat pt-2 "privkey" self ra-0 serial ca))))
  (label 95)
  (parent 81)
  (unrealized (5 0) (6 1))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhstatic-state
  (vars (ignore mesg) (serial-b serial-a data) (n text) (ca a b name)
    (pt pt-0 pval) (static-key locn) (ra ra-0 rndx))
  (defstrand resp 4 (serial-b serial-b) (serial-a serial-a) (n n) (a a)
    (b b) (ca ca) (galpha (exp (gen) ra)) (static-key static-key)
    (rb ra-0))
  (defstrand get-cert 4 (ignore ignore) (serial serial-b) (self b)
    (ca ca) (static-key static-key) (ra ra-0))
  (defstrand cert 2 (galpha (exp (gen) ra-0)) (serial serial-b) (subj b)
    (ca ca))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-a) (subj a)
    (ca ca))
  (defstrand get-cert 1 (self a) (ca ca) (ra ra))
  (deflistener (exp (gen) (mul ra ra-0)))
  (deflistener (cat (exp (gen) ra) ra-0))
  (precedes ((1 0) (2 0)) ((1 3) (0 0)) ((1 3) (6 0)) ((2 1) (1 1))
    ((3 1) (0 1)) ((4 0) (3 0)) ((4 0) (6 0)) ((5 1) (0 2))
    ((6 1) (5 0)))
  (non-orig (privk "sig" ca) (privk "sig" a))
  (uniq-orig serial-b serial-a)
  (uniq-gen ra ra-0)
  (gen-st (cat "privkey" b ra-0 serial-b ca))
  (facts (neq b a) (neq a b))
  (rule fact-init-neq0 fact-resp-neq0 trRl_get-cert-at-2
    trRl_get-cert-at-3)
  (operation nonce-test (displaced 7 1 get-cert 4) ra-0 (6 0))
  (traces
    ((load static-key (cat pt "privkey" b ra-0 serial-b ca))
      (recv (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca)))
      (recv (enc n a b serial-a serial-b (exp (gen) (mul ra ra-0))))
      (send n))
    ((send (sig (cert-req b (exp (gen) ra-0) ca) (privk "sig" b)))
      (recv
        (sig (cert b (exp (gen) ra-0) ca serial-b) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" b ra-0 serial-b ca)))
    ((recv (sig (cert-req b (exp (gen) ra-0) ca) (privk "sig" b)))
      (send
        (sig (cert b (exp (gen) ra-0) ca serial-b) (privk "sig" ca))))
    ((recv (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (send (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca))))
    ((send (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a))))
    ((recv (exp (gen) (mul ra ra-0))) (send (exp (gen) (mul ra ra-0))))
    ((recv (cat (exp (gen) ra) ra-0)) (send (cat (exp (gen) ra) ra-0))))
  (label 96)
  (parent 82)
  (unrealized (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhstatic-state
  (vars (ignore mesg) (serial-b data) (n text) (ca b name)
    (pt pt-0 pval) (static-key locn) (ra rndx))
  (defstrand resp 4 (serial-b serial-b) (serial-a serial-b) (n n) (a b)
    (b b) (ca ca) (galpha (exp (gen) ra)) (static-key static-key)
    (rb ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-b) (self b)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-b) (subj b)
    (ca ca))
  (deflistener (exp (gen) (mul ra ra)))
  (deflistener (cat (gen) (mul ra ra)))
  (deflistener ra)
  (precedes ((1 0) (2 0)) ((1 3) (0 0)) ((1 3) (5 0)) ((2 1) (1 1))
    ((3 1) (0 2)) ((4 1) (3 0)) ((5 1) (4 0)))
  (non-orig (privk "sig" ca) (privk "sig" b))
  (uniq-orig serial-b)
  (uniq-gen ra)
  (precur (4 0))
  (gen-st (cat "privkey" b ra serial-b ca))
  (facts (neq b b))
  (rule fact-resp-neq0 trRl_get-cert-at-2 trRl_get-cert-at-3)
  (operation nonce-test (displaced 6 1 get-cert 4) ra (5 0))
  (traces
    ((load static-key (cat pt "privkey" b ra serial-b ca))
      (recv (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca)))
      (recv (enc n b b serial-b serial-b (exp (gen) (mul ra ra))))
      (send n))
    ((send (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (recv (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" b ra serial-b ca)))
    ((recv (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (send (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca))))
    ((recv (exp (gen) (mul ra ra))) (send (exp (gen) (mul ra ra))))
    ((recv (cat (gen) (mul ra ra))) (send (cat (gen) (mul ra ra))))
    ((recv ra) (send ra)))
  (label 97)
  (parent 85)
  (unrealized (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhstatic-state
  (vars (ignore ignore-0 mesg) (serial-b serial-a data) (n text)
    (ca b ca-0 name) (pt pt-0 pt-1 pt-2 pval)
    (static-key static-key-0 locn) (ra ra-0 rndx))
  (defstrand resp 4 (serial-b serial-b) (serial-a serial-a) (n n) (a b)
    (b b) (ca ca) (galpha (exp (gen) ra)) (static-key static-key)
    (rb ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-b) (self b)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-b) (subj b)
    (ca ca))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-a) (subj b)
    (ca ca))
  (defstrand init 3 (serial-a serial-a) (serial-b serial-b) (n n) (a b)
    (b b) (ca ca-0) (galpha (exp (gen) (mul ra ra (rec ra-0))))
    (static-key static-key-0) (ra ra-0))
  (defstrand get-cert 4 (ignore ignore-0) (serial serial-a) (self b)
    (ca ca-0) (static-key static-key-0) (ra ra-0))
  (deflistener (cat (exp (gen) (mul ra ra)) ra-0))
  (precedes ((1 0) (2 0)) ((1 0) (3 0)) ((1 3) (0 0)) ((2 1) (1 1))
    ((2 1) (4 1)) ((3 1) (0 1)) ((3 1) (5 1)) ((4 2) (0 2))
    ((5 3) (4 0)) ((5 3) (6 0)) ((6 1) (4 1)))
  (non-orig (privk "sig" ca) (privk "sig" b))
  (uniq-orig serial-b serial-a n)
  (uniq-gen ra ra-0)
  (gen-st (cat "privkey" b ra serial-b ca)
    (cat "privkey" b ra-0 serial-a ca-0))
  (facts (neq b b))
  (rule fact-resp-neq0 trRl_get-cert-at-2 trRl_get-cert-at-3)
  (operation nonce-test (displaced 7 5 get-cert 4) ra-0 (6 0))
  (traces
    ((load static-key (cat pt "privkey" b ra serial-b ca))
      (recv (sig (cert b (exp (gen) ra) ca serial-a) (privk "sig" ca)))
      (recv (enc n b b serial-a serial-b (exp (gen) (mul ra ra))))
      (send n))
    ((send (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (recv (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" b ra serial-b ca)))
    ((recv (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (send (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca))))
    ((recv (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (send (sig (cert b (exp (gen) ra) ca serial-a) (privk "sig" ca))))
    ((load static-key-0 (cat pt-1 "privkey" b ra-0 serial-a ca-0))
      (recv
        (sig (cert b (exp (gen) (mul ra ra (rec ra-0))) ca-0 serial-b)
          (privk "sig" ca-0)))
      (send (enc n b b serial-a serial-b (exp (gen) (mul ra ra)))))
    ((send (sig (cert-req b (exp (gen) ra-0) ca-0) (privk "sig" b)))
      (recv
        (sig (cert b (exp (gen) ra-0) ca-0 serial-a)
          (privk "sig" ca-0))) (load static-key-0 (cat pt-2 ignore-0))
      (stor static-key-0 (cat pt-1 "privkey" b ra-0 serial-a ca-0)))
    ((recv (cat (exp (gen) (mul ra ra)) ra-0))
      (send (cat (exp (gen) (mul ra ra)) ra-0))))
  (label 98)
  (parent 87)
  (unrealized (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhstatic-state
  (vars (ignore ignore-0 mesg) (serial-b serial-a data) (n text)
    (ca b ca-0 name) (pt pt-0 pt-1 pt-2 pval)
    (static-key static-key-0 locn) (ra ra-0 rndx))
  (defstrand resp 4 (serial-b serial-b) (serial-a serial-a) (n n) (a b)
    (b b) (ca ca) (galpha (exp (gen) ra-0)) (static-key static-key)
    (rb ra-0))
  (defstrand get-cert 4 (ignore ignore) (serial serial-b) (self b)
    (ca ca) (static-key static-key) (ra ra-0))
  (defstrand cert 2 (galpha (exp (gen) ra-0)) (serial serial-b) (subj b)
    (ca ca))
  (defstrand cert 2 (galpha (exp (gen) ra-0)) (serial serial-a) (subj b)
    (ca ca))
  (defstrand init 3 (serial-a serial-a) (serial-b serial-b) (n n) (a b)
    (b b) (ca ca-0) (galpha (exp (gen) (mul (rec ra) ra-0 ra-0)))
    (static-key static-key-0) (ra ra))
  (defstrand get-cert 4 (ignore ignore-0) (serial serial-a) (self b)
    (ca ca-0) (static-key static-key-0) (ra ra))
  (deflistener (cat (exp (gen) (rec ra)) ra-0))
  (precedes ((1 0) (2 0)) ((1 0) (3 0)) ((1 3) (0 0)) ((1 3) (6 0))
    ((2 1) (1 1)) ((3 1) (0 1)) ((3 1) (5 1)) ((4 2) (0 2))
    ((5 0) (6 0)) ((5 3) (4 0)) ((6 1) (4 1)))
  (non-orig (privk "sig" ca) (privk "sig" b))
  (uniq-orig serial-b serial-a n)
  (uniq-gen ra ra-0)
  (gen-st (cat "privkey" b ra serial-a ca-0)
    (cat "privkey" b ra-0 serial-b ca))
  (facts (neq b b))
  (rule fact-resp-neq0 trRl_get-cert-at-2 trRl_get-cert-at-3)
  (operation nonce-test (displaced 7 1 get-cert 4) ra-0 (6 0))
  (traces
    ((load static-key (cat pt "privkey" b ra-0 serial-b ca))
      (recv
        (sig (cert b (exp (gen) ra-0) ca serial-a) (privk "sig" ca)))
      (recv (enc n b b serial-a serial-b (exp (gen) (mul ra-0 ra-0))))
      (send n))
    ((send (sig (cert-req b (exp (gen) ra-0) ca) (privk "sig" b)))
      (recv
        (sig (cert b (exp (gen) ra-0) ca serial-b) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" b ra-0 serial-b ca)))
    ((recv (sig (cert-req b (exp (gen) ra-0) ca) (privk "sig" b)))
      (send
        (sig (cert b (exp (gen) ra-0) ca serial-b) (privk "sig" ca))))
    ((recv (sig (cert-req b (exp (gen) ra-0) ca) (privk "sig" b)))
      (send
        (sig (cert b (exp (gen) ra-0) ca serial-a) (privk "sig" ca))))
    ((load static-key-0 (cat pt-1 "privkey" b ra serial-a ca-0))
      (recv
        (sig (cert b (exp (gen) (mul (rec ra) ra-0 ra-0)) ca-0 serial-b)
          (privk "sig" ca-0)))
      (send (enc n b b serial-a serial-b (exp (gen) (mul ra-0 ra-0)))))
    ((send (sig (cert-req b (exp (gen) ra) ca-0) (privk "sig" b)))
      (recv
        (sig (cert b (exp (gen) ra) ca-0 serial-a) (privk "sig" ca-0)))
      (load static-key-0 (cat pt-2 ignore-0))
      (stor static-key-0 (cat pt-1 "privkey" b ra serial-a ca-0)))
    ((recv (cat (exp (gen) (rec ra)) ra-0))
      (send (cat (exp (gen) (rec ra)) ra-0))))
  (label 99)
  (parent 88)
  (unrealized (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhstatic-state
  (vars (ignore mesg) (serial-b serial-a data) (n text) (ca b name)
    (pt pt-0 pval) (static-key locn) (ra rndx))
  (defstrand resp 4 (serial-b serial-b) (serial-a serial-a) (n n) (a b)
    (b b) (ca ca) (galpha (exp (gen) ra)) (static-key static-key)
    (rb ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-b) (self b)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-b) (subj b)
    (ca ca))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-a) (subj b)
    (ca ca))
  (deflistener (exp (gen) (mul ra ra)))
  (deflistener (cat (gen) (mul ra ra)))
  (deflistener ra)
  (precedes ((1 0) (2 0)) ((1 0) (3 0)) ((1 0) (6 0)) ((1 3) (0 0))
    ((2 1) (1 1)) ((3 1) (0 1)) ((4 1) (0 2)) ((5 1) (4 0))
    ((6 1) (5 0)))
  (non-orig (privk "sig" ca) (privk "sig" b))
  (uniq-orig serial-b serial-a)
  (uniq-gen ra)
  (precur (5 0))
  (gen-st (cat "privkey" b ra serial-b ca))
  (facts (neq b b))
  (rule fact-resp-neq0 trRl_get-cert-at-2 trRl_get-cert-at-3)
  (operation nonce-test (added-listener ra) (mul ra ra) (5 0))
  (traces
    ((load static-key (cat pt "privkey" b ra serial-b ca))
      (recv (sig (cert b (exp (gen) ra) ca serial-a) (privk "sig" ca)))
      (recv (enc n b b serial-a serial-b (exp (gen) (mul ra ra))))
      (send n))
    ((send (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (recv (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" b ra serial-b ca)))
    ((recv (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (send (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca))))
    ((recv (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (send (sig (cert b (exp (gen) ra) ca serial-a) (privk "sig" ca))))
    ((recv (exp (gen) (mul ra ra))) (send (exp (gen) (mul ra ra))))
    ((recv (cat (gen) (mul ra ra))) (send (cat (gen) (mul ra ra))))
    ((recv ra) (send ra)))
  (label 100)
  (parent 89)
  (unrealized (6 0))
  (comment "1 in cohort - 1 not yet seen"))

(defskeleton dhstatic-state
  (vars (ignore mesg) (serial-b serial-a data) (n text) (ca b name)
    (pt pt-0 pval) (static-key locn) (ra rndx))
  (defstrand resp 4 (serial-b serial-b) (serial-a serial-a) (n n) (a b)
    (b b) (ca ca) (galpha (exp (gen) ra)) (static-key static-key)
    (rb ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-b) (self b)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-b) (subj b)
    (ca ca))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-a) (subj b)
    (ca ca))
  (deflistener (exp (gen) (mul ra ra)))
  (deflistener (cat (exp (gen) ra) ra))
  (precedes ((1 0) (2 0)) ((1 0) (3 0)) ((1 3) (0 0)) ((1 3) (5 0))
    ((2 1) (1 1)) ((3 1) (0 1)) ((4 1) (0 2)) ((5 1) (4 0)))
  (non-orig (privk "sig" ca) (privk "sig" b))
  (uniq-orig serial-b serial-a)
  (uniq-gen ra)
  (precur (5 0))
  (gen-st (cat "privkey" b ra serial-b ca))
  (facts (neq b b))
  (rule fact-resp-neq0 trRl_get-cert-at-2 trRl_get-cert-at-3)
  (operation nonce-test (displaced 6 1 get-cert 4) ra (5 0))
  (traces
    ((load static-key (cat pt "privkey" b ra serial-b ca))
      (recv (sig (cert b (exp (gen) ra) ca serial-a) (privk "sig" ca)))
      (recv (enc n b b serial-a serial-b (exp (gen) (mul ra ra))))
      (send n))
    ((send (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (recv (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" b ra serial-b ca)))
    ((recv (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (send (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca))))
    ((recv (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (send (sig (cert b (exp (gen) ra) ca serial-a) (privk "sig" ca))))
    ((recv (exp (gen) (mul ra ra))) (send (exp (gen) (mul ra ra))))
    ((recv (cat (exp (gen) ra) ra)) (send (cat (exp (gen) ra) ra))))
  (label 101)
  (parent 90)
  (unrealized (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhstatic-state
  (vars (ignore ignore-0 mesg) (serial-b serial-a data) (n text)
    (ca a b ca-0 name) (pt pt-0 pt-1 pt-2 pval)
    (static-key static-key-0 locn) (ra ra-0 ra-1 rndx))
  (defstrand resp 4 (serial-b serial-b) (serial-a serial-a) (n n) (a a)
    (b b) (ca ca) (galpha (exp (gen) ra-0)) (static-key static-key)
    (rb ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-b) (self b)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-b) (subj b)
    (ca ca))
  (defstrand cert 2 (galpha (exp (gen) ra-0)) (serial serial-a) (subj a)
    (ca ca))
  (defstrand get-cert 1 (self a) (ca ca) (ra ra-0))
  (defstrand init 3 (serial-a serial-a) (serial-b serial-b) (n n) (a a)
    (b b) (ca ca-0) (galpha (exp (gen) (mul ra ra-0 (rec ra-1))))
    (static-key static-key-0) (ra ra-1))
  (defstrand get-cert 4 (ignore ignore-0) (serial serial-a) (self a)
    (ca ca-0) (static-key static-key-0) (ra ra-1))
  (deflistener (cat (exp (gen) (mul ra ra-0)) ra-1))
  (precedes ((1 0) (2 0)) ((1 0) (7 0)) ((1 3) (0 0)) ((2 1) (1 1))
    ((2 1) (5 1)) ((3 1) (0 1)) ((3 1) (6 1)) ((4 0) (3 0))
    ((5 2) (0 2)) ((6 3) (5 0)) ((6 3) (7 0)) ((7 1) (5 1)))
  (non-orig (privk "sig" ca) (privk "sig" a))
  (uniq-orig serial-b serial-a n)
  (uniq-gen ra ra-0 ra-1)
  (gen-st (cat "privkey" a ra-1 serial-a ca-0)
    (cat "privkey" b ra serial-b ca))
  (facts (neq b a) (neq a b))
  (rule fact-resp-neq0 trRl_get-cert-at-2 trRl_get-cert-at-3)
  (operation nonce-test (displaced 8 6 get-cert 4) ra-1 (7 0))
  (traces
    ((load static-key (cat pt "privkey" b ra serial-b ca))
      (recv
        (sig (cert a (exp (gen) ra-0) ca serial-a) (privk "sig" ca)))
      (recv (enc n a b serial-a serial-b (exp (gen) (mul ra ra-0))))
      (send n))
    ((send (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (recv (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" b ra serial-b ca)))
    ((recv (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (send (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca))))
    ((recv (sig (cert-req a (exp (gen) ra-0) ca) (privk "sig" a)))
      (send
        (sig (cert a (exp (gen) ra-0) ca serial-a) (privk "sig" ca))))
    ((send (sig (cert-req a (exp (gen) ra-0) ca) (privk "sig" a))))
    ((load static-key-0 (cat pt-1 "privkey" a ra-1 serial-a ca-0))
      (recv
        (sig (cert b (exp (gen) (mul ra ra-0 (rec ra-1))) ca-0 serial-b)
          (privk "sig" ca-0)))
      (send (enc n a b serial-a serial-b (exp (gen) (mul ra ra-0)))))
    ((send (sig (cert-req a (exp (gen) ra-1) ca-0) (privk "sig" a)))
      (recv
        (sig (cert a (exp (gen) ra-1) ca-0 serial-a)
          (privk "sig" ca-0))) (load static-key-0 (cat pt-2 ignore-0))
      (stor static-key-0 (cat pt-1 "privkey" a ra-1 serial-a ca-0)))
    ((recv (cat (exp (gen) (mul ra ra-0)) ra-1))
      (send (cat (exp (gen) (mul ra ra-0)) ra-1))))
  (label 102)
  (parent 92)
  (unrealized (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhstatic-state
  (vars (ignore ignore-0 ignore-1 mesg) (serial-b serial-a serial data)
    (n text) (b ca self ca-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (static-key static-key-0 static-key-1 locn) (ra ra-0 ra-1 rndx))
  (defstrand resp 4 (serial-b serial-b) (serial-a serial-a) (n n)
    (a self) (b b) (ca ca-0) (galpha (exp (gen) ra-1))
    (static-key static-key) (rb ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-b) (self b)
    (ca ca-0) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-b) (subj b)
    (ca ca-0))
  (defstrand cert 2 (galpha (exp (gen) ra-1)) (serial serial-a)
    (subj self) (ca ca-0))
  (defstrand init 3 (serial-a serial-a) (serial-b serial-b) (n n)
    (a self) (b b) (ca ca) (galpha (exp (gen) (mul ra (rec ra-0) ra-1)))
    (static-key static-key-0) (ra ra-0))
  (defstrand get-cert 4 (ignore ignore-0) (serial serial-a) (self self)
    (ca ca) (static-key static-key-0) (ra ra-0))
  (deflistener (cat (exp (gen) (mul ra (rec ra-0))) ra-1))
  (defstrand get-cert 4 (ignore ignore-1) (serial serial) (self self)
    (ca ca-0) (static-key static-key-1) (ra ra-1))
  (precedes ((1 0) (2 0)) ((1 0) (6 0)) ((1 3) (0 0)) ((2 1) (1 1))
    ((2 1) (4 1)) ((3 1) (0 1)) ((3 1) (5 1)) ((4 2) (0 2))
    ((5 0) (6 0)) ((5 3) (4 0)) ((6 1) (4 1)) ((7 0) (3 0))
    ((7 3) (6 0)))
  (non-orig (privk "sig" self) (privk "sig" ca-0))
  (uniq-orig serial-b serial-a n)
  (uniq-gen ra ra-0 ra-1)
  (gen-st (cat "privkey" b ra serial-b ca-0)
    (cat "privkey" self ra-0 serial-a ca))
  (facts (neq b self) (neq self b))
  (rule fact-resp-neq0 trRl_get-cert-at-2 trRl_get-cert-at-3)
  (operation nonce-test (displaced 4 8 get-cert 4) ra-1 (7 0))
  (traces
    ((load static-key (cat pt "privkey" b ra serial-b ca-0))
      (recv
        (sig (cert self (exp (gen) ra-1) ca-0 serial-a)
          (privk "sig" ca-0)))
      (recv (enc n self b serial-a serial-b (exp (gen) (mul ra ra-1))))
      (send n))
    ((send (sig (cert-req b (exp (gen) ra) ca-0) (privk "sig" b)))
      (recv
        (sig (cert b (exp (gen) ra) ca-0 serial-b) (privk "sig" ca-0)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" b ra serial-b ca-0)))
    ((recv (sig (cert-req b (exp (gen) ra) ca-0) (privk "sig" b)))
      (send
        (sig (cert b (exp (gen) ra) ca-0 serial-b) (privk "sig" ca-0))))
    ((recv
       (sig (cert-req self (exp (gen) ra-1) ca-0) (privk "sig" self)))
      (send
        (sig (cert self (exp (gen) ra-1) ca-0 serial-a)
          (privk "sig" ca-0))))
    ((load static-key-0 (cat pt-1 "privkey" self ra-0 serial-a ca))
      (recv
        (sig (cert b (exp (gen) (mul ra (rec ra-0) ra-1)) ca serial-b)
          (privk "sig" ca)))
      (send (enc n self b serial-a serial-b (exp (gen) (mul ra ra-1)))))
    ((send (sig (cert-req self (exp (gen) ra-0) ca) (privk "sig" self)))
      (recv
        (sig (cert self (exp (gen) ra-0) ca serial-a) (privk "sig" ca)))
      (load static-key-0 (cat pt-2 ignore-0))
      (stor static-key-0 (cat pt-1 "privkey" self ra-0 serial-a ca)))
    ((recv (cat (exp (gen) (mul ra (rec ra-0))) ra-1))
      (send (cat (exp (gen) (mul ra (rec ra-0))) ra-1)))
    ((send
       (sig (cert-req self (exp (gen) ra-1) ca-0) (privk "sig" self)))
      (recv
        (sig (cert self (exp (gen) ra-1) ca-0 serial)
          (privk "sig" ca-0))) (load static-key-1 (cat pt-3 ignore-1))
      (stor static-key-1 (cat pt-4 "privkey" self ra-1 serial ca-0))))
  (label 103)
  (parent 93)
  (unrealized (6 0) (7 1))
  (comment "2 in cohort - 2 not yet seen"))

(defskeleton dhstatic-state
  (vars (ignore ignore-0 mesg) (serial-b serial-a data) (n text)
    (ca a b ca-0 name) (pt pt-0 pt-1 pt-2 pval)
    (static-key static-key-0 locn) (ra ra-0 ra-1 rndx))
  (defstrand resp 4 (serial-b serial-b) (serial-a serial-a) (n n) (a a)
    (b b) (ca ca) (galpha (exp (gen) ra)) (static-key static-key)
    (rb ra-1))
  (defstrand get-cert 4 (ignore ignore) (serial serial-b) (self b)
    (ca ca) (static-key static-key) (ra ra-1))
  (defstrand cert 2 (galpha (exp (gen) ra-1)) (serial serial-b) (subj b)
    (ca ca))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-a) (subj a)
    (ca ca))
  (defstrand get-cert 1 (self a) (ca ca) (ra ra))
  (defstrand init 3 (serial-a serial-a) (serial-b serial-b) (n n) (a a)
    (b b) (ca ca-0) (galpha (exp (gen) (mul ra (rec ra-0) ra-1)))
    (static-key static-key-0) (ra ra-0))
  (defstrand get-cert 4 (ignore ignore-0) (serial serial-a) (self a)
    (ca ca-0) (static-key static-key-0) (ra ra-0))
  (deflistener (cat (exp (gen) (mul ra (rec ra-0))) ra-1))
  (precedes ((1 0) (2 0)) ((1 3) (0 0)) ((1 3) (7 0)) ((2 1) (1 1))
    ((3 1) (0 1)) ((3 1) (6 1)) ((4 0) (3 0)) ((4 0) (7 0))
    ((5 2) (0 2)) ((6 0) (7 0)) ((6 3) (5 0)) ((7 1) (5 1)))
  (non-orig (privk "sig" ca) (privk "sig" a))
  (uniq-orig serial-b serial-a n)
  (uniq-gen ra ra-0 ra-1)
  (gen-st (cat "privkey" a ra-0 serial-a ca-0)
    (cat "privkey" b ra-1 serial-b ca))
  (facts (neq b a) (neq a b))
  (rule fact-resp-neq0 trRl_get-cert-at-2 trRl_get-cert-at-3)
  (operation nonce-test (displaced 8 1 get-cert 4) ra-1 (7 0))
  (traces
    ((load static-key (cat pt "privkey" b ra-1 serial-b ca))
      (recv (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca)))
      (recv (enc n a b serial-a serial-b (exp (gen) (mul ra ra-1))))
      (send n))
    ((send (sig (cert-req b (exp (gen) ra-1) ca) (privk "sig" b)))
      (recv
        (sig (cert b (exp (gen) ra-1) ca serial-b) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" b ra-1 serial-b ca)))
    ((recv (sig (cert-req b (exp (gen) ra-1) ca) (privk "sig" b)))
      (send
        (sig (cert b (exp (gen) ra-1) ca serial-b) (privk "sig" ca))))
    ((recv (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a)))
      (send (sig (cert a (exp (gen) ra) ca serial-a) (privk "sig" ca))))
    ((send (sig (cert-req a (exp (gen) ra) ca) (privk "sig" a))))
    ((load static-key-0 (cat pt-1 "privkey" a ra-0 serial-a ca-0))
      (recv
        (sig (cert b (exp (gen) (mul ra (rec ra-0) ra-1)) ca-0 serial-b)
          (privk "sig" ca-0)))
      (send (enc n a b serial-a serial-b (exp (gen) (mul ra ra-1)))))
    ((send (sig (cert-req a (exp (gen) ra-0) ca-0) (privk "sig" a)))
      (recv
        (sig (cert a (exp (gen) ra-0) ca-0 serial-a)
          (privk "sig" ca-0))) (load static-key-0 (cat pt-2 ignore-0))
      (stor static-key-0 (cat pt-1 "privkey" a ra-0 serial-a ca-0)))
    ((recv (cat (exp (gen) (mul ra (rec ra-0))) ra-1))
      (send (cat (exp (gen) (mul ra (rec ra-0))) ra-1))))
  (label 104)
  (parent 94)
  (unrealized (7 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhstatic-state
  (vars (ignore ignore-0 mesg) (serial-b serial-a data) (n text)
    (b self ca name) (pt pt-0 pt-1 pt-2 pval)
    (static-key static-key-0 locn) (ra ra-0 rndx))
  (defstrand resp 4 (serial-b serial-b) (serial-a serial-a) (n n)
    (a self) (b b) (ca ca) (galpha (exp (gen) ra-0))
    (static-key static-key) (rb ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-b) (self b)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-b) (subj b)
    (ca ca))
  (defstrand cert 2 (galpha (exp (gen) ra-0)) (serial serial-a)
    (subj self) (ca ca))
  (deflistener (exp (gen) (mul ra ra-0)))
  (deflistener (cat (exp (gen) ra) ra-0))
  (defstrand get-cert 4 (ignore ignore-0) (serial serial-a) (self self)
    (ca ca) (static-key static-key-0) (ra ra-0))
  (precedes ((1 0) (2 0)) ((1 0) (5 0)) ((1 3) (0 0)) ((2 1) (1 1))
    ((3 1) (0 1)) ((3 1) (6 1)) ((4 1) (0 2)) ((5 1) (4 0))
    ((6 0) (3 0)) ((6 3) (5 0)))
  (non-orig (privk "sig" self) (privk "sig" ca))
  (uniq-orig serial-b serial-a)
  (uniq-gen ra ra-0)
  (gen-st (cat "privkey" b ra serial-b ca))
  (facts (neq b self) (neq self b))
  (rule fact-init-neq0 fact-resp-neq0 trRl_get-cert-at-2
    trRl_get-cert-at-3)
  (operation encryption-test (displaced 7 3 cert 2)
    (sig (cert self (exp (gen) ra-0) ca serial) (privk "sig" ca)) (6 1))
  (traces
    ((load static-key (cat pt "privkey" b ra serial-b ca))
      (recv
        (sig (cert self (exp (gen) ra-0) ca serial-a) (privk "sig" ca)))
      (recv (enc n self b serial-a serial-b (exp (gen) (mul ra ra-0))))
      (send n))
    ((send (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (recv (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" b ra serial-b ca)))
    ((recv (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (send (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca))))
    ((recv (sig (cert-req self (exp (gen) ra-0) ca) (privk "sig" self)))
      (send
        (sig (cert self (exp (gen) ra-0) ca serial-a)
          (privk "sig" ca))))
    ((recv (exp (gen) (mul ra ra-0))) (send (exp (gen) (mul ra ra-0))))
    ((recv (cat (exp (gen) ra) ra-0)) (send (cat (exp (gen) ra) ra-0)))
    ((send (sig (cert-req self (exp (gen) ra-0) ca) (privk "sig" self)))
      (recv
        (sig (cert self (exp (gen) ra-0) ca serial-a) (privk "sig" ca)))
      (load static-key-0 (cat pt-1 ignore-0))
      (stor static-key-0 (cat pt-2 "privkey" self ra-0 serial-a ca))))
  (label 105)
  (parent 95)
  (unrealized (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhstatic-state
  (vars (ignore ignore-0 mesg) (serial-b serial-a serial data) (n text)
    (b self ca name) (pt pt-0 pt-1 pt-2 pval)
    (static-key static-key-0 locn) (ra ra-0 rndx))
  (defstrand resp 4 (serial-b serial-b) (serial-a serial-a) (n n)
    (a self) (b b) (ca ca) (galpha (exp (gen) ra-0))
    (static-key static-key) (rb ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-b) (self b)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-b) (subj b)
    (ca ca))
  (defstrand cert 2 (galpha (exp (gen) ra-0)) (serial serial-a)
    (subj self) (ca ca))
  (deflistener (exp (gen) (mul ra ra-0)))
  (deflistener (cat (exp (gen) ra) ra-0))
  (defstrand get-cert 4 (ignore ignore-0) (serial serial) (self self)
    (ca ca) (static-key static-key-0) (ra ra-0))
  (defstrand cert 2 (galpha (exp (gen) ra-0)) (serial serial)
    (subj self) (ca ca))
  (precedes ((1 0) (2 0)) ((1 0) (5 0)) ((1 3) (0 0)) ((2 1) (1 1))
    ((3 1) (0 1)) ((4 1) (0 2)) ((5 1) (4 0)) ((6 0) (3 0))
    ((6 0) (7 0)) ((6 3) (5 0)) ((7 1) (6 1)))
  (non-orig (privk "sig" self) (privk "sig" ca))
  (uniq-orig serial-b serial-a serial)
  (uniq-gen ra ra-0)
  (gen-st (cat "privkey" b ra serial-b ca))
  (facts (neq b self) (neq self b))
  (rule fact-init-neq0 fact-resp-neq0 trRl_get-cert-at-2
    trRl_get-cert-at-3)
  (operation encryption-test (added-strand cert 2)
    (sig (cert self (exp (gen) ra-0) ca serial) (privk "sig" ca)) (6 1))
  (traces
    ((load static-key (cat pt "privkey" b ra serial-b ca))
      (recv
        (sig (cert self (exp (gen) ra-0) ca serial-a) (privk "sig" ca)))
      (recv (enc n self b serial-a serial-b (exp (gen) (mul ra ra-0))))
      (send n))
    ((send (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (recv (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" b ra serial-b ca)))
    ((recv (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (send (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca))))
    ((recv (sig (cert-req self (exp (gen) ra-0) ca) (privk "sig" self)))
      (send
        (sig (cert self (exp (gen) ra-0) ca serial-a)
          (privk "sig" ca))))
    ((recv (exp (gen) (mul ra ra-0))) (send (exp (gen) (mul ra ra-0))))
    ((recv (cat (exp (gen) ra) ra-0)) (send (cat (exp (gen) ra) ra-0)))
    ((send (sig (cert-req self (exp (gen) ra-0) ca) (privk "sig" self)))
      (recv
        (sig (cert self (exp (gen) ra-0) ca serial) (privk "sig" ca)))
      (load static-key-0 (cat pt-1 ignore-0))
      (stor static-key-0 (cat pt-2 "privkey" self ra-0 serial ca)))
    ((recv (sig (cert-req self (exp (gen) ra-0) ca) (privk "sig" self)))
      (send
        (sig (cert self (exp (gen) ra-0) ca serial) (privk "sig" ca)))))
  (label 106)
  (parent 95)
  (unrealized (5 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhstatic-state
  (vars (ignore mesg) (serial-b serial-a data) (n text) (ca b name)
    (pt pt-0 pval) (static-key locn) (ra rndx))
  (defstrand resp 4 (serial-b serial-b) (serial-a serial-a) (n n) (a b)
    (b b) (ca ca) (galpha (exp (gen) ra)) (static-key static-key)
    (rb ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-b) (self b)
    (ca ca) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-b) (subj b)
    (ca ca))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-a) (subj b)
    (ca ca))
  (deflistener (exp (gen) (mul ra ra)))
  (deflistener (cat (gen) (mul ra ra)))
  (deflistener ra)
  (precedes ((1 0) (2 0)) ((1 0) (3 0)) ((1 3) (0 0)) ((1 3) (6 0))
    ((2 1) (1 1)) ((3 1) (0 1)) ((4 1) (0 2)) ((5 1) (4 0))
    ((6 1) (5 0)))
  (non-orig (privk "sig" ca) (privk "sig" b))
  (uniq-orig serial-b serial-a)
  (uniq-gen ra)
  (precur (5 0))
  (gen-st (cat "privkey" b ra serial-b ca))
  (facts (neq b b))
  (rule fact-resp-neq0 trRl_get-cert-at-2 trRl_get-cert-at-3)
  (operation nonce-test (displaced 7 1 get-cert 4) ra (6 0))
  (traces
    ((load static-key (cat pt "privkey" b ra serial-b ca))
      (recv (sig (cert b (exp (gen) ra) ca serial-a) (privk "sig" ca)))
      (recv (enc n b b serial-a serial-b (exp (gen) (mul ra ra))))
      (send n))
    ((send (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (recv (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" b ra serial-b ca)))
    ((recv (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (send (sig (cert b (exp (gen) ra) ca serial-b) (privk "sig" ca))))
    ((recv (sig (cert-req b (exp (gen) ra) ca) (privk "sig" b)))
      (send (sig (cert b (exp (gen) ra) ca serial-a) (privk "sig" ca))))
    ((recv (exp (gen) (mul ra ra))) (send (exp (gen) (mul ra ra))))
    ((recv (cat (gen) (mul ra ra))) (send (cat (gen) (mul ra ra))))
    ((recv ra) (send ra)))
  (label 107)
  (parent 100)
  (unrealized (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhstatic-state
  (vars (ignore ignore-0 ignore-1 mesg) (serial-b serial-a data)
    (n text) (b ca self ca-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (static-key static-key-0 static-key-1 locn) (ra ra-0 ra-1 rndx))
  (defstrand resp 4 (serial-b serial-b) (serial-a serial-a) (n n)
    (a self) (b b) (ca ca-0) (galpha (exp (gen) ra-1))
    (static-key static-key) (rb ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-b) (self b)
    (ca ca-0) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-b) (subj b)
    (ca ca-0))
  (defstrand cert 2 (galpha (exp (gen) ra-1)) (serial serial-a)
    (subj self) (ca ca-0))
  (defstrand init 3 (serial-a serial-a) (serial-b serial-b) (n n)
    (a self) (b b) (ca ca) (galpha (exp (gen) (mul ra (rec ra-0) ra-1)))
    (static-key static-key-0) (ra ra-0))
  (defstrand get-cert 4 (ignore ignore-0) (serial serial-a) (self self)
    (ca ca) (static-key static-key-0) (ra ra-0))
  (deflistener (cat (exp (gen) (mul ra (rec ra-0))) ra-1))
  (defstrand get-cert 4 (ignore ignore-1) (serial serial-a) (self self)
    (ca ca-0) (static-key static-key-1) (ra ra-1))
  (precedes ((1 0) (2 0)) ((1 0) (6 0)) ((1 3) (0 0)) ((2 1) (1 1))
    ((2 1) (4 1)) ((3 1) (0 1)) ((3 1) (5 1)) ((3 1) (7 1))
    ((4 2) (0 2)) ((5 0) (6 0)) ((5 3) (4 0)) ((6 1) (4 1))
    ((7 0) (3 0)) ((7 3) (6 0)))
  (non-orig (privk "sig" self) (privk "sig" ca-0))
  (uniq-orig serial-b serial-a n)
  (uniq-gen ra ra-0 ra-1)
  (gen-st (cat "privkey" b ra serial-b ca-0)
    (cat "privkey" self ra-0 serial-a ca))
  (facts (neq b self) (neq self b))
  (rule fact-resp-neq0 trRl_get-cert-at-2 trRl_get-cert-at-3)
  (operation encryption-test (displaced 8 3 cert 2)
    (sig (cert self (exp (gen) ra-1) ca-0 serial) (privk "sig" ca-0))
    (7 1))
  (traces
    ((load static-key (cat pt "privkey" b ra serial-b ca-0))
      (recv
        (sig (cert self (exp (gen) ra-1) ca-0 serial-a)
          (privk "sig" ca-0)))
      (recv (enc n self b serial-a serial-b (exp (gen) (mul ra ra-1))))
      (send n))
    ((send (sig (cert-req b (exp (gen) ra) ca-0) (privk "sig" b)))
      (recv
        (sig (cert b (exp (gen) ra) ca-0 serial-b) (privk "sig" ca-0)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" b ra serial-b ca-0)))
    ((recv (sig (cert-req b (exp (gen) ra) ca-0) (privk "sig" b)))
      (send
        (sig (cert b (exp (gen) ra) ca-0 serial-b) (privk "sig" ca-0))))
    ((recv
       (sig (cert-req self (exp (gen) ra-1) ca-0) (privk "sig" self)))
      (send
        (sig (cert self (exp (gen) ra-1) ca-0 serial-a)
          (privk "sig" ca-0))))
    ((load static-key-0 (cat pt-1 "privkey" self ra-0 serial-a ca))
      (recv
        (sig (cert b (exp (gen) (mul ra (rec ra-0) ra-1)) ca serial-b)
          (privk "sig" ca)))
      (send (enc n self b serial-a serial-b (exp (gen) (mul ra ra-1)))))
    ((send (sig (cert-req self (exp (gen) ra-0) ca) (privk "sig" self)))
      (recv
        (sig (cert self (exp (gen) ra-0) ca serial-a) (privk "sig" ca)))
      (load static-key-0 (cat pt-2 ignore-0))
      (stor static-key-0 (cat pt-1 "privkey" self ra-0 serial-a ca)))
    ((recv (cat (exp (gen) (mul ra (rec ra-0))) ra-1))
      (send (cat (exp (gen) (mul ra (rec ra-0))) ra-1)))
    ((send
       (sig (cert-req self (exp (gen) ra-1) ca-0) (privk "sig" self)))
      (recv
        (sig (cert self (exp (gen) ra-1) ca-0 serial-a)
          (privk "sig" ca-0))) (load static-key-1 (cat pt-3 ignore-1))
      (stor static-key-1 (cat pt-4 "privkey" self ra-1 serial-a ca-0))))
  (label 108)
  (parent 103)
  (unrealized (6 0))
  (dead)
  (comment "empty cohort"))

(defskeleton dhstatic-state
  (vars (ignore ignore-0 ignore-1 mesg) (serial-b serial-a serial data)
    (n text) (b ca self ca-0 name) (pt pt-0 pt-1 pt-2 pt-3 pt-4 pval)
    (static-key static-key-0 static-key-1 locn) (ra ra-0 ra-1 rndx))
  (defstrand resp 4 (serial-b serial-b) (serial-a serial-a) (n n)
    (a self) (b b) (ca ca-0) (galpha (exp (gen) ra-1))
    (static-key static-key) (rb ra))
  (defstrand get-cert 4 (ignore ignore) (serial serial-b) (self b)
    (ca ca-0) (static-key static-key) (ra ra))
  (defstrand cert 2 (galpha (exp (gen) ra)) (serial serial-b) (subj b)
    (ca ca-0))
  (defstrand cert 2 (galpha (exp (gen) ra-1)) (serial serial-a)
    (subj self) (ca ca-0))
  (defstrand init 3 (serial-a serial-a) (serial-b serial-b) (n n)
    (a self) (b b) (ca ca) (galpha (exp (gen) (mul ra (rec ra-0) ra-1)))
    (static-key static-key-0) (ra ra-0))
  (defstrand get-cert 4 (ignore ignore-0) (serial serial-a) (self self)
    (ca ca) (static-key static-key-0) (ra ra-0))
  (deflistener (cat (exp (gen) (mul ra (rec ra-0))) ra-1))
  (defstrand get-cert 4 (ignore ignore-1) (serial serial) (self self)
    (ca ca-0) (static-key static-key-1) (ra ra-1))
  (defstrand cert 2 (galpha (exp (gen) ra-1)) (serial serial)
    (subj self) (ca ca-0))
  (precedes ((1 0) (2 0)) ((1 0) (6 0)) ((1 3) (0 0)) ((2 1) (1 1))
    ((2 1) (4 1)) ((3 1) (0 1)) ((3 1) (5 1)) ((4 2) (0 2))
    ((5 0) (6 0)) ((5 3) (4 0)) ((6 1) (4 1)) ((7 0) (3 0))
    ((7 0) (8 0)) ((7 3) (6 0)) ((8 1) (7 1)))
  (non-orig (privk "sig" self) (privk "sig" ca-0))
  (uniq-orig serial-b serial-a serial n)
  (uniq-gen ra ra-0 ra-1)
  (gen-st (cat "privkey" b ra serial-b ca-0)
    (cat "privkey" self ra-0 serial-a ca))
  (facts (neq b self) (neq self b))
  (rule fact-resp-neq0 trRl_get-cert-at-2 trRl_get-cert-at-3)
  (operation encryption-test (added-strand cert 2)
    (sig (cert self (exp (gen) ra-1) ca-0 serial) (privk "sig" ca-0))
    (7 1))
  (traces
    ((load static-key (cat pt "privkey" b ra serial-b ca-0))
      (recv
        (sig (cert self (exp (gen) ra-1) ca-0 serial-a)
          (privk "sig" ca-0)))
      (recv (enc n self b serial-a serial-b (exp (gen) (mul ra ra-1))))
      (send n))
    ((send (sig (cert-req b (exp (gen) ra) ca-0) (privk "sig" b)))
      (recv
        (sig (cert b (exp (gen) ra) ca-0 serial-b) (privk "sig" ca-0)))
      (load static-key (cat pt-0 ignore))
      (stor static-key (cat pt "privkey" b ra serial-b ca-0)))
    ((recv (sig (cert-req b (exp (gen) ra) ca-0) (privk "sig" b)))
      (send
        (sig (cert b (exp (gen) ra) ca-0 serial-b) (privk "sig" ca-0))))
    ((recv
       (sig (cert-req self (exp (gen) ra-1) ca-0) (privk "sig" self)))
      (send
        (sig (cert self (exp (gen) ra-1) ca-0 serial-a)
          (privk "sig" ca-0))))
    ((load static-key-0 (cat pt-1 "privkey" self ra-0 serial-a ca))
      (recv
        (sig (cert b (exp (gen) (mul ra (rec ra-0) ra-1)) ca serial-b)
          (privk "sig" ca)))
      (send (enc n self b serial-a serial-b (exp (gen) (mul ra ra-1)))))
    ((send (sig (cert-req self (exp (gen) ra-0) ca) (privk "sig" self)))
      (recv
        (sig (cert self (exp (gen) ra-0) ca serial-a) (privk "sig" ca)))
      (load static-key-0 (cat pt-2 ignore-0))
      (stor static-key-0 (cat pt-1 "privkey" self ra-0 serial-a ca)))
    ((recv (cat (exp (gen) (mul ra (rec ra-0))) ra-1))
      (send (cat (exp (gen) (mul ra (rec ra-0))) ra-1)))
    ((send
       (sig (cert-req self (exp (gen) ra-1) ca-0) (privk "sig" self)))
      (recv
        (sig (cert self (exp (gen) ra-1) ca-0 serial)
          (privk "sig" ca-0))) (load static-key-1 (cat pt-3 ignore-1))
      (stor static-key-1 (cat pt-4 "privkey" self ra-1 serial ca-0)))
    ((recv
       (sig (cert-req self (exp (gen) ra-1) ca-0) (privk "sig" self)))
      (send
        (sig (cert self (exp (gen) ra-1) ca-0 serial)
          (privk "sig" ca-0)))))
  (label 109)
  (parent 103)
  (unrealized (6 0))
  (dead)
  (comment "empty cohort"))

(comment "Nothing left to do")
