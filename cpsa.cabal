Name:                   cpsa
Version:                4.4.0
Maintainer:             ramsdell@mitre.org
Cabal-Version:          >= 1.10
License:                BSD3
License-File:           license.txt
Synopsis:               Symbolic cryptographic protocol analyzer
Description:
  The Cryptographic Protocol Shapes Analyzer (CPSA) attempts to
  enumerate all essentially different executions possible for a
  cryptographic protocol.  We call them the shapes of the protocol.
  Many naturally occurring protocols have only finitely many, indeed
  very few shapes.  Authentication and secrecy properties are easy to
  determine from them, as are attacks and anomalies, and an auxiliary
  tool reads off strongest authentication and secrecy goals from the
  shapes.
  .
  For each input problem, the CPSA program is given some initial
  behavior, and it discovers what shapes are compatible with it.
  Normally, the initial behavior is from the point of view of one
  participant.  The analysis reveals what the other participants must
  have done, given the participant's view.  The search is complete,
  i.e. we proved every shape can in fact be found in a finite number
  of steps, relative to a procedural semantics of protocol roles.
  .
  The package contains a set of programs used to perform the analysis
  and display it in a browser.  Program documentation is in the doc
  directory in the source distribution, and installed in the package's
  data directory.  You can locate the package's data directory by
  typing "cpsa --help" to a command prompt.  New users should study
  the documentation and the sample inputs in the data directory.  The
  source distribution includes a test suite with an expanded set of
  input files and is easily installed on operating systems that decend
  from Unix.  Serious Windows users should install MSYS so as to allow
  the use of make and script execution.
  .
  The theory and algorithm used by CPSA was developed with the help of
  Joshua D. Guttman, John D. Ramsdell, Jon C. Herzog, Shaddin
  F. Doghmi, F. Javier Thayer, Paul D. Rowe, and Moses D. Liskov.
  John D. Ramsdell implemented the algorithm in Haskell.  CPSA was
  designed and implemented at The MITRE Corporation.
Category:               Cryptography
Build-Type:             Simple
Data-Files:
  index.html cpsalogo.svg readme.html cpsauser.html cpsa4.mk Make4.hs
  init/Makefile cpsaprimer.pdf cpsagoals.pdf cpsaintroslides.pdf cpsaspec.pdf
  cpsafoundation.pdf cpsadesign.pdf cpsa4roletran.md roletran.pdf
  ffgg.scm ns.scm blanchet.scm or.scm woolam.scm yahalom.scm goals.scm
  rules.scm

Data-Dir:               doc
Extra-Source-Files:
  Makefile ChangeLog README NEWS mkghci cpsatst fixperms setup.bat doc/README
  doc/src/Makefile doc/src/macros.tex doc/src/cpsaprimer.tex
  doc/src/cpsagoals.tex doc/src/bcasyntax.tex
  doc/src/cpsaintroslides.tex doc/src/mitreslides.sty
  doc/src/cpsaspec.tex doc/src/cpsafoundation.tex
  doc/src/cpsadesign.tex doc/src/cpsadiagrams.mp doc/src/strands.mp
  doc/src/cmstrands.mp doc/src/carriers.mp doc/src/termtree.mp
  doc/src/blanchet.mp doc/src/mitrelogo.mp doc/src/cpsa.bib
  doc/SDAG.lhs doc/cpsalogo.mp src/index.html src/cpsajson.py
  src/split.py src/cpsa2svg src/cpsa.el src/cpsaperm.scm src/lastlabel.py
  src/cpsaops.scm src/preskel src/cpsa.pl src/unsorted.pl src/pp.pl
  src/sexpr.pl src/perm.pl src/prover9.pl src/zoom.js src/js2hs
  src/ghcmemlimit build.xml src/scala/Main.scala
  src/scala/Pretty.scala src/scala/Printer.scala src/scala/SExpr.scala
  src/ocaml/Makefile src/ocaml/README src/ocaml/cpsa.d.itarget
  src/ocaml/cpsa.itarget src/ocaml/cpsa.mllib src/ocaml/cpsa.mltop
  src/ocaml/cpsa.odocl src/ocaml/expand.ml src/ocaml/main.ml
  src/ocaml/main.mli src/ocaml/pp.ml src/ocaml/token.ml
  src/ocaml/token.mli src/ocaml/scanner.mll src/ocaml/sexpr.ml
  src/ocaml/sexpr.mli src/ocaml/sexpr_type.ml
  DH_hack.scm DH_hack.tst Make4.hs Makefile README ab.scm ab.tst
  abc.scm abc.tst aik.scm aik.tst atomic-open-closed.scm
  atomic-open-closed.tst attest.scm attest.tst auth-enc.scm
  auth-enc.tst auth-hash.scm auth-hash.tst blanchet.scm blanchet.tst
  blanchet_doorsep.prot blanchet_doorsep.tst bug_example.scm
  bug_example.tst cert_lang.scm cert_lang.tst chan-envelope.scm
  chan-envelope.tst chan-perrig-song.scm chan-perrig-song.tst
  chan-unilateral.scm chan-unilateral.tst chan-yahalom-role-decl.scm
  chan-yahalom-role-decl.tst chan-yahalom.scm chan-yahalom.tst
  checktst commitment.scm commitment.tst comp_test.scm comp_test.tst
  completeness-test.scm completeness-test.tst cpsagraphall
  cpsagraphtst cpsashapesall crushing.scm crushing.tst dass-mod.lisp
  dass.lisp dass_simple.scm dass_simple.tst denning-sacco.scm
  denning-sacco.tst deorig_contract.scm deorig_contract.tst
  deorig_mesg.scm deorig_mesg.tst deorig_simple.scm deorig_simple.tst
  dh-ca_hack.scm dh-ca_hack.tst dh_encrypt_hack.scm
  dh_encrypt_hack.tst dh_group_sig.scm dh_group_sig.tst
  dh_group_sig_auth_failure.scm dh_group_sig_auth_failure.tst
  dh_mim.lisp dh_mim_hack.scm dh_mim_hack.tst dhcr_um.lisp dhcr_um.scm
  dhcr_um.tst dhcr_um3.scm dhcr_um3.tst
  dhcr_um_exercise_resolved_bug.scm dhcr_um_exercise_resolved_bug.tst
  dhcr_um_expt.scm dhcr_um_expt.tst dhcr_umx.scm dhcr_umx.tst
  dhke2.lisp dhnsl_hack.scm dhnsl_hack.tst dhstatic-state.scm
  dhstatic-state.tst disclosure.scm disclosure.tst doorsep.scm
  doorsep.tst doorsep2invk.scm doorsep2invk.tst ds-short.lisp dy.lsp
  dy.tst encsig.scm encsig.tst envelope.scm envelope.tst epmo-hash.scm
  epmo-hash.tst epmo-key-hash.scm epmo-key-hash.tst epmo.scm epmo.tst
  epmo_acctnum-key-hash.scm epmo_acctnum-key-hash.tst
  epmo_acctnum.lisp epmo_acctnum.tst expand.scm expand.tst facts.scm
  facts.tst factvar.scm factvar.tst ffgg.scm ffgg.tst
  fluffy_draft03_gske.scm fluffy_draft03_gske.tst fragile_pruning.scm
  fragile_pruning.tst goals.scm goals.tst hashtest-key-hash.scm
  hashtest-key-hash.tst hashtest.scm hashtest.tst
  incompleteness_example.scm incompleteness_example.tst
  isoreject-corrected.scm isoreject-corrected.tst isoreject.scm
  isoreject.tst jdg-neuman-stubblebine-reauth.tst kelly1.scm
  kelly1.tst kelly64.lisp kerb5.lisp kerberos.scm kerberos.tst
  locn_envelope.scm locn_envelope.tst mass.lsp mass.tst mass2.lsp
  mass2.tst missing_contraction.scm missing_contraction.tst mksas
  neq_test.scm neq_test.tst neuman-stubblebine-alt.lisp
  neuman-stubblebine-reauth-tagged.tst neuman-stubblebine-reauth.lisp
  neuman-stubblebine-reauth.lsp neuman-stubblebine-reauth.tst
  neuman-stubblebine.scm neuman-stubblebine.tst no_contraction.scm
  no_contraction.tst non_transforming.scm non_transforming.tst
  nonaug-prune.scm nonaug-prune.tst ns-l.scm ns-l.tst ns-rebinding.scm
  ns-rebinding.tst ns.scm ns.tst nsl3.scm nsl3.tst nsl4.lisp
  nsl4cm1.lisp nsl4init.lisp nsl4resp1.lisp nsl4resp2.lisp
  nsl4resp3.lisp nsl5.lisp nsl5i.lisp nsl5resp3.lisp nslsk.scm
  nslsk.tst open-closed-multiloc.scm open-closed-multiloc.tst
  open-closed-tag.scm open-closed-tag.tst open-closed.scm
  open-closed.tst or.scm or.tst ordered.scm ordered.tst par pca.scm
  pca.tst pen-non-orig-test.scm pen-non-orig-test.tst
  pfs-via-pubkey.scm pfs-via-pubkey.tst pkinit.scm pkinit.tst
  preprocess.scm preprocess.tst print.scm print.tst prottrans.scm
  prottrans.tst pruning1.scm pruning1.tst puzzle_example.scm
  puzzle_example.tst reflect.scm reflect.tst renamings.scm
  renamings.tst role_uniq.scm role_uniq.tst rule-node.scm
  rule-node.tst rule-order.scm rule-order.tst sigenc.scm sigenc.tst
  sorted_epmo_acctnum.scm sorted_epmo_acctnum.tst sts.scm
  sts_unflip.scm sts_weak.scm subatomic-open-closed-test-genrule.scm
  subatomic-open-closed-test-genrule.tst subatomic-open-closed.scm
  subatomic-open-closed.tst sync_locn_envelope.scm
  sync_locn_envelope.tst targetterms1.scm targetterms1.tst
  targetterms2.scm targetterms2.tst targetterms6.scm targetterms6.tst
  targetterms8.scm targetterms8.tst the_sync_env_suite thisthat.scm
  thisthat.tst tickle-unique.scm tickle-unique.tst timestamping.scm
  timestamping.tst tnsl5.lisp trust-anchor.scm trust-anchor.tst
  uncarried_keys.scm uncarried_keys.tst unilateral.scm unilateral.tst
  uniq-gen-test.scm uniq-gen-test.tst uo.scm uo.tst updatetst
  wang-hash.scm wang-hash.tst wang-key-hash-tst.tst wang-key-hash.scm
  wang-key-hash.tst wang.lisp weakened-subatomic-open-closed.tst
  weird.scm weird.tst wide-mouth-frog-scyther.lsp
  wide-mouth-frog-scyther.tst wide-mouth-frog.lsp wide-mouth-frog.tst
  wonthull.scm wonthull.tst wonthull2.scm wonthull2.tst wonthull3.scm
  wonthull3.tst woolam.scm woolam.tst wrap_decrypt.tst
  yahalom-6.3.6.scm yahalom-6.3.6.tst yahalom.scm yahalom.tst
  coq/Sem_tactics.v coq/Comp.v coq/Alt_sem.v coq/Match.v coq/Alg.v
  coq/Exec.v coq/Intro.v coq/Nonce.v coq/Preamble.v
  coq/Unilateral_proof.v coq/Makefile coq/Run.v coq/procdoc.tex
  coq/Run_sem.v coq/_CoqProject coq/Monad.v coq/procdoc.mk coq/README
  coq/Sem.v coq/mkdist coq/Unilateral_role.v coq/mkdoc
  coq/Examples/Otway_rees_proof.v coq/Examples/Otway_rees.v
  coq/Examples/Ltk_proof.v coq/Examples/nsl.scm
  coq/Examples/privk2.scm coq/Examples/Yahalom.v coq/Examples/update
  coq/Examples/Privk2_role.v coq/Examples/invk.scm
  coq/Examples/Privk2.v coq/Examples/Pubk2_role.v
  coq/Examples/Makefile coq/Examples/ltk.scm
  coq/Examples/Pubk2_proof.v coq/Examples/Invk_role.v
  coq/Examples/Privk.v coq/Examples/Bad_unilateral_proof.v
  coq/Examples/Invk_proof.v coq/Examples/Nsl_proof.v
  coq/Examples/_CoqProject coq/Examples/Ltk.v coq/Examples/Nsl_role.v
  coq/Examples/README coq/Examples/Ltk_role.v coq/Examples/pubk.scm
  coq/Examples/Privk_proof.v coq/Examples/bad_unilateral.scm
  coq/Examples/Pubk.v coq/Examples/Yahalom_proof.v
  coq/Examples/Pubk2.v coq/Examples/otway_rees.scm
  coq/Examples/Bad_unilateral_role.v coq/Examples/privk.scm
  coq/Examples/Privk_role.v coq/Examples/Otway_rees_role.v
  coq/Examples/Nsl.v coq/Examples/Invk.v coq/Examples/Pubk_role.v
  coq/Examples/Bad_unilateral.v coq/Examples/Privk2_proof.v
  coq/Examples/pubk2.scm coq/Examples/Pubk_proof.v
  coq/Examples/yahalom.scm coq/Examples/Yahalom_role.v coq/Proc.v
  coq/Derives.v coq/unilateral.scm coq/Unilateral.v coq/Role.v
  coq/Subst.v coq/CSem.v coq/CRun.v coq/CRun_csem.v

Source-Repository head
  Type:     git
  Location: git://github.com/mitre/cpsaexp.git

Executable cpsa4
  Main-Is:              CPSA/Main.hs
  Default-Language:     Haskell2010
  Build-Depends:        base >= 4.13 && < 5, containers, parallel
  GHC-Options:
    -Wall -fno-warn-name-shadowing -fwarn-unused-imports -threaded -rtsopts
  Hs-Source-Dirs:       src
  Other-Modules:
    Paths_cpsa CPSA.Lib.Utilities CPSA.Lib.ReturnFail CPSA.Lib.Pretty
    CPSA.Lib.SExpr CPSA.Lib.Printer CPSA.Lib.Entry CPSA.Options
    CPSA.Algebra CPSA.Protocol CPSA.Strand CPSA.Characteristic
    CPSA.Channel CPSA.LoadFormulas CPSA.GenRules CPSA.Loader
    CPSA.Displayer CPSA.Cohort
    CPSA.Lib.Expand CPSA.Reduction CPSA.Signature

Executable cpsa4sas
  Main-Is:              CPSA/SAS/Main.hs
  Default-Language:     Haskell2010
  Build-Depends:        base >= 4.13 && < 5, containers
  GHC-Options:
    -Wall -fno-warn-name-shadowing -fwarn-unused-imports
  Hs-Source-Dirs:       src
  Other-Modules:
    Paths_cpsa CPSA.Lib.Utilities CPSA.Lib.Pretty CPSA.Lib.SExpr
    CPSA.Lib.Printer CPSA.Lib.Entry CPSA.Options CPSA.Algebra
    CPSA.Signature CPSA.SAS.SAS

Executable cpsa4prot
  Main-Is:              CPSA/Prot/Main.hs
  Default-Language:     Haskell2010
  Build-Depends:        base >= 3 && < 5, containers
  GHC-Options:
    -Wall -fno-warn-name-shadowing -fwarn-unused-imports
  Hs-Source-Dirs:       src
  Other-Modules:
    Paths_cpsa CPSA.Lib.Utilities CPSA.Lib.Pretty CPSA.Lib.SExpr
    CPSA.Lib.Printer CPSA.Lib.Entry CPSA.Lib.Expand

Executable cpsa4goalsat
  Main-Is:              CPSA/GoalSat/Main.hs
  Default-Language:     Haskell2010
  Build-Depends:        base
  GHC-Options:
    -Wall -fno-warn-name-shadowing -fwarn-unused-imports
  Hs-Source-Dirs:       src
  Other-Modules:
    Paths_cpsa CPSA.Lib.Pretty CPSA.Lib.SExpr
    CPSA.Lib.Printer CPSA.Lib.Entry

Executable cpsa4diff
  Main-Is:              CPSA/Diff/Main.hs
  Default-Language:     Haskell2010
  Build-Depends:        base
  GHC-Options:
    -Wall -fno-warn-name-shadowing -fwarn-unused-imports
  Hs-Source-Dirs:       src
  Other-Modules:
    Paths_cpsa CPSA.Lib.Pretty CPSA.Lib.SExpr
    CPSA.Lib.Printer CPSA.Lib.Entry

Executable cpsa4graph
  Main-Is:              CPSA/Graph/Main.hs
  Default-Language:     Haskell2010
  Build-Depends:        base >= 4.13, containers
  GHC-Options:
    -Wall -fno-warn-name-shadowing -fwarn-unused-imports
  Hs-Source-Dirs:       src
  Other-Modules:
    Paths_cpsa CPSA.Lib.Utilities CPSA.Lib.Pretty CPSA.Lib.SExpr
    CPSA.Lib.Printer CPSA.Lib.Entry CPSA.Graph.XMLOutput
    CPSA.Graph.Config CPSA.Graph.SVG CPSA.Graph.Loader
    CPSA.Graph.Preskeleton CPSA.Graph.Layout CPSA.Graph.Tree
    CPSA.Graph.CompactView CPSA.Graph.ExpandedView
    CPSA.Graph.LaTeXView

Executable cpsa4shapes
  Main-Is:              CPSA/Shapes/Main.hs
  Default-Language:     Haskell2010
  Build-Depends:        base >= 4.13, containers
  GHC-Options:
    -Wall -fno-warn-name-shadowing -fwarn-unused-imports
  Hs-Source-Dirs:       src
  Other-Modules:
    Paths_cpsa CPSA.Lib.SExpr CPSA.Lib.Pretty CPSA.Lib.Printer
    CPSA.Lib.Entry CPSA.Shapes.Shapes

Executable cpsa4pp
  Main-Is:              CPSA/Pretty/Main.hs
  Default-Language:     Haskell2010
  Build-Depends:        base
  GHC-Options:
    -Wall -fno-warn-name-shadowing -fwarn-unused-imports
  Hs-Source-Dirs:       src
  Other-Modules:
    Paths_cpsa CPSA.Lib.Pretty CPSA.Lib.SExpr
    CPSA.Lib.Printer CPSA.Lib.Entry

Executable cpsa4json
  Main-Is:              CPSA/JSON/Main.hs
  Default-Language:     Haskell2010
  Build-Depends:        base
  GHC-Options:
    -Wall -fno-warn-name-shadowing -fwarn-unused-imports
  Hs-Source-Dirs:       src
  Other-Modules:
    Paths_cpsa CPSA.Lib.Pretty CPSA.Lib.SExpr
    CPSA.Lib.Printer CPSA.Lib.Entry

Executable cpsa4init
  Main-Is:              CPSA/Init/Main.hs
  Default-Language:     Haskell2010
  Build-Depends:        base, directory
  GHC-Options:
    -Wall -fno-warn-name-shadowing -fwarn-unused-imports
  Hs-Source-Dirs:       src
  Other-Modules:
    Paths_cpsa

Executable cpsa42latex
  Main-Is:              CPSA/Latex/Main.hs
  Default-Language:     Haskell2010
  Build-Depends:        base
  GHC-Options:
    -Wall -fno-warn-name-shadowing -fwarn-unused-imports
  Hs-Source-Dirs:       src
  Other-Modules:
    Paths_cpsa CPSA.Lib.Pretty CPSA.Lib.SExpr
    CPSA.Lib.Printer CPSA.Lib.Entry CPSA.Lib.Expand

Executable cpsa4roletran
  Main-Is:              CPSA/Roletran/Main.hs
  Default-Language:     Haskell2010
  Build-Depends:        base >= 4.13 && < 5, containers
  GHC-Options:
    -Wall -fno-warn-name-shadowing -fwarn-unused-imports
  Hs-Source-Dirs:       src
  Other-Modules:
    Paths_cpsa CPSA.Lib.ReturnFail CPSA.Lib.Pretty CPSA.Lib.SExpr
    CPSA.Lib.Printer CPSA.Lib.Entry CPSA.Lib.Expand
    CPSA.Roletran.Algebra CPSA.Roletran.Protocol CPSA.Roletran.Loader
    CPSA.Roletran.Displayer CPSA.Roletran.Derivation CPSA.Roletran.Emitter

Executable cpsa4coq
  Main-Is:              CPSA/Coq/Main.hs
  Default-Language:     Haskell2010
  Build-Depends:        base >= 4.13 && < 5, containers
  GHC-Options:
    -Wall -fno-warn-name-shadowing -fwarn-unused-imports
  Hs-Source-Dirs:       src
  Other-Modules:
    Paths_cpsa CPSA.Lib.Pretty CPSA.Lib.SExpr CPSA.Lib.Printer
    CPSA.Lib.Entry CPSA.Lib.Expand CPSA.Proc.Proc

Executable cpsa4rolecoq
  Main-Is:              CPSA/RoleCoq/Main.hs
  Default-Language:     Haskell2010
  Build-Depends:        base >= 4.13 && < 5, containers
  GHC-Options:
    -Wall -fno-warn-name-shadowing -fwarn-unused-imports
  Hs-Source-Dirs:       src
  Other-Modules:
    Paths_cpsa CPSA.Lib.ReturnFail CPSA.Lib.Pretty CPSA.Lib.SExpr
    CPSA.Lib.Printer CPSA.Lib.Entry CPSA.Lib.Expand
    CPSA.Roletran.Algebra CPSA.Roletran.Protocol CPSA.Roletran.Loader
    CPSA.Roletran.Displayer CPSA.Roletran.Emitter
